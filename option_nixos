[1]NixOS

  • [2]Explore
  • [3]Download
  • [4]Learn
  • [5]Community
  • [6]Blog
  • [7]Donate
  • [8]Search

NixOS Manual

  • [9] ← NixOS Manual
  • [10] ↑ NixOS Manual
  • [11]Appendix B. Release Notes →

Appendix A. Configuration Options

[12]appstream.enable

    Whether to install files to support the [13]AppStream metadata specification.

    Type: boolean

    Default: true

    Declared by:

    [14]<nixpkgs/nixos/modules/config/appstream.nix>

[15]boot.enableContainers

    Whether to enable support for NixOS containers. Defaults to true (at no cost if containers
    are not actually used).

    Type: boolean

    Default: true

    Declared by:

    [16]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[17]boot.binfmt.emulatedSystems

    List of systems to emulate. Will also configure Nix to support your new systems.

    Type: list of strings

    Default: [ ]

    Example: [ "wasm32-wasi" "x86_64-windows" "aarch64-linux" ]

    Declared by:

    [18]<nixpkgs/nixos/modules/system/boot/binfmt.nix>

[19]boot.binfmt.registrations

    Extra binary formats to register with the kernel. See https://www.kernel.org/doc/html/latest/
    admin-guide/binfmt-misc.html for more details.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [20]<nixpkgs/nixos/modules/system/boot/binfmt.nix>

[21]boot.binfmt.registrations.<name>.fixBinary

    Whether to open the interpreter file as soon as the registration is loaded, rather than
    waiting for a relevant file to be invoked.

    See the description of the 'F' flag in the kernel docs for more details.

    Type: boolean

    Default: false

    Declared by:

    [22]<nixpkgs/nixos/modules/system/boot/binfmt.nix>

[23]boot.binfmt.registrations.<name>.interpreter

    The interpreter to invoke to run the program.

    Note that the actual registration will point to /run/binfmt/${name}, so the kernel
    interpreter length limit doesn't apply.

    Type: path

    Declared by:

    [24]<nixpkgs/nixos/modules/system/boot/binfmt.nix>

[25]boot.binfmt.registrations.<name>.magicOrExtension

    The magic number or extension to match on.

    Type: string

    Declared by:

    [26]<nixpkgs/nixos/modules/system/boot/binfmt.nix>

[27]boot.binfmt.registrations.<name>.mask

    A mask to be ANDed with the byte sequence of the file before matching

    Type: null or string

    Default: null

    Declared by:

    [28]<nixpkgs/nixos/modules/system/boot/binfmt.nix>

[29]boot.binfmt.registrations.<name>.matchCredentials

    Whether to launch with the credentials and security token of the binary, not the interpreter
    (e.g. setuid bit).

    See the description of the 'C' flag in the kernel docs for more details.

    Implies/requires openBinary = true.

    Type: boolean

    Default: false

    Declared by:

    [30]<nixpkgs/nixos/modules/system/boot/binfmt.nix>

[31]boot.binfmt.registrations.<name>.offset

    The byte offset of the magic number used for recognition.

    Type: null or signed integer

    Default: null

    Declared by:

    [32]<nixpkgs/nixos/modules/system/boot/binfmt.nix>

[33]boot.binfmt.registrations.<name>.openBinary

    Whether to pass the binary to the interpreter as an open file descriptor, instead of a path.

    Type: boolean

    Default: false

    Declared by:

    [34]<nixpkgs/nixos/modules/system/boot/binfmt.nix>

[35]boot.binfmt.registrations.<name>.preserveArgvZero

    Whether to pass the original argv[0] to the interpreter.

    See the description of the 'P' flag in the kernel docs for more details;

    Type: boolean

    Default: false

    Declared by:

    [36]<nixpkgs/nixos/modules/system/boot/binfmt.nix>

[37]boot.binfmt.registrations.<name>.recognitionType

    Whether to recognize executables by magic number or extension.

    Type: one of "magic", "extension"

    Default: "magic"

    Declared by:

    [38]<nixpkgs/nixos/modules/system/boot/binfmt.nix>

[39]boot.blacklistedKernelModules

    List of names of kernel modules that should not be loaded automatically by the hardware
    probing code.

    Type: list of strings

    Default: [ ]

    Example: [ "cirrusfb" "i2c_piix4" ]

    Declared by:

    [40]<nixpkgs/nixos/modules/system/boot/modprobe.nix>

[41]boot.cleanTmpDir

    Whether to delete all files in /tmp during boot.

    Type: boolean

    Default: false

    Declared by:

    [42]<nixpkgs/nixos/modules/system/boot/tmp.nix>

[43]boot.consoleLogLevel

    The kernel console loglevel. All Kernel Messages with a log level smaller than this setting
    will be printed to the console.

    Type: signed integer

    Default: 4

    Declared by:

    [44]<nixpkgs/nixos/modules/system/boot/kernel.nix>

[45]boot.crashDump.enable

    If enabled, NixOS will set up a kernel that will boot on crash, and leave the user in systemd
    rescue to be able to save the crashed kernel dump at /proc/vmcore. It also activates the NMI
    watchdog.

    Type: boolean

    Default: false

    Declared by:

    [46]<nixpkgs/nixos/modules/misc/crashdump.nix>

[47]boot.crashDump.kernelParams

    Parameters that will be passed to the kernel kexec-ed on crash.

    Type: list of strings

    Default: [ "1" "boot.shell_on_fail" ]

    Declared by:

    [48]<nixpkgs/nixos/modules/misc/crashdump.nix>

[49]boot.crashDump.reservedMemory

    The amount of memory reserved for the crashdump kernel. If you choose a too high value, dmesg
    will mention "crashkernel reservation failed".

    Type: string

    Default: "128M"

    Declared by:

    [50]<nixpkgs/nixos/modules/misc/crashdump.nix>

[51]boot.devShmSize

    Size limit for the /dev/shm tmpfs. Look at mount(8), tmpfs size option, for the accepted
    syntax.

    Type: string

    Default: "50%"

    Example: "256m"

    Declared by:

    [52]<nixpkgs/nixos/modules/system/boot/stage-2.nix>

[53]boot.devSize

    Size limit for the /dev tmpfs. Look at mount(8), tmpfs size option, for the accepted syntax.

    Type: string

    Default: "5%"

    Example: "32m"

    Declared by:

    [54]<nixpkgs/nixos/modules/system/boot/stage-2.nix>

[55]boot.extraModprobeConfig

    Any additional configuration to be appended to the generated modprobe.conf. This is typically
    used to specify module options. See modprobe.d(5) for details.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    options parport_pc io=0x378 irq=7 dma=1
    ''

    Declared by:

    [56]<nixpkgs/nixos/modules/system/boot/modprobe.nix>

[57]boot.extraModulePackages

    A list of additional packages supplying kernel modules.

    Type: list of packages

    Default: [ ]

    Example:

    [ config.boot.kernelPackages.nvidia_x11 ]

    Declared by:

    [58]<nixpkgs/nixos/modules/system/boot/kernel.nix>

[59]boot.extraSystemdUnitPaths

    Additional paths that get appended to the SYSTEMD_UNIT_PATH environment variable that can
    contain mutable unit files.

    Type: list of strings

    Default: [ ]

    Declared by:

    [60]<nixpkgs/nixos/modules/system/boot/stage-2.nix>

[61]boot.growPartition

    Whether to enable grow the root partition on boot.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [62]<nixpkgs/nixos/modules/system/boot/grow-partition.nix>

[63]boot.hardwareScan

    Whether to try to load kernel modules for all detected hardware. Usually this does a good job
    of providing you with the modules you need, but sometimes it can crash the system or cause
    other nasty effects.

    Type: boolean

    Default: true

    Declared by:

    [64]<nixpkgs/nixos/modules/services/hardware/udev.nix>

[65]boot.initrd.enable

    Whether to enable the NixOS initial RAM disk (initrd). This may be needed to perform some
    initialisation tasks (like mounting network/encrypted file systems) before continuing the
    boot process.

    Type: boolean

    Default: "!config.boot.isContainer"

    Declared by:

    [66]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[67]boot.initrd.availableKernelModules

    The set of kernel modules in the initial ramdisk used during the boot process. This set must
    include all modules necessary for mounting the root device. That is, it should include
    modules for the physical device (e.g., SCSI drivers) and for the file system (e.g., ext3).
    The set specified here is automatically closed under the module dependency relation, i.e.,
    all dependencies of the modules list here are included automatically. The modules listed here
    are available in the initrd, but are only loaded on demand (e.g., the ext3 module is loaded
    automatically when an ext3 filesystem is mounted, and modules for PCI devices are loaded when
    they match the PCI ID of a device in your system). To force a module to be loaded, include it
    in boot.initrd.kernelModules.

    Type: list of strings

    Default: [ ]

    Example: [ "sata_nv" "ext3" ]

    Declared by:

    [68]<nixpkgs/nixos/modules/system/boot/kernel.nix>

[69]boot.initrd.checkJournalingFS

    Whether to run fsck on journaling filesystems such as ext3.

    Type: boolean

    Default: true

    Declared by:

    [70]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[71]boot.initrd.compressor

    The compressor to use on the initrd image. May be any of:

      □ The name of one of the predefined compressors, see pkgs/build-support/kernel/
        initrd-compressor-meta.nix for the definitions.

      □ A function which, given the nixpkgs package set, returns the path to a compressor tool,
        e.g. pkgs: "${pkgs.pigz}/bin/pigz"

      □ (not recommended, because it does not work when cross-compiling) the full path to a
        compressor tool, e.g. "${pkgs.pigz}/bin/pigz"

    The given program should read data from stdin and write it to stdout compressed.

    Type: unspecified

    Default: "zstd if the kernel supports it (5.9+), gzip if not."

    Example: "xz"

    Declared by:

    [72]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[73]boot.initrd.compressorArgs

    Arguments to pass to the compressor for the initrd image, or null to use the compressor's
    defaults.

    Type: null or list of strings

    Default: null

    Declared by:

    [74]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[75]boot.initrd.includeDefaultModules

    This option, if set, adds a collection of default kernel modules to
    boot.initrd.availableKernelModules and boot.initrd.kernelModules.

    Type: boolean

    Default: true

    Declared by:

    [76]<nixpkgs/nixos/modules/system/boot/kernel.nix>

[77]boot.initrd.kernelModules

    List of modules that are always loaded by the initrd.

    Type: list of strings

    Default: [ ]

    Declared by:

    [78]<nixpkgs/nixos/modules/system/boot/kernel.nix>

[79]boot.initrd.luks.cryptoModules

    A list of cryptographic kernel modules needed to decrypt the root device(s). The default
    includes all common modules.

    Type: list of strings

    Default: [ "aes" "aes_generic" "blowfish" "twofish" "serpent" "cbc" "xts" "lrw" "sha1"
    "sha256" "sha512" "af_alg" "algif_skcipher" ]

    Declared by:

    [80]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[81]boot.initrd.luks.devices

    The encrypted disk that should be opened before the root filesystem is mounted. Both
    LVM-over-LUKS and LUKS-over-LVM setups are supported. The unencrypted devices can be accessed
    as /dev/mapper/name.

    Type: attribute set of submodules

    Default: { }

    Example: { luksroot = { device = "/dev/disk/by-uuid/430e9eff-d852-4f68-aa3b-2fa3599ebe08"; }
    ; }

    Declared by:

    [82]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[83]boot.initrd.luks.devices.<name>.allowDiscards

    Whether to allow TRIM requests to the underlying device. This option has security
    implications; please read the LUKS documentation before activating it.

    Type: boolean

    Default: false

    Declared by:

    [84]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[85]boot.initrd.luks.devices.<name>.device

    Path of the underlying encrypted block device.

    Type: string

    Example: "/dev/disk/by-uuid/430e9eff-d852-4f68-aa3b-2fa3599ebe08"

    Declared by:

    [86]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[87]boot.initrd.luks.devices.<name>.fallbackToPassword

    Whether to fallback to interactive passphrase prompt if the keyfile cannot be found. This
    will prevent unattended boot should the keyfile go missing.

    Type: boolean

    Default: false

    Declared by:

    [88]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[89]boot.initrd.luks.devices.<name>.fido2.credential

    The FIDO2 credential ID.

    Type: null or string

    Default: null

    Example:
    "f1d00200d8dc783f7fb1e10ace8da27f8312d72692abfca2f7e4960a73f48e82e1f7571f6ebfcee9fb434f9886ccc8fcc52a6614d8d2"

    Declared by:

    [90]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[91]boot.initrd.luks.devices.<name>.fido2.gracePeriod

    Time in seconds to wait for the FIDO2 key.

    Type: signed integer

    Default: 10

    Declared by:

    [92]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[93]boot.initrd.luks.devices.<name>.fido2.passwordLess

    Defines whatever to use an empty string as a default salt.

    Enable only when your device is PIN protected, such as [94]Trezor.

    Type: boolean

    Default: false

    Declared by:

    [95]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[96]boot.initrd.luks.devices.<name>.gpgCard

    The option to use this LUKS device with a GPG encrypted luks password by the GPG Smartcard.
    If null (the default), GPG-Smartcard will be disabled for this device.

    Type: null or submodule

    Default: null

    Declared by:

    [97]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[98]boot.initrd.luks.devices.<name>.gpgCard.encryptedPass

    Path to the GPG encrypted passphrase.

    Type: path

    Default: ""

    Declared by:

    [99]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[100]boot.initrd.luks.devices.<name>.gpgCard.gracePeriod

    Time in seconds to wait for the GPG Smartcard.

    Type: signed integer

    Default: 10

    Declared by:

    [101]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[102]boot.initrd.luks.devices.<name>.gpgCard.publicKey

    Path to the Public Key.

    Type: path

    Default: ""

    Declared by:

    [103]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[104]boot.initrd.luks.devices.<name>.header

    The name of the file or block device that should be used as header for the encrypted device.

    Type: null or string

    Default: null

    Example: "/root/header.img"

    Declared by:

    [105]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[106]boot.initrd.luks.devices.<name>.keyFile

    The name of the file (can be a raw device or a partition) that should be used as the
    decryption key for the encrypted device. If not specified, you will be prompted for a
    passphrase instead.

    Type: null or string

    Default: null

    Example: "/dev/sdb1"

    Declared by:

    [107]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[108]boot.initrd.luks.devices.<name>.keyFileOffset

    The offset of the key file. Use this in combination with keyFileSize to use part of a file as
    key file (often the case if a raw device or partition is used as a key file). If not
    specified, the key begins at the first byte of keyFile.

    Type: null or signed integer

    Default: null

    Example: 4096

    Declared by:

    [109]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[110]boot.initrd.luks.devices.<name>.keyFileSize

    The size of the key file. Use this if only the beginning of the key file should be used as a
    key (often the case if a raw device or partition is used as key file). If not specified, the
    whole keyFile will be used decryption, instead of just the first keyFileSize bytes.

    Type: null or signed integer

    Default: null

    Example: 4096

    Declared by:

    [111]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[112]boot.initrd.luks.devices.<name>.postOpenCommands

    Commands that should be run right after we have mounted our LUKS device.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    umount /tmp/persistent
    ''

    Declared by:

    [113]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[114]boot.initrd.luks.devices.<name>.preLVM

    Whether the luksOpen will be attempted before LVM scan or after it.

    Type: boolean

    Default: true

    Declared by:

    [115]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[116]boot.initrd.luks.devices.<name>.preOpenCommands

    Commands that should be run right before we try to mount our LUKS device. This can be useful,
    if the keys needed to open the drive is on another partion.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    mkdir -p /tmp/persistent
    mount -t zfs rpool/safe/persistent /tmp/persistent
    ''

    Declared by:

    [117]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[118]boot.initrd.luks.devices.<name>.yubikey

    The options to use for this LUKS device in YubiKey-PBA. If null (the default), YubiKey-PBA
    will be disabled for this device.

    Type: null or submodule

    Default: null

    Declared by:

    [119]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[120]boot.initrd.luks.devices.<name>.yubikey.gracePeriod

    Time in seconds to wait for the YubiKey.

    Type: signed integer

    Default: 10

    Declared by:

    [121]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[122]boot.initrd.luks.devices.<name>.yubikey.iterationStep

    How much the iteration count for PBKDF2 is increased at each successful authentication.

    Type: signed integer

    Default: 0

    Declared by:

    [123]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[124]boot.initrd.luks.devices.<name>.yubikey.keyLength

    Length of the LUKS slot key derived with PBKDF2 in byte.

    Type: signed integer

    Default: 64

    Declared by:

    [125]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[126]boot.initrd.luks.devices.<name>.yubikey.saltLength

    Length of the new salt in byte (64 is the effective maximum).

    Type: signed integer

    Default: 16

    Declared by:

    [127]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[128]boot.initrd.luks.devices.<name>.yubikey.slot

    Which slot on the YubiKey to challenge.

    Type: signed integer

    Default: 2

    Declared by:

    [129]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[130]boot.initrd.luks.devices.<name>.yubikey.storage.device

    An unencrypted device that will temporarily be mounted in stage-1. Must contain the current
    salt to create the challenge for this LUKS device.

    Type: path

    Default: "/dev/sda1"

    Declared by:

    [131]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[132]boot.initrd.luks.devices.<name>.yubikey.storage.fsType

    The filesystem of the unencrypted device.

    Type: string

    Default: "vfat"

    Declared by:

    [133]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[134]boot.initrd.luks.devices.<name>.yubikey.storage.path

    Absolute path of the salt on the unencrypted device with that device's root directory as "/".

    Type: string

    Default: "/crypt-storage/default"

    Declared by:

    [135]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[136]boot.initrd.luks.devices.<name>.yubikey.twoFactor

    Whether to use a passphrase and a YubiKey (true), or only a YubiKey (false).

    Type: boolean

    Default: true

    Declared by:

    [137]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[138]boot.initrd.luks.fido2Support

    Enables support for authenticating with FIDO2 devices.

    Type: boolean

    Default: false

    Declared by:

    [139]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[140]boot.initrd.luks.gpgSupport

    Enables support for authenticating with a GPG encrypted password.

    Type: boolean

    Default: false

    Declared by:

    [141]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[142]boot.initrd.luks.mitigateDMAAttacks

    Unless enabled, encryption keys can be easily recovered by an attacker with physical access
    to any machine with PCMCIA, ExpressCard, ThunderBolt or FireWire port. More information is
    available at [143]http://en.wikipedia.org/wiki/DMA_attack.

    This option blacklists FireWire drivers, but doesn't remove them. You can manually load the
    drivers if you need to use a FireWire device, but don't forget to unload them!

    Type: boolean

    Default: true

    Declared by:

    [144]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[145]boot.initrd.luks.reusePassphrases

    When opening a new LUKS device try reusing last successful passphrase.

    Useful for mounting a number of devices that use the same passphrase without retyping it
    several times.

    Such setup can be useful if you use cryptsetup luksSuspend. Different LUKS devices will still
    have different master keys even when using the same passphrase.

    Type: boolean

    Default: true

    Declared by:

    [146]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[147]boot.initrd.luks.yubikeySupport

    Enables support for authenticating with a YubiKey on LUKS devices. See the NixOS wiki for
    information on how to properly setup a LUKS device and a YubiKey to work with this feature.

    Type: boolean

    Default: false

    Declared by:

    [148]<nixpkgs/nixos/modules/system/boot/luksroot.nix>

[149]boot.initrd.mdadmConf

    Contents of /etc/mdadm.conf in stage 1.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [150]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[151]boot.initrd.network.enable

    Add network connectivity support to initrd. The network may be configured using the ip kernel
    parameter, as described in [152]the kernel documentation. Otherwise, if networking.useDHCP is
    enabled, an IP address is acquired using DHCP.

    You should add the module(s) required for your network card to
    boot.initrd.availableKernelModules. lspci -v | grep -iA8 'network\|ethernet' will tell you
    which.

    Type: boolean

    Default: false

    Declared by:

    [153]<nixpkgs/nixos/modules/system/boot/initrd-network.nix>

[154]boot.initrd.network.flushBeforeStage2

    Whether to clear the configuration of the interfaces that were set up in the initrd right
    before stage 2 takes over. Stage 2 will do the regular network configuration based on the
    NixOS networking options.

    Type: boolean

    Default: true

    Declared by:

    [155]<nixpkgs/nixos/modules/system/boot/initrd-network.nix>

[156]boot.initrd.network.openvpn.enable

    Starts an OpenVPN client during initrd boot. It can be used to e.g. remotely accessing the
    SSH service controlled by boot.initrd.network.ssh or other network services included. Service
    is killed when stage-1 boot is finished.

    Type: boolean

    Default: false

    Declared by:

    [157]<nixpkgs/nixos/modules/system/boot/initrd-openvpn.nix>

[158]boot.initrd.network.openvpn.configuration

    The configuration file for OpenVPN.

    Warning: Unless your bootloader supports initrd secrets, this configuration is stored
    insecurely in the global Nix store.

    Type: path

    Example: "./configuration.ovpn"

    Declared by:

    [159]<nixpkgs/nixos/modules/system/boot/initrd-openvpn.nix>

[160]boot.initrd.network.postCommands

    Shell commands to be executed after stage 1 of the boot has initialised the network.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [161]<nixpkgs/nixos/modules/system/boot/initrd-network.nix>

[162]boot.initrd.network.ssh.enable

    Start SSH service during initrd boot. It can be used to debug failing boot on a remote
    server, enter pasphrase for an encrypted partition etc. Service is killed when stage-1 boot
    is finished.

    The sshd configuration is largely inherited from services.openssh.

    Type: boolean

    Default: false

    Declared by:

    [163]<nixpkgs/nixos/modules/system/boot/initrd-ssh.nix>

[164]boot.initrd.network.ssh.authorizedKeys

    Authorized keys for the root user on initrd.

    Type: list of strings

    Default: "config.users.users.root.openssh.authorizedKeys.keys"

    Declared by:

    [165]<nixpkgs/nixos/modules/system/boot/initrd-ssh.nix>

[166]boot.initrd.network.ssh.extraConfig

    Verbatim contents of sshd_config.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [167]<nixpkgs/nixos/modules/system/boot/initrd-ssh.nix>

[168]boot.initrd.network.ssh.hostKeys

    Specify SSH host keys to import into the initrd.

    To generate keys, use ssh-keygen(1):

    # ssh-keygen -t rsa -N "" -f /etc/secrets/initrd/ssh_host_rsa_key
    # ssh-keygen -t ed25519 -N "" -f /etc/secrets/initrd/ssh_host_ed25519_key

    Unless your bootloader supports initrd secrets, these keys are stored insecurely in the
    global Nix store. Do NOT use your regular SSH host private keys for this purpose or you'll
    expose them to regular users!

    Additionally, even if your initrd supports secrets, if you're using initrd SSH to unlock an
    encrypted disk then using your regular host keys exposes the private keys on your unencrypted
    boot partition.

    Type: list of string or paths

    Default: [ ]

    Example: [ "/etc/secrets/initrd/ssh_host_rsa_key" "/etc/secrets/initrd/ssh_host_ed25519_key"
    ]

    Declared by:

    [169]<nixpkgs/nixos/modules/system/boot/initrd-ssh.nix>

[170]boot.initrd.network.ssh.port

    Port on which SSH initrd service should listen.

    Type: signed integer

    Default: 22

    Declared by:

    [171]<nixpkgs/nixos/modules/system/boot/initrd-ssh.nix>

[172]boot.initrd.network.ssh.shell

    Login shell of the remote user. Can be used to limit actions user can do.

    Type: string

    Default: "/bin/ash"

    Declared by:

    [173]<nixpkgs/nixos/modules/system/boot/initrd-ssh.nix>

[174]boot.initrd.network.udhcpc.extraArgs

    Additional command-line arguments passed verbatim to udhcpc if boot.initrd.network.enable and
    networking.useDHCP are enabled.

    Type: list of strings

    Default: [ ]

    Declared by:

    [175]<nixpkgs/nixos/modules/system/boot/initrd-network.nix>

[176]boot.initrd.postDeviceCommands

    Shell commands to be executed immediately after stage 1 of the boot has loaded kernel modules
    and created device nodes in /dev.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [177]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[178]boot.initrd.postMountCommands

    Shell commands to be executed immediately after the stage 1 filesystems have been mounted.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [179]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[180]boot.initrd.preDeviceCommands

    Shell commands to be executed before udev is started to create device nodes.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [181]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[182]boot.initrd.preFailCommands

    Shell commands to be executed before the failure prompt is shown.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [183]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[184]boot.initrd.preLVMCommands

    Shell commands to be executed immediately before LVM discovery.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [185]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[186]boot.initrd.prepend

    Other initrd files to prepend to the final initrd we are building.

    Type: list of strings

    Default: [ ]

    Declared by:

    [187]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[188]boot.initrd.secrets

    Secrets to append to the initrd. The attribute name is the path the secret should have inside
    the initrd, the value is the path it should be copied from (or null for the same path inside
    and out).

    Type: attribute set of null or paths

    Default: { }

    Example:

    { "/etc/dropbear/dropbear_rsa_host_key" =
        ./secret-dropbear-key;
    }

    Declared by:

    [189]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[190]boot.initrd.supportedFilesystems

    Names of supported filesystem types in the initial ramdisk.

    Type: list of strings

    Default: [ ]

    Example: [ "btrfs" ]

    Declared by:

    [191]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[192]boot.initrd.verbose

    Verbosity of the initrd. Please note that disabling verbosity removes only the mandatory
    messages generated by the NixOS scripts. For a completely silent boot, you might also want to
    set the two following configuration options:

      □ boot.consoleLogLevel = 0;

      □ boot.kernelParams = [ "quiet" "udev.log_priority=3" ];

    Type: boolean

    Default: true

    Declared by:

    [193]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[194]boot.isContainer

    Whether this NixOS machine is a lightweight container running in another NixOS system.

    Type: boolean

    Default: false

    Declared by:

    [195]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[196]boot.iscsi-initiator.discoverPortal

    iSCSI portal to boot from.

    Type: null or string

    Default: null

    Example: "192.168.1.1:3260"

    Declared by:

    [197]<nixpkgs/nixos/modules/services/networking/iscsi/root-initiator.nix>

[198]boot.iscsi-initiator.extraConfig

    Extra lines to append to /etc/iscsid.conf

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [199]<nixpkgs/nixos/modules/services/networking/iscsi/root-initiator.nix>

[200]boot.iscsi-initiator.extraConfigFile

    Append an additional file's contents to `/etc/iscsid.conf`. Use a non-store path and store
    passwords in this file. Note: the file specified here must be available in the initrd, see:
    `boot.initrd.secrets`.

    Type: null or string

    Default: null

    Declared by:

    [201]<nixpkgs/nixos/modules/services/networking/iscsi/root-initiator.nix>

[202]boot.iscsi-initiator.logLevel

    Higher numbers elicits more logs.

    Type: signed integer

    Default: 1

    Example: 8

    Declared by:

    [203]<nixpkgs/nixos/modules/services/networking/iscsi/root-initiator.nix>

[204]boot.iscsi-initiator.loginAll

    Do not log into a specific target on the portal, but to all that we discover. This overrides
    setting target.

    Type: boolean

    Default: false

    Declared by:

    [205]<nixpkgs/nixos/modules/services/networking/iscsi/root-initiator.nix>

[206]boot.iscsi-initiator.name

    Name of the iSCSI initiator to boot from. Note, booting from iscsi requires networkd based
    networking.

    Type: null or string

    Default: null

    Example: "iqn.2020-08.org.linux-iscsi.initiatorhost:example"

    Declared by:

    [207]<nixpkgs/nixos/modules/services/networking/iscsi/root-initiator.nix>

[208]boot.iscsi-initiator.target

    Name of the iSCSI target to boot from.

    Type: null or string

    Default: null

    Example: "iqn.2020-08.org.linux-iscsi.targethost:example"

    Declared by:

    [209]<nixpkgs/nixos/modules/services/networking/iscsi/root-initiator.nix>

[210]boot.kernel.randstructSeed

    Provides a custom seed for the RANDSTRUCT security option of the Linux kernel. Note that
    RANDSTRUCT is only enabled in NixOS hardened kernels. Using a custom seed requires building
    the kernel and dependent packages locally, since this customization happens at build time.

    Type: string

    Default: ""

    Example: "my secret seed"

    Declared by:

    [211]<nixpkgs/nixos/modules/system/boot/kernel.nix>

[212]boot.kernel.sysctl

    Runtime parameters of the Linux kernel, as set by sysctl(8). Note that sysctl parameters
    names must be enclosed in quotes (e.g. "vm.swappiness" instead of vm.swappiness). The value
    of each parameter may be a string, integer, boolean, or null (signifying the option will not
    appear at all).

    Type: attribute set of sysctl option values

    Default: { }

    Example:

    { "net.ipv4.tcp_syncookies" = false; "vm.swappiness" = 60; }

    Declared by:

    [213]<nixpkgs/nixos/modules/config/sysctl.nix>

[214]boot.kernelModules

    The set of kernel modules to be loaded in the second stage of the boot process. Note that
    modules that are needed to mount the root file system should be added to
    boot.initrd.availableKernelModules or boot.initrd.kernelModules.

    Type: list of strings

    Default: [ ]

    Declared by:

    [215]<nixpkgs/nixos/modules/system/boot/kernel.nix>

[216]boot.kernelPackages

    This option allows you to override the Linux kernel used by NixOS. Since things like external
    kernel module packages are tied to the kernel you're using, it also overrides those. This
    option is a function that takes Nixpkgs as an argument (as a convenience), and returns an
    attribute set containing at the very least an attribute kernel. Additional attributes may be
    needed depending on your configuration. For instance, if you use the NVIDIA X driver, then it
    also needs to contain an attribute nvidia_x11.

    Type: unspecified

    Default: "pkgs.linuxPackages"

    Example:

    pkgs.linuxPackages_2_6_25

    Declared by:

    [217]<nixpkgs/nixos/modules/system/boot/kernel.nix>

[218]boot.kernelParams

    Parameters added to the kernel command line.

    Type: list of strings

    Default: [ ]

    Declared by:

    [219]<nixpkgs/nixos/modules/system/boot/kernel.nix>

[220]boot.kernelPatches

    A list of additional patches to apply to the kernel.

    Type: list of attribute sets

    Default: [ ]

    Example:

    [ pkgs.kernelPatches.ubuntu_fan_4_4 ]

    Declared by:

    [221]<nixpkgs/nixos/modules/system/boot/kernel.nix>

[222]boot.loader.efi.canTouchEfiVariables

    Whether the installation process is allowed to modify EFI boot variables.

    Type: boolean

    Default: false

    Declared by:

    [223]<nixpkgs/nixos/modules/system/boot/loader/efi.nix>

[224]boot.loader.efi.efiSysMountPoint

    Where the EFI System Partition is mounted.

    Type: string

    Default: "/boot"

    Declared by:

    [225]<nixpkgs/nixos/modules/system/boot/loader/efi.nix>

[226]boot.loader.generationsDir.enable

    Whether to create symlinks to the system generations under /boot. When enabled, /boot/default
    /kernel, /boot/default/initrd, etc., are updated to point to the current generation's kernel
    image, initial RAM disk, and other bootstrap files.

    This optional is not necessary with boot loaders such as GNU GRUB for which the menu is
    updated to point to the latest bootstrap files. However, it is needed for U-Boot on platforms
    where the boot command line is stored in flash memory rather than in a menu file.

    Type: boolean

    Default: false

    Declared by:

    [227]<nixpkgs/nixos/modules/system/boot/loader/generations-dir/generations-dir.nix>

[228]boot.loader.generationsDir.copyKernels

    Whether copy the necessary boot files into /boot, so /nix/store is not needed by the boot
    loader.

    Type: boolean

    Default: false

    Declared by:

    [229]<nixpkgs/nixos/modules/system/boot/loader/generations-dir/generations-dir.nix>

[230]boot.loader.generic-extlinux-compatible.enable

    Whether to generate an extlinux-compatible configuration file under /boot/extlinux.conf. For
    instance, U-Boot's generic distro boot support uses this file format.

    See [231]U-boot's documentation for more information.

    Type: boolean

    Default: false

    Declared by:

    [232]<nixpkgs/nixos/modules/system/boot/loader/generic-extlinux-compatible>

[233]boot.loader.generic-extlinux-compatible.configurationLimit

    Maximum number of configurations in the boot menu.

    Type: signed integer

    Default: 20

    Example: 10

    Declared by:

    [234]<nixpkgs/nixos/modules/system/boot/loader/generic-extlinux-compatible>

[235]boot.loader.generic-extlinux-compatible.populateCmd

    Contains the builder command used to populate an image, honoring all options except the -c
    <path-to-default-configuration> argument. Useful to have for sdImage.populateRootCommands

    Type: string (read only)

    Declared by:

    [236]<nixpkgs/nixos/modules/system/boot/loader/generic-extlinux-compatible>

[237]boot.loader.grub.enable

    Whether to enable the GNU GRUB boot loader.

    Type: boolean

    Default: true

    Declared by:

    [238]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[239]boot.loader.grub.enableCryptodisk

    Enable support for encrypted partitions. GRUB should automatically unlock the correct
    encrypted partition and look for filesystems.

    Type: boolean

    Default: false

    Declared by:

    [240]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[241]boot.loader.grub.backgroundColor

    Background color to be used for GRUB to fill the areas the image isn't filling.

    Note: This options has no effect for GRUB 1.

    Type: null or string

    Default: null

    Example: "#7EBAE4"

    Declared by:

    [242]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[243]boot.loader.grub.configurationLimit

    Maximum of configurations in boot menu. GRUB has problems when there are too many entries.

    Type: signed integer

    Default: 100

    Example: 120

    Declared by:

    [244]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[245]boot.loader.grub.configurationName

    GRUB entry name instead of default.

    Type: string

    Default: ""

    Example: "Stable 2.6.21"

    Declared by:

    [246]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[247]boot.loader.grub.copyKernels

    Whether the GRUB menu builder should copy kernels and initial ramdisks to /boot. This is done
    automatically if /boot is on a different partition than /.

    Type: boolean

    Default: false

    Declared by:

    [248]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[249]boot.loader.grub.default

    Index of the default menu item to be booted.

    Type: signed integer or string

    Default: "0"

    Declared by:

    [250]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[251]boot.loader.grub.device

    The device on which the GRUB boot loader will be installed. The special value nodev means
    that a GRUB boot menu will be generated, but GRUB itself will not actually be installed. To
    install GRUB on multiple devices, use boot.loader.grub.devices.

    Type: string

    Default: ""

    Example: "/dev/disk/by-id/wwn-0x500001234567890a"

    Declared by:

    [252]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[253]boot.loader.grub.devices

    The devices on which the boot loader, GRUB, will be installed. Can be used instead of device
    to install GRUB onto multiple devices.

    Type: list of strings

    Default: [ ]

    Example: [ "/dev/disk/by-id/wwn-0x500001234567890a" ]

    Declared by:

    [254]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[255]boot.loader.grub.efiInstallAsRemovable

    Whether to invoke grub-install with --removable.

    Unless you turn this on, GRUB will install itself somewhere in
    boot.loader.efi.efiSysMountPoint (exactly where depends on other config variables). If you've
    set boot.loader.efi.canTouchEfiVariables *AND* you are currently booted in UEFI mode, then
    GRUB will use efibootmgr to modify the boot order in the EFI variables of your firmware to
    include this location. If you are *not* booted in UEFI mode at the time GRUB is being
    installed, the NVRAM will not be modified, and your system will not find GRUB at boot time.
    However, GRUB will still return success so you may miss the warning that gets printed
    ("efibootmgr: EFI variables are not supported on this system.").

    If you turn this feature on, GRUB will install itself in a special location within
    efiSysMountPoint (namely EFI/boot/boot$arch.efi) which the firmwares are hardcoded to try
    first, regardless of NVRAM EFI variables.

    To summarize, turn this on if:

      □ You are installing NixOS and want it to boot in UEFI mode, but you are currently booted
        in legacy mode

      □ You want to make a drive that will boot regardless of the NVRAM state of the computer
        (like a USB "removable" drive)

      □ You simply dislike the idea of depending on NVRAM state to make your drive bootable

    Type: boolean

    Default: false

    Declared by:

    [256]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[257]boot.loader.grub.efiSupport

    Whether GRUB should be built with EFI support. EFI support is only available for GRUB v2.
    This option is ignored for GRUB v1.

    Type: boolean

    Default: false

    Declared by:

    [258]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[259]boot.loader.grub.extraConfig

    Additional GRUB commands inserted in the configuration file just before the menu entries.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    serial --unit=0 --speed=115200 --word=8 --parity=no --stop=1
    terminal_input --append serial
    terminal_output --append serial
    ''

    Declared by:

    [260]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[261]boot.loader.grub.extraEntries

    Any additional entries you want added to the GRUB boot menu.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    # GRUB 1 example (not GRUB 2 compatible)
    title Windows
      chainloader (hd0,1)+1

    # GRUB 2 example
    menuentry "Windows 7" {
      chainloader (hd0,4)+1
    }

    # GRUB 2 with UEFI example, chainloading another distro
    menuentry "Fedora" {
      set root=(hd1,1)
      chainloader /efi/fedora/grubx64.efi
    }
    ''

    Declared by:

    [262]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[263]boot.loader.grub.extraEntriesBeforeNixOS

    Whether extraEntries are included before the default option.

    Type: boolean

    Default: false

    Declared by:

    [264]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[265]boot.loader.grub.extraFiles

    A set of files to be copied to /boot. Each attribute name denotes the destination file name
    in /boot, while the corresponding attribute value specifies the source file.

    Type: attribute set of paths

    Default: { }

    Example:

    { "memtest.bin" = "${pkgs.memtest86plus}/memtest.bin"; }

    Declared by:

    [266]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[267]boot.loader.grub.extraGrubInstallArgs

    Additional arguments passed to grub-install.

    A use case for this is to build specific GRUB2 modules directly into the GRUB2 kernel image,
    so that they are available and activated even in the grub rescue shell.

    They are also necessary when the BIOS/UEFI is bugged and cannot correctly read large disks
    (e.g. above 2 TB), so GRUB2's own nativedisk and related modules can be used to use its own
    disk drivers. The example shows one such case. This is also useful for booting from USB. See
    the [268] GRUB source code for which disk modules are available.

    The list elements are passed directly as argv arguments to the grub-install program, in
    order.

    Type: list of strings

    Default: [ ]

    Example: [ "--modules=nativedisk ahci pata part_gpt part_msdos diskfilter mdraid1x lvm ext2"
    ]

    Declared by:

    [269]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[270]boot.loader.grub.extraInstallCommands

    Additional shell commands inserted in the bootloader installer script after generating menu
    entries.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    # the example below generates detached signatures that GRUB can verify
    # https://www.gnu.org/software/grub/manual/grub/grub.html#Using-digital-signatures
    ${pkgs.findutils}/bin/find /boot -not -path "/boot/efi/*" -type f -name '*.sig' -delete
    old_gpg_home=$GNUPGHOME
    export GNUPGHOME="$(mktemp -d)"
    ${pkgs.gnupg}/bin/gpg --import ${priv_key} > /dev/null 2>&1
    ${pkgs.findutils}/bin/find /boot -not -path "/boot/efi/*" -type f -exec ${pkgs.gnupg}/bin/gpg --detach-sign "{}" \; > /dev/null 2>&1
    rm -rf $GNUPGHOME
    export GNUPGHOME=$old_gpg_home

    Declared by:

    [271]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[272]boot.loader.grub.extraPerEntryConfig

    Additional GRUB commands inserted in the configuration file at the start of each NixOS menu
    entry.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "root (hd0)"

    Declared by:

    [273]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[274]boot.loader.grub.extraPrepareConfig

    Additional bash commands to be run at the script that prepares the GRUB menu entries.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [275]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[276]boot.loader.grub.font

    Path to a TrueType, OpenType, or pf2 font to be used by Grub.

    Type: null or path

    Default: ''"''${pkgs.grub2}/share/grub/unicode.pf2"''

    Declared by:

    [277]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[278]boot.loader.grub.fontSize

    Font size for the grub menu. Ignored unless font is set to a ttf or otf font.

    Type: null or signed integer

    Default: null

    Example:

    Declared by:

    [279]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[280]boot.loader.grub.forceInstall

    Whether to try and forcibly install GRUB even if problems are detected. It is not recommended
    to enable this unless you know what you are doing.

    Type: boolean

    Default: false

    Declared by:

    [281]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[282]boot.loader.grub.forcei686

    Whether to force the use of a ia32 boot loader on x64 systems. Required to install and run
    NixOS on 64bit x86 systems with 32bit (U)EFI.

    Type: boolean

    Default: false

    Declared by:

    [283]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[284]boot.loader.grub.fsIdentifier

    Determines how GRUB will identify devices when generating the configuration file. A value of
    uuid / label signifies that grub will always resolve the uuid or label of the device before
    using it in the configuration. A value of provided means that GRUB will use the device name
    as show in df or mount. Note, zfs zpools / datasets are ignored and will always be mounted
    using their labels.

    Type: one of "uuid", "label", "provided"

    Default: "uuid"

    Declared by:

    [285]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[286]boot.loader.grub.gfxmodeBios

    The gfxmode to pass to GRUB when loading a graphical boot interface under BIOS.

    Type: string

    Default: "1024x768"

    Example: "auto"

    Declared by:

    [287]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[288]boot.loader.grub.gfxmodeEfi

    The gfxmode to pass to GRUB when loading a graphical boot interface under EFI.

    Type: string

    Default: "auto"

    Example: "1024x768"

    Declared by:

    [289]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[290]boot.loader.grub.gfxpayloadBios

    The gfxpayload to pass to GRUB when loading a graphical boot interface under BIOS.

    Type: string

    Default: "text"

    Example: "keep"

    Declared by:

    [291]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[292]boot.loader.grub.gfxpayloadEfi

    The gfxpayload to pass to GRUB when loading a graphical boot interface under EFI.

    Type: string

    Default: "keep"

    Example: "text"

    Declared by:

    [293]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[294]boot.loader.grub.ipxe

    Set of iPXE scripts available for booting from the GRUB boot menu.

    Type: attribute set of path or strings

    Default: { }

    Example:

    { demo = ''
        #!ipxe
        dhcp
        chain http://boot.ipxe.org/demo/boot.php
      '';
    }

    Declared by:

    [295]<nixpkgs/nixos/modules/system/boot/loader/grub/ipxe.nix>

[296]boot.loader.grub.memtest86.enable

    Make Memtest86+ (or MemTest86 if EFI support is enabled), a memory testing program, available
    from the GRUB boot menu. MemTest86 is an unfree program, so this requires allowUnfree to be
    set to true.

    Type: boolean

    Default: false

    Declared by:

    [297]<nixpkgs/nixos/modules/system/boot/loader/grub/memtest.nix>

[298]boot.loader.grub.memtest86.params

    Parameters added to the Memtest86+ command line. As of memtest86+ 5.01 the following list of
    (apparently undocumented) parameters are accepted:

      □ console=..., set up a serial console. Examples: console=ttyS0, console=ttyS0,9600 or
        console=ttyS0,115200n8.

      □ btrace, enable boot trace.

      □ maxcpus=N, limit number of CPUs.

      □ onepass, run one pass and exit if there are no errors.

      □ tstlist=..., list of tests to run. Example: 0,1,2.

      □ cpumask=..., set a CPU mask, to select CPUs to use for testing.

    This list of command line options was obtained by reading the Memtest86+ source code.

    Type: list of strings

    Default: [ ]

    Example: [ "console=ttyS0,115200" ]

    Declared by:

    [299]<nixpkgs/nixos/modules/system/boot/loader/grub/memtest.nix>

[300]boot.loader.grub.mirroredBoots

    Mirror the boot configuration to multiple partitions and install grub to the respective
    devices corresponding to those partitions.

    Type: list of submodules

    Default: [ ]

    Example: [ { devices = [ "/dev/disk/by-id/wwn-0x500001234567890a" ] ; path = "/boot1"; } {
    devices = [ "/dev/disk/by-id/wwn-0x500009876543210a" ] ; path = "/boot2"; } ]

    Declared by:

    [301]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[302]boot.loader.grub.mirroredBoots.*.devices

    The path to the devices which will have the GRUB MBR written. Note these are typically device
    paths and not paths to partitions.

    Type: list of strings

    Default: [ ]

    Example: [ "/dev/disk/by-id/wwn-0x500001234567890a" "/dev/disk/by-id/wwn-0x500009876543210a"
    ]

    Declared by:

    [303]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[304]boot.loader.grub.mirroredBoots.*.efiBootloaderId

    The id of the bootloader to store in efi nvram. The default is to name it NixOS and append
    the path or efiSysMountPoint. This is only used if boot.loader.efi.canTouchEfiVariables is
    true.

    Type: null or string

    Default: null

    Example: "NixOS-fsid"

    Declared by:

    [305]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[306]boot.loader.grub.mirroredBoots.*.efiSysMountPoint

    The path to the efi system mount point. Usually this is the same partition as the above path
    and can be left as null.

    Type: null or string

    Default: null

    Example: "/boot1/efi"

    Declared by:

    [307]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[308]boot.loader.grub.mirroredBoots.*.path

    The path to the boot directory where GRUB will be written. Generally this boot path should
    double as an EFI path.

    Type: string

    Example: "/boot1"

    Declared by:

    [309]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[310]boot.loader.grub.splashImage

    Background image used for GRUB. Set to null to run GRUB in text mode.

    Note: For grub 1: It must be a 640x480, 14-colour image in XPM format, optionally compressed
    with gzip or bzip2.
    Note: For grub 2: File must be one of .png, .tga, .jpg, or .jpeg. JPEG images must not be
    progressive. The image will be scaled if necessary to fit the screen.

    Type: null or path

    Example:

    ./my-background.png

    Declared by:

    [311]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[312]boot.loader.grub.splashMode

    Whether to stretch the image or show the image in the top-left corner unstretched.

    Note: This options has no effect for GRUB 1.

    Type: one of "normal", "stretch"

    Default: "stretch"

    Declared by:

    [313]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[314]boot.loader.grub.storePath

    Path to the Nix store when looking for kernels at boot. Only makes sense when copyKernels is
    false.

    Type: string

    Default: "/nix/store"

    Declared by:

    [315]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[316]boot.loader.grub.theme

    Grub theme to be used.

    Note: This options has no effect for GRUB 1.

    Type: null or path

    Default: null

    Example:

    pkgs.nixos-grub2-theme

    Declared by:

    [317]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[318]boot.loader.grub.trustedBoot.enable

    Enable trusted boot. GRUB will measure all critical components during the boot process to
    offer TCG (TPM) support.

    Type: boolean

    Default: false

    Declared by:

    [319]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[320]boot.loader.grub.trustedBoot.isHPLaptop

    Use a special version of TrustedGRUB that is needed by some HP laptops and works only for the
    HP laptops.

    Type: boolean

    Default: false

    Declared by:

    [321]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[322]boot.loader.grub.trustedBoot.systemHasTPM

    Assertion that the target system has an activated TPM. It is a safety check before allowing
    the activation of 'trustedBoot.enable'. TrustedBoot WILL FAIL TO BOOT YOUR SYSTEM if no TPM
    is available.

    Type: string

    Default: ""

    Example: "YES_TPM_is_activated"

    Declared by:

    [323]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[324]boot.loader.grub.useOSProber

    If set to true, append entries for other OSs detected by os-prober.

    Type: boolean

    Default: false

    Declared by:

    [325]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[326]boot.loader.grub.users

    User accounts for GRUB. When specified, the GRUB command line and all boot options except the
    default are password-protected. All passwords and hashes provided will be stored in /boot/
    grub/grub.cfg, and will be visible to any local user who can read this file. Additionally,
    any passwords and hashes provided directly in a Nix configuration (as opposed to external
    files) will be copied into the Nix store, and will be visible to all local users.

    Type: attribute set of submodules

    Default: { }

    Example: { root = { hashedPasswordFile = "/path/to/file"; } ; }

    Declared by:

    [327]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[328]boot.loader.grub.users.<name>.hashedPassword

    Specifies the password hash for the account, generated with grub-mkpasswd-pbkdf2. This hash
    will be copied to the Nix store, and will be visible to all local users.

    Type: null or string

    Default: null

    Example: "grub.pbkdf2.sha512.10000.674DFFDEF76E13EA...2CC972B102CF4355"

    Declared by:

    [329]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[330]boot.loader.grub.users.<name>.hashedPasswordFile

    Specifies the path to a file containing the password hash for the account, generated with
    grub-mkpasswd-pbkdf2. This hash will be stored in /boot/grub/grub.cfg, and will be visible to
    any local user who can read this file.

    Type: null or string

    Default: null

    Example: "/path/to/file"

    Declared by:

    [331]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[332]boot.loader.grub.users.<name>.password

    Specifies the clear text password for the account. This password will be copied to the Nix
    store, and will be visible to all local users.

    Type: null or string

    Default: null

    Example: "Pa\$\$w0rd!"

    Declared by:

    [333]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[334]boot.loader.grub.users.<name>.passwordFile

    Specifies the path to a file containing the clear text password for the account. This
    password will be stored in /boot/grub/grub.cfg, and will be visible to any local user who can
    read this file.

    Type: null or string

    Default: null

    Example: "/path/to/file"

    Declared by:

    [335]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[336]boot.loader.grub.version

    The version of GRUB to use: 1 for GRUB Legacy (versions 0.9x), or 2 (the default) for GRUB 2.

    Type: signed integer

    Default: 2

    Example: 1

    Declared by:

    [337]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[338]boot.loader.grub.zfsSupport

    Whether GRUB should be built against libzfs. ZFS support is only available for GRUB v2. This
    option is ignored for GRUB v1.

    Type: boolean

    Default: false

    Declared by:

    [339]<nixpkgs/nixos/modules/system/boot/loader/grub/grub.nix>

[340]boot.loader.initScript.enable

    Some systems require a /sbin/init script which is started. Or having it makes starting NixOS
    easier. This applies to some kind of hosting services and user mode linux.

    Additionally this script will create /boot/init-other-configurations-contents.txt containing
    contents of remaining configurations. You can copy paste them into /sbin/init manually
    running a rescue system or such.

    Type: boolean

    Default: false

    Declared by:

    [341]<nixpkgs/nixos/modules/system/boot/loader/init-script/init-script.nix>

[342]boot.loader.raspberryPi.enable

    Whether to create files with the system generations in /boot. /boot/old will hold files from
    old generations.

    Type: boolean

    Default: false

    Declared by:

    [343]<nixpkgs/nixos/modules/system/boot/loader/raspberrypi/raspberrypi.nix>

[344]boot.loader.raspberryPi.firmwareConfig

    Extra options that will be appended to /boot/config.txt file. For possible values, see:
    https://www.raspberrypi.org/documentation/configuration/config-txt/

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [345]<nixpkgs/nixos/modules/system/boot/loader/raspberrypi/raspberrypi.nix>

[346]boot.loader.raspberryPi.uboot.enable

    Enable using uboot as bootmanager for the raspberry pi.

    Type: boolean

    Default: false

    Declared by:

    [347]<nixpkgs/nixos/modules/system/boot/loader/raspberrypi/raspberrypi.nix>

[348]boot.loader.raspberryPi.uboot.configurationLimit

    Maximum number of configurations in the boot menu.

    Type: signed integer

    Default: 20

    Example: 10

    Declared by:

    [349]<nixpkgs/nixos/modules/system/boot/loader/raspberrypi/raspberrypi.nix>

[350]boot.loader.raspberryPi.version

    Type: one of 0, 1, 2, 3, 4

    Default: 2

    Declared by:

    [351]<nixpkgs/nixos/modules/system/boot/loader/raspberrypi/raspberrypi.nix>

[352]boot.loader.systemd-boot.enable

    Whether to enable the systemd-boot (formerly gummiboot) EFI boot manager

    Type: boolean

    Default: false

    Declared by:

    [353]<nixpkgs/nixos/modules/system/boot/loader/systemd-boot/systemd-boot.nix>

[354]boot.loader.systemd-boot.configurationLimit

    Maximum number of latest generations in the boot menu. Useful to prevent boot partition
    running out of disk space.

    null means no limit i.e. all generations that were not garbage collected yet.

    Type: null or signed integer

    Default: null

    Example: 120

    Declared by:

    [355]<nixpkgs/nixos/modules/system/boot/loader/systemd-boot/systemd-boot.nix>

[356]boot.loader.systemd-boot.consoleMode

    The resolution of the console. The following values are valid:

      □ "0": Standard UEFI 80x25 mode

      □ "1": 80x50 mode, not supported by all devices

      □ "2": The first non-standard mode provided by the device firmware, if any

      □ "auto": Pick a suitable mode automatically using heuristics

      □ "max": Pick the highest-numbered available mode

      □ "keep": Keep the mode selected by firmware (the default)

    Type: one of "0", "1", "2", "auto", "max", "keep"

    Default: "keep"

    Declared by:

    [357]<nixpkgs/nixos/modules/system/boot/loader/systemd-boot/systemd-boot.nix>

[358]boot.loader.systemd-boot.editor

    Whether to allow editing the kernel command-line before boot. It is recommended to set this
    to false, as it allows gaining root access by passing init=/bin/sh as a kernel parameter.
    However, it is enabled by default for backwards compatibility.

    Type: boolean

    Default: true

    Declared by:

    [359]<nixpkgs/nixos/modules/system/boot/loader/systemd-boot/systemd-boot.nix>

[360]boot.loader.systemd-boot.memtest86.enable

    Make MemTest86 available from the systemd-boot menu. MemTest86 is a program for testing
    memory. MemTest86 is an unfree program, so this requires allowUnfree to be set to true.

    Type: boolean

    Default: false

    Declared by:

    [361]<nixpkgs/nixos/modules/system/boot/loader/systemd-boot/systemd-boot.nix>

[362]boot.loader.timeout

    Timeout (in seconds) until loader boots the default menu item. Use null if the loader menu
    should be displayed indefinitely.

    Type: null or signed integer

    Default: 5

    Declared by:

    [363]<nixpkgs/nixos/modules/system/boot/loader/loader.nix>

[364]boot.plymouth.enable

    Whether to enable Plymouth boot splash screen.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [365]<nixpkgs/nixos/modules/system/boot/plymouth.nix>

[366]boot.plymouth.extraConfig

    Literal string to append to configFile and the config file generated by the plymouth module.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [367]<nixpkgs/nixos/modules/system/boot/plymouth.nix>

[368]boot.plymouth.font

    Font file made available for displaying text on the splash screen.

    Type: path

    Default: "\${pkgs.dejavu_fonts.minimal}/share/fonts/truetype/DejaVuSans.ttf"

    Declared by:

    [369]<nixpkgs/nixos/modules/system/boot/plymouth.nix>

[370]boot.plymouth.logo

    Logo which is displayed on the splash screen.

    Type: path

    Default:

    ''
    pkgs.fetchurl {
              url = "https://nixos.org/logo/nixos-hires.png";
              sha256 = "1ivzgd7iz0i06y36p8m5w48fd8pjqwxhdaavc0pxs7w1g7mcy5si";
            }''

    Declared by:

    [371]<nixpkgs/nixos/modules/system/boot/plymouth.nix>

[372]boot.plymouth.theme

    Splash screen theme.

    Type: string

    Default: "bgrt"

    Declared by:

    [373]<nixpkgs/nixos/modules/system/boot/plymouth.nix>

[374]boot.plymouth.themePackages

    Extra theme packages for plymouth.

    Type: list of packages

    Default: [ ]

    Declared by:

    [375]<nixpkgs/nixos/modules/system/boot/plymouth.nix>

[376]boot.postBootCommands

    Shell commands to be executed just before systemd is started.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "rm -f /var/log/messages"

    Declared by:

    [377]<nixpkgs/nixos/modules/system/boot/stage-2.nix>

[378]boot.resumeDevice

    Device for manual resume attempt during boot. This should be used primarily if you want to
    resume from file. If left empty, the swap partitions are used. Specify here the device where
    the file resides. You should also use boot.kernelParams to specify resume_offset.

    Type: string

    Default: ""

    Example: "/dev/sda3"

    Declared by:

    [379]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[380]boot.runSize

    Size limit for the /run tmpfs. Look at mount(8), tmpfs size option, for the accepted syntax.

    Type: string

    Default: "25%"

    Example: "256m"

    Declared by:

    [381]<nixpkgs/nixos/modules/system/boot/stage-2.nix>

[382]boot.specialFileSystems.<name>.device

    Location of the device.

    Type: null or string (with check: non-empty)

    Default: null

    Example: "/dev/sda"

    Declared by:

    [383]<nixpkgs/nixos/modules/tasks/filesystems.nix>

[384]boot.specialFileSystems.<name>.fsType

    Type of the file system.

    Type: string (with check: non-empty)

    Default: "auto"

    Example: "ext3"

    Declared by:

    [385]<nixpkgs/nixos/modules/tasks/filesystems.nix>

[386]boot.specialFileSystems.<name>.mountPoint

    Location of the mounted the file system.

    Type: string (with check: non-empty without trailing slash)

    Example: "/mnt/usb"

    Declared by:

    [387]<nixpkgs/nixos/modules/tasks/filesystems.nix>

[388]boot.specialFileSystems.<name>.options

    Options used to mount the file system.

    Type: list of string (with check: non-empty)s

    Default: [ "defaults" ]

    Example: [ "data=journal" ]

    Declared by:

    [389]<nixpkgs/nixos/modules/tasks/filesystems.nix>

[390]boot.supportedFilesystems

    Names of supported filesystem types.

    Type: list of strings

    Default: [ ]

    Example: [ "btrfs" ]

    Declared by:

    [391]<nixpkgs/nixos/modules/tasks/filesystems.nix>

[392]boot.systemdExecutable

    The program to execute to start systemd. Typically systemd, which will find systemd in the
    PATH.

    Type: string

    Default: "systemd"

    Declared by:

    [393]<nixpkgs/nixos/modules/system/boot/stage-2.nix>

[394]boot.tmpOnTmpfs

    Whether to mount a tmpfs on /tmp during boot.

    Type: boolean

    Default: false

    Declared by:

    [395]<nixpkgs/nixos/modules/system/boot/tmp.nix>

[396]boot.vesa

    (Deprecated) This option, if set, activates the VESA 800x600 video mode on boot and disables
    kernel modesetting. It is equivalent to specifying [ "vga=0x317" "nomodeset" ] in the
    boot.kernelParams option. This option is deprecated as of 2020: Xorg now works better with
    modesetting, and you might want a different VESA vga setting, anyway.

    Type: boolean

    Default: false

    Declared by:

    [397]<nixpkgs/nixos/modules/system/boot/kernel.nix>

[398]boot.zfs.enableUnstable

    Use the unstable zfs package. This might be an option, if the latest kernel is not yet
    supported by a published release of ZFS. Enabling this option will install a development
    version of ZFS on Linux. The version will have already passed an extensive test suite, but it
    is more likely to hit an undiscovered bug compared to running a released version of ZFS on
    Linux.

    Type: boolean

    Default: false

    Declared by:

    [399]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[400]boot.zfs.enabled

    True if ZFS filesystem support is enabled

    Type: boolean (read only)

    Default: false

    Declared by:

    [401]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[402]boot.zfs.package

    Configured ZFS userland tools package.

    Type: package (read only)

    Default: "if config.boot.zfs.enableUnstable then pkgs.zfsUnstable else pkgs.zfs"

    Declared by:

    [403]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[404]boot.zfs.devNodes

    Name of directory from which to import ZFS devices.

    This should be a path under /dev containing stable names for all devices needed, as import
    may fail if device nodes are renamed concurrently with a device failing.

    Type: path

    Default: "/dev/disk/by-id"

    Example: "/dev/disk/by-id"

    Declared by:

    [405]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[406]boot.zfs.extraPools

    Name or GUID of extra ZFS pools that you wish to import during boot.

    Usually this is not necessary. Instead, you should set the mountpoint property of ZFS
    filesystems to legacy and add the ZFS filesystems to NixOS's fileSystems option, which makes
    NixOS automatically import the associated pool.

    However, in some cases (e.g. if you have many filesystems) it may be preferable to
    exclusively use ZFS commands to manage filesystems. If so, since NixOS/systemd will not be
    managing those filesystems, you will need to specify the ZFS pool here so that NixOS
    automatically imports it on every boot.

    Type: list of strings

    Default: [ ]

    Example: [ "tank" "data" ]

    Declared by:

    [407]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[408]boot.zfs.forceImportAll

    Forcibly import all ZFS pool(s).

    If you set this option to false and NixOS subsequently fails to import your non-root ZFS pool
    (s), you should manually import each pool with "zpool import -f <pool-name>", and then
    reboot. You should only need to do this once.

    Type: boolean

    Default: false

    Declared by:

    [409]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[410]boot.zfs.forceImportRoot

    Forcibly import the ZFS root pool(s) during early boot.

    This is enabled by default for backwards compatibility purposes, but it is highly recommended
    to disable this option, as it bypasses some of the safeguards ZFS uses to protect your ZFS
    pools.

    If you set this option to false and NixOS subsequently fails to boot because it cannot import
    the root pool, you should boot with the zfs_force=1 option as a kernel parameter (e.g. by
    manually editing the kernel params in grub during boot). You should only need to do this
    once.

    Type: boolean

    Default: true

    Declared by:

    [411]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[412]boot.zfs.requestEncryptionCredentials

    If true on import encryption keys or passwords for all encrypted datasets are requested. To
    only decrypt selected datasets supply a list of dataset names instead. For root pools the
    encryption key can be supplied via both an interactive prompt (keylocation=prompt) and from a
    file (keylocation=file://).

    Type: boolean or list of strings

    Default: true

    Example: [ "tank" "data" ]

    Declared by:

    [413]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[414]console.packages

    List of additional packages that provide console fonts, keymaps and other resources for
    virtual consoles use.

    Type: list of packages

    Default: [ ]

    Declared by:

    [415]<nixpkgs/nixos/modules/config/console.nix>

[416]console.colors

    The 16 colors palette used by the virtual consoles. Leave empty to use the default colors.
    Colors must be in hexadecimal format and listed in order from color 0 to color 15.

    Type: list of strings

    Default: [ ]

    Example: [ "002b36" "dc322f" "859900" "b58900" "268bd2" "d33682" "2aa198" "eee8d5" "002b36"
    "cb4b16" "586e75" "657b83" "839496" "6c71c4" "93a1a1" "fdf6e3" ]

    Declared by:

    [417]<nixpkgs/nixos/modules/config/console.nix>

[418]console.earlySetup

    Enable setting virtual console options as early as possible (in initrd).

    Type: boolean

    Default: false

    Declared by:

    [419]<nixpkgs/nixos/modules/config/console.nix>

[420]console.font

    The font used for the virtual consoles. Leave empty to use whatever the setfont program
    considers the default font.

    Type: string

    Default: "Lat2-Terminus16"

    Example: "LatArCyrHeb-16"

    Declared by:

    [421]<nixpkgs/nixos/modules/config/console.nix>

[422]console.keyMap

    The keyboard mapping table for the virtual consoles.

    Type: string or path

    Default: "us"

    Example: "fr"

    Declared by:

    [423]<nixpkgs/nixos/modules/config/console.nix>

[424]console.useXkbConfig

    If set, configure the virtual console keymap from the xserver keyboard settings.

    Type: boolean

    Default: false

    Declared by:

    [425]<nixpkgs/nixos/modules/config/console.nix>

[426]containers

    A set of NixOS system configurations to be run as lightweight containers. Each container
    appears as a service container-name on the host system, allowing it to be started and stopped
    via systemctl.

    Type: attribute set of submodules

    Default: { }

    Example:

    { webserver =
        { path = "/nix/var/nix/profiles/webserver";
        };
      database =
        { config =
            { config, pkgs, ... }:
            { services.postgresql.enable = true;
              services.postgresql.package = pkgs.postgresql_9_6;

              system.stateVersion = "17.03";
            };
        };
    }

    Declared by:

    [427]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[428]containers.<name>.enableTun

    Allows the container to create and setup tunnel interfaces by granting the NET_ADMIN
    capability and enabling access to /dev/net/tun.

    Type: boolean

    Default: false

    Declared by:

    [429]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[430]containers.<name>.additionalCapabilities

    Grant additional capabilities to the container. See the capabilities(7) and systemd-nspawn(1)
    man pages for more information.

    Type: list of strings

    Default: [ ]

    Example: [ "CAP_NET_ADMIN" "CAP_MKNOD" ]

    Declared by:

    [431]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[432]containers.<name>.allowedDevices

    A list of device nodes to which the containers has access to.

    Type: list of submodules

    Default: [ ]

    Example: [ { modifier = "rw"; node = "/dev/net/tun"; } ]

    Declared by:

    [433]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[434]containers.<name>.allowedDevices.*.modifier

    Device node access modifier. Takes a combination r (read), w (write), and m (mknod). See the
    systemd.resource-control(5) man page for more information.

    Type: string

    Example: "rw"

    Declared by:

    [435]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[436]containers.<name>.allowedDevices.*.node

    Path to device node

    Type: string

    Example: "/dev/net/tun"

    Declared by:

    [437]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[438]containers.<name>.autoStart

    Whether the container is automatically started at boot-time.

    Type: boolean

    Default: false

    Declared by:

    [439]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[440]containers.<name>.bindMounts

    An extra list of directories that is bound to the container.

    Type: attribute set of submodules

    Default: { }

    Example:

    { "/home" = { hostPath = "/home/alice";
                  isReadOnly = false; };
    }

    Declared by:

    [441]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[442]containers.<name>.bindMounts.<name>.hostPath

    Location of the host path to be mounted.

    Type: null or string

    Default: null

    Example: "/home/alice"

    Declared by:

    [443]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[444]containers.<name>.bindMounts.<name>.isReadOnly

    Determine whether the mounted path will be accessed in read-only mode.

    Type: boolean

    Default: true

    Declared by:

    [445]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[446]containers.<name>.bindMounts.<name>.mountPoint

    Mount point on the container file system.

    Type: string

    Example: "/mnt/usb"

    Declared by:

    [447]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[448]containers.<name>.config

    A specification of the desired configuration of this container, as a NixOS module.

    Type: Toplevel NixOS config

    Declared by:

    [449]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[450]containers.<name>.ephemeral

    Runs container in ephemeral mode with the empty root filesystem at boot. This way container
    will be bootstrapped from scratch on each boot and will be cleaned up on shutdown leaving no
    traces behind. Useful for completely stateless, reproducible containers.

    Note that this option might require to do some adjustments to the container configuration,
    e.g. you might want to set systemd.network.networks.$interface.dhcpV4Config.ClientIdentifier
    to "mac" if you use macvlans option. This way dhcp client identifier will be stable between
    the container restarts.

    Note that the container journal will not be linked to the host if this option is enabled.

    Type: boolean

    Default: false

    Declared by:

    [451]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[452]containers.<name>.extraFlags

    Extra flags passed to the systemd-nspawn command. See systemd-nspawn(1) for details.

    Type: list of strings

    Default: [ ]

    Example: [ "--drop-capability=CAP_SYS_CHROOT" ]

    Declared by:

    [453]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[454]containers.<name>.extraVeths

    Extra veth-pairs to be created for the container.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [455]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[456]containers.<name>.extraVeths.<name>.forwardPorts

    List of forwarded ports from host to container. Each forwarded port is specified by protocol,
    hostPort and containerPort. By default, protocol is tcp and hostPort and containerPort are
    assumed to be the same if containerPort is not explicitly given.

    Type: list of submodules

    Default: [ ]

    Example: [ { containerPort = 80; hostPort = 8080; protocol = "tcp"; } ]

    Declared by:

    [457]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[458]containers.<name>.extraVeths.<name>.forwardPorts.*.containerPort

    Target port of container

    Type: null or signed integer

    Default: null

    Declared by:

    [459]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[460]containers.<name>.extraVeths.<name>.forwardPorts.*.hostPort

    Source port of the external interface on host

    Type: signed integer

    Declared by:

    [461]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[462]containers.<name>.extraVeths.<name>.forwardPorts.*.protocol

    The protocol specifier for port forwarding between host and container

    Type: string

    Default: "tcp"

    Declared by:

    [463]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[464]containers.<name>.extraVeths.<name>.hostAddress

    The IPv4 address assigned to the host interface. (Not used when hostBridge is set.)

    Type: null or string

    Default: null

    Example: "10.231.136.1"

    Declared by:

    [465]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[466]containers.<name>.extraVeths.<name>.hostAddress6

    The IPv6 address assigned to the host interface. (Not used when hostBridge is set.)

    Type: null or string

    Default: null

    Example: "fc00::1"

    Declared by:

    [467]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[468]containers.<name>.extraVeths.<name>.hostBridge

    Put the host-side of the veth-pair into the named bridge. Only one of hostAddress* or
    hostBridge can be given.

    Type: null or string

    Default: null

    Example: "br0"

    Declared by:

    [469]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[470]containers.<name>.extraVeths.<name>.localAddress

    The IPv4 address assigned to the interface in the container. If a hostBridge is used, this
    should be given with netmask to access the whole network. Otherwise the default netmask is /
    32 and routing is set up from localAddress to hostAddress and back.

    Type: null or string

    Default: null

    Example: "10.231.136.2"

    Declared by:

    [471]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[472]containers.<name>.extraVeths.<name>.localAddress6

    The IPv6 address assigned to the interface in the container. If a hostBridge is used, this
    should be given with netmask to access the whole network. Otherwise the default netmask is /
    128 and routing is set up from localAddress6 to hostAddress6 and back.

    Type: null or string

    Default: null

    Example: "fc00::2"

    Declared by:

    [473]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[474]containers.<name>.forwardPorts

    List of forwarded ports from host to container. Each forwarded port is specified by protocol,
    hostPort and containerPort. By default, protocol is tcp and hostPort and containerPort are
    assumed to be the same if containerPort is not explicitly given.

    Type: list of submodules

    Default: [ ]

    Example: [ { containerPort = 80; hostPort = 8080; protocol = "tcp"; } ]

    Declared by:

    [475]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[476]containers.<name>.forwardPorts.*.containerPort

    Target port of container

    Type: null or signed integer

    Default: null

    Declared by:

    [477]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[478]containers.<name>.forwardPorts.*.hostPort

    Source port of the external interface on host

    Type: signed integer

    Declared by:

    [479]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[480]containers.<name>.forwardPorts.*.protocol

    The protocol specifier for port forwarding between host and container

    Type: string

    Default: "tcp"

    Declared by:

    [481]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[482]containers.<name>.hostAddress

    The IPv4 address assigned to the host interface. (Not used when hostBridge is set.)

    Type: null or string

    Default: null

    Example: "10.231.136.1"

    Declared by:

    [483]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[484]containers.<name>.hostAddress6

    The IPv6 address assigned to the host interface. (Not used when hostBridge is set.)

    Type: null or string

    Default: null

    Example: "fc00::1"

    Declared by:

    [485]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[486]containers.<name>.hostBridge

    Put the host-side of the veth-pair into the named bridge. Only one of hostAddress* or
    hostBridge can be given.

    Type: null or string

    Default: null

    Example: "br0"

    Declared by:

    [487]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[488]containers.<name>.interfaces

    The list of interfaces to be moved into the container.

    Type: list of strings

    Default: [ ]

    Example: [ "eth1" "eth2" ]

    Declared by:

    [489]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[490]containers.<name>.localAddress

    The IPv4 address assigned to the interface in the container. If a hostBridge is used, this
    should be given with netmask to access the whole network. Otherwise the default netmask is /
    32 and routing is set up from localAddress to hostAddress and back.

    Type: null or string

    Default: null

    Example: "10.231.136.2"

    Declared by:

    [491]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[492]containers.<name>.localAddress6

    The IPv6 address assigned to the interface in the container. If a hostBridge is used, this
    should be given with netmask to access the whole network. Otherwise the default netmask is /
    128 and routing is set up from localAddress6 to hostAddress6 and back.

    Type: null or string

    Default: null

    Example: "fc00::2"

    Declared by:

    [493]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[494]containers.<name>.macvlans

    The list of host interfaces from which macvlans will be created. For each interface
    specified, a macvlan interface will be created and moved to the container.

    Type: list of strings

    Default: [ ]

    Example: [ "eth1" "eth2" ]

    Declared by:

    [495]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[496]containers.<name>.nixpkgs

    A path to the nixpkgs that provide the modules, pkgs and lib for evaluating the container.

    To only change the pkgs argument used inside the container modules, set the nixpkgs.* options
    in the container config. Setting config.nixpkgs.pkgs = pkgs speeds up the container
    evaluation by reusing the system pkgs, but the nixpkgs.config option in the container config
    is ignored in this case.

    Type: path

    Default: "pkgs.path"

    Declared by:

    [497]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[498]containers.<name>.path

    As an alternative to specifying config, you can specify the path to the evaluated NixOS
    system configuration, typically a symlink to a system profile.

    Type: path

    Example: "/nix/var/nix/profiles/per-container/webserver"

    Declared by:

    [499]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[500]containers.<name>.privateNetwork

    Whether to give the container its own private virtual Ethernet interface. The interface is
    called eth0, and is hooked up to the interface ve-container-name on the host. If this option
    is not set, then the container shares the network interfaces of the host, and can bind to any
    port on any interface.

    Type: boolean

    Default: false

    Declared by:

    [501]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[502]containers.<name>.timeoutStartSec

    Time for the container to start. In case of a timeout, the container processes get killed.
    See systemd.time(7) for more information about the format.

    Type: string

    Default: "1min"

    Declared by:

    [503]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[504]containers.<name>.tmpfs

    Mounts a set of tmpfs file systems into the container. Multiple paths can be specified. Valid
    items must conform to the --tmpfs argument of systemd-nspawn. See systemd-nspawn(1) for
    details.

    Type: list of strings

    Default: [ ]

    Example: [ "/var" ]

    Declared by:

    [505]<nixpkgs/nixos/modules/virtualisation/nixos-containers.nix>

[506]documentation.enable

    Whether to install documentation of packages from environment.systemPackages into the
    generated system path.

    See "Multiple-output packages" chapter in the nixpkgs manual for more info.

    Type: boolean

    Default: true

    Declared by:

    [507]<nixpkgs/nixos/modules/misc/documentation.nix>

[508]documentation.dev.enable

    Whether to install documentation targeted at developers.

      □ This includes man pages targeted at developers if man.enable is set (this also includes
        "devman" outputs).

      □ This includes info pages targeted at developers if info.enable is set (this also includes
        "devinfo" outputs).

      □ This includes other pages targeted at developers if doc.enable is set (this also includes
        "devdoc" outputs).

    Type: boolean

    Default: false

    Declared by:

    [509]<nixpkgs/nixos/modules/misc/documentation.nix>

[510]documentation.doc.enable

    Whether to install documentation distributed in packages' /share/doc. Usually plain text and/
    or HTML. This also includes "doc" outputs.

    Type: boolean

    Default: true

    Declared by:

    [511]<nixpkgs/nixos/modules/misc/documentation.nix>

[512]documentation.info.enable

    Whether to install info pages and the info command. This also includes "info" outputs.

    Type: boolean

    Default: true

    Declared by:

    [513]<nixpkgs/nixos/modules/misc/documentation.nix>

[514]documentation.man.enable

    Whether to install manual pages and the man command. This also includes "man" outputs.

    Type: boolean

    Default: true

    Declared by:

    [515]<nixpkgs/nixos/modules/misc/documentation.nix>

[516]documentation.man.generateCaches

    Whether to generate the manual page index caches using mandb(8). This allows searching for a
    page or keyword using utilities like apropos(1).

    Type: boolean

    Default: false

    Declared by:

    [517]<nixpkgs/nixos/modules/misc/documentation.nix>

[518]documentation.nixos.enable

    Whether to install NixOS's own documentation.

      □ This includes man pages like configuration.nix(5) if man.enable is set.

      □ This includes the HTML manual and the nixos-help command if doc.enable is set.

    Type: boolean

    Default: true

    Declared by:

    [519]<nixpkgs/nixos/modules/misc/documentation.nix>

[520]documentation.nixos.extraModuleSources

    Which extra NixOS module paths the generated NixOS's documentation should strip from options.

    Type: list of path or strings

    Default: [ ]

    Example:

    # e.g. with options from modules in ${pkgs.customModules}/nix:
    [ pkgs.customModules ]

    Declared by:

    [521]<nixpkgs/nixos/modules/misc/documentation.nix>

[522]documentation.nixos.includeAllModules

    Whether the generated NixOS's documentation should include documentation for all the options
    from all the NixOS modules included in the current configuration.nix. Disabling this will
    make the manual generator to ignore options defined outside of baseModules.

    Type: boolean

    Default: false

    Declared by:

    [523]<nixpkgs/nixos/modules/misc/documentation.nix>

[524]dysnomia.enable

    Whether to enable Dysnomia

    Type: boolean

    Default: false

    Declared by:

    [525]<nixpkgs/nixos/modules/services/misc/dysnomia.nix>

[526]dysnomia.enableAuthentication

    Whether to publish privacy-sensitive authentication credentials

    Type: boolean

    Default: false

    Declared by:

    [527]<nixpkgs/nixos/modules/services/misc/dysnomia.nix>

[528]dysnomia.enableLegacyModules

    Whether to enable Dysnomia legacy process and wrapper modules

    Type: boolean

    Default: true

    Declared by:

    [529]<nixpkgs/nixos/modules/services/misc/dysnomia.nix>

[530]dysnomia.package

    The Dysnomia package

    Type: path

    Declared by:

    [531]<nixpkgs/nixos/modules/services/misc/dysnomia.nix>

[532]dysnomia.components

    An atttribute set in which each key represents a container and each value an attribute set in
    which each key represents a component and each value a derivation constructing its initial
    state

    Type: unspecified

    Default: { }

    Declared by:

    [533]<nixpkgs/nixos/modules/services/misc/dysnomia.nix>

[534]dysnomia.containers

    An attribute set in which each key represents a container and each value an attribute set
    providing its configuration properties

    Type: unspecified

    Default: { }

    Declared by:

    [535]<nixpkgs/nixos/modules/services/misc/dysnomia.nix>

[536]dysnomia.extraContainerPaths

    A list of paths containing additional container configurations that are added to the search
    folders

    Type: unspecified

    Default: [ ]

    Declared by:

    [537]<nixpkgs/nixos/modules/services/misc/dysnomia.nix>

[538]dysnomia.extraContainerProperties

    An attribute set providing additional container settings in addition to the default
    properties

    Type: unspecified

    Default: { }

    Declared by:

    [539]<nixpkgs/nixos/modules/services/misc/dysnomia.nix>

[540]dysnomia.extraModulePaths

    A list of paths containing additional modules that are added to the search folders

    Type: unspecified

    Default: [ ]

    Declared by:

    [541]<nixpkgs/nixos/modules/services/misc/dysnomia.nix>

[542]dysnomia.properties

    An attribute set in which each attribute represents a machine property. Optionally, these
    values can be shell substitutions.

    Type: unspecified

    Default: { }

    Declared by:

    [543]<nixpkgs/nixos/modules/services/misc/dysnomia.nix>

[544]environment.enableDebugInfo

    Some NixOS packages provide debug symbols. However, these are not included in the system
    closure by default to save disk space. Enabling this option causes the debug symbols to
    appear in /run/current-system/sw/lib/debug/.build-id, where tools such as gdb can find them.
    If you need debug symbols for a package that doesn't provide them by default, you can enable
    them as follows:

    nixpkgs.config.packageOverrides = pkgs: {
      hello = pkgs.hello.overrideAttrs (oldAttrs: {
        separateDebugInfo = true;
      });
    };

    Type: boolean

    Default: false

    Declared by:

    [545]<nixpkgs/nixos/modules/config/debug-info.nix>

[546]environment.checkConfigurationOptions

    Alias of _module.check.

    Type: boolean

    Declared by:

    [547]<nixpkgs/nixos/modules/rename.nix>

[548]environment.cinnamon.excludePackages

    Which packages cinnamon should exclude from the default environment

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.cinnamon.blueberry ]

    Declared by:

    [549]<nixpkgs/nixos/modules/services/x11/desktop-managers/cinnamon.nix>

[550]environment.defaultPackages

    Set of default packages that aren't strictly neccessary for a running system, entries can be
    removed for a more minimal NixOS installation.

    Note: If pkgs.nano is removed from this list, make sure another editor is installed and the
    EDITOR environment variable is set to it. Environment variables can be set using
    environment.variables.

    Like with systemPackages, packages are installed to /run/current-system/sw. They are
    automatically available to all users, and are automatically updated every time you rebuild
    the system configuration.

    Type: list of packages

    Default: [ (build of nano-5.7) (build of perl-5.32.1) (build of rsync-3.2.3) (build of
    strace-5.12) ]

    Example:

    []

    Declared by:

    [551]<nixpkgs/nixos/modules/config/system-path.nix>

[552]environment.etc

    Set of files that have to be linked in /etc.

    Type: attribute set of submodules

    Default: { }

    Example:

    { example-configuration-file =
        { source = "/nix/store/.../etc/dir/file.conf.example";
          mode = "0440";
        };
      "default/useradd".text = "GROUP=100 ...";
    }

    Declared by:

    [553]<nixpkgs/nixos/modules/system/etc/etc.nix>

[554]environment.etc.<name>.enable

    Whether this /etc file should be generated. This option allows specific /etc files to be
    disabled.

    Type: boolean

    Default: true

    Declared by:

    [555]<nixpkgs/nixos/modules/system/etc/etc.nix>

[556]environment.etc.<name>.gid

    GID of created file. Only takes effect when the file is copied (that is, the mode is not
    'symlink').

    Type: signed integer

    Default: 0

    Declared by:

    [557]<nixpkgs/nixos/modules/system/etc/etc.nix>

[558]environment.etc.<name>.group

    Group name of created file. Only takes effect when the file is copied (that is, the mode is
    not 'symlink'). Changing this option takes precedence over gid.

    Type: string

    Default: "+0"

    Declared by:

    [559]<nixpkgs/nixos/modules/system/etc/etc.nix>

[560]environment.etc.<name>.mode

    If set to something else than symlink, the file is copied instead of symlinked, with the
    given file mode.

    Type: string

    Default: "symlink"

    Example: "0600"

    Declared by:

    [561]<nixpkgs/nixos/modules/system/etc/etc.nix>

[562]environment.etc.<name>.source

    Path of the source file.

    Type: path

    Declared by:

    [563]<nixpkgs/nixos/modules/system/etc/etc.nix>

[564]environment.etc.<name>.target

    Name of symlink (relative to /etc). Defaults to the attribute name.

    Type: string

    Declared by:

    [565]<nixpkgs/nixos/modules/system/etc/etc.nix>

[566]environment.etc.<name>.text

    Text of the file.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [567]<nixpkgs/nixos/modules/system/etc/etc.nix>

[568]environment.etc.<name>.uid

    UID of created file. Only takes effect when the file is copied (that is, the mode is not
    'symlink').

    Type: signed integer

    Default: 0

    Declared by:

    [569]<nixpkgs/nixos/modules/system/etc/etc.nix>

[570]environment.etc.<name>.user

    User name of created file. Only takes effect when the file is copied (that is, the mode is
    not 'symlink'). Changing this option takes precedence over uid.

    Type: string

    Default: "+0"

    Declared by:

    [571]<nixpkgs/nixos/modules/system/etc/etc.nix>

[572]environment.extraInit

    Shell script code called during global environment initialisation after all variables and
    profileVariables have been set. This code is assumed to be shell-independent, which means you
    should stick to pure sh without sh word split.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [573]<nixpkgs/nixos/modules/config/shells-environment.nix>

[574]environment.extraOutputsToInstall

    List of additional package outputs to be symlinked into /run/current-system/sw.

    Type: list of strings

    Default: [ ]

    Example: [ "doc" "info" "devdoc" ]

    Declared by:

    [575]<nixpkgs/nixos/modules/config/system-path.nix>

[576]environment.extraSetup

    Shell fragments to be run after the system environment has been created. This should only be
    used for things that need to modify the internals of the environment, e.g. generating MIME
    caches. The environment being built can be accessed at $out.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [577]<nixpkgs/nixos/modules/config/system-path.nix>

[578]environment.freetds

    Configure freetds database entries. Each attribute denotes a section within freetds.conf, and
    the value (a string) is the config content for that section. When at least one entry is
    configured the global environment variables FREETDSCONF, FREETDS and SYBASE will be
    configured to allow the programs that use freetds to find the library and config.

    Type: attribute set of strings

    Default: { }

    Example:

    { MYDATABASE = ''
        host = 10.0.2.100
        port = 1433
        tds version = 7.2
      '';
    }

    Declared by:

    [579]<nixpkgs/nixos/modules/programs/freetds.nix>

[580]environment.gnome.excludePackages

    Which packages gnome should exclude from the default environment

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.gnome.totem ]

    Declared by:

    [581]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[582]environment.homeBinInPath

    Include ~/bin/ in $PATH.

    Type: boolean

    Default: false

    Declared by:

    [583]<nixpkgs/nixos/modules/config/shells-environment.nix>

[584]environment.interactiveShellInit

    Shell script code called during interactive shell initialisation. This code is assumed to be
    shell-independent, which means you should stick to pure sh without sh word split.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [585]<nixpkgs/nixos/modules/config/shells-environment.nix>

[586]environment.loginShellInit

    Shell script code called during login shell initialisation. This code is assumed to be
    shell-independent, which means you should stick to pure sh without sh word split.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [587]<nixpkgs/nixos/modules/config/shells-environment.nix>

[588]environment.lxqt.excludePackages

    Which LXQt packages to exclude from the default environment

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.lxqt.qterminal ]

    Declared by:

    [589]<nixpkgs/nixos/modules/services/x11/desktop-managers/lxqt.nix>

[590]environment.mate.excludePackages

    Which MATE packages to exclude from the default environment

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.mate.mate-terminal pkgs.mate.pluma ]

    Declared by:

    [591]<nixpkgs/nixos/modules/services/x11/desktop-managers/mate.nix>

[592]environment.memoryAllocator.provider

    The system-wide memory allocator.

    Briefly, the system-wide memory allocator providers are:

      □ libc: the standard allocator provided by libc

      □ graphene-hardened: An allocator designed to mitigate memory corruption attacks, such as
        those caused by use-after-free bugs.

      □ jemalloc: A general purpose allocator that emphasizes fragmentation avoidance and
        scalable concurrency support.

      □ scudo: A user-mode allocator based on LLVM Sanitizer’s CombinedAllocator, which aims at
        providing additional mitigations against heap based vulnerabilities, while maintaining
        good performance.

    Warning: Selecting an alternative allocator (i.e., anything other than libc) may result in
    instability, data loss, and/or service failure.

    Type: one of "libc", "graphene-hardened", "jemalloc", "scudo"

    Default: "libc"

    Declared by:

    [593]<nixpkgs/nixos/modules/config/malloc.nix>

[594]environment.noXlibs

    Switch off the options in the default configuration that require X11 libraries. This includes
    client-side font configuration and SSH forwarding of X11 authentication in. Thus, you
    probably do not want to enable this option if you want to run X11 programs on this machine
    via SSH.

    Type: boolean

    Default: false

    Declared by:

    [595]<nixpkgs/nixos/modules/config/no-x-libs.nix>

[596]environment.pantheon.excludePackages

    Which packages pantheon should exclude from the default environment

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.pantheon.elementary-camera ]

    Declared by:

    [597]<nixpkgs/nixos/modules/services/x11/desktop-managers/pantheon.nix>

[598]environment.pathsToLink

    List of directories to be symlinked in /run/current-system/sw.

    Type: list of strings

    Default: [ ]

    Example: [ "/" ]

    Declared by:

    [599]<nixpkgs/nixos/modules/config/system-path.nix>

[600]environment.profileRelativeEnvVars

    Attribute set of environment variable. Each attribute maps to a list of relative paths. Each
    relative path is appended to the each profile of environment.profiles to form the content of
    the corresponding environment variable.

    Type: attribute set of list of stringss

    Example: { MANPATH = [ "/man" "/share/man" ] ; PATH = [ "/bin" ] ; }

    Declared by:

    [601]<nixpkgs/nixos/modules/config/shells-environment.nix>

[602]environment.profileRelativeSessionVariables

    Attribute set of environment variable used in the global environment. These variables will be
    set by PAM early in the login process.

    Variable substitution is available as described in pam_env.conf(5).

    Each attribute maps to a list of relative paths. Each relative path is appended to the each
    profile of environment.profiles to form the content of the corresponding environment
    variable.

    Also, these variables are merged into [603]environment.profileRelativeEnvVars and it is
    therefore not possible to use PAM style variables such as @{HOME}.

    Type: attribute set of list of stringss

    Example: { MANPATH = [ "/man" "/share/man" ] ; PATH = [ "/bin" ] ; }

    Declared by:

    [604]<nixpkgs/nixos/modules/config/system-environment.nix>

[605]environment.profiles

    A list of profiles used to setup the global environment.

    Type: list of strings

    Default: [ ]

    Declared by:

    [606]<nixpkgs/nixos/modules/config/shells-environment.nix>

[607]environment.sessionVariables

    A set of environment variables used in the global environment. These variables will be set by
    PAM early in the login process.

    The value of each session variable can be either a string or a list of strings. The latter is
    concatenated, interspersed with colon characters.

    Note, due to limitations in the PAM format values may not contain the " character.

    Also, these variables are merged into [608]environment.variables and it is therefore not
    possible to use PAM style variables such as @{HOME}.

    Type: attribute set of string or list of stringss

    Default: { }

    Declared by:

    [609]<nixpkgs/nixos/modules/config/system-environment.nix>

[610]environment.shellAliases

    An attribute set that maps aliases (the top level attribute names in this option) to command
    strings or directly to build outputs. The aliases are added to all users' shells. Aliases
    mapped to null are ignored.

    Type: attribute set of null or string or paths

    Example: { l = null; ll = "ls -l"; }

    Declared by:

    [611]<nixpkgs/nixos/modules/config/shells-environment.nix>

[612]environment.shellInit

    Shell script code called during shell initialisation. This code is assumed to be
    shell-independent, which means you should stick to pure sh without sh word split.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [613]<nixpkgs/nixos/modules/config/shells-environment.nix>

[614]environment.shells

    A list of permissible login shells for user accounts. No need to mention /bin/sh here, it is
    placed into this list implicitly.

    Type: list of package or paths

    Default: [ ]

    Example:

    [ pkgs.bashInteractive pkgs.zsh ]

    Declared by:

    [615]<nixpkgs/nixos/modules/config/shells-environment.nix>

[616]environment.systemPackages

    The set of packages that appear in /run/current-system/sw. These packages are automatically
    available to all users, and are automatically updated every time you rebuild the system
    configuration. (The latter is the main difference with installing them in the default
    profile, /nix/var/nix/profiles/default.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.firefox pkgs.thunderbird ]

    Declared by:

    [617]<nixpkgs/nixos/modules/config/system-path.nix>

[618]environment.unixODBCDrivers

    Specifies Unix ODBC drivers to be registered in /etc/odbcinst.ini. You may also want to add
    pkgs.unixODBC to the system path to get a command line client to connect to ODBC databases.

    Type: list of packages

    Default: [ ]

    Example:

    with pkgs.unixODBCDrivers; [ sqlite psql ]

    Declared by:

    [619]<nixpkgs/nixos/modules/config/unix-odbc-drivers.nix>

[620]environment.variables

    A set of environment variables used in the global environment. These variables will be set on
    shell initialisation (e.g. in /etc/profile). The value of each variable can be either a
    string or a list of strings. The latter is concatenated, interspersed with colon characters.

    Type: attribute set of string or list of stringss

    Default: { }

    Example: { EDITOR = "nvim"; VISUAL = "nvim"; }

    Declared by:

    [621]<nixpkgs/nixos/modules/config/shells-environment.nix>

[622]fileSystems

    The file systems to be mounted. It must include an entry for the root directory (mountPoint =
    "/"). Each entry in the list is an attribute set with the following fields: mountPoint,
    device, fsType (a file system type recognised by mount; defaults to "auto"), and options (the
    mount options passed to mount using the -o flag; defaults to [ "defaults" ]).

    Instead of specifying device, you can also specify a volume label (label) for file systems
    that support it, such as ext2/ext3 (see mke2fs -L).

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "/".device = "/dev/hda1";
      "/data" = {
        device = "/dev/hda2";
        fsType = "ext3";
        options = [ "data=journal" ];
      };
      "/bigdisk".label = "bigdisk";
    }

    Declared by:

    [623]<nixpkgs/nixos/modules/tasks/filesystems.nix>
    [624]<nixpkgs/nixos/modules/tasks/encrypted-devices.nix>
    [625]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[626]fileSystems.<name>.autoFormat

    If the device does not currently contain a filesystem (as determined by blkid, then
    automatically format it with the filesystem type specified in fsType. Use with caution.

    Type: boolean

    Default: false

    Declared by:

    [627]<nixpkgs/nixos/modules/tasks/filesystems.nix>

[628]fileSystems.<name>.autoResize

    If set, the filesystem is grown to its maximum size before being mounted. (This is typically
    the size of the containing partition.) This is currently only supported for ext2/3/4
    filesystems that are mounted during early boot.

    Type: boolean

    Default: false

    Declared by:

    [629]<nixpkgs/nixos/modules/tasks/filesystems.nix>

[630]fileSystems.<name>.device

    Location of the device.

    Type: null or string (with check: non-empty)

    Default: null

    Example: "/dev/sda"

    Declared by:

    [631]<nixpkgs/nixos/modules/tasks/filesystems.nix>

[632]fileSystems.<name>.encrypted.enable

    The block device is backed by an encrypted one, adds this device as a initrd luks entry.

    Type: boolean

    Default: false

    Declared by:

    [633]<nixpkgs/nixos/modules/tasks/encrypted-devices.nix>

[634]fileSystems.<name>.encrypted.blkDev

    Location of the backing encrypted device.

    Type: null or string

    Default: null

    Example: "/dev/sda1"

    Declared by:

    [635]<nixpkgs/nixos/modules/tasks/encrypted-devices.nix>

[636]fileSystems.<name>.encrypted.keyFile

    Path to a keyfile used to unlock the backing encrypted device. At the time this keyfile is
    accessed, the neededForBoot filesystems (see fileSystems.<name?>.neededForBoot) will have
    been mounted under /mnt-root, so the keyfile path should usually start with "/mnt-root/".

    Type: null or string

    Default: null

    Example: "/mnt-root/root/.swapkey"

    Declared by:

    [637]<nixpkgs/nixos/modules/tasks/encrypted-devices.nix>

[638]fileSystems.<name>.encrypted.label

    Label of the unlocked encrypted device. Set fileSystems.<name?>.device to /dev/mapper/<label>
    to mount the unlocked device.

    Type: null or string

    Default: null

    Example: "rootfs"

    Declared by:

    [639]<nixpkgs/nixos/modules/tasks/encrypted-devices.nix>

[640]fileSystems.<name>.formatOptions

    If autoFormat option is set specifies extra options passed to mkfs.

    Type: string

    Default: ""

    Declared by:

    [641]<nixpkgs/nixos/modules/tasks/filesystems.nix>

[642]fileSystems.<name>.fsType

    Type of the file system.

    Type: string (with check: non-empty)

    Default: "auto"

    Example: "ext3"

    Declared by:

    [643]<nixpkgs/nixos/modules/tasks/filesystems.nix>

[644]fileSystems.<name>.label

    Label of the device (if any).

    Type: null or string (with check: non-empty)

    Default: null

    Example: "root-partition"

    Declared by:

    [645]<nixpkgs/nixos/modules/tasks/filesystems.nix>

[646]fileSystems.<name>.mountPoint

    Location of the mounted the file system.

    Type: string (with check: non-empty without trailing slash)

    Example: "/mnt/usb"

    Declared by:

    [647]<nixpkgs/nixos/modules/tasks/filesystems.nix>

[648]fileSystems.<name>.neededForBoot

    If set, this file system will be mounted in the initial ramdisk. Note that the file system
    will always be mounted in the initial ramdisk if its mount point is one of the following: /,
    /nix, /nix/store, /var, /var/log, /var/lib, /etc.

    Type: boolean

    Default: false

    Declared by:

    [649]<nixpkgs/nixos/modules/system/boot/stage-1.nix>

[650]fileSystems.<name>.noCheck

    Disable running fsck on this filesystem.

    Type: boolean

    Default: false

    Declared by:

    [651]<nixpkgs/nixos/modules/tasks/filesystems.nix>

[652]fileSystems.<name>.options

    Options used to mount the file system.

    Type: list of string (with check: non-empty)s

    Default: [ "defaults" ]

    Example: [ "data=journal" ]

    Declared by:

    [653]<nixpkgs/nixos/modules/tasks/filesystems.nix>

[654]fonts.enableDefaultFonts

    Enable a basic set of fonts providing several font styles and families and reasonable
    coverage of Unicode.

    Type: boolean

    Default: false

    Declared by:

    [655]<nixpkgs/nixos/modules/config/fonts/fonts.nix>

[656]fonts.enableGhostscriptFonts

    Whether to add the fonts provided by Ghostscript (such as various URW fonts and the “Base-14”
    Postscript fonts) to the list of system fonts, making them available to X11 applications.

    Type: boolean

    Default: false

    Declared by:

    [657]<nixpkgs/nixos/modules/config/fonts/ghostscript.nix>

[658]fonts.fontDir.enable

    Whether to create a directory with links to all fonts in /run/current-system/sw/share/X11/
    fonts.

    Type: boolean

    Default: false

    Declared by:

    [659]<nixpkgs/nixos/modules/config/fonts/fontdir.nix>

[660]fonts.fontDir.decompressFonts

    Whether to decompress fonts in /run/current-system/sw/share/X11/fonts.

    Type: boolean

    Default: false

    Declared by:

    [661]<nixpkgs/nixos/modules/config/fonts/fontdir.nix>

[662]fonts.fontconfig.enable

    If enabled, a Fontconfig configuration file will be built pointing to a set of default fonts.
    If you don't care about running X11 applications or any other program that uses Fontconfig,
    you can turn this option off and prevent a dependency on all those fonts.

    Type: boolean

    Default: true

    Declared by:

    [663]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[664]fonts.fontconfig.allowBitmaps

    Allow bitmap fonts. Set to false to ban all bitmap fonts.

    Type: boolean

    Default: true

    Declared by:

    [665]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[666]fonts.fontconfig.allowType1

    Allow Type-1 fonts. Default is false because of poor rendering.

    Type: boolean

    Default: false

    Declared by:

    [667]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[668]fonts.fontconfig.antialias

    Enable font antialiasing. At high resolution (> 200 DPI), antialiasing has no visible effect;
    users of such displays may want to disable this option.

    Type: boolean

    Default: true

    Declared by:

    [669]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[670]fonts.fontconfig.cache32Bit

    Generate system fonts cache for 32-bit applications.

    Type: boolean

    Default: false

    Declared by:

    [671]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[672]fonts.fontconfig.defaultFonts.emoji

    System-wide default emoji font(s). Multiple fonts may be listed in case a font does not
    support all emoji.

    Note that fontconfig matches color emoji fonts preferentially, so if you want to use a black
    and white font while having a color font installed (eg. Noto Color Emoji installed alongside
    Noto Emoji), fontconfig will still choose the color font even when it is later in the list.

    Type: list of strings

    Default: [ "Noto Color Emoji" ]

    Declared by:

    [673]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[674]fonts.fontconfig.defaultFonts.monospace

    System-wide default monospace font(s). Multiple fonts may be listed in case multiple
    languages must be supported.

    Type: list of strings

    Default: [ "DejaVu Sans Mono" ]

    Declared by:

    [675]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[676]fonts.fontconfig.defaultFonts.sansSerif

    System-wide default sans serif font(s). Multiple fonts may be listed in case multiple
    languages must be supported.

    Type: list of strings

    Default: [ "DejaVu Sans" ]

    Declared by:

    [677]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[678]fonts.fontconfig.defaultFonts.serif

    System-wide default serif font(s). Multiple fonts may be listed in case multiple languages
    must be supported.

    Type: list of strings

    Default: [ "DejaVu Serif" ]

    Declared by:

    [679]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[680]fonts.fontconfig.dpi

    Force DPI setting. Setting to 0 disables DPI forcing; the DPI detected for the display will
    be used.

    Type: signed integer

    Default: 0

    Declared by:

    [681]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[682]fonts.fontconfig.hinting.enable

    Enable font hinting. Hinting aligns glyphs to pixel boundaries to improve rendering sharpness
    at low resolution. At high resolution (> 200 dpi) hinting will do nothing (at best); users of
    such displays may want to disable this option.

    Type: boolean

    Default: true

    Declared by:

    [683]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[684]fonts.fontconfig.hinting.autohint

    Enable the autohinter in place of the default interpreter. The results are usually lower
    quality than correctly-hinted fonts, but better than unhinted fonts.

    Type: boolean

    Default: false

    Declared by:

    [685]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[686]fonts.fontconfig.includeUserConf

    Include the user configuration from ~/.config/fontconfig/fonts.conf or ~/.config/fontconfig/
    conf.d.

    Type: boolean

    Default: true

    Declared by:

    [687]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[688]fonts.fontconfig.localConf

    System-wide customization file contents, has higher priority than defaultFonts settings.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [689]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[690]fonts.fontconfig.subpixel.lcdfilter

    FreeType LCD filter. At high resolution (> 200 DPI), LCD filtering has no visible effect;
    users of such displays may want to select none.

    Type: one of "none", "default", "light", "legacy"

    Default: "default"

    Declared by:

    [691]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[692]fonts.fontconfig.subpixel.rgba

    Subpixel order. The overwhelming majority of displays are rgb in their normal orientation.
    Select vrgb for mounting such a display 90 degrees clockwise from its normal orientation or
    vbgr for mounting 90 degrees counter-clockwise. Select bgr in the unlikely event of mounting
    180 degrees from the normal orientation. Reverse these directions in the improbable event
    that the display's native subpixel order is bgr.

    Type: one of "rgb", "bgr", "vrgb", "vbgr", "none"

    Default: "rgb"

    Declared by:

    [693]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[694]fonts.fontconfig.useEmbeddedBitmaps

    Use embedded bitmaps in fonts like Calibri.

    Type: boolean

    Default: false

    Declared by:

    [695]<nixpkgs/nixos/modules/config/fonts/fontconfig.nix>

[696]fonts.fonts

    List of primary font paths.

    Type: list of paths

    Default: [ ]

    Example:

    [ pkgs.dejavu_fonts ]

    Declared by:

    [697]<nixpkgs/nixos/modules/config/fonts/fonts.nix>

[698]gnu

    When enabled, GNU software is chosen by default whenever a there is a choice between GNU and
    non-GNU software (e.g., GNU lsh vs. OpenSSH).

    Type: boolean

    Default: false

    Declared by:

    [699]<nixpkgs/nixos/modules/config/gnu.nix>

[700]gtk.iconCache.enable

    Whether to build icon theme caches for GTK applications.

    Type: boolean

    Default: false

    Declared by:

    [701]<nixpkgs/nixos/modules/config/gtk/gtk-icon-cache.nix>

[702]hardware.enableAllFirmware

    Turn on this option if you want to enable all the firmware.

    Type: boolean

    Default: false

    Declared by:

    [703]<nixpkgs/nixos/modules/hardware/all-firmware.nix>

[704]hardware.enableRedistributableFirmware

    Turn on this option if you want to enable all the firmware with a license allowing
    redistribution. (i.e. free firmware and firmware-linux-nonfree)

    Type: boolean

    Default: false

    Declared by:

    [705]<nixpkgs/nixos/modules/hardware/all-firmware.nix>

[706]hardware.acpilight.enable

    Enable acpilight. This will allow brightness control via xbacklight from users in the video
    group

    Type: boolean

    Default: false

    Declared by:

    [707]<nixpkgs/nixos/modules/hardware/acpilight.nix>

[708]hardware.bladeRF.enable

    Enables udev rules for BladeRF devices. By default grants access to users in the "bladerf"
    group. You may want to install the libbladeRF package.

    Type: boolean

    Default: false

    Declared by:

    [709]<nixpkgs/nixos/modules/hardware/bladeRF.nix>

[710]hardware.bluetooth.enable

    Whether to enable support for Bluetooth.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [711]<nixpkgs/nixos/modules/services/hardware/bluetooth.nix>

[712]hardware.bluetooth.package

    Which BlueZ package to use.

    Note: Use the pkgs.bluezFull package to enable all bluez plugins.

    Type: package

    Default: "pkgs.bluez"

    Example: "pkgs.bluezFull"

    Declared by:

    [713]<nixpkgs/nixos/modules/services/hardware/bluetooth.nix>

[714]hardware.bluetooth.disabledPlugins

    Built-in plugins to disable

    Type: list of strings

    Default: [ ]

    Declared by:

    [715]<nixpkgs/nixos/modules/services/hardware/bluetooth.nix>

[716]hardware.bluetooth.hsphfpd.enable

    Whether to enable support for hsphfpd[-prototype] implementation.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [717]<nixpkgs/nixos/modules/services/hardware/bluetooth.nix>

[718]hardware.bluetooth.powerOnBoot

    Whether to power up the default Bluetooth controller on boot.

    Type: boolean

    Default: true

    Declared by:

    [719]<nixpkgs/nixos/modules/services/hardware/bluetooth.nix>

[720]hardware.bluetooth.settings

    Set configuration for system-wide bluetooth (/etc/bluetooth/main.conf).

    Type: attribute set of attribute set of INI atom (null, bool, int, float or string)ss

    Default: { }

    Example: { General = { ControllerMode = "bredr"; } ; }

    Declared by:

    [721]<nixpkgs/nixos/modules/services/hardware/bluetooth.nix>

[722]hardware.brillo.enable

    Whether to enable Enable brillo in userspace. This will allow brightness control from users
    in the video group. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [723]<nixpkgs/nixos/modules/hardware/brillo.nix>

[724]hardware.bumblebee.enable

    Enable the bumblebee daemon to manage Optimus hybrid video cards. This should power off
    secondary GPU until its use is requested by running an application with optirun.

    Type: boolean

    Default: false

    Declared by:

    [725]<nixpkgs/nixos/modules/hardware/video/bumblebee.nix>

[726]hardware.bumblebee.connectDisplay

    Set to true if you intend to connect your discrete card to a monitor. This option will set up
    your Nvidia card for EDID discovery and to turn on the monitor signal.

    Only nvidia driver is supported so far.

    Type: boolean

    Default: false

    Declared by:

    [727]<nixpkgs/nixos/modules/hardware/video/bumblebee.nix>

[728]hardware.bumblebee.driver

    Set driver used by bumblebeed. Supported are nouveau and nvidia.

    Type: one of "nvidia", "nouveau"

    Default: "nvidia"

    Declared by:

    [729]<nixpkgs/nixos/modules/hardware/video/bumblebee.nix>

[730]hardware.bumblebee.group

    Group for bumblebee socket

    Type: string

    Default: "wheel"

    Example: "video"

    Declared by:

    [731]<nixpkgs/nixos/modules/hardware/video/bumblebee.nix>

[732]hardware.bumblebee.pmMethod

    Set preferred power management method for unused card.

    Type: one of "auto", "bbswitch", "switcheroo", "none"

    Default: "auto"

    Declared by:

    [733]<nixpkgs/nixos/modules/hardware/video/bumblebee.nix>

[734]hardware.ckb-next.enable

    Whether to enable the Corsair keyboard/mouse driver.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [735]<nixpkgs/nixos/modules/hardware/ckb-next.nix>

[736]hardware.ckb-next.package

    The package implementing the Corsair keyboard/mouse driver.

    Type: package

    Default: "pkgs.ckb-next"

    Declared by:

    [737]<nixpkgs/nixos/modules/hardware/ckb-next.nix>

[738]hardware.ckb-next.gid

    Limit access to the ckb daemon to a particular group.

    Type: null or signed integer

    Default: null

    Example: 100

    Declared by:

    [739]<nixpkgs/nixos/modules/hardware/ckb-next.nix>

[740]hardware.cpu.amd.updateMicrocode

    Update the CPU microcode for AMD processors.

    Type: boolean

    Default: false

    Declared by:

    [741]<nixpkgs/nixos/modules/hardware/cpu/amd-microcode.nix>

[742]hardware.cpu.intel.updateMicrocode

    Update the CPU microcode for Intel processors.

    Type: boolean

    Default: false

    Declared by:

    [743]<nixpkgs/nixos/modules/hardware/cpu/intel-microcode.nix>

[744]hardware.deviceTree.enable

    Build device tree files. These are used to describe the non-discoverable hardware of a
    system.

    Type: boolean

    Default: false

    Declared by:

    [745]<nixpkgs/nixos/modules/hardware/device-tree.nix>

[746]hardware.deviceTree.filter

    Only include .dtb files matching glob expression.

    Type: null or string

    Default: null

    Example: "*rpi*.dtb"

    Declared by:

    [747]<nixpkgs/nixos/modules/hardware/device-tree.nix>

[748]hardware.deviceTree.kernelPackage

    Kernel package containing the base device-tree (.dtb) to boot. Uses device trees bundled with
    the Linux kernel by default.

    Type: path

    Default: "config.boot.kernelPackages.kernel"

    Example:

    pkgs.linux_latest

    Declared by:

    [749]<nixpkgs/nixos/modules/hardware/device-tree.nix>

[750]hardware.deviceTree.name

    The name of an explicit dtb to be loaded, relative to the dtb base. Useful in extlinux
    scenarios if the bootloader doesn't pick the right .dtb file from FDTDIR.

    Type: null or string

    Default: null

    Example: "some-dtb.dtb"

    Declared by:

    [751]<nixpkgs/nixos/modules/hardware/device-tree.nix>

[752]hardware.deviceTree.overlays

    List of overlays to apply to base device-tree (.dtb) files.

    Type: list of submodule or path convertible to its

    Default: [ ]

    Example:

    [
      { name = "pps"; dtsFile = ./dts/pps.dts; }
      { name = "spi";
        dtsText = "...";
      }
      { name = "precompiled"; dtboFile = ./dtbos/example.dtbo; }
    ]

    Declared by:

    [753]<nixpkgs/nixos/modules/hardware/device-tree.nix>

[754]hardware.deviceTree.overlays.*.dtboFile

    Path to .dtbo compiled overlay file.

    Type: null or path

    Default: null

    Declared by:

    [755]<nixpkgs/nixos/modules/hardware/device-tree.nix>

[756]hardware.deviceTree.overlays.*.dtsFile

    Path to .dts overlay file, overlay is applied to each .dtb file matching "compatible" of the
    overlay.

    Type: null or path

    Default: null

    Example:

    ./dts/overlays.dts

    Declared by:

    [757]<nixpkgs/nixos/modules/hardware/device-tree.nix>

[758]hardware.deviceTree.overlays.*.dtsText

    Literal DTS contents, overlay is applied to each .dtb file matching "compatible" of the
    overlay.

    Type: null or string

    Default: null

    Example:

    /dts-v1/;
    /plugin/;
    / {
            compatible = "raspberrypi";
            fragment@0 {
                    target-path = "/soc";
                    __overlay__ {
                            pps {
                                    compatible = "pps-gpio";
                                    status = "okay";
                            };
                    };
            };
    };

    Declared by:

    [759]<nixpkgs/nixos/modules/hardware/device-tree.nix>

[760]hardware.deviceTree.overlays.*.name

    Name of this overlay

    Type: string

    Declared by:

    [761]<nixpkgs/nixos/modules/hardware/device-tree.nix>

[762]hardware.digitalbitbox.enable

    Enables udev rules for Digital Bitbox devices.

    Type: boolean

    Default: false

    Declared by:

    [763]<nixpkgs/nixos/modules/hardware/digitalbitbox.nix>

[764]hardware.digitalbitbox.package

    The Digital Bitbox package to use. This can be used to install a package with udev rules that
    differ from the defaults.

    Type: package

    Default: "pkgs.digitalbitbox"

    Declared by:

    [765]<nixpkgs/nixos/modules/hardware/digitalbitbox.nix>

[766]hardware.facetimehd.enable

    Whether to enable facetimehd kernel module.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [767]<nixpkgs/nixos/modules/hardware/video/webcam/facetimehd.nix>

[768]hardware.fancontrol.enable

    Whether to enable software fan control (requires fancontrol.config).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [769]<nixpkgs/nixos/modules/services/hardware/fancontrol.nix>

[770]hardware.fancontrol.config

    Required fancontrol configuration file content. See pwmconfig(8) from the lm_sensors package.

    Type: strings concatenated with "\n"

    Example:

    ''
    # Configuration file generated by pwmconfig
    INTERVAL=10
    DEVPATH=hwmon3=devices/virtual/thermal/thermal_zone2 hwmon4=devices/platform/f71882fg.656
    DEVNAME=hwmon3=soc_dts1 hwmon4=f71869a
    FCTEMPS=hwmon4/device/pwm1=hwmon3/temp1_input
    FCFANS=hwmon4/device/pwm1=hwmon4/device/fan1_input
    MINTEMP=hwmon4/device/pwm1=35
    MAXTEMP=hwmon4/device/pwm1=65
    MINSTART=hwmon4/device/pwm1=150
    MINSTOP=hwmon4/device/pwm1=0
    ''

    Declared by:

    [771]<nixpkgs/nixos/modules/services/hardware/fancontrol.nix>

[772]hardware.firmware

    List of packages containing firmware files. Such files will be loaded automatically if the
    kernel asks for them (i.e., when it has detected specific hardware that requires firmware to
    function). If multiple packages contain firmware files with the same name, the first package
    in the list takes precedence. Note that you must rebuild your system if you add files to any
    of these directories.

    Type: list of packages

    Default: [ ]

    Declared by:

    [773]<nixpkgs/nixos/modules/services/hardware/udev.nix>

[774]hardware.i2c.enable

    Whether to enable i2c devices support. By default access is granted to users in the "i2c"
    group (will be created if non-existent) and any user with a seat, meaning logged on the
    computer locally. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [775]<nixpkgs/nixos/modules/hardware/i2c.nix>

[776]hardware.i2c.group

    Grant access to i2c devices (/dev/i2c-*) to users in this group.

    Type: string

    Default: "i2c"

    Declared by:

    [777]<nixpkgs/nixos/modules/hardware/i2c.nix>

[778]hardware.keyboard.teck.enable

    Whether to enable non-root access to the firmware of TECK keyboards.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [779]<nixpkgs/nixos/modules/hardware/keyboard/teck.nix>

[780]hardware.keyboard.zsa.enable

    Enables udev rules for keyboards from ZSA like the ErgoDox EZ, Planck EZ and Moonlander Mark
    I. You need it when you want to flash a new configuration on the keyboard or use their live
    training in the browser. Access to the keyboard is granted to users in the "plugdev" group.
    You may want to install the wally-cli package.

    Type: boolean

    Default: false

    Declared by:

    [781]<nixpkgs/nixos/modules/hardware/keyboard/zsa.nix>

[782]hardware.ksm.enable

    Whether to enable Kernel Same-Page Merging.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [783]<nixpkgs/nixos/modules/hardware/ksm.nix>

[784]hardware.ksm.sleep

    How many milliseconds ksmd should sleep between scans. Setting it to null uses the kernel's
    default time.

    Type: null or signed integer

    Default: null

    Declared by:

    [785]<nixpkgs/nixos/modules/hardware/ksm.nix>

[786]hardware.ledger.enable

    Whether to enable udev rules for Ledger devices.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [787]<nixpkgs/nixos/modules/hardware/ledger.nix>

[788]hardware.logitech.lcd.enable

    Whether to enable Logitech LCD Devices.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [789]<nixpkgs/nixos/modules/hardware/logitech.nix>

[790]hardware.logitech.lcd.devices

    List of USB device ids supported by g15daemon.

    You most likely do not need to change this.

    Type: list of strings

    Default: [ "0a07" "c222" "c225" "c227" "c251" ]

    Declared by:

    [791]<nixpkgs/nixos/modules/hardware/logitech.nix>

[792]hardware.logitech.lcd.startWhenNeeded

    Only run the service when an actual supported device is plugged.

    Type: boolean

    Default: true

    Declared by:

    [793]<nixpkgs/nixos/modules/hardware/logitech.nix>

[794]hardware.logitech.wireless.enable

    Whether to enable Logitech Wireless Devices.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [795]<nixpkgs/nixos/modules/hardware/logitech.nix>

[796]hardware.logitech.wireless.enableGraphical

    Enable graphical support applications.

    Type: boolean

    Default: false

    Declared by:

    [797]<nixpkgs/nixos/modules/hardware/logitech.nix>

[798]hardware.mcelog.enable

    Enable the Machine Check Exception logger.

    Type: boolean

    Default: false

    Declared by:

    [799]<nixpkgs/nixos/modules/hardware/mcelog.nix>

[800]hardware.mwProCapture.enable

    Whether to enable Magewell Pro Capture family kernel module.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [801]<nixpkgs/nixos/modules/hardware/video/capture/mwprocapture.nix>

[802]hardware.nitrokey.enable

    Enables udev rules for Nitrokey devices. By default grants access to users in the "nitrokey"
    group. You may want to install the nitrokey-app package, depending on your device and needs.

    Type: boolean

    Default: false

    Declared by:

    [803]<nixpkgs/nixos/modules/hardware/nitrokey.nix>

[804]hardware.nvidia.package

    The NVIDIA X11 derivation to use.

    Type: package

    Default: "config.boot.kernelPackages.nvidiaPackages.stable"

    Example: "config.boot.kernelPackages.nvidiaPackages.legacy_340"

    Declared by:

    [805]<nixpkgs/nixos/modules/hardware/video/nvidia.nix>

[806]hardware.nvidia.modesetting.enable

    Enable kernel modesetting when using the NVIDIA proprietary driver.

    Enabling this fixes screen tearing when using Optimus via PRIME (see
    hardware.nvidia.prime.sync.enable. This is not enabled by default because it is not
    officially supported by NVIDIA and would not work with SLI.

    Type: boolean

    Default: false

    Declared by:

    [807]<nixpkgs/nixos/modules/hardware/video/nvidia.nix>

[808]hardware.nvidia.nvidiaPersistenced

    Update for NVIDA GPU headless mode, i.e. nvidia-persistenced. It ensures all GPUs stay awake
    even during headless mode.

    Type: boolean

    Default: false

    Declared by:

    [809]<nixpkgs/nixos/modules/hardware/video/nvidia.nix>

[810]hardware.nvidia.powerManagement.enable

    Experimental power management through systemd. For more information, see the NVIDIA docs, on
    Chapter 21. Configuring Power Management Support.

    Type: boolean

    Default: false

    Declared by:

    [811]<nixpkgs/nixos/modules/hardware/video/nvidia.nix>

[812]hardware.nvidia.powerManagement.finegrained

    Experimental power management of PRIME offload. For more information, see the NVIDIA docs,
    chapter 22. PCI-Express runtime power management.

    Type: boolean

    Default: false

    Declared by:

    [813]<nixpkgs/nixos/modules/hardware/video/nvidia.nix>

[814]hardware.nvidia.prime.amdgpuBusId

    Bus ID of the AMD APU. You can find it using lspci; for example if lspci shows the AMD APU at
    "04:00.0", set this option to "PCI:4:0:0".

    Type: string

    Default: ""

    Example: "PCI:4:0:0"

    Declared by:

    [815]<nixpkgs/nixos/modules/hardware/video/nvidia.nix>

[816]hardware.nvidia.prime.intelBusId

    Bus ID of the Intel GPU. You can find it using lspci; for example if lspci shows the Intel
    GPU at "00:02.0", set this option to "PCI:0:2:0".

    Type: string

    Default: ""

    Example: "PCI:0:2:0"

    Declared by:

    [817]<nixpkgs/nixos/modules/hardware/video/nvidia.nix>

[818]hardware.nvidia.prime.nvidiaBusId

    Bus ID of the NVIDIA GPU. You can find it using lspci; for example if lspci shows the NVIDIA
    GPU at "01:00.0", set this option to "PCI:1:0:0".

    Type: string

    Default: ""

    Example: "PCI:1:0:0"

    Declared by:

    [819]<nixpkgs/nixos/modules/hardware/video/nvidia.nix>

[820]hardware.nvidia.prime.offload.enable

    Enable render offload support using the NVIDIA proprietary driver via PRIME.

    If this is enabled, then the bus IDs of the NVIDIA and Intel GPUs have to be specified
    (hardware.nvidia.prime.nvidiaBusId and hardware.nvidia.prime.intelBusId).

    Type: boolean

    Default: false

    Declared by:

    [821]<nixpkgs/nixos/modules/hardware/video/nvidia.nix>

[822]hardware.nvidia.prime.sync.enable

    Enable NVIDIA Optimus support using the NVIDIA proprietary driver via PRIME. If enabled, the
    NVIDIA GPU will be always on and used for all rendering, while enabling output to displays
    attached only to the integrated Intel GPU without a multiplexer.

    Note that this option only has any effect if the "nvidia" driver is specified in
    services.xserver.videoDrivers, and it should preferably be the only driver there.

    If this is enabled, then the bus IDs of the NVIDIA and Intel GPUs have to be specified
    (hardware.nvidia.prime.nvidiaBusId and hardware.nvidia.prime.intelBusId).

    If you enable this, you may want to also enable kernel modesetting for the NVIDIA driver
    (hardware.nvidia.modesetting.enable) in order to prevent tearing.

    Note that this configuration will only be successful when a display manager for which the
    services.xserver.displayManager.setupCommands option is supported is used.

    Type: boolean

    Default: false

    Declared by:

    [823]<nixpkgs/nixos/modules/hardware/video/nvidia.nix>

[824]hardware.nvidia.prime.sync.allowExternalGpu

    Configure X to allow external NVIDIA GPUs when using optimus.

    Type: boolean

    Default: false

    Declared by:

    [825]<nixpkgs/nixos/modules/hardware/video/nvidia.nix>

[826]hardware.nvidiaOptimus.disable

    Completely disable the NVIDIA graphics card and use the integrated graphics processor
    instead.

    Type: boolean

    Default: false

    Declared by:

    [827]<nixpkgs/nixos/modules/services/hardware/nvidia-optimus.nix>

[828]hardware.onlykey.enable

    Enable OnlyKey device (https://crp.to/p/) support.

    Type: boolean

    Default: false

    Declared by:

    [829]<nixpkgs/nixos/modules/hardware/onlykey.nix>

[830]hardware.opengl.enable

    Whether to enable OpenGL drivers. This is needed to enable OpenGL support in X11 systems, as
    well as for Wayland compositors like sway and Weston. It is enabled by default by the
    corresponding modules, so you do not usually have to set it yourself, only if there is no
    module for your wayland compositor of choice. See services.xserver.enable and
    programs.sway.enable.

    Type: boolean

    Default: false

    Declared by:

    [831]<nixpkgs/nixos/modules/hardware/opengl.nix>

[832]hardware.opengl.driSupport

    Whether to enable accelerated OpenGL rendering through the Direct Rendering Interface (DRI).

    Type: boolean

    Default: true

    Declared by:

    [833]<nixpkgs/nixos/modules/hardware/opengl.nix>

[834]hardware.opengl.driSupport32Bit

    On 64-bit systems, whether to support Direct Rendering for 32-bit applications (such as
    Wine). This is currently only supported for the nvidia as well as Mesa.

    Type: boolean

    Default: false

    Declared by:

    [835]<nixpkgs/nixos/modules/hardware/opengl.nix>

[836]hardware.opengl.extraPackages

    Additional packages to add to OpenGL drivers. This can be used to add OpenCL drivers, VA-API/
    VDPAU drivers etc.

    Type: list of packages

    Default: [ ]

    Example:

    with pkgs; [ vaapiIntel libvdpau-va-gl vaapiVdpau intel-ocl ]

    Declared by:

    [837]<nixpkgs/nixos/modules/hardware/opengl.nix>

[838]hardware.opengl.extraPackages32

    Additional packages to add to 32-bit OpenGL drivers on 64-bit systems. Used when
    driSupport32Bit is set. This can be used to add OpenCL drivers, VA-API/VDPAU drivers etc.

    Type: list of packages

    Default: [ ]

    Example:

    with pkgs.pkgsi686Linux; [ vaapiIntel libvdpau-va-gl vaapiVdpau ]

    Declared by:

    [839]<nixpkgs/nixos/modules/hardware/opengl.nix>

[840]hardware.openrazer.enable

    Whether to enable OpenRazer drivers and userspace daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [841]<nixpkgs/nixos/modules/hardware/openrazer.nix>

[842]hardware.openrazer.devicesOffOnScreensaver

    Turn off the devices when the systems screensaver kicks in.

    Type: boolean

    Default: true

    Declared by:

    [843]<nixpkgs/nixos/modules/hardware/openrazer.nix>

[844]hardware.openrazer.keyStatistics

    Collects number of keypresses per hour per key used to generate a heatmap.

    Type: boolean

    Default: false

    Declared by:

    [845]<nixpkgs/nixos/modules/hardware/openrazer.nix>

[846]hardware.openrazer.mouseBatteryNotifier

    Mouse battery notifier.

    Type: boolean

    Default: true

    Declared by:

    [847]<nixpkgs/nixos/modules/hardware/openrazer.nix>

[848]hardware.openrazer.syncEffectsEnabled

    Set the sync effects flag to true so any assignment of effects will work across devices.

    Type: boolean

    Default: true

    Declared by:

    [849]<nixpkgs/nixos/modules/hardware/openrazer.nix>

[850]hardware.openrazer.verboseLogging

    Whether to enable verbose logging. Logs debug messages.

    Type: boolean

    Default: false

    Declared by:

    [851]<nixpkgs/nixos/modules/hardware/openrazer.nix>

[852]hardware.opentabletdriver.enable

    Enable OpenTabletDriver udev rules, user service and blacklist kernel modules known to
    conflict with OpenTabletDriver.

    Type: boolean

    Default: false

    Declared by:

    [853]<nixpkgs/nixos/modules/hardware/opentabletdriver.nix>

[854]hardware.opentabletdriver.package

    OpenTabletDriver derivation to use.

    Type: package

    Default: "pkgs.opentabletdriver"

    Declared by:

    [855]<nixpkgs/nixos/modules/hardware/opentabletdriver.nix>

[856]hardware.opentabletdriver.blacklistedKernelModules

    Blacklist of kernel modules known to conflict with OpenTabletDriver.

    Type: list of strings

    Default: [ "hid-uclogic" "wacom" ]

    Declared by:

    [857]<nixpkgs/nixos/modules/hardware/opentabletdriver.nix>

[858]hardware.opentabletdriver.daemon.enable

    Whether to start OpenTabletDriver daemon as a systemd user service.

    Type: boolean

    Default: true

    Declared by:

    [859]<nixpkgs/nixos/modules/hardware/opentabletdriver.nix>

[860]hardware.parallels.enable

    This enables Parallels Tools for Linux guests, along with provided video, mouse and other
    hardware drivers.

    Type: boolean

    Default: false

    Declared by:

    [861]<nixpkgs/nixos/modules/virtualisation/parallels-guest.nix>

[862]hardware.parallels.package

    Defines which package to use for prl-tools. Override to change the version.

    Type: null or package

    Default: "config.boot.kernelPackages.prl-tools"

    Example:

    config.boot.kernelPackages.prl-tools

    Declared by:

    [863]<nixpkgs/nixos/modules/virtualisation/parallels-guest.nix>

[864]hardware.parallels.autoMountShares

    Control prlfsmountd service. When this service is running, shares can not be manually mounted
    through `mount -t prl_fs ...` as this service will remount and trample any set options.
    Recommended to enable for simple file sharing, but extended share use such as for code should
    disable this to manually mount shares.

    Type: boolean

    Default: true

    Declared by:

    [865]<nixpkgs/nixos/modules/virtualisation/parallels-guest.nix>

[866]hardware.pcmcia.enable

    Enable this option to support PCMCIA card.

    Type: boolean

    Default: false

    Declared by:

    [867]<nixpkgs/nixos/modules/hardware/pcmcia.nix>

[868]hardware.pcmcia.config

    Path to the configuration file which maps the memory, IRQs and ports used by the PCMCIA
    hardware.

    Type: unspecified

    Default: null

    Declared by:

    [869]<nixpkgs/nixos/modules/hardware/pcmcia.nix>

[870]hardware.pcmcia.firmware

    List of firmware used to handle specific PCMCIA card.

    Type: list of paths

    Default: [ ]

    Declared by:

    [871]<nixpkgs/nixos/modules/hardware/pcmcia.nix>

[872]hardware.printers.ensureDefaultPrinter

    Ensures the named printer is the default CUPS printer / printer queue.

    Type: null or printable string without spaces, # and /

    Default: null

    Declared by:

    [873]<nixpkgs/nixos/modules/hardware/printers.nix>

[874]hardware.printers.ensurePrinters

    Will regularly ensure that the given CUPS printers are configured as declared here. If a
    printer's options are manually changed afterwards, they will be overwritten eventually. This
    option will never delete any printer, even if removed from this list. You can check existing
    printers with lpstat -s and remove printers with lpadmin -x <printer-name>. Printers not
    listed here can still be manually configured.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [875]<nixpkgs/nixos/modules/hardware/printers.nix>

[876]hardware.printers.ensurePrinters.*.description

    Optional human-readable description.

    Type: null or string

    Default: null

    Example: "Brother HL-5140"

    Declared by:

    [877]<nixpkgs/nixos/modules/hardware/printers.nix>

[878]hardware.printers.ensurePrinters.*.deviceUri

    How to reach the printer. lpinfo -v shows a list of supported device URIs and schemes.

    Type: string

    Example: [ "ipp://printserver.local/printers/BrotherHL_Workroom" "usb://HP/DESKJET%20940C?
    serial=CN16E6C364BH" ]

    Declared by:

    [879]<nixpkgs/nixos/modules/hardware/printers.nix>

[880]hardware.printers.ensurePrinters.*.location

    Optional human-readable location.

    Type: null or string

    Default: null

    Example: "Workroom"

    Declared by:

    [881]<nixpkgs/nixos/modules/hardware/printers.nix>

[882]hardware.printers.ensurePrinters.*.model

    Location of the ppd driver file for the printer. lpinfo -m shows a list of supported models.

    Type: string

    Example:

    gutenprint.${lib.versions.majorMinor (lib.getVersion pkgs.gutenprint)}://brother-hl-5140/expert

    Declared by:

    [883]<nixpkgs/nixos/modules/hardware/printers.nix>

[884]hardware.printers.ensurePrinters.*.name

    Name of the printer / printer queue. May contain any printable characters except "/", "#",
    and space.

    Type: printable string without spaces, # and /

    Example: "BrotherHL_Workroom"

    Declared by:

    [885]<nixpkgs/nixos/modules/hardware/printers.nix>

[886]hardware.printers.ensurePrinters.*.ppdOptions

    Sets PPD options for the printer. lpoptions [-p printername] -l shows suported PPD options
    for the given printer.

    Type: attribute set of strings

    Default: { }

    Example: { Duplex = "DuplexNoTumble"; PageSize = "A4"; }

    Declared by:

    [887]<nixpkgs/nixos/modules/hardware/printers.nix>

[888]hardware.pulseaudio.enable

    Whether to enable the PulseAudio sound server.

    Type: boolean

    Default: false

    Declared by:

    [889]<nixpkgs/nixos/modules/config/pulseaudio.nix>

[890]hardware.pulseaudio.package

    The PulseAudio derivation to use. This can be used to enable features (such as JACK support,
    Bluetooth) via the pulseaudioFull package.

    Type: package

    Default: "pkgs.pulseaudio"

    Example:

    pkgs.pulseaudioFull

    Declared by:

    [891]<nixpkgs/nixos/modules/config/pulseaudio.nix>

[892]hardware.pulseaudio.configFile

    The path to the default configuration options the PulseAudio server should use. By default,
    the "default.pa" configuration from the PulseAudio distribution is used.

    Type: null or path

    Declared by:

    [893]<nixpkgs/nixos/modules/config/pulseaudio.nix>

[894]hardware.pulseaudio.daemon.config

    Config of the pulse daemon. See man pulse-daemon.conf.

    Type: attribute set of unspecifieds

    Default: { }

    Example:

    { realtime-scheduling = "yes"; }

    Declared by:

    [895]<nixpkgs/nixos/modules/config/pulseaudio.nix>

[896]hardware.pulseaudio.daemon.logLevel

    The log level that the system-wide pulseaudio daemon should use, if activated.

    Type: string

    Default: "notice"

    Declared by:

    [897]<nixpkgs/nixos/modules/config/pulseaudio.nix>

[898]hardware.pulseaudio.extraClientConf

    Extra configuration appended to pulse/client.conf file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [899]<nixpkgs/nixos/modules/config/pulseaudio.nix>

[900]hardware.pulseaudio.extraConfig

    Literal string to append to configFile and the config file generated by the pulseaudio
    module.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [901]<nixpkgs/nixos/modules/config/pulseaudio.nix>

[902]hardware.pulseaudio.extraModules

    Extra pulseaudio modules to use. This is intended for out-of-tree pulseaudio modules like
    extra bluetooth codecs.

    Extra modules take precedence over built-in pulseaudio modules.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.pulseaudio-modules-bt ]

    Declared by:

    [903]<nixpkgs/nixos/modules/config/pulseaudio.nix>

[904]hardware.pulseaudio.support32Bit

    Whether to include the 32-bit pulseaudio libraries in the system or not. This is only useful
    on 64-bit systems and currently limited to x86_64-linux.

    Type: boolean

    Default: false

    Declared by:

    [905]<nixpkgs/nixos/modules/config/pulseaudio.nix>

[906]hardware.pulseaudio.systemWide

    If false, a PulseAudio server is launched automatically for each user that tries to use the
    sound system. The server runs with user privileges. If true, one system-wide PulseAudio
    server is launched on boot, running as the user "pulse", and only users in the "audio" group
    will have access to the server. Please read the PulseAudio documentation for more details.

    Don't enable this option unless you know what you are doing.

    Type: boolean

    Default: false

    Declared by:

    [907]<nixpkgs/nixos/modules/config/pulseaudio.nix>

[908]hardware.pulseaudio.tcp.enable

    Whether to enable tcp streaming support.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [909]<nixpkgs/nixos/modules/config/pulseaudio.nix>

[910]hardware.pulseaudio.tcp.anonymousClients.allowAll

    Whether to enable all anonymous clients to stream to the server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [911]<nixpkgs/nixos/modules/config/pulseaudio.nix>

[912]hardware.pulseaudio.tcp.anonymousClients.allowedIpRanges

    A list of IP subnets that are allowed to stream to the server.

    Type: list of strings

    Default: [ ]

    Example:

    [ "127.0.0.1" "192.168.1.0/24" ]

    Declared by:

    [913]<nixpkgs/nixos/modules/config/pulseaudio.nix>

[914]hardware.pulseaudio.zeroconf.discovery.enable

    Whether to enable discovery of pulseaudio sinks in the local network.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [915]<nixpkgs/nixos/modules/config/pulseaudio.nix>

[916]hardware.pulseaudio.zeroconf.publish.enable

    Whether to enable publishing the pulseaudio sink in the local network.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [917]<nixpkgs/nixos/modules/config/pulseaudio.nix>

[918]hardware.raid.HPSmartArray.enable

    Whether to enable HP Smart Array kernel modules and CLI utility.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [919]<nixpkgs/nixos/modules/hardware/raid/hpsa.nix>

[920]hardware.rtl-sdr.enable

    Whether to enable Enables rtl-sdr udev rules, ensures 'plugdev' group exists, and blacklists
    DVB kernel modules. This is a prerequisite to using devices supported by rtl-sdr without
    being root, since rtl-sdr USB descriptors will be owned by plugdev through udev. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [921]<nixpkgs/nixos/modules/hardware/rtl-sdr.nix>

[922]hardware.sane.enable

    Enable support for SANE scanners.

    Note: Users in the "scanner" group will gain access to the scanner, or the "lp" group if it's
    also a printer.

    Type: boolean

    Default: false

    Declared by:

    [923]<nixpkgs/nixos/modules/services/hardware/sane.nix>

[924]hardware.sane.brscan4.enable

    When enabled, will automatically register the "brscan4" sane backend and bring configuration
    files to their expected location.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [925]<nixpkgs/nixos/modules/services/hardware/sane_extra_backends/brscan4.nix>

[926]hardware.sane.brscan4.netDevices

    The list of network devices that will be registered against the brscan4 sane backend.

    Type: attribute set of submodules

    Default: { }

    Example: { office1 = { ip = "192.168.1.2"; model = "MFC-7860DW"; } ; office2 = { model =
    "MFC-7860DW"; nodename = "BRW0080927AFBCE"; } ; }

    Declared by:

    [927]<nixpkgs/nixos/modules/services/hardware/sane_extra_backends/brscan4.nix>

[928]hardware.sane.brscan4.netDevices.<name>.ip

    The ip address of the device. If undefined, you will have to provide a nodename.

    Type: null or string

    Default: null

    Example:

    192.168.1.2

    Declared by:

    [929]<nixpkgs/nixos/modules/services/hardware/sane_extra_backends/brscan4.nix>

[930]hardware.sane.brscan4.netDevices.<name>.model

    The model of the network device.

    Type: string

    Example:

    MFC-7860DW

    Declared by:

    [931]<nixpkgs/nixos/modules/services/hardware/sane_extra_backends/brscan4.nix>

[932]hardware.sane.brscan4.netDevices.<name>.name

    The friendly name you give to the network device. If undefined, the name of attribute will be
    used.

    Type: string

    Example:

    office1

    Declared by:

    [933]<nixpkgs/nixos/modules/services/hardware/sane_extra_backends/brscan4.nix>

[934]hardware.sane.brscan4.netDevices.<name>.nodename

    The node name of the device. If undefined, you will have to provide an ip.

    Type: null or string

    Default: null

    Example:

    BRW0080927AFBCE

    Declared by:

    [935]<nixpkgs/nixos/modules/services/hardware/sane_extra_backends/brscan4.nix>

[936]hardware.sane.disabledDefaultBackends

    Names of backends which are enabled by default but should be disabled. See $SANE_CONFIG_DIR/
    dll.conf for the list of possible names.

    Type: list of strings

    Default: [ ]

    Example: [ "v4l" ]

    Declared by:

    [937]<nixpkgs/nixos/modules/services/hardware/sane.nix>

[938]hardware.sane.dsseries.enable

    When enabled, will automatically register the "dsseries" SANE backend.

    This supports the Brother DSmobile scanner series, including the DS-620, DS-720D, DS-820W,
    and DS-920DW scanners.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [939]<nixpkgs/nixos/modules/services/hardware/sane_extra_backends/dsseries.nix>

[940]hardware.sane.extraBackends

    Packages providing extra SANE backends to enable.

    Note: The example contains the package for HP scanners.

    Type: list of paths

    Default: [ ]

    Example:

    [ pkgs.hplipWithPlugin ]

    Declared by:

    [941]<nixpkgs/nixos/modules/services/hardware/sane.nix>

[942]hardware.sane.netConf

    Network hosts that should be probed for remote scanners.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "192.168.0.16"

    Declared by:

    [943]<nixpkgs/nixos/modules/services/hardware/sane.nix>

[944]hardware.sane.snapshot

    Use a development snapshot of SANE scanner drivers.

    Type: boolean

    Default: false

    Declared by:

    [945]<nixpkgs/nixos/modules/services/hardware/sane.nix>

[946]hardware.sata.timeout.enable

    Whether to enable SATA drive timeouts.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [947]<nixpkgs/nixos/modules/hardware/sata.nix>

[948]hardware.sata.timeout.deciSeconds

    Set SCT Error Recovery Control timeout in deciseconds for use in RAID configurations.

    Values are as follows: 0 = disable SCT ERT 70 = default in consumer drives (7 seconds)

    Maximum is disk dependant but probably 60 seconds.

    Type: signed integer

    Example: "70"

    Declared by:

    [949]<nixpkgs/nixos/modules/hardware/sata.nix>

[950]hardware.sata.timeout.drives

    List of drives for which to configure the timeout.

    Type: list of submodules

    Declared by:

    [951]<nixpkgs/nixos/modules/hardware/sata.nix>

[952]hardware.sata.timeout.drives.*.idBy

    The method to identify the drive.

    Type: one of "path", "wwn"

    Default: "path"

    Declared by:

    [953]<nixpkgs/nixos/modules/hardware/sata.nix>

[954]hardware.sata.timeout.drives.*.name

    Drive name without the full path.

    Type: string

    Declared by:

    [955]<nixpkgs/nixos/modules/hardware/sata.nix>

[956]hardware.sensor.hddtemp.enable

    Enable this option to support HDD/SSD temperature sensors.

    Type: boolean

    Default: false

    Declared by:

    [957]<nixpkgs/nixos/modules/hardware/sensor/hddtemp.nix>

[958]hardware.sensor.hddtemp.dbEntries

    Additional DB entries

    Type: list of strings

    Default: [ ]

    Declared by:

    [959]<nixpkgs/nixos/modules/hardware/sensor/hddtemp.nix>

[960]hardware.sensor.hddtemp.drives

    List of drives to monitor. If you pass /dev/disk/by-path/* entries the symlinks will be
    resolved as hddtemp doesn't like names with colons.

    Type: list of strings

    Declared by:

    [961]<nixpkgs/nixos/modules/hardware/sensor/hddtemp.nix>

[962]hardware.sensor.hddtemp.extraArgs

    Additional arguments passed to the daemon.

    Type: list of strings

    Default: [ ]

    Declared by:

    [963]<nixpkgs/nixos/modules/hardware/sensor/hddtemp.nix>

[964]hardware.sensor.hddtemp.unit

    Celcius or Fahrenheit

    Type: one of "C", "F"

    Default: "C"

    Declared by:

    [965]<nixpkgs/nixos/modules/hardware/sensor/hddtemp.nix>

[966]hardware.sensor.iio.enable

    Enable this option to support IIO sensors.

    IIO sensors are used for orientation and ambient light sensors on some mobile devices.

    Type: boolean

    Default: false

    Declared by:

    [967]<nixpkgs/nixos/modules/hardware/sensor/iio.nix>

[968]hardware.spacenavd.enable

    Whether to enable spacenavd to support 3DConnexion devices.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [969]<nixpkgs/nixos/modules/services/hardware/spacenavd.nix>

[970]hardware.steam-hardware.enable

    Enable udev rules for Steam hardware such as the Steam Controller, other supported
    controllers and the HTC Vive

    Type: boolean

    Default: false

    Declared by:

    [971]<nixpkgs/nixos/modules/hardware/steam-hardware.nix>

[972]hardware.system76.enableAll

    Whether to enable all recommended configuration for system76 systems.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [973]<nixpkgs/nixos/modules/hardware/system-76.nix>

[974]hardware.system76.firmware-daemon.enable

    Whether to enable the system76 firmware daemon

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [975]<nixpkgs/nixos/modules/hardware/system-76.nix>

[976]hardware.system76.kernel-modules.enable

    Whether to make the system76 out-of-tree kernel modules available

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [977]<nixpkgs/nixos/modules/hardware/system-76.nix>

[978]hardware.trackpoint.enable

    Enable sensitivity and speed configuration for trackpoints.

    Type: boolean

    Default: false

    Declared by:

    [979]<nixpkgs/nixos/modules/tasks/trackpoint.nix>

[980]hardware.trackpoint.device

    The device name of the trackpoint. You can check with xinput. Some newer devices (example
    x1c6) use "TPPS/2 Elan TrackPoint".

    Type: string

    Default: "TPPS/2 IBM TrackPoint"

    Declared by:

    [981]<nixpkgs/nixos/modules/tasks/trackpoint.nix>

[982]hardware.trackpoint.emulateWheel

    Enable scrolling while holding the middle mouse button.

    Type: boolean

    Default: false

    Declared by:

    [983]<nixpkgs/nixos/modules/tasks/trackpoint.nix>

[984]hardware.trackpoint.fakeButtons

    Switch to "bare" PS/2 mouse support in case Trackpoint buttons are not recognized properly.
    This can happen for example on models like the L430, T450, T450s, on which the Trackpoint
    buttons are actually a part of the Synaptics touchpad.

    Type: boolean

    Default: false

    Declared by:

    [985]<nixpkgs/nixos/modules/tasks/trackpoint.nix>

[986]hardware.trackpoint.sensitivity

    Configure the trackpoint sensitivity. By default, the kernel configures 128.

    Type: signed integer

    Default: 128

    Example: 255

    Declared by:

    [987]<nixpkgs/nixos/modules/tasks/trackpoint.nix>

[988]hardware.trackpoint.speed

    Configure the trackpoint speed. By default, the kernel configures 97.

    Type: signed integer

    Default: 97

    Example: 255

    Declared by:

    [989]<nixpkgs/nixos/modules/tasks/trackpoint.nix>

[990]hardware.tuxedo-keyboard.enable

    Whether to enable Enables the tuxedo-keyboard driver.

    To configure the driver, pass the options to the boot.kernelParams configuration. There are
    several parameters you can change. It's best to check at the source code description which
    options are supported. You can find all the supported parameters at: [991]https://github.com/
    tuxedocomputers/tuxedo-keyboard#kernelparam

    In order to use the custom lighting with the maximumg brightness and a color of 0xff0a0a one
    would put pass boot.kernelParams like this:

    boot.kernelParams = [
     "tuxedo_keyboard.mode=0"
     "tuxedo_keyboard.brightness=255"
     "tuxedo_keyboard.color_left=0xff0a0a"
    ];

    .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [992]<nixpkgs/nixos/modules/hardware/tuxedo-keyboard.nix>

[993]hardware.ubertooth.enable

    Whether to enable Enable the Ubertooth software and its udev rules..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [994]<nixpkgs/nixos/modules/hardware/ubertooth.nix>

[995]hardware.ubertooth.group

    Group for Ubertooth's udev rules.

    Type: string

    Default: "ubertooth"

    Example: "wheel"

    Declared by:

    [996]<nixpkgs/nixos/modules/hardware/ubertooth.nix>

[997]hardware.uinput.enable

    Whether to enable uinput support.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [998]<nixpkgs/nixos/modules/hardware/uinput.nix>

[999]hardware.usbWwan.enable

    Enable this option to support USB WWAN adapters.

    Type: boolean

    Default: false

    Declared by:

    [1000]<nixpkgs/nixos/modules/hardware/usb-wwan.nix>

[1001]hardware.video.hidpi.enable

    Whether to enable Font/DPI configuration optimized for HiDPI displays.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1002]<nixpkgs/nixos/modules/hardware/video/hidpi.nix>

[1003]hardware.wooting.enable

    Whether to enable Enable support for Wooting keyboards.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1004]<nixpkgs/nixos/modules/hardware/wooting.nix>

[1005]hardware.xpadneo.enable

    Whether to enable the xpadneo driver for Xbox One wireless controllers.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1006]<nixpkgs/nixos/modules/hardware/xpadneo.nix>

[1007]i18n.defaultLocale

    The default locale. It determines the language for program messages, the format for dates and
    times, sort order, and so on. It also determines the character set, such as UTF-8.

    Type: string

    Default: "en_US.UTF-8"

    Example: "nl_NL.UTF-8"

    Declared by:

    [1008]<nixpkgs/nixos/modules/config/i18n.nix>

[1009]i18n.extraLocaleSettings

    A set of additional system-wide locale settings other than LANG which can be configured with
    i18n.defaultLocale.

    Type: attribute set of strings

    Default: { }

    Example: { LC_MESSAGES = "en_US.UTF-8"; LC_TIME = "de_DE.UTF-8"; }

    Declared by:

    [1010]<nixpkgs/nixos/modules/config/i18n.nix>

[1011]i18n.glibcLocales

    Customized pkg.glibcLocales package.

    Changing this option can disable handling of i18n.defaultLocale and supportedLocale.

    Type: path

    Default: (build of glibc-locales-2.32-48)

    Example:

    pkgs.glibcLocales

    Declared by:

    [1012]<nixpkgs/nixos/modules/config/i18n.nix>

[1013]i18n.inputMethod.enabled

    Select the enabled input method. Input methods is a software to input symbols that are not
    available on standard input devices.

    Input methods are specially used to input Chinese, Japanese and Korean characters.

    Currently the following input methods are available in NixOS:

      □ ibus: The intelligent input bus, extra input engines can be added using
        i18n.inputMethod.ibus.engines.

      □ fcitx: A customizable lightweight input method, extra input engines can be added using
        i18n.inputMethod.fcitx.engines.

      □ fcitx5: The next generation of fcitx, addons (including engines, dictionaries, skins) can
        be added using i18n.inputMethod.fcitx5.addons.

      □ nabi: A Korean input method based on XIM. Nabi doesn't support Qt 5.

      □ uim: The universal input method, is a library with a XIM bridge. uim mainly support
        Chinese, Japanese and Korean.

      □ hime: An extremely easy-to-use input method framework.

      □ kime: Koream IME.

    Type: null or one of "ibus", "fcitx", "fcitx5", "nabi", "uim", "hime", "kime"

    Default: null

    Example: "fcitx"

    Declared by:

    [1014]<nixpkgs/nixos/modules/i18n/input-method/default.nix>

[1015]i18n.inputMethod.fcitx.engines

    Enabled Fcitx engines. Available engines are: anthy, chewing, cloudpinyin, hangul, libpinyin,
    m17n, mozc, rime, skk, table-extra, table-other, unikey.

    Type: list of packages

    Default: [ ]

    Example:

    with pkgs.fcitx-engines; [ mozc hangul ]

    Declared by:

    [1016]<nixpkgs/nixos/modules/i18n/input-method/fcitx.nix>

[1017]i18n.inputMethod.fcitx5.addons

    Enabled Fcitx5 addons.

    Type: list of packages

    Default: [ ]

    Example: [ (build of fcitx5-rime-5.0.4) ]

    Declared by:

    [1018]<nixpkgs/nixos/modules/i18n/input-method/fcitx5.nix>

[1019]i18n.inputMethod.ibus.engines

    Enabled IBus engines. Available engines are: anthy, bamboo, hangul, kkc, libpinyin, libthai,
    m17n, mozc, rime, table, table-chinese, table-others, typing-booster,
    typing-booster-unwrapped, uniemoji.

    Type: list of packages

    Default: [ ]

    Example:

    with pkgs.ibus-engines; [ mozc hangul ]

    Declared by:

    [1020]<nixpkgs/nixos/modules/i18n/input-method/ibus.nix>

[1021]i18n.inputMethod.ibus.panel

    Replace the IBus panel with another panel.

    Type: null or path

    Default: null

    Example:

    ''${pkgs.plasma5Packages.plasma-desktop}/lib/libexec/kimpanel-ibus-panel

    Declared by:

    [1022]<nixpkgs/nixos/modules/i18n/input-method/ibus.nix>

[1023]i18n.inputMethod.kime.config

    kime configuration. Refer to [1024]https://github.com/Riey/kime/blob/v2.5.3/docs/
    CONFIGURATION.md for details on supported values.

    Type: YAML value

    Default: { }

    Example:

    {
      daemon = {
        modules = ["Xim" "Indicator"];
      };

      indicator = {
        icon_color = "White";
      };

      engine = {
        hangul = {
          layout = "dubeolsik";
        };
      };
    }

    Declared by:

    [1025]<nixpkgs/nixos/modules/i18n/input-method/kime.nix>

[1026]i18n.inputMethod.uim.toolbar

    selected UIM toolbar.

    Type: one of "gtk", "gtk3", "gtk-systray", "gtk3-systray", "qt4"

    Default: "gtk"

    Example: "gtk-systray"

    Declared by:

    [1027]<nixpkgs/nixos/modules/i18n/input-method/uim.nix>

[1028]i18n.supportedLocales

    List of locales that the system should support. The value "all" means that all locales
    supported by Glibc will be installed. A full list of supported locales can be found at [1029]
    https://sourceware.org/git/?p=glibc.git;a=blob;f=localedata/SUPPORTED.

    Type: list of strings

    Default: [ "all" ]

    Example: [ "en_US.UTF-8/UTF-8" "nl_NL.UTF-8/UTF-8" "nl_NL/ISO-8859-1" ]

    Declared by:

    [1030]<nixpkgs/nixos/modules/config/i18n.nix>

[1031]krb5.enable

    Whether to enable building krb5.conf, configuration file for Kerberos V.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1032]<nixpkgs/nixos/modules/config/krb5/default.nix>

[1033]krb5.appdefaults

    Settings used by some Kerberos V5 applications.

    Type: attribute set or strings concatenated with "\n"

    Default: { }

    Example:

    {
      pam = {
        debug = false;
        ticket_lifetime = 36000;
        renew_lifetime = 36000;
        max_timeout = 30;
        timeout_shift = 2;
        initial_timeout = 1;
      };
    };

    Declared by:

    [1034]<nixpkgs/nixos/modules/config/krb5/default.nix>

[1035]krb5.capaths

    Authentication paths for non-hierarchical cross-realm authentication.

    Type: attribute set or strings concatenated with "\n"

    Default: { }

    Example:

    {
      "ATHENA.MIT.EDU" = {
        "EXAMPLE.COM" = ".";
      };
      "EXAMPLE.COM" = {
        "ATHENA.MIT.EDU" = ".";
      };
    };

    Declared by:

    [1036]<nixpkgs/nixos/modules/config/krb5/default.nix>

[1037]krb5.config

    Verbatim krb5.conf configuration. Note that this is mutually exclusive with configuration via
    libdefaults, realms, domain_realm, capaths, appdefaults, plugins and extraConfig
    configuration options. Consult man krb5.conf for documentation.

    Type: null or strings concatenated with "\n"

    Default: null

    Example:

    ''
    [libdefaults]
      default_realm = EXAMPLE.COM

    [realms]
      EXAMPLE.COM = {
        admin_server = kerberos.example.com
        kdc = kerberos.example.com
        default_principal_flags = +preauth
      }

    [domain_realm]
      example.com  = EXAMPLE.COM
      .example.com = EXAMPLE.COM

    [logging]
      kdc          = SYSLOG:NOTICE
      admin_server = SYSLOG:NOTICE
      default      = SYSLOG:NOTICE
    ''

    Declared by:

    [1038]<nixpkgs/nixos/modules/config/krb5/default.nix>

[1039]krb5.defaultRealm

    DEPRECATED, please use krb5.libdefaults.default_realm.

    Type: null or string

    Default: null

    Example: "ATHENA.MIT.EDU"

    Declared by:

    [1040]<nixpkgs/nixos/modules/config/krb5/default.nix>

[1041]krb5.domainRealm

    DEPRECATED, please create a map of server hostnames to Kerberos realms in krb5.domain_realm.

    Type: null or string

    Default: null

    Example: "athena.mit.edu"

    Declared by:

    [1042]<nixpkgs/nixos/modules/config/krb5/default.nix>

[1043]krb5.domain_realm

    Map of server hostnames to Kerberos realms.

    Type: attribute set or strings concatenated with "\n"

    Default: { }

    Example:

    {
      "example.com" = "EXAMPLE.COM";
      ".example.com" = "EXAMPLE.COM";
    };

    Declared by:

    [1044]<nixpkgs/nixos/modules/config/krb5/default.nix>

[1045]krb5.extraConfig

    These lines go to the end of krb5.conf verbatim. krb5.conf may include any of the relations
    that are valid for kdc.conf (see man kdc.conf), but it is not a recommended practice.

    Type: null or strings concatenated with "\n"

    Default: null

    Example:

    ''
    [logging]
      kdc          = SYSLOG:NOTICE
      admin_server = SYSLOG:NOTICE
      default      = SYSLOG:NOTICE
    ''

    Declared by:

    [1046]<nixpkgs/nixos/modules/config/krb5/default.nix>

[1047]krb5.kdc

    DEPRECATED, please pass a kdc attribute to a realm in krb5.realms.

    Type: null or string

    Default: null

    Example: "kerberos.mit.edu"

    Declared by:

    [1048]<nixpkgs/nixos/modules/config/krb5/default.nix>

[1049]krb5.kerberos

    The Kerberos implementation that will be present in environment.systemPackages after enabling
    this service.

    Type: package

    Default: "pkgs.krb5Full"

    Example:

    pkgs.heimdalFull

    Declared by:

    [1050]<nixpkgs/nixos/modules/config/krb5/default.nix>

[1051]krb5.kerberosAdminServer

    DEPRECATED, please pass an admin_server attribute to a realm in krb5.realms.

    Type: null or string

    Default: null

    Example: "kerberos.mit.edu"

    Declared by:

    [1052]<nixpkgs/nixos/modules/config/krb5/default.nix>

[1053]krb5.libdefaults

    Settings used by the Kerberos V5 library.

    Type: attribute set or strings concatenated with "\n"

    Default: { }

    Example:

    {
      default_realm = "ATHENA.MIT.EDU";
    };

    Declared by:

    [1054]<nixpkgs/nixos/modules/config/krb5/default.nix>

[1055]krb5.plugins

    Controls plugin module registration.

    Type: attribute set or strings concatenated with "\n"

    Default: { }

    Example:

    {
      ccselect = {
        disable = "k5identity";
      };
    };

    Declared by:

    [1056]<nixpkgs/nixos/modules/config/krb5/default.nix>

[1057]krb5.realms

    Realm-specific contact information and settings.

    Type: attribute set or strings concatenated with "\n"

    Default: { }

    Example:

    {
      "ATHENA.MIT.EDU" = {
        admin_server = "athena.mit.edu";
        kdc = [
          "athena01.mit.edu"
          "athena02.mit.edu"
        ];
      };
    };

    Declared by:

    [1058]<nixpkgs/nixos/modules/config/krb5/default.nix>

[1059]lib

    This option allows modules to define helper functions, constants, etc.

    Type: attribute set of attribute sets

    Default: { }

    Declared by:

    [1060]<nixpkgs/nixos/modules/misc/lib.nix>

[1061]location.latitude

    Your current latitude, between -90.0 and 90.0. Must be provided along with longitude.

    Type: floating point number

    Declared by:

    [1062]<nixpkgs/nixos/modules/config/locale.nix>

[1063]location.longitude

    Your current longitude, between between -180.0 and 180.0. Must be provided along with
    latitude.

    Type: floating point number

    Declared by:

    [1064]<nixpkgs/nixos/modules/config/locale.nix>

[1065]location.provider

    The location provider to use for determining your location. If set to manual you must also
    provide latitude/longitude.

    Type: one of "manual", "geoclue2"

    Default: "manual"

    Declared by:

    [1066]<nixpkgs/nixos/modules/config/locale.nix>

[1067]networking.enableB43Firmware

    Turn on this option if you want firmware for the NICs supported by the b43 module.

    Type: boolean

    Default: false

    Declared by:

    [1068]<nixpkgs/nixos/modules/hardware/network/b43.nix>

[1069]networking.enableIPv6

    Whether to enable support for IPv6.

    Type: boolean

    Default: true

    Declared by:

    [1070]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1071]networking.enableIntel2200BGFirmware

    Turn on this option if you want firmware for the Intel PRO/Wireless 2200BG to be loaded
    automatically. This is required if you want to use this device.

    Type: boolean

    Default: false

    Declared by:

    [1072]<nixpkgs/nixos/modules/hardware/network/intel-2200bg.nix>

[1073]networking.bonds

    This option allows you to define bond devices that aggregate multiple, underlying networking
    interfaces together. The value of this option is an attribute set. Each attribute specifies a
    bond, with the attribute name specifying the name of the bond's network interface

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      bond0 = {
        interfaces = [ "eth0" "wlan0" ];
        driverOptions = {
      miimon = "100";
      mode = "active-backup";
    }
    ;
      };
      anotherBond.interfaces = [ "enp4s0f0" "enp4s0f1" "enp5s0f0" "enp5s0f1" ];
    }

    Declared by:

    [1074]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1075]networking.bonds.<name>.driverOptions

    Options for the bonding driver. Documentation can be found in [1076]https://www.kernel.org/
    doc/Documentation/networking/bonding.txt

    Type: attribute set of strings

    Default: { }

    Example:

    {
      miimon = "100";
      mode = "active-backup";
    }

    Declared by:

    [1077]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1078]networking.bonds.<name>.interfaces

    The interfaces to bond together

    Type: list of strings

    Example: [ "enp4s0f0" "enp4s0f1" "wlan0" ]

    Declared by:

    [1079]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1080]networking.bonds.<name>.lacp_rate

    DEPRECATED, use `driverOptions`. Option specifying the rate in which we'll ask our link
    partner to transmit LACPDU packets in 802.3ad mode.

    Type: null or string

    Default: null

    Example: "fast"

    Declared by:

    [1081]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1082]networking.bonds.<name>.miimon

    DEPRECATED, use `driverOptions`. Miimon is the number of millisecond in between each round of
    polling by the device driver for failed links. By default polling is not enabled and the
    driver is trusted to properly detect and handle failure scenarios.

    Type: null or signed integer

    Default: null

    Example: 100

    Declared by:

    [1083]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1084]networking.bonds.<name>.mode

    DEPRECATED, use `driverOptions`. The mode which the bond will be running. The default mode
    for the bonding driver is balance-rr, optimizing for throughput. More information about valid
    modes can be found at https://www.kernel.org/doc/Documentation/networking/bonding.txt

    Type: null or string

    Default: null

    Example: "active-backup"

    Declared by:

    [1085]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1086]networking.bonds.<name>.xmit_hash_policy

    DEPRECATED, use `driverOptions`. Selects the transmit hash policy to use for slave selection
    in balance-xor, 802.3ad, and tlb modes.

    Type: null or string

    Default: null

    Example: "layer2+3"

    Declared by:

    [1087]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1088]networking.bridges

    This option allows you to define Ethernet bridge devices that connect physical networks
    together. The value of this option is an attribute set. Each attribute specifies a bridge,
    with the attribute name specifying the name of the bridge's network interface.

    Type: attribute set of submodules

    Default: { }

    Example: { br0 = { interfaces = [ "eth0" "eth1" ] ; } ; br1 = { interfaces = [ "eth2" "wlan0"
    ] ; } ; }

    Declared by:

    [1089]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1090]networking.bridges.<name>.interfaces

    The physical network interfaces connected by the bridge.

    Type: list of strings

    Example: [ "eth0" "eth1" ]

    Declared by:

    [1091]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1092]networking.bridges.<name>.rstp

    Whether the bridge interface should enable rstp.

    Type: boolean

    Default: false

    Declared by:

    [1093]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1094]networking.defaultGateway

    The default gateway. It can be left empty if it is auto-detected through DHCP. It can be
    specified as a string or an option set along with a network interface.

    Type: null or submodule or string convertible to it

    Default: null

    Example: { address = "131.211.84.1"; interface = "enp3s0"; }

    Declared by:

    [1095]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1096]networking.defaultGateway.address

    The default gateway address.

    Type: string

    Declared by:

    [1097]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1098]networking.defaultGateway.interface

    The default gateway interface.

    Type: null or string

    Default: null

    Example: "enp0s3"

    Declared by:

    [1099]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1100]networking.defaultGateway.metric

    The default gateway metric/preference.

    Type: null or signed integer

    Default: null

    Example: 42

    Declared by:

    [1101]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1102]networking.defaultGateway6

    The default ipv6 gateway. It can be left empty if it is auto-detected through DHCP. It can be
    specified as a string or an option set along with a network interface.

    Type: null or submodule or string convertible to it

    Default: null

    Example: { address = "2001:4d0:1e04:895::1"; interface = "enp3s0"; }

    Declared by:

    [1103]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1104]networking.defaultGateway6.address

    The default gateway address.

    Type: string

    Declared by:

    [1105]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1106]networking.defaultGateway6.interface

    The default gateway interface.

    Type: null or string

    Default: null

    Example: "enp0s3"

    Declared by:

    [1107]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1108]networking.defaultGateway6.metric

    The default gateway metric/preference.

    Type: null or signed integer

    Default: null

    Example: 42

    Declared by:

    [1109]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1110]networking.defaultGatewayWindowSize

    The window size of the default gateway. It limits maximal data bursts that TCP peers are
    allowed to send to us.

    Type: null or signed integer

    Default: null

    Example: 524288

    Declared by:

    [1111]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1112]networking.dhcpcd.enable

    Whether to enable dhcpcd for device configuration. This is mainly to explicitly disable
    dhcpcd (for example when using networkd).

    Type: boolean

    Default: true

    Declared by:

    [1113]<nixpkgs/nixos/modules/services/networking/dhcpcd.nix>

[1114]networking.dhcpcd.allowInterfaces

    Enable the DHCP client for any interface whose name matches any of the shell glob patterns in
    this list. Any interface not explicitly matched by this pattern will be denied. This pattern
    only applies when non-null.

    Type: null or list of strings

    Default: null

    Declared by:

    [1115]<nixpkgs/nixos/modules/services/networking/dhcpcd.nix>

[1116]networking.dhcpcd.denyInterfaces

    Disable the DHCP client for any interface whose name matches any of the shell glob patterns
    in this list. The purpose of this option is to blacklist virtual interfaces such as those
    created by Xen, libvirt, LXC, etc.

    Type: list of strings

    Default: [ ]

    Declared by:

    [1117]<nixpkgs/nixos/modules/services/networking/dhcpcd.nix>

[1118]networking.dhcpcd.extraConfig

    Literal string to append to the config file generated for dhcpcd.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [1119]<nixpkgs/nixos/modules/services/networking/dhcpcd.nix>

[1120]networking.dhcpcd.persistent

    Whenever to leave interfaces configured on dhcpcd daemon shutdown. Set to true if you have
    your root or store mounted over the network or this machine accepts SSH connections through
    DHCP interfaces and clients should be notified when it shuts down.

    Type: boolean

    Default: false

    Declared by:

    [1121]<nixpkgs/nixos/modules/services/networking/dhcpcd.nix>

[1122]networking.dhcpcd.runHook

    Shell code that will be run after all other hooks. See `man dhcpcd-run-hooks` for details on
    what is possible.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "if [[ \$reason =~ BOUND ]]; then echo \$interface: Routers are \$new_routers - were
    \$old_routers; fi"

    Declared by:

    [1123]<nixpkgs/nixos/modules/services/networking/dhcpcd.nix>

[1124]networking.dhcpcd.wait

    This option specifies when the dhcpcd service will fork to background. If set to
    "background", dhcpcd will fork to background immediately. If set to "ipv4" or "ipv6", dhcpcd
    will wait for the corresponding IP address to be assigned. If set to "any", dhcpcd will wait
    for any type (IPv4 or IPv6) to be assigned. If set to "both", dhcpcd will wait for both an
    IPv4 and an IPv6 address before forking. The option "if-carrier-up" is equivalent to "any" if
    either ethernet is plugged nor WiFi is powered, and to "background" otherwise.

    Type: one of "background", "any", "ipv4", "ipv6", "both", "if-carrier-up"

    Default: "any"

    Declared by:

    [1125]<nixpkgs/nixos/modules/services/networking/dhcpcd.nix>

[1126]networking.domain

    The domain. It can be left empty if it is auto-detected through DHCP.

    Type: null or string

    Default: null

    Example: "home.arpa"

    Declared by:

    [1127]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1128]networking.extraHosts

    Additional verbatim entries to be appended to /etc/hosts. For adding hosts from derivation
    results, use networking.hostFiles instead.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "192.168.0.1 lanlocalhost"

    Declared by:

    [1129]<nixpkgs/nixos/modules/config/networking.nix>

[1130]networking.firewall.enable

    Whether to enable the firewall. This is a simple stateful firewall that blocks connection
    attempts to unauthorised TCP or UDP ports on this machine. It does not affect packet
    forwarding.

    Type: boolean

    Default: true

    Declared by:

    [1131]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1132]networking.firewall.package

    The iptables package to use for running the firewall service."

    Type: package

    Default: "pkgs.iptables"

    Example:

    pkgs.iptables-nftables-compat

    Declared by:

    [1133]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1134]networking.firewall.allowPing

    Whether to respond to incoming ICMPv4 echo requests ("pings"). ICMPv6 pings are always
    allowed because the larger address space of IPv6 makes network scanning much less effective.

    Type: boolean

    Default: true

    Declared by:

    [1135]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1136]networking.firewall.allowedTCPPortRanges

    A range of TCP ports on which incoming connections are accepted.

    Type: list of attribute set of 16 bit unsigned integer; between 0 and 65535 (both inclusive)
    ss

    Default: [ ]

    Example: [ { from = 8999; to = 9003; } ]

    Declared by:

    [1137]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1138]networking.firewall.allowedTCPPorts

    List of TCP ports on which incoming connections are accepted.

    Type: list of 16 bit unsigned integer; between 0 and 65535 (both inclusive)s

    Default: [ ]

    Example: [ 22 80 ]

    Declared by:

    [1139]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1140]networking.firewall.allowedUDPPortRanges

    Range of open UDP ports.

    Type: list of attribute set of 16 bit unsigned integer; between 0 and 65535 (both inclusive)
    ss

    Default: [ ]

    Example: [ { from = 60000; to = 61000; } ]

    Declared by:

    [1141]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1142]networking.firewall.allowedUDPPorts

    List of open UDP ports.

    Type: list of 16 bit unsigned integer; between 0 and 65535 (both inclusive)s

    Default: [ ]

    Example: [ 53 ]

    Declared by:

    [1143]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1144]networking.firewall.autoLoadConntrackHelpers

    Whether to auto-load connection-tracking helpers. See the description at
    networking.firewall.connectionTrackingModules

    (needs kernel 3.5+)

    Type: boolean

    Default: false

    Declared by:

    [1145]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1146]networking.firewall.checkReversePath

    Performs a reverse path filter test on a packet. If a reply to the packet would not be sent
    via the same interface that the packet arrived on, it is refused.

    If using asymmetric routing or other complicated routing, set this option to loose mode or
    disable it and setup your own counter-measures.

    This option can be either true (or "strict"), "loose" (only drop the packet if the source
    address is not reachable via any interface) or false. Defaults to the value of
    kernelHasRPFilter.

    (needs kernel 3.3+)

    Type: boolean or one of "strict", "loose"

    Default: true

    Example: "loose"

    Declared by:

    [1147]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1148]networking.firewall.connectionTrackingModules

    List of connection-tracking helpers that are auto-loaded. The complete list of possible
    values is given in the example.

    As helpers can pose as a security risk, it is advised to set this to an empty list and
    disable the setting networking.firewall.autoLoadConntrackHelpers unless you know what you are
    doing. Connection tracking is disabled by default.

    Loading of helpers is recommended to be done through the CT target. More info: https://
    home.regit.org/netfilter-en/secure-use-of-helpers/

    Type: list of strings

    Default: [ ]

    Example: [ "ftp" "irc" "sane" "sip" "tftp" "amanda" "h323" "netbios_sn" "pptp" "snmp" ]

    Declared by:

    [1149]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1150]networking.firewall.extraCommands

    Additional shell commands executed as part of the firewall initialisation script. These are
    executed just before the final "reject" firewall rule is added, so they can be used to allow
    packets that would otherwise be refused.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "iptables -A INPUT -p icmp -j ACCEPT"

    Declared by:

    [1151]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1152]networking.firewall.extraPackages

    Additional packages to be included in the environment of the system as well as the path of
    networking.firewall.extraCommands.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.ipset ]

    Declared by:

    [1153]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1154]networking.firewall.extraStopCommands

    Additional shell commands executed as part of the firewall shutdown script. These are
    executed just after the removal of the NixOS input rule, or if the service enters a failed
    state.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "iptables -P INPUT ACCEPT"

    Declared by:

    [1155]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1156]networking.firewall.interfaces

    Interface-specific open ports.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [1157]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1158]networking.firewall.interfaces.<name>.allowedTCPPortRanges

    A range of TCP ports on which incoming connections are accepted.

    Type: list of attribute set of 16 bit unsigned integer; between 0 and 65535 (both inclusive)
    ss

    Default: [ ]

    Example: [ { from = 8999; to = 9003; } ]

    Declared by:

    [1159]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1160]networking.firewall.interfaces.<name>.allowedTCPPorts

    List of TCP ports on which incoming connections are accepted.

    Type: list of 16 bit unsigned integer; between 0 and 65535 (both inclusive)s

    Default: [ ]

    Example: [ 22 80 ]

    Declared by:

    [1161]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1162]networking.firewall.interfaces.<name>.allowedUDPPortRanges

    Range of open UDP ports.

    Type: list of attribute set of 16 bit unsigned integer; between 0 and 65535 (both inclusive)
    ss

    Default: [ ]

    Example: [ { from = 60000; to = 61000; } ]

    Declared by:

    [1163]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1164]networking.firewall.interfaces.<name>.allowedUDPPorts

    List of open UDP ports.

    Type: list of 16 bit unsigned integer; between 0 and 65535 (both inclusive)s

    Default: [ ]

    Example: [ 53 ]

    Declared by:

    [1165]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1166]networking.firewall.logRefusedConnections

    Whether to log rejected or dropped incoming connections.

    Type: boolean

    Default: true

    Declared by:

    [1167]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1168]networking.firewall.logRefusedPackets

    Whether to log all rejected or dropped incoming packets. This tends to give a lot of log
    messages, so it's mostly useful for debugging.

    Type: boolean

    Default: false

    Declared by:

    [1169]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1170]networking.firewall.logRefusedUnicastsOnly

    If networking.firewall.logRefusedPackets and this option are enabled, then only log packets
    specifically directed at this machine, i.e., not broadcasts or multicasts.

    Type: boolean

    Default: true

    Declared by:

    [1171]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1172]networking.firewall.logReversePathDrops

    Logs dropped packets failing the reverse path filter test if the option
    networking.firewall.checkReversePath is enabled.

    Type: boolean

    Default: false

    Declared by:

    [1173]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1174]networking.firewall.pingLimit

    If pings are allowed, this allows setting rate limits on them. If non-null, this option
    should be in the form of flags like "--limit 1/minute --limit-burst 5"

    Type: null or strings concatenated with " "

    Default: null

    Example: "--limit 1/minute --limit-burst 5"

    Declared by:

    [1175]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1176]networking.firewall.rejectPackets

    If set, refused packets are rejected rather than dropped (ignored). This means that an ICMP
    "port unreachable" error message is sent back to the client (or a TCP RST packet in case of
    an existing connection). Rejecting packets makes port scanning somewhat easier.

    Type: boolean

    Default: false

    Declared by:

    [1177]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1178]networking.firewall.trustedInterfaces

    Traffic coming in from these interfaces will be accepted unconditionally. Traffic from the
    loopback (lo) interface will always be accepted.

    Type: list of strings

    Default: [ ]

    Example: [ "enp0s2" ]

    Declared by:

    [1179]<nixpkgs/nixos/modules/services/networking/firewall.nix>

[1180]networking.fqdn

    The fully qualified domain name (FQDN) of this host. It is the result of combining
    networking.hostName and networking.domain. Using this option will result in an evaluation
    error if the hostname is empty or no domain is specified.

    Type: string (read only)

    Default: ${networking.hostName}.${networking.domain}

    Declared by:

    [1181]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1182]networking.hostFiles

    Files that should be concatenated together to form /etc/hosts.

    Type: list of paths

    Default: Hosts from `networking.hosts` and `networking.extraHosts`

    Example:

    [ "${pkgs.my-blocklist-package}/share/my-blocklist/hosts" ]

    Declared by:

    [1183]<nixpkgs/nixos/modules/config/networking.nix>

[1184]networking.hostId

    The 32-bit host ID of the machine, formatted as 8 hexadecimal characters.

    You should try to make this ID unique among your machines. You can generate a random 32-bit
    ID using the following commands:

    head -c 8 /etc/machine-id

    (this derives it from the machine-id that systemd generates) or

    head -c4 /dev/urandom | od -A none -t x4

    The primary use case is to ensure when using ZFS that a pool isn't imported accidentally on a
    wrong machine.

    Type: null or string

    Default: null

    Example: "4e98920d"

    Declared by:

    [1185]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1186]networking.hostName

    The name of the machine. Leave it empty if you want to obtain it from a DHCP server (if using
    DHCP). The hostname must be a valid DNS label (see RFC 1035 section 2.3.1: "Preferred name
    syntax", RFC 1123 section 2.1: "Host Names and Numbers") and as such must not contain the
    domain part. This means that the hostname must start with a letter or digit, end with a
    letter or digit, and have as interior characters only letters, digits, and hyphen. The
    maximum length is 63 characters. Additionally it is recommended to only use lower-case
    characters. If (e.g. for legacy reasons) a FQDN is required as the Linux kernel network node
    hostname (uname --nodename) the option boot.kernel.sysctl."kernel.hostname" can be used as a
    workaround (but the 64 character limit still applies).

    Type: string matching the pattern ^$|^[[:alnum:]]([[:alnum:]_-]{0,61}[[:alnum:]])?$

    Default: "nixos"

    Declared by:

    [1187]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1188]networking.hosts

    Locally defined maps of hostnames to IP addresses.

    Type: attribute set of list of stringss

    Example:

    {
      "127.0.0.1" = [ "foo.bar.baz" ];
      "192.168.0.2" = [ "fileserver.local" "nameserver.local" ];
    };

    Declared by:

    [1189]<nixpkgs/nixos/modules/config/networking.nix>

[1190]networking.interfaces

    The configuration for each network interface. If networking.useDHCP is true, then every
    interface not listed here will be configured using DHCP.

    Type: attribute set of submodules

    Default: { }

    Example: { eth0 = { ipv4 = { addresses = [ { address = "131.211.84.78"; prefixLength = 25; }
    ] ; } ; } ; }

    Declared by:

    [1191]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1192]networking.interfaces.<name>.ipv4.addresses

    List of IPv4 addresses that will be statically assigned to the interface.

    Type: list of submodules

    Default: [ ]

    Example: [ { address = "10.0.0.1"; prefixLength = 16; } { address = "192.168.1.1";
    prefixLength = 24; } ]

    Declared by:

    [1193]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1194]networking.interfaces.<name>.ipv4.addresses.*.address

    IPv4 address of the interface. Leave empty to configure the interface using DHCP.

    Type: string

    Declared by:

    [1195]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1196]networking.interfaces.<name>.ipv4.addresses.*.prefixLength

    Subnet mask of the interface, specified as the number of bits in the prefix (24).

    Type: signed integer

    Declared by:

    [1197]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1198]networking.interfaces.<name>.ipv4.routes

    List of extra IPv4 static routes that will be assigned to the interface.

    Type: list of submodules

    Default: [ ]

    Example: [ { address = "10.0.0.0"; prefixLength = 16; } { address = "192.168.2.0";
    prefixLength = 24; via = "192.168.1.1"; } ]

    Declared by:

    [1199]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1200]networking.interfaces.<name>.ipv4.routes.*.address

    IPv4 address of the network.

    Type: string

    Declared by:

    [1201]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1202]networking.interfaces.<name>.ipv4.routes.*.options

    Other route options. See the symbol OPTIONS in the ip-route(8) manual page for the details.

    Type: attribute set of strings

    Default: { }

    Example: { mtu = "1492"; window = "524288"; }

    Declared by:

    [1203]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1204]networking.interfaces.<name>.ipv4.routes.*.prefixLength

    Subnet mask of the network, specified as the number of bits in the prefix (24).

    Type: signed integer

    Declared by:

    [1205]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1206]networking.interfaces.<name>.ipv4.routes.*.via

    IPv4 address of the next hop.

    Type: null or string

    Default: null

    Declared by:

    [1207]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1208]networking.interfaces.<name>.ipv6.addresses

    List of IPv6 addresses that will be statically assigned to the interface.

    Type: list of submodules

    Default: [ ]

    Example: [ { address = "fdfd:b3f0:482::1"; prefixLength = 48; } { address =
    "2001:1470:fffd:2098::e006"; prefixLength = 64; } ]

    Declared by:

    [1209]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1210]networking.interfaces.<name>.ipv6.addresses.*.address

    IPv6 address of the interface. Leave empty to configure the interface using DHCP.

    Type: string

    Declared by:

    [1211]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1212]networking.interfaces.<name>.ipv6.addresses.*.prefixLength

    Subnet mask of the interface, specified as the number of bits in the prefix (64).

    Type: signed integer

    Declared by:

    [1213]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1214]networking.interfaces.<name>.ipv6.routes

    List of extra IPv6 static routes that will be assigned to the interface.

    Type: list of submodules

    Default: [ ]

    Example: [ { address = "fdfd:b3f0::"; prefixLength = 48; } { address =
    "2001:1470:fffd:2098::"; prefixLength = 64; via = "fdfd:b3f0::1"; } ]

    Declared by:

    [1215]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1216]networking.interfaces.<name>.ipv6.routes.*.address

    IPv6 address of the network.

    Type: string

    Declared by:

    [1217]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1218]networking.interfaces.<name>.ipv6.routes.*.options

    Other route options. See the symbol OPTIONS in the ip-route(8) manual page for the details.

    Type: attribute set of strings

    Default: { }

    Example: { mtu = "1492"; window = "524288"; }

    Declared by:

    [1219]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1220]networking.interfaces.<name>.ipv6.routes.*.prefixLength

    Subnet mask of the network, specified as the number of bits in the prefix (64).

    Type: signed integer

    Declared by:

    [1221]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1222]networking.interfaces.<name>.ipv6.routes.*.via

    IPv6 address of the next hop.

    Type: null or string

    Default: null

    Declared by:

    [1223]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1224]networking.interfaces.<name>.macAddress

    MAC address of the interface. Leave empty to use the default.

    Type: null or string

    Default: null

    Example: "00:11:22:33:44:55"

    Declared by:

    [1225]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1226]networking.interfaces.<name>.mtu

    MTU size for packets leaving the interface. Leave empty to use the default.

    Type: null or signed integer

    Default: null

    Example: 9000

    Declared by:

    [1227]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1228]networking.interfaces.<name>.name

    Name of the interface.

    Type: string

    Example: "eth0"

    Declared by:

    [1229]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1230]networking.interfaces.<name>.proxyARP

    Turn on proxy_arp for this device. This is mainly useful for creating pseudo-bridges between
    a real interface and a virtual network such as VPN or a virtual machine for interfaces that
    don't support real bridging (most wlan interfaces). As ARP proxying acts slightly above the
    link-layer, below-ip traffic isn't bridged, so things like DHCP won't work. The advantage
    above using NAT lies in the fact that no IP addresses are shared, so all hosts are reachable/
    routeable.

    WARNING: turns on ip-routing, so if you have multiple interfaces, you should think of the
    consequence and setup firewall rules to limit this.

    Type: boolean

    Default: false

    Declared by:

    [1231]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1232]networking.interfaces.<name>.tempAddress

    When IPv6 is enabled with SLAAC, this option controls the use of temporary address (aka
    privacy extensions) on this interface. This is used to reduce tracking.

    See also the global option [1233]networking.tempAddresses, which applies to all interfaces
    where this is not set.

    Possible values are:

      □ "default" to generate IPv6 temporary addresses and use these as source addresses in
        routing;

      □ "disabled" to completely disable IPv6 temporary addresses;

      □ "enabled" to generate IPv6 temporary addresses but still use EUI-64 addresses as source
        addresses;

    Type: one of "default", "disabled", "enabled"

    Default: config.networking.tempAddresses

    Declared by:

    [1234]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1235]networking.interfaces.<name>.useDHCP

    Whether this interface should be configured with dhcp. Null implies the old behavior which
    depends on whether ip addresses are specified or not.

    Type: null or boolean

    Default: null

    Declared by:

    [1236]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1237]networking.interfaces.<name>.virtual

    Whether this interface is virtual and should be created by tunctl. This is mainly useful for
    creating bridges between a host and a virtual network such as VPN or a virtual machine.

    Type: boolean

    Default: false

    Declared by:

    [1238]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1239]networking.interfaces.<name>.virtualOwner

    In case of a virtual device, the user who owns it.

    Type: string

    Default: "root"

    Declared by:

    [1240]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1241]networking.interfaces.<name>.virtualType

    The type of interface to create. The default is TUN for an interface name starting with
    "tun", otherwise TAP.

    Type: one of "tun", "tap"

    Default: if hasPrefix "tun" name then "tun" else "tap"

    Declared by:

    [1242]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1243]networking.iproute2.enable

    Whether to enable copy IP route configuration files.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1244]<nixpkgs/nixos/modules/config/iproute2.nix>

[1245]networking.iproute2.rttablesExtraConfig

    Verbatim lines to add to /etc/iproute2/rt_tables

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [1246]<nixpkgs/nixos/modules/config/iproute2.nix>

[1247]networking.localCommands

    Shell commands to be executed at the end of the network-setup systemd service. Note that if
    you are using DHCP to obtain the network configuration, interfaces may not be fully
    configured yet.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "text=anything; echo You can put \$text here."

    Declared by:

    [1248]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1249]networking.macvlans

    This option allows you to define macvlan interfaces which should be automatically created.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      wan = {
        interface = "enp2s0";
        mode = "vepa";
      };
    }

    Declared by:

    [1250]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1251]networking.macvlans.<name>.interface

    The interface the macvlan will transmit packets through.

    Type: string

    Example: "enp4s0"

    Declared by:

    [1252]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1253]networking.macvlans.<name>.mode

    The mode of the macvlan device.

    Type: null or string

    Default: null

    Example: "vepa"

    Declared by:

    [1254]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1255]networking.nameservers

    The list of nameservers. It can be left empty if it is auto-detected through DHCP.

    Type: list of strings

    Default: [ ]

    Example: [ "130.161.158.4" "130.161.33.17" ]

    Declared by:

    [1256]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1257]networking.nat.enable

    Whether to enable Network Address Translation (NAT).

    Type: boolean

    Default: false

    Declared by:

    [1258]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1259]networking.nat.enableIPv6

    Whether to enable IPv6 NAT.

    Type: boolean

    Default: false

    Declared by:

    [1260]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1261]networking.nat.dmzHost

    The local IP address to which all traffic that does not match any forwarding rule is
    forwarded.

    Type: null or string

    Default: null

    Example: "10.0.0.1"

    Declared by:

    [1262]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1263]networking.nat.externalIP

    The public IP address to which packets from the local network are to be rewritten. If this is
    left empty, the IP address associated with the external interface will be used.

    Type: null or string

    Default: null

    Example: "203.0.113.123"

    Declared by:

    [1264]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1265]networking.nat.externalIPv6

    The public IPv6 address to which packets from the local network are to be rewritten. If this
    is left empty, the IP address associated with the external interface will be used.

    Type: null or string

    Default: null

    Example: "2001:dc0:2001:11::175"

    Declared by:

    [1266]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1267]networking.nat.externalInterface

    The name of the external network interface.

    Type: null or string

    Default: null

    Example: "eth1"

    Declared by:

    [1268]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1269]networking.nat.extraCommands

    Additional shell commands executed as part of the nat initialisation script.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "iptables -A INPUT -p icmp -j ACCEPT"

    Declared by:

    [1270]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1271]networking.nat.extraStopCommands

    Additional shell commands executed as part of the nat teardown script.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "iptables -D INPUT -p icmp -j ACCEPT || true"

    Declared by:

    [1272]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1273]networking.nat.forwardPorts

    List of forwarded ports from the external interface to internal destinations by using DNAT.
    Destination can be IPv6 if IPv6 NAT is enabled.

    Type: list of submodules

    Default: [ ]

    Example: [ { destination = "10.0.0.1:80"; proto = "tcp"; sourcePort = 8080; } { destination =
    "[fc00::2]:80"; proto = "tcp"; sourcePort = 8080; } ]

    Declared by:

    [1274]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1275]networking.nat.forwardPorts.*.destination

    Forward connection to destination ip:port (or [ipv6]:port); to specify a port range, use
    ip:start-end

    Type: string

    Example: "10.0.0.1:80"

    Declared by:

    [1276]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1277]networking.nat.forwardPorts.*.loopbackIPs

    Public IPs for NAT reflection; for connections to `loopbackip:sourcePort' from the host
    itself and from other hosts behind NAT

    Type: list of strings

    Default: [ ]

    Example:

    [ "55.1.2.3" ]

    Declared by:

    [1278]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1279]networking.nat.forwardPorts.*.proto

    Protocol of forwarded connection

    Type: string

    Default: "tcp"

    Example: "udp"

    Declared by:

    [1280]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1281]networking.nat.forwardPorts.*.sourcePort

    Source port of the external interface; to specify a port range, use a string with a colon
    (e.g. "60000:61000")

    Type: signed integer or string matching the pattern [[:digit:]]+:[[:digit:]]+

    Example: 8080

    Declared by:

    [1282]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1283]networking.nat.internalIPs

    The IP address ranges for which to perform NAT. Packets coming from these addresses (on any
    interface) and destined for the external interface will be rewritten.

    Type: list of strings

    Default: [ ]

    Example: [ "192.168.1.0/24" ]

    Declared by:

    [1284]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1285]networking.nat.internalIPv6s

    The IPv6 address ranges for which to perform NAT. Packets coming from these addresses (on any
    interface) and destined for the external interface will be rewritten.

    Type: list of strings

    Default: [ ]

    Example: [ "fc00::/64" ]

    Declared by:

    [1286]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1287]networking.nat.internalInterfaces

    The interfaces for which to perform NAT. Packets coming from these interface and destined for
    the external interface will be rewritten.

    Type: list of strings

    Default: [ ]

    Example: [ "eth0" ]

    Declared by:

    [1288]<nixpkgs/nixos/modules/services/networking/nat.nix>

[1289]networking.networkmanager.enable

    Whether to use NetworkManager to obtain an IP address and other configuration for all network
    interfaces that are not manually configured. If enabled, a group networkmanager will be
    created. Add all users that should have permission to change network settings to this group.

    Type: boolean

    Default: false

    Declared by:

    [1290]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1291]networking.networkmanager.enableStrongSwan

    Enable the StrongSwan plugin.

    If you enable this option the networkmanager_strongswan plugin will be added to the
    networking.networkmanager.packages option so you don't need to to that yourself.

    Type: boolean

    Default: false

    Declared by:

    [1292]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1293]networking.networkmanager.packages

    Extra packages that provide NetworkManager plugins.

    Type: list of packages

    Default: [ ]

    Declared by:

    [1294]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1295]networking.networkmanager.appendNameservers

    A list of name servers that should be appended to the ones configured in NetworkManager or
    received by DHCP.

    Type: list of strings

    Default: [ ]

    Declared by:

    [1296]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1297]networking.networkmanager.dhcp

    Which program (or internal library) should be used for DHCP.

    Type: one of "dhclient", "dhcpcd", "internal"

    Default: "internal"

    Declared by:

    [1298]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1299]networking.networkmanager.dispatcherScripts

    A list of scripts which will be executed in response to network events.

    Type: list of submodules

    Default: [ ]

    Example:

    [ {
          source = pkgs.writeText "upHook" ''

            if [ "$2" != "up" ]; then
                logger "exit: event $2 != up"
                exit
            fi

            # coreutils and iproute are in PATH too
            logger "Device $DEVICE_IFACE coming up"
        '';
        type = "basic";
    } ]

    Declared by:

    [1300]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1301]networking.networkmanager.dispatcherScripts.*.source

    Path to the hook script.

    Type: path

    Declared by:

    [1302]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1303]networking.networkmanager.dispatcherScripts.*.type

    Dispatcher hook type. Look up the hooks described at [1304]https://developer.gnome.org/
    NetworkManager/stable/NetworkManager.html and choose the type depending on the output folder.
    You should then filter the event type (e.g., "up"/"down") from within your script.

    Type: one of "basic", "pre-down", "pre-up"

    Default: "basic"

    Declared by:

    [1305]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1306]networking.networkmanager.dns

    Set the DNS (resolv.conf) processing mode.

    A description of these modes can be found in the main section of [1307] https://
    developer.gnome.org/NetworkManager/stable/NetworkManager.conf.html or in NetworkManager.conf
    (5).

    Type: one of "default", "dnsmasq", "unbound", "systemd-resolved", "none"

    Default: "default"

    Declared by:

    [1308]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1309]networking.networkmanager.ethernet.macAddress

    Set the MAC address of the interface.

    "XX:XX:XX:XX:XX:XX"

        MAC address of the interface

    "permanent"

        Use the permanent MAC address of the device

    "preserve"

        Don’t change the MAC address of the device upon activation

    "random"

        Generate a randomized value upon each connect

    "stable"

        Generate a stable, hashed MAC address

    Type: string or one of "permanent", "preserve", "random", "stable"

    Default: "preserve"

    Example: "00:11:22:33:44:55"

    Declared by:

    [1310]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1311]networking.networkmanager.extraConfig

    Configuration appended to the generated NetworkManager.conf. Refer to [1312] https://
    developer.gnome.org/NetworkManager/stable/NetworkManager.conf.html or NetworkManager.conf(5)
    for more information.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [1313]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1314]networking.networkmanager.insertNameservers

    A list of name servers that should be inserted before the ones configured in NetworkManager
    or received by DHCP.

    Type: list of strings

    Default: [ ]

    Declared by:

    [1315]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1316]networking.networkmanager.logLevel

    Set the default logging verbosity level.

    Type: one of "OFF", "ERR", "WARN", "INFO", "DEBUG", "TRACE"

    Default: "WARN"

    Declared by:

    [1317]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1318]networking.networkmanager.unmanaged

    List of interfaces that will not be managed by NetworkManager. Interface name can be
    specified here, but if you need more fidelity, refer to [1319] https://developer.gnome.org/
    NetworkManager/stable/NetworkManager.conf.html#device-spec or the "Device List Format"
    Appendix of NetworkManager.conf(5).

    Type: list of strings

    Default: [ ]

    Declared by:

    [1320]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1321]networking.networkmanager.wifi.backend

    Specify the Wi-Fi backend used for the device. Currently supported are wpa_supplicant or iwd
    (experimental).

    Type: one of "wpa_supplicant", "iwd"

    Default: "wpa_supplicant"

    Declared by:

    [1322]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1323]networking.networkmanager.wifi.macAddress

    Set the MAC address of the interface.

    "XX:XX:XX:XX:XX:XX"

        MAC address of the interface

    "permanent"

        Use the permanent MAC address of the device

    "preserve"

        Don’t change the MAC address of the device upon activation

    "random"

        Generate a randomized value upon each connect

    "stable"

        Generate a stable, hashed MAC address

    Type: string or one of "permanent", "preserve", "random", "stable"

    Default: "preserve"

    Example: "00:11:22:33:44:55"

    Declared by:

    [1324]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1325]networking.networkmanager.wifi.powersave

    Whether to enable Wi-Fi power saving.

    Type: null or boolean

    Default: null

    Declared by:

    [1326]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1327]networking.networkmanager.wifi.scanRandMacAddress

    Whether to enable MAC address randomization of a Wi-Fi device during scanning.

    Type: boolean

    Default: true

    Declared by:

    [1328]<nixpkgs/nixos/modules/services/networking/networkmanager.nix>

[1329]networking.nftables.enable

    Whether to enable nftables. nftables is a Linux-based packet filtering framework intended to
    replace frameworks like iptables.

    This conflicts with the standard networking firewall, so make sure to disable it before using
    nftables.

    Note that if you have Docker enabled you will not be able to use nftables without
    intervention. Docker uses iptables internally to setup NAT for containers. This module
    disables the ip_tables kernel module, however Docker automatically loads the module. Please
    see [1] for more information.

    There are other programs that use iptables internally too, such as libvirt.

    [1]: https://github.com/NixOS/nixpkgs/issues/24318#issuecomment-289216273

    Type: boolean

    Default: false

    Declared by:

    [1330]<nixpkgs/nixos/modules/services/networking/nftables.nix>

[1331]networking.nftables.ruleset

    The ruleset to be used with nftables. Should be in a format that can be loaded using "/bin/
    nft -f". The ruleset is updated atomically.

    Type: strings concatenated with "\n"

    Example:

    ''
    # Check out https://wiki.nftables.org/ for better documentation.
    # Table for both IPv4 and IPv6.
    table inet filter {
      # Block all incomming connections traffic except SSH and "ping".
      chain input {
        type filter hook input priority 0;

        # accept any localhost traffic
        iifname lo accept

        # accept traffic originated from us
        ct state {established, related} accept

        # ICMP
        # routers may also want: mld-listener-query, nd-router-solicit
        ip6 nexthdr icmpv6 icmpv6 type { destination-unreachable, packet-too-big, time-exceeded, parameter-problem, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert } accept
        ip protocol icmp icmp type { destination-unreachable, router-advertisement, time-exceeded, parameter-problem } accept

        # allow "ping"
        ip6 nexthdr icmpv6 icmpv6 type echo-request accept
        ip protocol icmp icmp type echo-request accept

        # accept SSH connections (required for a server)
        tcp dport 22 accept

        # count and drop any other traffic
        counter drop
      }

      # Allow all outgoing connections.
      chain output {
        type filter hook output priority 0;
        accept
      }

      chain forward {
        type filter hook forward priority 0;
        accept
      }
    }
    ''

    Declared by:

    [1332]<nixpkgs/nixos/modules/services/networking/nftables.nix>

[1333]networking.nftables.rulesetFile

    The ruleset file to be used with nftables. Should be in a format that can be loaded using
    "nft -f". The ruleset is updated atomically.

    Type: path

    Default: (build of nftables-rules)

    Declared by:

    [1334]<nixpkgs/nixos/modules/services/networking/nftables.nix>

[1335]networking.proxy.allProxy

    This option specifies the all_proxy environment variable.

    Type: null or string

    Default: null

    Example: "http://127.0.0.1:3128"

    Declared by:

    [1336]<nixpkgs/nixos/modules/config/networking.nix>

[1337]networking.proxy.default

    This option specifies the default value for httpProxy, httpsProxy, ftpProxy and rsyncProxy.

    Type: null or string

    Default: null

    Example: "http://127.0.0.1:3128"

    Declared by:

    [1338]<nixpkgs/nixos/modules/config/networking.nix>

[1339]networking.proxy.ftpProxy

    This option specifies the ftp_proxy environment variable.

    Type: null or string

    Default: null

    Example: "http://127.0.0.1:3128"

    Declared by:

    [1340]<nixpkgs/nixos/modules/config/networking.nix>

[1341]networking.proxy.httpProxy

    This option specifies the http_proxy environment variable.

    Type: null or string

    Default: null

    Example: "http://127.0.0.1:3128"

    Declared by:

    [1342]<nixpkgs/nixos/modules/config/networking.nix>

[1343]networking.proxy.httpsProxy

    This option specifies the https_proxy environment variable.

    Type: null or string

    Default: null

    Example: "http://127.0.0.1:3128"

    Declared by:

    [1344]<nixpkgs/nixos/modules/config/networking.nix>

[1345]networking.proxy.noProxy

    This option specifies the no_proxy environment variable. If a default proxy is used and
    noProxy is null, then noProxy will be set to 127.0.0.1,localhost.

    Type: null or string

    Default: null

    Example: "127.0.0.1,localhost,.localdomain"

    Declared by:

    [1346]<nixpkgs/nixos/modules/config/networking.nix>

[1347]networking.proxy.rsyncProxy

    This option specifies the rsync_proxy environment variable.

    Type: null or string

    Default: null

    Example: "http://127.0.0.1:3128"

    Declared by:

    [1348]<nixpkgs/nixos/modules/config/networking.nix>

[1349]networking.resolvconf.dnsExtensionMechanism

    Enable the edns0 option in resolv.conf. With that option set, glibc supports use of the
    extension mechanisms for DNS (EDNS) specified in RFC 2671. The most popular user of that
    feature is DNSSEC, which does not work without it.

    Type: boolean

    Default: true

    Declared by:

    [1350]<nixpkgs/nixos/modules/config/resolvconf.nix>

[1351]networking.resolvconf.dnsSingleRequest

    Recent versions of glibc will issue both ipv4 (A) and ipv6 (AAAA) address queries at the same
    time, from the same port. Sometimes upstream routers will systemically drop the ipv4 queries.
    The symptom of this problem is that 'getent hosts example.com' only returns ipv6 (or perhaps
    only ipv4) addresses. The workaround for this is to specify the option 'single-request' in /
    etc/resolv.conf. This option enables that.

    Type: boolean

    Default: false

    Declared by:

    [1352]<nixpkgs/nixos/modules/config/resolvconf.nix>

[1353]networking.resolvconf.extraConfig

    Extra configuration to append to resolvconf.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "libc=NO"

    Declared by:

    [1354]<nixpkgs/nixos/modules/config/resolvconf.nix>

[1355]networking.resolvconf.extraOptions

    Set the options in /etc/resolv.conf.

    Type: list of strings

    Default: [ ]

    Example: [ "ndots:1" "rotate" ]

    Declared by:

    [1356]<nixpkgs/nixos/modules/config/resolvconf.nix>

[1357]networking.resolvconf.useLocalResolver

    Use local DNS server for resolving.

    Type: boolean

    Default: false

    Declared by:

    [1358]<nixpkgs/nixos/modules/config/resolvconf.nix>

[1359]networking.rxe.enable

    Whether to enable RDMA over converged ethernet.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1360]<nixpkgs/nixos/modules/services/networking/rxe.nix>

[1361]networking.rxe.interfaces

    Enable RDMA on the listed interfaces. The corresponding virtual RDMA interfaces will be named
    rxe_<interface>. UDP port 4791 must be open on the respective ethernet interfaces.

    Type: list of strings

    Default: [ ]

    Example: [ "eth0" ]

    Declared by:

    [1362]<nixpkgs/nixos/modules/services/networking/rxe.nix>

[1363]networking.search

    The list of search paths used when resolving domain names.

    Type: list of strings

    Default: [ ]

    Example: [ "example.com" "home.arpa" ]

    Declared by:

    [1364]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1365]networking.sits

    This option allows you to define 6-to-4 interfaces which should be automatically created.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      hurricane = {
        remote = "10.0.0.1";
        local = "10.0.0.22";
        ttl = 255;
      };
      msipv6 = {
        remote = "192.168.0.1";
        dev = "enp3s0";
        ttl = 127;
      };
    }

    Declared by:

    [1366]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1367]networking.sits.<name>.dev

    The underlying network device on which the tunnel resides.

    Type: null or string

    Default: null

    Example: "enp4s0f0"

    Declared by:

    [1368]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1369]networking.sits.<name>.local

    The address of the local endpoint which the remote side should send packets to.

    Type: null or string

    Default: null

    Example: "10.0.0.22"

    Declared by:

    [1370]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1371]networking.sits.<name>.remote

    The address of the remote endpoint to forward traffic over.

    Type: null or string

    Default: null

    Example: "10.0.0.1"

    Declared by:

    [1372]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1373]networking.sits.<name>.ttl

    The time-to-live of the connection to the remote tunnel endpoint.

    Type: null or signed integer

    Default: null

    Example: 255

    Declared by:

    [1374]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1375]networking.supplicant

    Interfaces for which to start wpa_supplicant. The supplicant is used to scan for and
    associate with wireless networks, or to authenticate with 802.1x capable network switches.

    The value of this option is an attribute set. Each attribute configures a wpa_supplicant
    service, where the attribute name specifies the name of the interface that wpa_supplicant
    operates on. The attribute name can be a space separated list of interfaces. The attribute
    names WLAN, LAN and DBUS have a special meaning. WLAN and LAN are configurations for
    universal wpa_supplicant service that is started for each WLAN interface or for each LAN
    interface, respectively. DBUS defines a device-unrelated wpa_supplicant service that can be
    accessed through D-Bus.

    Type: attribute set of submodules

    Default: { }

    Example:

    { "wlan0 wlan1" = {
        configFile.path = "/etc/wpa_supplicant.conf";
        userControlled.group = "network";
        extraConf = ''
          ap_scan=1
          p2p_disabled=1
        '';
        extraCmdArgs = "-u -W";
        bridge = "br0";
      };
    }

    Declared by:

    [1376]<nixpkgs/nixos/modules/services/networking/supplicant.nix>

[1377]networking.supplicant.<name>.bridge

    Name of the bridge interface that wpa_supplicant should listen at.

    Type: string

    Default: ""

    Declared by:

    [1378]<nixpkgs/nixos/modules/services/networking/supplicant.nix>

[1379]networking.supplicant.<name>.configFile.path

    External wpa_supplicant.conf configuration file. The configuration options defined
    declaratively within networking.supplicant have precedence over options defined in
    configFile.

    Type: null or path

    Default: null

    Example:

    /etc/wpa_supplicant.conf

    Declared by:

    [1380]<nixpkgs/nixos/modules/services/networking/supplicant.nix>

[1381]networking.supplicant.<name>.configFile.writable

    Whether the configuration file at configFile.path should be written to by wpa_supplicant.

    Type: boolean

    Default: false

    Declared by:

    [1382]<nixpkgs/nixos/modules/services/networking/supplicant.nix>

[1383]networking.supplicant.<name>.driver

    Force a specific wpa_supplicant driver.

    Type: null or string

    Default: "nl80211,wext"

    Declared by:

    [1384]<nixpkgs/nixos/modules/services/networking/supplicant.nix>

[1385]networking.supplicant.<name>.extraCmdArgs

    Command line arguments to add when executing wpa_supplicant.

    Type: string

    Default: ""

    Example: "-e/run/wpa_supplicant/entropy.bin"

    Declared by:

    [1386]<nixpkgs/nixos/modules/services/networking/supplicant.nix>

[1387]networking.supplicant.<name>.extraConf

    Configuration options for wpa_supplicant.conf. Options defined here have precedence over
    options in configFile. NOTE: Do not write sensitive data into extraConf as it will be
    world-readable in the nix-store. For sensitive information use the configFile instead.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    ap_scan=1
    device_name=My-NixOS-Device
    device_type=1-0050F204-1
    driver_param=use_p2p_group_interface=1
    disable_scan_offload=1
    p2p_listen_reg_class=81
    p2p_listen_channel=1
    p2p_oper_reg_class=81
    p2p_oper_channel=1
    manufacturer=NixOS
    model_name=NixOS_Unstable
    model_number=2015
    ''

    Declared by:

    [1388]<nixpkgs/nixos/modules/services/networking/supplicant.nix>

[1389]networking.supplicant.<name>.userControlled.enable

    Allow normal users to control wpa_supplicant through wpa_gui or wpa_cli. This is useful for
    laptop users that switch networks a lot and don't want to depend on a large package such as
    NetworkManager just to pick nearby access points.

    Type: boolean

    Default: false

    Declared by:

    [1390]<nixpkgs/nixos/modules/services/networking/supplicant.nix>

[1391]networking.supplicant.<name>.userControlled.group

    Members of this group can control wpa_supplicant.

    Type: string

    Default: "wheel"

    Example: "network"

    Declared by:

    [1392]<nixpkgs/nixos/modules/services/networking/supplicant.nix>

[1393]networking.supplicant.<name>.userControlled.socketDir

    Directory of sockets for controlling wpa_supplicant.

    Type: string

    Default: "/run/wpa_supplicant"

    Declared by:

    [1394]<nixpkgs/nixos/modules/services/networking/supplicant.nix>

[1395]networking.tcpcrypt.enable

    Whether to enable opportunistic TCP encryption. If the other end speaks Tcpcrypt, then your
    traffic will be encrypted; otherwise it will be sent in clear text. Thus, Tcpcrypt alone
    provides no guarantees -- it is best effort. If, however, a Tcpcrypt connection is successful
    and any attackers that exist are passive, then Tcpcrypt guarantees privacy.

    Type: boolean

    Default: false

    Declared by:

    [1396]<nixpkgs/nixos/modules/services/networking/tcpcrypt.nix>

[1397]networking.tempAddresses

    Whether to enable IPv6 Privacy Extensions for interfaces not configured explicitly in [1398]
    networking.interfaces.<name>.tempAddress.

    This sets the ipv6.conf.*.use_tempaddr sysctl for all interfaces. Possible values are:

      □ "default" to generate IPv6 temporary addresses and use these as source addresses in
        routing;

      □ "disabled" to completely disable IPv6 temporary addresses;

      □ "enabled" to generate IPv6 temporary addresses but still use EUI-64 addresses as source
        addresses;

    Type: one of "default", "disabled", "enabled"

    Default: "default"

    Declared by:

    [1399]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1400]networking.timeServers

    The set of NTP servers from which to synchronise.

    Type: list of strings

    Default: [ "0.nixos.pool.ntp.org" "1.nixos.pool.ntp.org" "2.nixos.pool.ntp.org"
    "3.nixos.pool.ntp.org" ]

    Declared by:

    [1401]<nixpkgs/nixos/modules/config/networking.nix>

[1402]networking.useDHCP

    Whether to use DHCP to obtain an IP address and other configuration for all network
    interfaces that are not manually configured.

    Using this option is highly discouraged and also incompatible with networking.useNetworkd.
    Please use networking.interfaces.<name>.useDHCP instead and set this to false.

    Type: boolean

    Default: true

    Declared by:

    [1403]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1404]networking.useHostResolvConf

    In containers, whether to use the resolv.conf supplied by the host.

    Type: boolean

    Default: false

    Declared by:

    [1405]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1406]networking.useNetworkd

    Whether we should use networkd as the network configuration backend or the legacy script
    based system. Note that this option is experimental, enable at your own risk.

    Type: boolean

    Default: false

    Declared by:

    [1407]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1408]networking.usePredictableInterfaceNames

    Whether to assign [1409]predictable names to network interfaces. If enabled, interfaces are
    assigned names that contain topology information (e.g. wlp3s0) and thus should be stable
    across reboots. If disabled, names depend on the order in which interfaces are discovered by
    the kernel, which may change randomly across reboots; for instance, you may find eth0 and
    eth1 flipping unpredictably.

    Type: boolean

    Default: true

    Declared by:

    [1410]<nixpkgs/nixos/modules/services/hardware/udev.nix>

[1411]networking.vlans

    This option allows you to define vlan devices that tag packets on top of a physical
    interface. The value of this option is an attribute set. Each attribute specifies a vlan,
    with the name specifying the name of the vlan interface.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      vlan0 = {
        id = 3;
        interface = "enp3s0";
      };
      vlan1 = {
        id = 1;
        interface = "wlan0";
      };
    }

    Declared by:

    [1412]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1413]networking.vlans.<name>.id

    The vlan identifier

    Type: signed integer

    Example: 1

    Declared by:

    [1414]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1415]networking.vlans.<name>.interface

    The interface the vlan will transmit packets through.

    Type: string

    Example: "enp4s0"

    Declared by:

    [1416]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1417]networking.vswitches

    This option allows you to define Open vSwitches that connect physical networks together. The
    value of this option is an attribute set. Each attribute specifies a vswitch, with the
    attribute name specifying the name of the vswitch's network interface.

    Type: attribute set of submodules

    Default: { }

    Example: { vs0 = { interfaces = { eth0 = { } ; lo1 = { type = "internal"; } ; } ; } ; vs1 = {
    interfaces = [ { name = "eth2"; } { name = "lo2"; type = "internal"; } ] ; } ; }

    Declared by:

    [1418]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1419]networking.vswitches.<name>.controllers

    Specify the controller targets. For the allowed options see man 8 ovs-vsctl.

    Type: list of strings

    Default: [ ]

    Example: [ "ptcp:6653:[::1]" ]

    Declared by:

    [1420]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1421]networking.vswitches.<name>.extraOvsctlCmds

    Commands to manipulate the Open vSwitch database. Every line executed with ovs-vsctl. All
    commands are bundled together with the operations for adding the interfaces into one atomic
    operation.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    set-fail-mode <switch_name> secure
    set Bridge <switch_name> stp_enable=true
    ''

    Declared by:

    [1422]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1423]networking.vswitches.<name>.interfaces

    The physical network interfaces connected by the vSwitch.

    Type: attribute set of submodules

    Example: [ "eth0" "eth1" ]

    Declared by:

    [1424]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1425]networking.vswitches.<name>.interfaces.<name>.name

    Name of the interface

    Type: string

    Example: "eth0"

    Declared by:

    [1426]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1427]networking.vswitches.<name>.interfaces.<name>.type

    Openvswitch type to assign to interface

    Type: null or string

    Default: null

    Example: "internal"

    Declared by:

    [1428]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1429]networking.vswitches.<name>.interfaces.<name>.vlan

    Vlan tag to apply to interface

    Type: null or signed integer

    Default: null

    Example: 10

    Declared by:

    [1430]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1431]networking.vswitches.<name>.openFlowRules

    OpenFlow rules to insert into the Open vSwitch. All openFlowRules are loaded with ovs-ofctl
    within one atomic operation.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    actions=normal
    ''

    Declared by:

    [1432]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1433]networking.vswitches.<name>.openFlowVersion

    Version of OpenFlow protocol to use when communicating with the switch internally (e.g. with
    openFlowRules).

    Type: string

    Default: "OpenFlow13"

    Declared by:

    [1434]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1435]networking.vswitches.<name>.supportedOpenFlowVersions

    Supported versions to enable on this switch.

    Type: list of strings

    Default: [ "OpenFlow13" ]

    Example: [ "OpenFlow10" "OpenFlow13" "OpenFlow14" ]

    Declared by:

    [1436]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1437]networking.wg-quick.interfaces

    Wireguard interfaces.

    Type: attribute set of submodules

    Default: { }

    Example: { wg0 = { address = [ "192.168.20.4/24" ] ; peers = [ { allowedIPs = [ "192.168.20.1
    /32" ] ; endpoint = "demo.wireguard.io:12913"; publicKey =
    "xTIBA5rboUvnH4htodjb6e697QjLERt1NAB4mZqp8Dg="; } ] ; privateKey =
    "yAnz5TF+lXXJte14tji3zlMNq+hd2rYUIgJBgB3fBmk="; } ; }

    Declared by:

    [1438]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1439]networking.wg-quick.interfaces.<name>.address

    The IP addresses of the interface.

    Type: list of strings

    Default: [ ]

    Example: [ "192.168.2.1/24" ]

    Declared by:

    [1440]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1441]networking.wg-quick.interfaces.<name>.dns

    The IP addresses of DNS servers to configure.

    Type: list of strings

    Default: [ ]

    Example: [ "192.168.2.2" ]

    Declared by:

    [1442]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1443]networking.wg-quick.interfaces.<name>.listenPort

    16-bit port for listening. Optional; if not specified, automatically generated based on
    interface name.

    Type: null or signed integer

    Default: null

    Example: 51820

    Declared by:

    [1444]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1445]networking.wg-quick.interfaces.<name>.mtu

    If not specified, the MTU is automatically determined from the endpoint addresses or the
    system default route, which is usually a sane choice. However, to manually specify an MTU to
    override this automatic discovery, this value may be specified explicitly.

    Type: null or signed integer

    Default: null

    Example: 1248

    Declared by:

    [1446]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1447]networking.wg-quick.interfaces.<name>.peers

    Peers linked to the interface.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [1448]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1449]networking.wg-quick.interfaces.<name>.peers.*.allowedIPs

    List of IP (v4 or v6) addresses with CIDR masks from which this peer is allowed to send
    incoming traffic and to which outgoing traffic for this peer is directed. The catch-all
    0.0.0.0/0 may be specified for matching all IPv4 addresses, and ::/0 may be specified for
    matching all IPv6 addresses.

    Type: list of strings

    Example: [ "10.192.122.3/32" "10.192.124.1/24" ]

    Declared by:

    [1450]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1451]networking.wg-quick.interfaces.<name>.peers.*.endpoint

    Endpoint IP or hostname of the peer, followed by a colon, and then a port number of the peer.

    Type: null or string

    Default: null

    Example: "demo.wireguard.io:12913"

    Declared by:

    [1452]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1453]networking.wg-quick.interfaces.<name>.peers.*.persistentKeepalive

    This is optional and is by default off, because most users will not need it. It represents,
    in seconds, between 1 and 65535 inclusive, how often to send an authenticated empty packet to
    the peer, for the purpose of keeping a stateful firewall or NAT mapping valid persistently.
    For example, if the interface very rarely sends traffic, but it might at anytime receive
    traffic from a peer, and it is behind NAT, the interface might benefit from having a
    persistent keepalive interval of 25 seconds; however, most users will not need this.

    Type: null or signed integer

    Default: null

    Example: 25

    Declared by:

    [1454]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1455]networking.wg-quick.interfaces.<name>.peers.*.presharedKey

    Base64 preshared key generated by wg genpsk. Optional, and may be omitted. This option adds
    an additional layer of symmetric-key cryptography to be mixed into the already existing
    public-key cryptography, for post-quantum resistance.

    Warning: Consider using presharedKeyFile instead if you do not want to store the key in the
    world-readable Nix store.

    Type: null or string

    Default: null

    Example: "rVXs/Ni9tu3oDBLS4hOyAUAa1qTWVA3loR8eL20os3I="

    Declared by:

    [1456]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1457]networking.wg-quick.interfaces.<name>.peers.*.presharedKeyFile

    File pointing to preshared key as generated by wg genpsk. Optional, and may be omitted. This
    option adds an additional layer of symmetric-key cryptography to be mixed into the already
    existing public-key cryptography, for post-quantum resistance.

    Type: null or string

    Default: null

    Example: "/private/wireguard_psk"

    Declared by:

    [1458]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1459]networking.wg-quick.interfaces.<name>.peers.*.publicKey

    The base64 public key to the peer.

    Type: string

    Example: "xTIBA5rboUvnH4htodjb6e697QjLERt1NAB4mZqp8Dg="

    Declared by:

    [1460]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1461]networking.wg-quick.interfaces.<name>.postDown

    Command called after the interface is taken down.

    Type: strings concatenated with "\n" or list of strings convertible to it

    Default: ""

    Example:

    ${pkgs.iproute2}/bin/ip netns del foo

    Declared by:

    [1462]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1463]networking.wg-quick.interfaces.<name>.postUp

    Commands called after the interface setup.

    Type: strings concatenated with "\n" or list of strings convertible to it

    Default: ""

    Example:

    ${pkgs.iproute2}/bin/ip netns add foo

    Declared by:

    [1464]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1465]networking.wg-quick.interfaces.<name>.preDown

    Command called before the interface is taken down.

    Type: strings concatenated with "\n" or list of strings convertible to it

    Default: ""

    Example:

    ${pkgs.iproute2}/bin/ip netns del foo

    Declared by:

    [1466]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1467]networking.wg-quick.interfaces.<name>.preUp

    Commands called at the start of the interface setup.

    Type: strings concatenated with "\n" or list of strings convertible to it

    Default: ""

    Example:

    ${pkgs.iproute2}/bin/ip netns add foo

    Declared by:

    [1468]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1469]networking.wg-quick.interfaces.<name>.privateKey

    Base64 private key generated by wg genkey.

    Warning: Consider using privateKeyFile instead if you do not want to store the key in the
    world-readable Nix store.

    Type: null or string

    Default: null

    Example: "yAnz5TF+lXXJte14tji3zlMNq+hd2rYUIgJBgB3fBmk="

    Declared by:

    [1470]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1471]networking.wg-quick.interfaces.<name>.privateKeyFile

    Private key file as generated by wg genkey.

    Type: null or string

    Default: null

    Example: "/private/wireguard_key"

    Declared by:

    [1472]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1473]networking.wg-quick.interfaces.<name>.table

    The kernel routing table to add this interface's associated routes to. Setting this is useful
    for e.g. policy routing ("ip rule") or virtual routing and forwarding ("ip vrf"). Both
    numeric table IDs and table names (/etc/rt_tables) can be used. Defaults to "main".

    Type: null or string

    Default: null

    Example: "main"

    Declared by:

    [1474]<nixpkgs/nixos/modules/services/networking/wg-quick.nix>

[1475]networking.wicd.enable

    Whether to start wicd. Wired and wireless network configurations can then be managed by
    wicd-client.

    Type: boolean

    Default: false

    Declared by:

    [1476]<nixpkgs/nixos/modules/services/networking/wicd.nix>

[1477]networking.wireguard.enable

    Whether to enable WireGuard.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1478]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1479]networking.wireguard.interfaces

    WireGuard interfaces.

    Type: attribute set of submodules

    Default: { }

    Example: { wg0 = { ips = [ "192.168.20.4/24" ] ; peers = [ { allowedIPs = [ "192.168.20.1/32"
    ] ; endpoint = "demo.wireguard.io:12913"; publicKey =
    "xTIBA5rboUvnH4htodjb6e697QjLERt1NAB4mZqp8Dg="; } ] ; privateKey =
    "yAnz5TF+lXXJte14tji3zlMNq+hd2rYUIgJBgB3fBmk="; } ; }

    Declared by:

    [1480]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1481]networking.wireguard.interfaces.<name>.allowedIPsAsRoutes

    Determines whether to add allowed IPs as routes or not.

    Type: boolean

    Default: true

    Example: false

    Declared by:

    [1482]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1483]networking.wireguard.interfaces.<name>.generatePrivateKeyFile

    Automatically generate a private key with wg genkey, at the privateKeyFile location.

    Type: boolean

    Default: false

    Declared by:

    [1484]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1485]networking.wireguard.interfaces.<name>.interfaceNamespace

    The pre-existing network namespace the WireGuard interface is moved to. The special value
    init means the init namespace. When null, the interface is not moved. See [1486]documentation
    .

    Type: null or string

    Default: null

    Example: "init"

    Declared by:

    [1487]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1488]networking.wireguard.interfaces.<name>.ips

    The IP addresses of the interface.

    Type: list of strings

    Default: [ ]

    Example: [ "192.168.2.1/24" ]

    Declared by:

    [1489]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1490]networking.wireguard.interfaces.<name>.listenPort

    16-bit port for listening. Optional; if not specified, automatically generated based on
    interface name.

    Type: null or signed integer

    Default: null

    Example: 51820

    Declared by:

    [1491]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1492]networking.wireguard.interfaces.<name>.peers

    Peers linked to the interface.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [1493]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1494]networking.wireguard.interfaces.<name>.peers.*.allowedIPs

    List of IP (v4 or v6) addresses with CIDR masks from which this peer is allowed to send
    incoming traffic and to which outgoing traffic for this peer is directed. The catch-all
    0.0.0.0/0 may be specified for matching all IPv4 addresses, and ::/0 may be specified for
    matching all IPv6 addresses.

    Type: list of strings

    Example: [ "10.192.122.3/32" "10.192.124.1/24" ]

    Declared by:

    [1495]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1496]networking.wireguard.interfaces.<name>.peers.*.endpoint

    Endpoint IP or hostname of the peer, followed by a colon, and then a port number of the peer.

    Type: null or string

    Default: null

    Example: "demo.wireguard.io:12913"

    Declared by:

    [1497]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1498]networking.wireguard.interfaces.<name>.peers.*.persistentKeepalive

    This is optional and is by default off, because most users will not need it. It represents,
    in seconds, between 1 and 65535 inclusive, how often to send an authenticated empty packet to
    the peer, for the purpose of keeping a stateful firewall or NAT mapping valid persistently.
    For example, if the interface very rarely sends traffic, but it might at anytime receive
    traffic from a peer, and it is behind NAT, the interface might benefit from having a
    persistent keepalive interval of 25 seconds; however, most users will not need this.

    Type: null or signed integer

    Default: null

    Example: 25

    Declared by:

    [1499]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1500]networking.wireguard.interfaces.<name>.peers.*.presharedKey

    Base64 preshared key generated by wg genpsk. Optional, and may be omitted. This option adds
    an additional layer of symmetric-key cryptography to be mixed into the already existing
    public-key cryptography, for post-quantum resistance.

    Warning: Consider using presharedKeyFile instead if you do not want to store the key in the
    world-readable Nix store.

    Type: null or string

    Default: null

    Example: "rVXs/Ni9tu3oDBLS4hOyAUAa1qTWVA3loR8eL20os3I="

    Declared by:

    [1501]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1502]networking.wireguard.interfaces.<name>.peers.*.presharedKeyFile

    File pointing to preshared key as generated by wg genpsk. Optional, and may be omitted. This
    option adds an additional layer of symmetric-key cryptography to be mixed into the already
    existing public-key cryptography, for post-quantum resistance.

    Type: null or string

    Default: null

    Example: "/private/wireguard_psk"

    Declared by:

    [1503]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1504]networking.wireguard.interfaces.<name>.peers.*.publicKey

    The base64 public key of the peer.

    Type: string

    Example: "xTIBA5rboUvnH4htodjb6e697QjLERt1NAB4mZqp8Dg="

    Declared by:

    [1505]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1506]networking.wireguard.interfaces.<name>.postSetup

    Commands called at the end of the interface setup.

    Type: strings concatenated with "\n" or list of strings convertible to it

    Default: ""

    Example:

    printf "nameserver 10.200.100.1" | ${pkgs.openresolv}/bin/resolvconf -a wg0 -m 0

    Declared by:

    [1507]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1508]networking.wireguard.interfaces.<name>.postShutdown

    Commands called after shutting down the interface.

    Type: strings concatenated with "\n" or list of strings convertible to it

    Default: ""

    Example:

    ${pkgs.openresolv}/bin/resolvconf -d wg0

    Declared by:

    [1509]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1510]networking.wireguard.interfaces.<name>.preSetup

    Commands called at the start of the interface setup.

    Type: strings concatenated with "\n" or list of strings convertible to it

    Default: ""

    Example:

    ${pkgs.iproute2}/bin/ip netns add foo

    Declared by:

    [1511]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1512]networking.wireguard.interfaces.<name>.privateKey

    Base64 private key generated by wg genkey.

    Warning: Consider using privateKeyFile instead if you do not want to store the key in the
    world-readable Nix store.

    Type: null or string

    Default: null

    Example: "yAnz5TF+lXXJte14tji3zlMNq+hd2rYUIgJBgB3fBmk="

    Declared by:

    [1513]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1514]networking.wireguard.interfaces.<name>.privateKeyFile

    Private key file as generated by wg genkey.

    Type: null or string

    Default: null

    Example: "/private/wireguard_key"

    Declared by:

    [1515]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1516]networking.wireguard.interfaces.<name>.socketNamespace

    The pre-existing network namespace in which the WireGuard interface is created, and which
    retains the socket even if the interface is moved via interfaceNamespace. When null, the
    interface is created in the init namespace. See [1517]documentation.

    Type: null or string

    Default: null

    Example: "container"

    Declared by:

    [1518]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1519]networking.wireguard.interfaces.<name>.table

    The kernel routing table to add this interface's associated routes to. Setting this is useful
    for e.g. policy routing ("ip rule") or virtual routing and forwarding ("ip vrf"). Both
    numeric table IDs and table names (/etc/rt_tables) can be used. Defaults to "main".

    Type: string

    Default: "main"

    Declared by:

    [1520]<nixpkgs/nixos/modules/services/networking/wireguard.nix>

[1521]networking.wireless.enable

    Whether to enable wpa_supplicant.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1522]<nixpkgs/nixos/modules/services/networking/wpa_supplicant.nix>

[1523]networking.wireless.allowAuxiliaryImperativeNetworks

    Whether to allow configuring networks "imperatively" (e.g. via wpa_supplicant_gui) and
    declaratively via [1524]networking.wireless.networks.

    Please note that this adds a custom patch to wpa_supplicant.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1525]<nixpkgs/nixos/modules/services/networking/wpa_supplicant.nix>

[1526]networking.wireless.athUserRegulatoryDomain

    If enabled, sets the ATH_USER_REGD kernel config switch to true to disable the enforcement of
    EEPROM regulatory restrictions for ath drivers. Requires at least Linux 5.8.

    Type: boolean

    Default: false

    Declared by:

    [1527]<nixpkgs/nixos/modules/hardware/network/ath-user-regd.nix>

[1528]networking.wireless.driver

    Force a specific wpa_supplicant driver.

    Type: string

    Default: "nl80211,wext"

    Declared by:

    [1529]<nixpkgs/nixos/modules/services/networking/wpa_supplicant.nix>

[1530]networking.wireless.extraConfig

    Extra lines appended to the configuration file. See wpa_supplicant.conf(5) for available
    options.

    Type: string

    Default: ""

    Example:

    ''
    p2p_disabled=1
    ''

    Declared by:

    [1531]<nixpkgs/nixos/modules/services/networking/wpa_supplicant.nix>

[1532]networking.wireless.interfaces

    The interfaces wpa_supplicant will use. If empty, it will automatically use all wireless
    interfaces.

    Warning: The automatic discovery of interfaces does not work reliably on boot: it may fail
    and leave the system without network. When possible, specify a known interface name.

    Type: list of strings

    Default: [ ]

    Example: [ "wlan0" "wlan1" ]

    Declared by:

    [1533]<nixpkgs/nixos/modules/services/networking/wpa_supplicant.nix>

[1534]networking.wireless.iwd.enable

    Whether to enable iwd.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1535]<nixpkgs/nixos/modules/services/networking/iwd.nix>

[1536]networking.wireless.networks

    The network definitions to automatically connect to when wpa_supplicant is running. If this
    parameter is left empty wpa_supplicant will use /etc/wpa_supplicant.conf as the configuration
    file.

    Type: attribute set of submodules

    Default: { }

    Example:

    { echelon = {                   # SSID with no spaces or special characters
        psk = "abcdefgh";
      };
      "echelon's AP" = {            # SSID with spaces and/or special characters
         psk = "ijklmnop";
      };
      "free.wifi" = {};             # Public wireless network
    }

    Declared by:

    [1537]<nixpkgs/nixos/modules/services/networking/wpa_supplicant.nix>

[1538]networking.wireless.networks.<name>.auth

    Use this option to configure advanced authentication methods like EAP. See 
    wpa_supplicant.conf(5) for example configurations.

    Mutually exclusive with psk and pskRaw.

    Type: null or string

    Default: null

    Example:

    ''
    key_mgmt=WPA-EAP
    eap=PEAP
    identity="user@example.com"
    password="secret"
    ''

    Declared by:

    [1539]<nixpkgs/nixos/modules/services/networking/wpa_supplicant.nix>

[1540]networking.wireless.networks.<name>.extraConfig

    Extra configuration lines appended to the network block. See wpa_supplicant.conf(5) for
    available options.

    Type: string

    Default: ""

    Example:

    ''
    bssid_blacklist=02:11:22:33:44:55 02:22:aa:44:55:66
    ''

    Declared by:

    [1541]<nixpkgs/nixos/modules/services/networking/wpa_supplicant.nix>

[1542]networking.wireless.networks.<name>.hidden

    Set this to true if the SSID of the network is hidden.

    Type: boolean

    Default: false

    Example:

    { echelon = {
        hidden = true;
        psk = "abcdefgh";
      };
    }

    Declared by:

    [1543]<nixpkgs/nixos/modules/services/networking/wpa_supplicant.nix>

[1544]networking.wireless.networks.<name>.priority

    By default, all networks will get same priority group (0). If some of the networks are more
    desirable, this field can be used to change the order in which wpa_supplicant goes through
    the networks when selecting a BSS. The priority groups will be iterated in decreasing
    priority (i.e., the larger the priority value, the sooner the network is matched against the
    scan results). Within each priority group, networks will be selected based on security
    policy, signal strength, etc.

    Type: null or signed integer

    Default: null

    Declared by:

    [1545]<nixpkgs/nixos/modules/services/networking/wpa_supplicant.nix>

[1546]networking.wireless.networks.<name>.psk

    The network's pre-shared key in plaintext defaulting to being a network without any
    authentication.

    Be aware that these will be written to the nix store in plaintext!

    Mutually exclusive with pskRaw.

    Type: null or string

    Default: null

    Declared by:

    [1547]<nixpkgs/nixos/modules/services/networking/wpa_supplicant.nix>

[1548]networking.wireless.networks.<name>.pskRaw

    The network's pre-shared key in hex defaulting to being a network without any authentication.

    Mutually exclusive with psk.

    Type: null or string

    Default: null

    Declared by:

    [1549]<nixpkgs/nixos/modules/services/networking/wpa_supplicant.nix>

[1550]networking.wireless.userControlled.enable

    Allow normal users to control wpa_supplicant through wpa_gui or wpa_cli. This is useful for
    laptop users that switch networks a lot and don't want to depend on a large package such as
    NetworkManager just to pick nearby access points.

    When using a declarative network specification you cannot persist any settings via wpa_gui or
    wpa_cli.

    Type: boolean

    Default: false

    Declared by:

    [1551]<nixpkgs/nixos/modules/services/networking/wpa_supplicant.nix>

[1552]networking.wireless.userControlled.group

    Members of this group can control wpa_supplicant.

    Type: string

    Default: "wheel"

    Example: "network"

    Declared by:

    [1553]<nixpkgs/nixos/modules/services/networking/wpa_supplicant.nix>

[1554]networking.wlanInterfaces

    Creating multiple WLAN interfaces on top of one physical WLAN device (NIC).

    The name of the WLAN interface corresponds to the name of the attribute. A NIC is referenced
    by the persistent device name of the WLAN interface that udev assigns to a NIC by default. If
    a NIC supports multiple WLAN interfaces, then the one NIC can be used as device for multiple
    WLAN interfaces. If a NIC is used for creating WLAN interfaces, then the default WLAN
    interface with a persistent device name form udev is not created. A WLAN interface with the
    persistent name assigned from udev would have to be created explicitly.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      wlan-station0 = {
          device = "wlp6s0";
      };
      wlan-adhoc0 = {
          type = "ibss";
          device = "wlp6s0";
          mac = "02:00:00:00:00:01";
      };
      wlan-p2p0 = {
          device = "wlp6s0";
          mac = "02:00:00:00:00:02";
      };
      wlan-ap0 = {
          device = "wlp6s0";
          mac = "02:00:00:00:00:03";
      };
    }

    Declared by:

    [1555]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1556]networking.wlanInterfaces.<name>.device

    The name of the underlying hardware WLAN device as assigned by udev.

    Type: string

    Example: "wlp6s0"

    Declared by:

    [1557]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1558]networking.wlanInterfaces.<name>.flags

    Flags for interface of type monitor.

    Type: null or one of "none", "fcsfail", "control", "otherbss", "cook", "active"

    Default: null

    Example: "control"

    Declared by:

    [1559]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1560]networking.wlanInterfaces.<name>.fourAddr

    Whether to enable 4-address mode with type managed.

    Type: null or boolean

    Default: null

    Declared by:

    [1561]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1562]networking.wlanInterfaces.<name>.mac

    MAC address to use for the device. If null, then the MAC of the underlying hardware WLAN
    device is used.

    INFO: Locally administered MAC addresses are of the form:

      □ x2:xx:xx:xx:xx:xx

      □ x6:xx:xx:xx:xx:xx

      □ xA:xx:xx:xx:xx:xx

      □ xE:xx:xx:xx:xx:xx

    Type: null or string

    Default: null

    Example: "02:00:00:00:00:01"

    Declared by:

    [1563]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1564]networking.wlanInterfaces.<name>.meshID

    MeshID of interface with type mesh.

    Type: null or string

    Default: null

    Declared by:

    [1565]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1566]networking.wlanInterfaces.<name>.type

    The type of the WLAN interface. The type has to be supported by the underlying hardware of
    the device.

    Type: one of "managed", "ibss", "monitor", "mesh", "wds"

    Default: "managed"

    Example: "ibss"

    Declared by:

    [1567]<nixpkgs/nixos/modules/tasks/network-interfaces.nix>

[1568]nix.package

    This option specifies the Nix package instance to use throughout the system.

    Type: package

    Default: "pkgs.nix"

    Declared by:

    [1569]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1570]nix.allowedUsers

    A list of names of users (separated by whitespace) that are allowed to connect to the Nix
    daemon. As with nix.trustedUsers, you can specify groups by prefixing them with @. Also, you
    can allow all users by specifying *. The default is *. Note that trusted users are always
    allowed to connect.

    Type: list of strings

    Default: [ "*" ]

    Example: [ "@wheel" "@builders" "alice" "bob" ]

    Declared by:

    [1571]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1572]nix.autoOptimiseStore

    If set to true, Nix automatically detects files in the store that have identical contents,
    and replaces them with hard links to a single copy. This saves disk space. If set to false
    (the default), you can still run nix-store --optimise to get rid of duplicate files.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1573]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1574]nix.binaryCachePublicKeys

    List of public keys used to sign binary caches. If nix.requireSignedBinaryCaches is enabled,
    then Nix will use a binary from a binary cache if and only if it is signed by any of the keys
    listed here. By default, only the key for cache.nixos.org is included.

    Type: list of strings

    Example: [ "hydra.nixos.org-1:CNHJZBh9K4tP3EKF6FkkgeVYsS3ohTl+oS0Qa8bezVs=" ]

    Declared by:

    [1575]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1576]nix.binaryCaches

    List of binary cache URLs used to obtain pre-built binaries of Nix packages.

    By default https://cache.nixos.org/ is added, to override it use lib.mkForce [].

    Type: list of strings

    Declared by:

    [1577]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1578]nix.buildCores

    This option defines the maximum number of concurrent tasks during one build. It affects,
    e.g., -j option for make. The special value 0 means that the builder should use all available
    CPU cores in the system. Some builds may become non-deterministic with this option; use with
    care! Packages will only be affected if enableParallelBuilding is set for them.

    Type: signed integer

    Default: 0

    Example: 64

    Declared by:

    [1579]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1580]nix.buildMachines

    This option lists the machines to be used if distributed builds are enabled (see
    nix.distributedBuilds). Nix will perform derivations on those machines via SSH by copying the
    inputs to the Nix store on the remote machine, starting the build, then copying the output
    back to the local Nix store.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [1581]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1582]nix.buildMachines.*.hostName

    The hostname of the build machine.

    Type: string

    Example: "nixbuilder.example.org"

    Declared by:

    [1583]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1584]nix.buildMachines.*.mandatoryFeatures

    A list of features mandatory for this builder. The builder will be ignored for derivations
    that don't require all features in this list. All mandatory features are automatically
    included in supportedFeatures.

    Type: list of strings

    Default: [ ]

    Example: [ "big-parallel" ]

    Declared by:

    [1585]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1586]nix.buildMachines.*.maxJobs

    The number of concurrent jobs the build machine supports. The build machine will enforce its
    own limits, but this allows hydra to schedule better since there is no work-stealing between
    build machines.

    Type: signed integer

    Default: 1

    Declared by:

    [1587]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1588]nix.buildMachines.*.speedFactor

    The relative speed of this builder. This is an arbitrary integer that indicates the speed of
    this builder, relative to other builders. Higher is faster.

    Type: signed integer

    Default: 1

    Declared by:

    [1589]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1590]nix.buildMachines.*.sshKey

    The path to the SSH private key with which to authenticate on the build machine. The private
    key must not have a passphrase. If null, the building user (root on NixOS machines) must have
    an appropriate ssh configuration to log in non-interactively.

    Note that for security reasons, this path must point to a file in the local filesystem, *not*
    to the nix store.

    Type: null or string

    Default: null

    Example: "/root/.ssh/id_buildhost_builduser"

    Declared by:

    [1591]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1592]nix.buildMachines.*.sshUser

    The username to log in as on the remote host. This user must be able to log in and run nix
    commands non-interactively. It must also be privileged to build derivations, so must be
    included in nix.trustedUsers.

    Type: null or string

    Default: null

    Example: "builder"

    Declared by:

    [1593]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1594]nix.buildMachines.*.supportedFeatures

    A list of features supported by this builder. The builder will be ignored for derivations
    that require features not in this list.

    Type: list of strings

    Default: [ ]

    Example: [ "kvm" "big-parallel" ]

    Declared by:

    [1595]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1596]nix.buildMachines.*.system

    The system type the build machine can execute derivations on. Either this attribute or
    systems must be present, where system takes precedence if both are set.

    Type: null or string

    Default: null

    Example: "x86_64-linux"

    Declared by:

    [1597]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1598]nix.buildMachines.*.systems

    The system types the build machine can execute derivations on. Either this attribute or
    system must be present, where system takes precedence if both are set.

    Type: list of strings

    Default: [ ]

    Example: [ "x86_64-linux" "aarch64-linux" ]

    Declared by:

    [1599]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1600]nix.checkConfig

    If enabled (the default), checks that Nix can parse the generated nix.conf.

    Type: boolean

    Default: true

    Declared by:

    [1601]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1602]nix.daemonIONiceLevel

    Nix daemon process I/O priority. This priority propagates to build processes. 0 is the
    default Unix process I/O priority, 7 is the lowest.

    Type: signed integer

    Default: 0

    Declared by:

    [1603]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1604]nix.daemonNiceLevel

    Nix daemon process priority. This priority propagates to build processes. 0 is the default
    Unix process priority, 19 is the lowest.

    Type: signed integer

    Default: 0

    Declared by:

    [1605]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1606]nix.distributedBuilds

    Whether to distribute builds to the machines listed in nix.buildMachines.

    Type: boolean

    Default: false

    Declared by:

    [1607]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1608]nix.extraOptions

    Additional text appended to nix.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    keep-outputs = true
    keep-derivations = true
    ''

    Declared by:

    [1609]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1610]nix.gc.automatic

    Automatically run the garbage collector at a specific time.

    Type: boolean

    Default: false

    Declared by:

    [1611]<nixpkgs/nixos/modules/services/misc/nix-gc.nix>

[1612]nix.gc.dates

    How often or when garbage collection is performed. For most desktop and server systems a
    sufficient garbage collection is once a week.

    The format is described in systemd.time(7).

    Type: string

    Default: "03:15"

    Example: "weekly"

    Declared by:

    [1613]<nixpkgs/nixos/modules/services/misc/nix-gc.nix>

[1614]nix.gc.options

    Options given to nix-collect-garbage when the garbage collector is run automatically.

    Type: string

    Default: ""

    Example: "--max-freed \$((64 * 1024**3))"

    Declared by:

    [1615]<nixpkgs/nixos/modules/services/misc/nix-gc.nix>

[1616]nix.gc.persistent

    Takes a boolean argument. If true, the time when the service unit was last triggered is
    stored on disk. When the timer is activated, the service unit is triggered immediately if it
    would have been triggered at least once during the time when the timer was inactive. Such
    triggering is nonetheless subject to the delay imposed by RandomizedDelaySec=. This is useful
    to catch up on missed runs of the service when the system was powered down.

    Type: boolean

    Default: true

    Example: false

    Declared by:

    [1617]<nixpkgs/nixos/modules/services/misc/nix-gc.nix>

[1618]nix.gc.randomizedDelaySec

    Add a randomized delay before each automatic upgrade. The delay will be chosen between zero
    and this value. This value must be a time span in the format specified by systemd.time(7)

    Type: string

    Default: "0"

    Example: "45min"

    Declared by:

    [1619]<nixpkgs/nixos/modules/services/misc/nix-gc.nix>

[1620]nix.maxJobs

    This option defines the maximum number of jobs that Nix will try to build in parallel. The
    default is auto, which means it will use all available logical cores. It is recommend to set
    it to the total number of logical cores in your system (e.g., 16 for two CPUs with 4 cores
    each and hyper-threading).

    Type: signed integer or one of "auto"

    Default: "auto"

    Example: 64

    Declared by:

    [1621]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1622]nix.nixPath

    The default Nix expression search path, used by the Nix evaluator to look up paths enclosed
    in angle brackets (e.g. <nixpkgs>).

    Type: list of strings

    Default: [ "nixpkgs=/nix/var/nix/profiles/per-user/root/channels/nixos" "nixos-config=/etc/
    nixos/configuration.nix" "/nix/var/nix/profiles/per-user/root/channels" ]

    Declared by:

    [1623]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1624]nix.nrBuildUsers

    Number of nixbld user accounts created to perform secure concurrent builds. If you receive an
    error message saying that “all build users are currently in use”, you should increase this
    value.

    Type: signed integer

    Declared by:

    [1625]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1626]nix.optimise.automatic

    Automatically run the nix store optimiser at a specific time.

    Type: boolean

    Default: false

    Declared by:

    [1627]<nixpkgs/nixos/modules/services/misc/nix-optimise.nix>

[1628]nix.optimise.dates

    Specification (in the format described by systemd.time(7)) of the time at which the optimiser
    will run.

    Type: list of strings

    Default: [ "03:45" ]

    Declared by:

    [1629]<nixpkgs/nixos/modules/services/misc/nix-optimise.nix>

[1630]nix.readOnlyStore

    If set, NixOS will enforce the immutability of the Nix store by making /nix/store a read-only
    bind mount. Nix will automatically make the store writable when needed.

    Type: boolean

    Default: true

    Declared by:

    [1631]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1632]nix.registry

    A system-wide flake registry.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [1633]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1634]nix.registry.<name>.exact

    Whether the from reference needs to match exactly. If set, a from reference like nixpkgs does
    not match with a reference like nixpkgs/nixos-20.03.

    Type: boolean

    Default: true

    Declared by:

    [1635]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1636]nix.registry.<name>.flake

    The flake input to which from> is to be rewritten.

    Type: unspecified

    Default: null

    Example:

    nixpkgs

    Declared by:

    [1637]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1638]nix.registry.<name>.from

    The flake reference to be rewritten.

    Type: attribute set of string or signed integer or boolean or packages

    Example: { id = "nixpkgs"; type = "indirect"; }

    Declared by:

    [1639]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1640]nix.registry.<name>.to

    The flake reference to which from> is to be rewritten.

    Type: attribute set of string or signed integer or boolean or packages

    Example: { owner = "my-org"; repo = "my-nixpkgs"; type = "github"; }

    Declared by:

    [1641]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1642]nix.requireSignedBinaryCaches

    If enabled (the default), Nix will only download binaries from binary caches if they are
    cryptographically signed with any of the keys listed in nix.binaryCachePublicKeys. If
    disabled, signatures are neither required nor checked, so it's strongly recommended that you
    use only trustworthy caches and https to prevent man-in-the-middle attacks.

    Type: boolean

    Default: true

    Declared by:

    [1643]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1644]nix.sandboxPaths

    Directories from the host filesystem to be included in the sandbox.

    Type: list of strings

    Default: [ ]

    Example: [ "/dev" "/proc" ]

    Declared by:

    [1645]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1646]nix.sshServe.enable

    Whether to enable serving the Nix store as a remote store via SSH.

    Type: boolean

    Default: false

    Declared by:

    [1647]<nixpkgs/nixos/modules/services/misc/nix-ssh-serve.nix>

[1648]nix.sshServe.keys

    A list of SSH public keys allowed to access the binary cache via SSH.

    Type: list of strings

    Default: [ ]

    Example: [ "ssh-dss AAAAB3NzaC1k... alice@example.org" ]

    Declared by:

    [1649]<nixpkgs/nixos/modules/services/misc/nix-ssh-serve.nix>

[1650]nix.sshServe.protocol

    The specific Nix-over-SSH protocol to use.

    Type: one of "ssh", "ssh-ng"

    Default: "ssh"

    Declared by:

    [1651]<nixpkgs/nixos/modules/services/misc/nix-ssh-serve.nix>

[1652]nix.systemFeatures

    The supported features of a machine

    Type: list of strings

    Example: [ "kvm" "big-parallel" "gccarch-skylake" ]

    Declared by:

    [1653]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1654]nix.trustedBinaryCaches

    List of binary cache URLs that non-root users can use (in addition to those specified using
    nix.binaryCaches) by passing --option binary-caches to Nix commands.

    Type: list of strings

    Default: [ ]

    Example: [ "https://hydra.nixos.org/" ]

    Declared by:

    [1655]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1656]nix.trustedUsers

    A list of names of users that have additional rights when connecting to the Nix daemon, such
    as the ability to specify additional binary caches, or to import unsigned NARs. You can also
    specify groups by prefixing them with @; for instance, @wheel means all users in the wheel
    group.

    Type: list of strings

    Default: [ "root" ]

    Example: [ "root" "alice" "@wheel" ]

    Declared by:

    [1657]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1658]nix.useSandbox

    If set, Nix will perform builds in a sandboxed environment that it will set up automatically
    for each build. This prevents impurities in builds by disallowing access to dependencies
    outside of the Nix store by using network and mount namespaces in a chroot environment. This
    is enabled by default even though it has a possible performance impact due to the initial
    setup time of a sandbox for each build. It doesn't affect derivation hashes, so changing this
    option will not trigger a rebuild of packages.

    Type: boolean or one of "relaxed"

    Default: true

    Declared by:

    [1659]<nixpkgs/nixos/modules/services/misc/nix-daemon.nix>

[1660]nixops.enableDeprecatedAutoLuks

    Whether to enable Enable the deprecated NixOps AutoLuks module.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1661]<nixpkgs/nixos/modules/misc/nixops-autoluks.nix>

[1662]nixpkgs.config

    The configuration of the Nix Packages collection. (For details, see the Nixpkgs
    documentation.) It allows you to set package configuration options.

    Ignored when nixpkgs.pkgs is set.

    Type: nixpkgs config

    Default: { }

    Example:

    { allowBroken = true; allowUnfree = true; }

    Declared by:

    [1663]<nixpkgs/nixos/modules/misc/nixpkgs.nix>

[1664]nixpkgs.crossSystem

    Specifies the platform for which NixOS should be built. Specify this only if it is different
    from nixpkgs.localSystem, the platform on which NixOS should be built. In other words,
    specify this to cross-compile NixOS. Otherwise it should be set as null, the default. See its
    description in the Nixpkgs manual for more details.

    Ignored when nixpkgs.pkgs is set.

    Type: null or attribute set

    Default: null

    Example: { config = "aarch64-unknown-linux-gnu"; system = "aarch64-linux"; }

    Declared by:

    [1665]<nixpkgs/nixos/modules/misc/nixpkgs.nix>

[1666]nixpkgs.localSystem

    Specifies the platform on which NixOS should be built. When nixpkgs.crossSystem is unset, it
    also specifies the platform for which NixOS should be built. If this option is unset, it
    defaults to the platform type of the machine where evaluation happens. Specifying this option
    is useful when doing distributed multi-platform deployment, or when building virtual
    machines. See its description in the Nixpkgs manual for more details.

    Ignored when nixpkgs.pkgs is set.

    Type: attribute set

    Default: (import "${nixos}/../lib").lib.systems.examples.aarch64-multiplatform

    Example: { config = "aarch64-unknown-linux-gnu"; system = "aarch64-linux"; }

    Declared by:

    [1667]<nixpkgs/nixos/modules/misc/nixpkgs.nix>

[1668]nixpkgs.overlays

    List of overlays to use with the Nix Packages collection. (For details, see the Nixpkgs
    documentation.) It allows you to override packages globally. Each function in the list takes
    as an argument the original Nixpkgs. The first argument should be used for finding
    dependencies, and the second should be used for overriding recipes.

    If nixpkgs.pkgs is set, overlays specified here will be applied after the overlays that were
    already present in nixpkgs.pkgs.

    Type: list of nixpkgs overlays

    Default: [ ]

    Example:

    [
      (self: super: {
        openssh = super.openssh.override {
          hpnSupport = true;
          kerberos = self.libkrb5;
        };
      })
    ]

    Declared by:

    [1669]<nixpkgs/nixos/modules/misc/nixpkgs.nix>

[1670]nixpkgs.pkgs

    If set, the pkgs argument to all NixOS modules is the value of this option, extended with
    nixpkgs.overlays, if that is also set. Either nixpkgs.crossSystem or nixpkgs.localSystem will
    be used in an assertion to check that the NixOS and Nixpkgs architectures match. Any other
    options in nixpkgs.*, notably config, will be ignored.

    If unset, the pkgs argument to all NixOS modules is determined as shown in the default value
    for this option.

    The default value imports the Nixpkgs source files relative to the location of this NixOS
    module, because NixOS and Nixpkgs are distributed together for consistency, so the nixos in
    the default value is in fact a relative path. The config, overlays, localSystem, and
    crossSystem come from this option's siblings.

    This option can be used by applications like NixOps to increase the performance of
    evaluation, or to create packages that depend on a container that should be built with the
    exact same evaluation of Nixpkgs, for example. Applications like this should set their
    default value using lib.mkDefault, so user-provided configuration can override it without
    using lib.

    Note that using a distinct version of Nixpkgs with NixOS may be an unexpected source of
    problems. Use this option with care.

    Type: An evaluation of Nixpkgs; the top level attribute set of packages

    Default: import "${nixos}/.." { inherit (cfg) config overlays localSystem crossSystem; }

    Example:

    import <nixpkgs> {}

    Declared by:

    [1671]<nixpkgs/nixos/modules/misc/nixpkgs.nix>

[1672]nixpkgs.system

    Specifies the Nix platform type on which NixOS should be built. It is better to specify
    nixpkgs.localSystem instead.

    {
      nixpkgs.system = ..;
    }

    is the same as

    {
      nixpkgs.localSystem.system = ..;
    }

    See nixpkgs.localSystem for more information.

    Ignored when nixpkgs.localSystem is set. Ignored when nixpkgs.pkgs is set.

    Type: string

    Example: "i686-linux"

    Declared by:

    [1673]<nixpkgs/nixos/modules/misc/nixpkgs.nix>

[1674]power.ups.enable

    Enables support for Power Devices, such as Uninterruptible Power Supplies, Power Distribution
    Units and Solar Controllers.

    Type: boolean

    Default: false

    Declared by:

    [1675]<nixpkgs/nixos/modules/services/monitoring/ups.nix>

[1676]power.ups.maxStartDelay

    This can be set as a global variable above your first UPS definition and it can also be set
    in a UPS section. This value controls how long upsdrvctl will wait for the driver to finish
    starting. This keeps your system from getting stuck due to a broken driver or UPS.

    Type: signed integer

    Default: 45

    Declared by:

    [1677]<nixpkgs/nixos/modules/services/monitoring/ups.nix>

[1678]power.ups.mode

    The MODE determines which part of the NUT is to be started, and which configuration files
    must be modified.

    The values of MODE can be:

    - none: NUT is not configured, or use the Integrated Power Management, or use some external
    system to startup NUT components. So nothing is to be started.

    - standalone: This mode address a local only configuration, with 1 UPS protecting the local
    system. This implies to start the 3 NUT layers (driver, upsd and upsmon) and the matching
    configuration files. This mode can also address UPS redundancy.

    - netserver: same as for the standalone configuration, but also need some more ACLs and
    possibly a specific LISTEN directive in upsd.conf. Since this MODE is opened to the network,
    a special care should be applied to security concerns.

    - netclient: this mode only requires upsmon.

    Type: string

    Default: "standalone"

    Declared by:

    [1679]<nixpkgs/nixos/modules/services/monitoring/ups.nix>

[1680]power.ups.schedulerRules

    File which contains the rules to handle UPS events.

    Type: string

    Example: "/etc/nixos/upssched.conf"

    Declared by:

    [1681]<nixpkgs/nixos/modules/services/monitoring/ups.nix>

[1682]power.ups.ups

    This is where you configure all the UPSes that this system will be monitoring directly. These
    are usually attached to serial ports, but USB devices are also supported.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [1683]<nixpkgs/nixos/modules/services/monitoring/ups.nix>

[1684]power.ups.ups.<name>.description

    Description of the UPS.

    Type: string

    Default: ""

    Declared by:

    [1685]<nixpkgs/nixos/modules/services/monitoring/ups.nix>

[1686]power.ups.ups.<name>.directives

    List of configuration directives for this UPS.

    Type: list of strings

    Default: [ ]

    Declared by:

    [1687]<nixpkgs/nixos/modules/services/monitoring/ups.nix>

[1688]power.ups.ups.<name>.driver

    Specify the program to run to talk to this UPS. apcsmart, bestups, and sec are some examples.

    Type: string

    Declared by:

    [1689]<nixpkgs/nixos/modules/services/monitoring/ups.nix>

[1690]power.ups.ups.<name>.maxStartDelay

    This can be set as a global variable above your first UPS definition and it can also be set
    in a UPS section. This value controls how long upsdrvctl will wait for the driver to finish
    starting. This keeps your system from getting stuck due to a broken driver or UPS.

    Type: null or signed integer

    Default: null

    Declared by:

    [1691]<nixpkgs/nixos/modules/services/monitoring/ups.nix>

[1692]power.ups.ups.<name>.port

    The serial port to which your UPS is connected. /dev/ttyS0 is usually the first port on Linux
    boxes, for example.

    Type: string

    Declared by:

    [1693]<nixpkgs/nixos/modules/services/monitoring/ups.nix>

[1694]power.ups.ups.<name>.shutdownOrder

    When you have multiple UPSes on your system, you usually need to turn them off in a certain
    order. upsdrvctl shuts down all the 0s, then the 1s, 2s, and so on. To exclude a UPS from the
    shutdown sequence, set this to -1.

    Type: signed integer

    Default: 0

    Declared by:

    [1695]<nixpkgs/nixos/modules/services/monitoring/ups.nix>

[1696]power.ups.ups.<name>.summary

    Lines which would be added inside ups.conf for handling this UPS.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [1697]<nixpkgs/nixos/modules/services/monitoring/ups.nix>

[1698]powerManagement.enable

    Whether to enable power management. This includes support for suspend-to-RAM and powersave
    features on laptops.

    Type: boolean

    Default: true

    Declared by:

    [1699]<nixpkgs/nixos/modules/config/power-management.nix>

[1700]powerManagement.cpuFreqGovernor

    Configure the governor used to regulate the frequency of the available CPUs. By default, the
    kernel configures the performance governor, although this may be overwritten in your
    hardware-configuration.nix file.

    Often used values: "ondemand", "powersave", "performance"

    Type: null or string

    Default: null

    Example: "ondemand"

    Declared by:

    [1701]<nixpkgs/nixos/modules/tasks/cpu-freq.nix>

[1702]powerManagement.cpufreq.max

    The maximum frequency the CPU will use. Defaults to the maximum possible.

    Type: null or unsigned integer, meaning >=0

    Default: null

    Example: 2200000

    Declared by:

    [1703]<nixpkgs/nixos/modules/tasks/cpu-freq.nix>

[1704]powerManagement.cpufreq.min

    The minimum frequency the CPU will use.

    Type: null or unsigned integer, meaning >=0

    Default: null

    Example: 800000

    Declared by:

    [1705]<nixpkgs/nixos/modules/tasks/cpu-freq.nix>

[1706]powerManagement.powerDownCommands

    Commands executed when the machine powers down. That is, they're executed both when the
    system shuts down and when it goes to suspend or hibernation.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    "${pkgs.hdparm}/sbin/hdparm -B 255 /dev/sda"

    Declared by:

    [1707]<nixpkgs/nixos/modules/config/power-management.nix>

[1708]powerManagement.powerUpCommands

    Commands executed when the machine powers up. That is, they're executed both when the system
    first boots and when it resumes from suspend or hibernation.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    "${pkgs.hdparm}/sbin/hdparm -B 255 /dev/sda"

    Declared by:

    [1709]<nixpkgs/nixos/modules/config/power-management.nix>

[1710]powerManagement.powertop.enable

    Whether to enable powertop auto tuning on startup.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1711]<nixpkgs/nixos/modules/tasks/powertop.nix>

[1712]powerManagement.resumeCommands

    Commands executed after the system resumes from suspend-to-RAM.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [1713]<nixpkgs/nixos/modules/config/power-management.nix>

[1714]powerManagement.scsiLinkPolicy

    SCSI link power management policy. The kernel default is "max_performance".

    "med_power_with_dipm" is supported by kernel versions 4.15 and newer.

    Type: null or one of "min_power", "max_performance", "medium_power", "med_power_with_dipm"

    Default: null

    Declared by:

    [1715]<nixpkgs/nixos/modules/tasks/scsi-link-power-management.nix>

[1716]programs.adb.enable

    Whether to configure system to use Android Debug Bridge (adb). To grant access to a user, it
    must be part of adbusers group: users.users.alice.extraGroups = ["adbusers"];

    Type: boolean

    Default: false

    Declared by:

    [1717]<nixpkgs/nixos/modules/programs/adb.nix>

[1718]programs.appgate-sdp.enable

    Whether to enable AppGate SDP VPN client.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1719]<nixpkgs/nixos/modules/programs/appgate-sdp.nix>

[1720]programs.atop.enable

    Whether to enable Atop.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1721]<nixpkgs/nixos/modules/programs/atop.nix>

[1722]programs.atop.package

    Which package to use for Atop.

    Type: package

    Default: (build of atop-2.6.0)

    Declared by:

    [1723]<nixpkgs/nixos/modules/programs/atop.nix>

[1724]programs.atop.atopRotateTimer.enable

    Whether to enable the atop-rotate timer, which restarts the atop service daily to make sure
    the data files are rotate.

    Type: boolean

    Default: true

    Declared by:

    [1725]<nixpkgs/nixos/modules/programs/atop.nix>

[1726]programs.atop.atopService.enable

    Whether to enable the atop service responsible for storing statistics for long-term analysis.

    Type: boolean

    Default: true

    Declared by:

    [1727]<nixpkgs/nixos/modules/programs/atop.nix>

[1728]programs.atop.atopacctService.enable

    Whether to enable the atopacct service which manages process accounting. This allows Atop to
    gather data about processes that disappeared in between two refresh intervals.

    Type: boolean

    Default: true

    Declared by:

    [1729]<nixpkgs/nixos/modules/programs/atop.nix>

[1730]programs.atop.atopgpu.enable

    Whether to install and enable the atopgpud daemon to get information about NVIDIA gpus.

    Type: boolean

    Default: false

    Declared by:

    [1731]<nixpkgs/nixos/modules/programs/atop.nix>

[1732]programs.atop.netatop.enable

    Whether to install and enable the netatop kernel module. Note: this sets the kernel taint
    flag "O" for loading out-of-tree modules.

    Type: boolean

    Default: false

    Declared by:

    [1733]<nixpkgs/nixos/modules/programs/atop.nix>

[1734]programs.atop.netatop.package

    Which package to use for netatop.

    Type: package

    Default: (build of netatop-5.10.48-3.1)

    Declared by:

    [1735]<nixpkgs/nixos/modules/programs/atop.nix>

[1736]programs.atop.settings

    Parameters to be written to /etc/atoprc.

    Type: attribute set

    Default: { }

    Example: { flags = "a1f"; interval = 5; }

    Declared by:

    [1737]<nixpkgs/nixos/modules/programs/atop.nix>

[1738]programs.atop.setuidWrapper.enable

    Whether to install a setuid wrapper for Atop. This is required to use some of the features as
    non-root user (e.g.: ipc information, netatop, atopgpu). Atop tries to drop the root
    privileges shortly after starting.

    Type: boolean

    Default: false

    Declared by:

    [1739]<nixpkgs/nixos/modules/programs/atop.nix>

[1740]programs.autojump.enable

    Whether to enable autojump.

    Type: boolean

    Default: false

    Declared by:

    [1741]<nixpkgs/nixos/modules/programs/autojump.nix>

[1742]programs.bandwhich.enable

    Whether to add bandwhich to the global environment and configure a setcap wrapper for it.

    Type: boolean

    Default: false

    Declared by:

    [1743]<nixpkgs/nixos/modules/programs/bandwhich.nix>

[1744]programs.bash.enableCompletion

    Whether to enable Bash completion for all interactive bash shells.

    Type: boolean

    Default: true

    Example: true

    Declared by:

    [1745]<nixpkgs/nixos/modules/programs/bash/bash-completion.nix>

[1746]programs.bash.enableLsColors

    Whether to enable extra colors in directory listings.

    Type: boolean

    Default: true

    Example: true

    Declared by:

    [1747]<nixpkgs/nixos/modules/programs/bash/ls-colors.nix>

[1748]programs.bash.interactiveShellInit

    Shell script code called during interactive bash shell initialisation.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [1749]<nixpkgs/nixos/modules/programs/bash/bash.nix>

[1750]programs.bash.loginShellInit

    Shell script code called during login bash shell initialisation.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [1751]<nixpkgs/nixos/modules/programs/bash/bash.nix>

[1752]programs.bash.promptInit

    Shell script code used to initialise the bash prompt.

    Type: strings concatenated with "\n"

    Default:

    ''
    # Provide a nice prompt if the terminal supports it.
    if [ "$TERM" != "dumb" -o -n "$INSIDE_EMACS" ]; then
      PROMPT_COLOR="1;31m"
      let $UID && PROMPT_COLOR="1;32m"
      if [ -n "$INSIDE_EMACS" -o "$TERM" == "eterm" -o "$TERM" == "eterm-color" ]; then
        # Emacs term mode doesn't support xterm title escape sequence (\e]0;)
        PS1="\n\[\033[$PROMPT_COLOR\][\u@\h:\w]\\$\[\033[0m\] "
      else
        PS1="\n\[\033[$PROMPT_COLOR\][\[\e]0;\u@\h: \w\a\]\u@\h:\w]\\$\[\033[0m\] "
      fi
      if test "$TERM" = "xterm"; then
        PS1="\[\033]2;\h:\u:\w\007\]$PS1"
      fi
    fi
    ''

    Declared by:

    [1753]<nixpkgs/nixos/modules/programs/bash/bash.nix>

[1754]programs.bash.shellAliases

    Set of aliases for bash shell, which overrides environment.shellAliases. See
    environment.shellAliases for an option format description.

    Type: attribute set of null or string or paths

    Default: { }

    Declared by:

    [1755]<nixpkgs/nixos/modules/programs/bash/bash.nix>

[1756]programs.bash.shellInit

    Shell script code called during bash shell initialisation.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [1757]<nixpkgs/nixos/modules/programs/bash/bash.nix>

[1758]programs.bash.undistractMe.enable

    Whether to enable notifications when long-running terminal commands complete.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1759]<nixpkgs/nixos/modules/programs/bash/undistract-me.nix>

[1760]programs.bash.undistractMe.playSound

    Whether to enable notification sounds when long-running terminal commands complete.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1761]<nixpkgs/nixos/modules/programs/bash/undistract-me.nix>

[1762]programs.bash.undistractMe.timeout

    Number of seconds it would take for a command to be considered long-running.

    Type: signed integer

    Default: 10

    Declared by:

    [1763]<nixpkgs/nixos/modules/programs/bash/undistract-me.nix>

[1764]programs.bash.vteIntegration

    Whether to enable Bash integration for VTE terminals. This allows it to preserve the current
    directory of the shell across terminals.

    Type: boolean

    Default: false

    Declared by:

    [1765]<nixpkgs/nixos/modules/config/vte.nix>

[1766]programs.bash-my-aws.enable

    Whether to enable bash-my-aws.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1767]<nixpkgs/nixos/modules/programs/bash-my-aws.nix>

[1768]programs.bcc.enable

    Whether to enable bcc.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1769]<nixpkgs/nixos/modules/programs/bcc.nix>

[1770]programs.browserpass.enable

    Whether to enable Browserpass native messaging host.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1771]<nixpkgs/nixos/modules/programs/browserpass.nix>

[1772]programs.captive-browser.enable

    Whether to enable captive browser.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1773]<nixpkgs/nixos/modules/programs/captive-browser.nix>

[1774]programs.captive-browser.package

    Which package to use for captive-browser

    Type: package

    Default: "pkgs.captive-browser"

    Declared by:

    [1775]<nixpkgs/nixos/modules/programs/captive-browser.nix>

[1776]programs.captive-browser.bindInterface

    Binds captive-browser to the network interface declared in cfg.interface. This can be used to
    avoid collisions with private subnets.

    Type: boolean

    Default: true

    Declared by:

    [1777]<nixpkgs/nixos/modules/programs/captive-browser.nix>

[1778]programs.captive-browser.browser

    The shell (/bin/sh) command executed once the proxy starts. When browser exits, the proxy
    exits. An extra env var PROXY is available.

    Here, we use a separate Chrome instance in Incognito mode, so that it can run (and be waited
    for) alongside the default one, and that it maintains no state across runs. To configure this
    browser open a normal window in it, settings will be preserved.

    @volth: chromium is to open a plain HTTP (not HTTPS nor redirect to HTTPS!) website. upstream
    uses http://example.com but I have seen captive portals whose DNS server resolves
    "example.com" to 127.0.0.1

    Type: string

    Default: ''''${pkgs.chromium}/bin/chromium --user-data-dir=''${XDG_DATA_HOME:-$HOME/.local/
    share}/chromium-captive --proxy-server="socks5://$PROXY" --host-resolver-rules="MAP *
    ~NOTFOUND , EXCLUDE localhost" --no-first-run --new-window --incognito
    -no-default-browser-check http://cache.nixos.org/''

    Declared by:

    [1779]<nixpkgs/nixos/modules/programs/captive-browser.nix>

[1780]programs.captive-browser.dhcp-dns

    The shell (/bin/sh) command executed to obtain the DHCP DNS server address. The first match
    of an IPv4 regex is used. IPv4 only, because let's be real, it's a captive portal.

    Type: string

    Declared by:

    [1781]<nixpkgs/nixos/modules/programs/captive-browser.nix>

[1782]programs.captive-browser.interface

    your public network interface (wlp3s0, wlan0, eth0, ...)

    Type: string

    Declared by:

    [1783]<nixpkgs/nixos/modules/programs/captive-browser.nix>

[1784]programs.captive-browser.socks5-addr

    the listen address for the SOCKS5 proxy server

    Type: string

    Default: "localhost:1666"

    Declared by:

    [1785]<nixpkgs/nixos/modules/programs/captive-browser.nix>

[1786]programs.ccache.enable

    Whether to enable CCache.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1787]<nixpkgs/nixos/modules/programs/ccache.nix>

[1788]programs.ccache.packageNames

    Nix top-level packages to be compiled using CCache

    Type: list of strings

    Default: [ ]

    Example: [ "wxGTK30" "ffmpeg" "libav_all" ]

    Declared by:

    [1789]<nixpkgs/nixos/modules/programs/ccache.nix>

[1790]programs.ccache.cacheDir

    CCache directory

    Type: path

    Default: "/var/cache/ccache"

    Declared by:

    [1791]<nixpkgs/nixos/modules/programs/ccache.nix>

[1792]programs.cdemu.enable

    cdemu for members of programs.cdemu.group.

    Type: boolean

    Default: false

    Declared by:

    [1793]<nixpkgs/nixos/modules/programs/cdemu.nix>

[1794]programs.cdemu.group

    Group that users must be in to use cdemu.

    Type: string

    Default: "cdrom"

    Declared by:

    [1795]<nixpkgs/nixos/modules/programs/cdemu.nix>

[1796]programs.cdemu.gui

    Whether to install the cdemu GUI (gCDEmu).

    Type: boolean

    Default: true

    Declared by:

    [1797]<nixpkgs/nixos/modules/programs/cdemu.nix>

[1798]programs.cdemu.image-analyzer

    Whether to install the image analyzer.

    Type: boolean

    Default: true

    Declared by:

    [1799]<nixpkgs/nixos/modules/programs/cdemu.nix>

[1800]programs.chromium.enable

    Whether to enable chromium policies.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1801]<nixpkgs/nixos/modules/programs/chromium.nix>

[1802]programs.chromium.defaultSearchProviderSearchURL

    Chromium default search provider url.

    Type: null or string

    Default: null

    Example: "https://encrypted.google.com/search?q={searchTerms}&{google:RLZ}
    {google:originalQueryForSuggestion}{google:assistedQueryStats}
    {google:searchFieldtrialParameter}{google:searchClient}{google:sourceId}
    {google:instantExtendedEnabledParameter}ie={inputEncoding}"

    Declared by:

    [1803]<nixpkgs/nixos/modules/programs/chromium.nix>

[1804]programs.chromium.defaultSearchProviderSuggestURL

    Chromium default search provider url for suggestions.

    Type: null or string

    Default: null

    Example: "https://encrypted.google.com/complete/search?output=chrome&q={searchTerms}"

    Declared by:

    [1805]<nixpkgs/nixos/modules/programs/chromium.nix>

[1806]programs.chromium.extensions

    List of chromium extensions to install. For list of plugins ids see id in url of extensions
    on [1807]chrome web store page. To install a chromium extension not included in the chrome
    web store, append to the extension id a semicolon ";" followed by a URL pointing to an Update
    Manifest XML file. See [1808]ExtensionInstallForcelist for additional details.

    Type: list of strings

    Default: [ ]

    Example:

    [
      "chlffgpmiacpedhhbkiomidkjlcfhogd" # pushbullet
      "mbniclmhobmnbdlbpiphghaielnnpgdp" # lightshot
      "gcbommkclmclpchllfjekcdonpmejbdp" # https everywhere
      "cjpalhdlnbpafiamejdnhcphjbkeiagm" # ublock origin
    ]

    Declared by:

    [1809]<nixpkgs/nixos/modules/programs/chromium.nix>

[1810]programs.chromium.extraOpts

    Extra chromium policy options. A list of available policies can be found in the Chrome
    Enterprise documentation: [1811]https://cloud.google.com/docs/chrome-enterprise/policies/
    Make sure the selected policy is supported on Linux and your browser version.

    Type: attribute set

    Default: { }

    Example:

    {
      "BrowserSignin" = 0;
      "SyncDisabled" = true;
      "PasswordManagerEnabled" = false;
      "SpellcheckEnabled" = true;
      "SpellcheckLanguage" = [
                               "de"
                               "en-US"
                             ];
    }

    Declared by:

    [1812]<nixpkgs/nixos/modules/programs/chromium.nix>

[1813]programs.chromium.homepageLocation

    Chromium default homepage

    Type: null or string

    Default: null

    Example: "https://nixos.org"

    Declared by:

    [1814]<nixpkgs/nixos/modules/programs/chromium.nix>

[1815]programs.clickshare-csc1.enable

    Whether to enable Barco ClickShare CSC-1 driver/client. This allows users in the clickshare
    group to access and use a ClickShare USB dongle that is connected to the machine .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1816]<nixpkgs/nixos/modules/programs/clickshare.nix>

[1817]programs.command-not-found.enable

    Whether interactive shells should show which Nix package (if any) provides a missing command.

    Type: boolean

    Default: true

    Declared by:

    [1818]<nixpkgs/nixos/modules/programs/command-not-found/command-not-found.nix>

[1819]programs.command-not-found.dbPath

    Absolute path to programs.sqlite.

    By default this file will be provided by your channel (nixexprs.tar.xz).

    Type: path

    Default: "/nix/var/nix/profiles/per-user/root/channels/nixos/programs.sqlite"

    Declared by:

    [1820]<nixpkgs/nixos/modules/programs/command-not-found/command-not-found.nix>

[1821]programs.criu.enable

    Install criu along with necessary kernel options.

    Type: boolean

    Default: false

    Declared by:

    [1822]<nixpkgs/nixos/modules/programs/criu.nix>

[1823]programs.dconf.enable

    Whether to enable dconf.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1824]<nixpkgs/nixos/modules/programs/dconf.nix>

[1825]programs.dconf.packages

    A list of packages which provide dconf profiles and databases in /etc/dconf.

    Type: list of packages

    Default: [ ]

    Declared by:

    [1826]<nixpkgs/nixos/modules/programs/dconf.nix>

[1827]programs.digitalbitbox.enable

    Installs the Digital Bitbox application and enables the complementary hardware module.

    Type: boolean

    Default: false

    Declared by:

    [1828]<nixpkgs/nixos/modules/programs/digitalbitbox/default.nix>

[1829]programs.digitalbitbox.package

    The Digital Bitbox package to use. This can be used to install a package with udev rules that
    differ from the defaults.

    Type: package

    Default: "pkgs.digitalbitbox"

    Declared by:

    [1830]<nixpkgs/nixos/modules/programs/digitalbitbox/default.nix>

[1831]programs.dmrconfig.enable

    Whether to configure system to enable use of dmrconfig. This enables the required udev rules
    and installs the program.

    Type: boolean

    Default: false

    Related packages:

      □ pkgs.dmrconfig (dmrconfig-1.1): Configuration utility for DMR radios.

        DMRconfig is a utility for programming digital radios via USB programming cable.

    Declared by:

    [1832]<nixpkgs/nixos/modules/programs/dmrconfig.nix>

[1833]programs.dmrconfig.package

    dmrconfig derivation to use

    Type: package

    Default: "pkgs.dmrconfig"

    Declared by:

    [1834]<nixpkgs/nixos/modules/programs/dmrconfig.nix>

[1835]programs.droidcam.enable

    Whether to enable DroidCam client.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1836]<nixpkgs/nixos/modules/programs/droidcam.nix>

[1837]programs.evince.enable

    Whether to enable Evince, the GNOME document viewer.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1838]<nixpkgs/nixos/modules/programs/evince.nix>

[1839]programs.evolution.enable

    Whether to enable Evolution, a Personal information management application that provides
    integrated mail, calendaring and address book functionality..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1840]<nixpkgs/nixos/modules/services/desktops/gnome/evolution-data-server.nix>

[1841]programs.evolution.plugins

    Plugins for Evolution.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.evolution-ews ]

    Declared by:

    [1842]<nixpkgs/nixos/modules/services/desktops/gnome/evolution-data-server.nix>

[1843]programs.feedbackd.enable

    Whether to enable Whether to enable the feedbackd D-BUS service and udev rules.

    Your user needs to be in the `feedbackd` group to trigger effects. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1844]<nixpkgs/nixos/modules/programs/feedbackd.nix>

[1845]programs.feedbackd.package

    Which feedbackd package to use.

    Type: package

    Default: (build of feedbackd-0.0.0+git20210426)

    Declared by:

    [1846]<nixpkgs/nixos/modules/programs/feedbackd.nix>

[1847]programs.file-roller.enable

    Whether to enable File Roller, an archive manager for GNOME.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1848]<nixpkgs/nixos/modules/programs/file-roller.nix>

[1849]programs.firejail.enable

    Whether to enable firejail.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1850]<nixpkgs/nixos/modules/programs/firejail.nix>

[1851]programs.firejail.wrappedBinaries

    Wrap the binaries in firejail and place them in the global path.

    You will get file collisions if you put the actual application binary in the global
    environment and applications started via .desktop files are not wrapped if they specify the
    absolute path to the binary.

    Type: attribute set of path or submodules

    Default: { }

    Example:

    {
      firefox = {
        executable = "${lib.getBin pkgs.firefox}/bin/firefox";
        profile = "${pkgs.firejail}/etc/firejail/firefox.profile";
      };
      mpv = {
        executable = "${lib.getBin pkgs.mpv}/bin/mpv";
        profile = "${pkgs.firejail}/etc/firejail/mpv.profile";
      };
    }

    Declared by:

    [1852]<nixpkgs/nixos/modules/programs/firejail.nix>

[1853]programs.fish.enable

    Whether to configure fish as an interactive shell.

    Type: boolean

    Default: false

    Declared by:

    [1854]<nixpkgs/nixos/modules/programs/fish.nix>

[1855]programs.fish.interactiveShellInit

    Shell script code called during interactive fish shell initialisation.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [1856]<nixpkgs/nixos/modules/programs/fish.nix>

[1857]programs.fish.loginShellInit

    Shell script code called during fish login shell initialisation.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [1858]<nixpkgs/nixos/modules/programs/fish.nix>

[1859]programs.fish.promptInit

    Shell script code used to initialise fish prompt.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [1860]<nixpkgs/nixos/modules/programs/fish.nix>

[1861]programs.fish.shellAbbrs

    Set of fish abbreviations.

    Type: attribute set of strings

    Default: { }

    Example: { gco = "git checkout"; npu = "nix-prefetch-url"; }

    Declared by:

    [1862]<nixpkgs/nixos/modules/programs/fish.nix>

[1863]programs.fish.shellAliases

    Set of aliases for fish shell, which overrides environment.shellAliases. See
    environment.shellAliases for an option format description.

    Type: attribute set of null or string or paths

    Default: { }

    Declared by:

    [1864]<nixpkgs/nixos/modules/programs/fish.nix>

[1865]programs.fish.shellInit

    Shell script code called during fish shell initialisation.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [1866]<nixpkgs/nixos/modules/programs/fish.nix>

[1867]programs.fish.useBabelfish

    If enabled, the configured environment will be translated to native fish using [1868]
    babelfish. Otherwise, [1869]foreign-env will be used.

    Type: boolean

    Default: false

    Declared by:

    [1870]<nixpkgs/nixos/modules/programs/fish.nix>

[1871]programs.fish.vendor.completions.enable

    Whether fish should use completion files provided by other packages.

    Type: boolean

    Default: true

    Declared by:

    [1872]<nixpkgs/nixos/modules/programs/fish.nix>

[1873]programs.fish.vendor.config.enable

    Whether fish should source configuration snippets provided by other packages.

    Type: boolean

    Default: true

    Declared by:

    [1874]<nixpkgs/nixos/modules/programs/fish.nix>

[1875]programs.fish.vendor.functions.enable

    Whether fish should autoload fish functions provided by other packages.

    Type: boolean

    Default: true

    Declared by:

    [1876]<nixpkgs/nixos/modules/programs/fish.nix>

[1877]programs.flexoptix-app.enable

    Whether to enable FLEXOPTIX app + udev rules.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1878]<nixpkgs/nixos/modules/programs/flexoptix-app.nix>

[1879]programs.flexoptix-app.package

    FLEXOPTIX app package to use

    Type: package

    Default: "\${pkgs.flexoptix-app}"

    Declared by:

    [1880]<nixpkgs/nixos/modules/programs/flexoptix-app.nix>

[1881]programs.fuse.mountMax

    Set the maximum number of FUSE mounts allowed to non-root users.

    Type: integer between 0 and 32767 (both inclusive)

    Default: 1000

    Declared by:

    [1882]<nixpkgs/nixos/modules/programs/fuse.nix>

[1883]programs.fuse.userAllowOther

    Allow non-root users to specify the allow_other or allow_root mount options, see mount.fuse3
    (8).

    Type: boolean

    Default: false

    Declared by:

    [1884]<nixpkgs/nixos/modules/programs/fuse.nix>

[1885]programs.geary.enable

    Whether to enable Geary, a Mail client for GNOME 3.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1886]<nixpkgs/nixos/modules/programs/geary.nix>

[1887]programs.gnome-disks.enable

    Whether to enable GNOME Disks daemon, a program designed to be a UDisks2 graphical front-end.

    Type: boolean

    Default: false

    Declared by:

    [1888]<nixpkgs/nixos/modules/programs/gnome-disks.nix>

[1889]programs.gnome-documents.enable

    Whether to enable GNOME Documents, a document manager application for GNOME.

    Type: boolean

    Default: false

    Declared by:

    [1890]<nixpkgs/nixos/modules/programs/gnome-documents.nix>

[1891]programs.gnome-terminal.enable

    Whether to enable GNOME Terminal.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1892]<nixpkgs/nixos/modules/programs/gnome-terminal.nix>

[1893]programs.gnupg.package

    The gpg package that should be used.

    Type: package

    Default: "pkgs.gnupg"

    Declared by:

    [1894]<nixpkgs/nixos/modules/programs/gnupg.nix>

[1895]programs.gnupg.agent.enable

    Enables GnuPG agent with socket-activation for every user session.

    Type: boolean

    Default: false

    Declared by:

    [1896]<nixpkgs/nixos/modules/programs/gnupg.nix>

[1897]programs.gnupg.agent.enableBrowserSocket

    Enable browser socket for GnuPG agent.

    Type: boolean

    Default: false

    Declared by:

    [1898]<nixpkgs/nixos/modules/programs/gnupg.nix>

[1899]programs.gnupg.agent.enableExtraSocket

    Enable extra socket for GnuPG agent.

    Type: boolean

    Default: false

    Declared by:

    [1900]<nixpkgs/nixos/modules/programs/gnupg.nix>

[1901]programs.gnupg.agent.enableSSHSupport

    Enable SSH agent support in GnuPG agent. Also sets SSH_AUTH_SOCK environment variable
    correctly. This will disable socket-activation and thus always start a GnuPG agent per user
    session.

    Type: boolean

    Default: false

    Declared by:

    [1902]<nixpkgs/nixos/modules/programs/gnupg.nix>

[1903]programs.gnupg.agent.pinentryFlavor

    Which pinentry interface to use. If not null, the path to the pinentry binary will be passed
    to gpg-agent via commandline and thus overrides the pinentry option in gpg-agent.conf in the
    user's home directory. If not set at all, it'll pick an appropriate flavor depending on the
    system configuration (qt flavor for lxqt and plasma5, gtk2 for xfce 4.12, gnome3 on all other
    systems with X enabled, ncurses otherwise).

    Type: null or one of "curses", "tty", "gtk2", "qt", "emacs", "gnome3"

    Default: null

    Example: "gnome3"

    Declared by:

    [1904]<nixpkgs/nixos/modules/programs/gnupg.nix>

[1905]programs.gnupg.dirmngr.enable

    Enables GnuPG network certificate management daemon with socket-activation for every user
    session.

    Type: boolean

    Default: false

    Declared by:

    [1906]<nixpkgs/nixos/modules/programs/gnupg.nix>

[1907]programs.gpaste.enable

    Whether to enable GPaste, a clipboard manager.

    Type: boolean

    Default: false

    Declared by:

    [1908]<nixpkgs/nixos/modules/programs/gpaste.nix>

[1909]programs.gphoto2.enable

    Whether to configure system to use gphoto2. To grant digital camera access to a user, the
    user must be part of the camera group: users.users.alice.extraGroups = ["camera"];

    Type: boolean

    Default: false

    Declared by:

    [1910]<nixpkgs/nixos/modules/programs/gphoto2.nix>

[1911]programs.hamster.enable

    Whether to enable hamster, a time tracking program.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1912]<nixpkgs/nixos/modules/programs/hamster.nix>

[1913]programs.iftop.enable

    Whether to enable iftop + setcap wrapper.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1914]<nixpkgs/nixos/modules/programs/iftop.nix>

[1915]programs.iotop.enable

    Whether to enable iotop + setcap wrapper.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1916]<nixpkgs/nixos/modules/programs/iotop.nix>

[1917]programs.java.enable

    Install and setup the Java development kit.

    Note: This adds JAVA_HOME to the global environment, by sourcing the jdk's setup-hook on
    shell init. It is equivalent to starting a shell through 'nix-shell -p jdk', or roughly the
    following system-wide configuration:

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1918]<nixpkgs/nixos/modules/programs/java.nix>

[1919]programs.java.package

    Java package to install. Typical values are pkgs.jdk or pkgs.jre.

    Type: package

    Default: "pkgs.jdk"

    Declared by:

    [1920]<nixpkgs/nixos/modules/programs/java.nix>

[1921]programs.kbdlight.enable

    Whether to enable kbdlight.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1922]<nixpkgs/nixos/modules/programs/kbdlight.nix>

[1923]programs.less.enable

    Whether to enable less.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1924]<nixpkgs/nixos/modules/programs/less.nix>

[1925]programs.less.clearDefaultCommands

    Clear all default commands. You should remember to set the quit key. Otherwise you will not
    be able to leave less without killing it.

    Type: boolean

    Default: false

    Declared by:

    [1926]<nixpkgs/nixos/modules/programs/less.nix>

[1927]programs.less.commands

    Defines new command keys.

    Type: attribute set of strings

    Default: { }

    Example: { h = ''noaction 5\e(''; l = ''noaction 5\e)''; }

    Declared by:

    [1928]<nixpkgs/nixos/modules/programs/less.nix>

[1929]programs.less.configFile

    Path to lesskey configuration file.

    configFile takes precedence over commands, clearDefaultCommands, lineEditingKeys, and
    envVariables.

    Type: null or path

    Default: null

    Example:

    ${pkgs.my-configs}/lesskey

    Declared by:

    [1930]<nixpkgs/nixos/modules/programs/less.nix>

[1931]programs.less.envVariables

    Defines environment variables.

    Type: attribute set of strings

    Default: { }

    Example: { LESS = "--quit-if-one-screen"; }

    Declared by:

    [1932]<nixpkgs/nixos/modules/programs/less.nix>

[1933]programs.less.lessclose

    When less closes a file opened in such a way, it will call another program, called the input
    postprocessor, which may perform any desired clean-up action (such as deleting the
    replacement file created by LESSOPEN).

    Type: null or string

    Default: null

    Declared by:

    [1934]<nixpkgs/nixos/modules/programs/less.nix>

[1935]programs.less.lessopen

    Before less opens a file, it first gives your input preprocessor a chance to modify the way
    the contents of the file are displayed.

    Type: null or string

    Default: "|\${pkgs.lesspipe}/bin/lesspipe.sh %s"

    Declared by:

    [1936]<nixpkgs/nixos/modules/programs/less.nix>

[1937]programs.less.lineEditingKeys

    Defines new line-editing keys.

    Type: attribute set of strings

    Default: { }

    Example: { e = "abort"; }

    Declared by:

    [1938]<nixpkgs/nixos/modules/programs/less.nix>

[1939]programs.liboping.enable

    Whether to enable liboping.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1940]<nixpkgs/nixos/modules/programs/liboping.nix>

[1941]programs.light.enable

    Whether to install Light backlight control command and udev rules granting access to members
    of the "video" group.

    Type: boolean

    Default: false

    Declared by:

    [1942]<nixpkgs/nixos/modules/programs/light.nix>

[1943]programs.mininet.enable

    Whether to enable Mininet.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1944]<nixpkgs/nixos/modules/programs/mininet.nix>

[1945]programs.mosh.enable

    Whether to enable mosh. Note, this will open ports in your firewall!

    Type: boolean

    Default: false

    Declared by:

    [1946]<nixpkgs/nixos/modules/programs/mosh.nix>

[1947]programs.mosh.withUtempter

    Whether to enable libutempter for mosh. This is required so that mosh can write to /var/run/
    utmp (which can be queried with `who` to display currently connected user sessions). Note,
    this will add a guid wrapper for the group utmp!

    Type: boolean

    Default: true

    Declared by:

    [1948]<nixpkgs/nixos/modules/programs/mosh.nix>

[1949]programs.msmtp.enable

    Whether to enable msmtp - an SMTP client.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1950]<nixpkgs/nixos/modules/programs/msmtp.nix>

[1951]programs.msmtp.accounts

    Named accounts and their respective configurations. The special name "default" allows a
    default account to be defined. See msmtp(1) for the available options.

    Use `programs.msmtp.extraConfig` instead of this attribute set-based option if ordered
    account inheritance is needed.

    It is advised to use the `passwordeval` setting to read the password from a secret file to
    avoid having it written in the world-readable nix store. The password file must end with a
    newline (`\n`).

    Type: attribute set of attribute sets

    Default: { }

    Example: { default = { auth = true; host = "smtp.example"; passwordeval = "cat /secrets/
    password.txt"; user = "someone"; } ; }

    Declared by:

    [1952]<nixpkgs/nixos/modules/programs/msmtp.nix>

[1953]programs.msmtp.defaults

    Default values applied to all accounts. See msmtp(1) for the available options.

    Type: attribute set

    Default: { }

    Example: { aliases = "/etc/aliases"; port = 587; tls = true; }

    Declared by:

    [1954]<nixpkgs/nixos/modules/programs/msmtp.nix>

[1955]programs.msmtp.extraConfig

    Extra lines to add to the msmtp configuration verbatim. See msmtp(1) for the syntax and
    available options.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [1956]<nixpkgs/nixos/modules/programs/msmtp.nix>

[1957]programs.msmtp.setSendmail

    Whether to set the system sendmail to msmtp's.

    Type: boolean

    Default: true

    Declared by:

    [1958]<nixpkgs/nixos/modules/programs/msmtp.nix>

[1959]programs.mtr.enable

    Whether to add mtr to the global environment and configure a setcap wrapper for it.

    Type: boolean

    Default: false

    Declared by:

    [1960]<nixpkgs/nixos/modules/programs/mtr.nix>

[1961]programs.mtr.package

    The package to use.

    Type: package

    Default: (build of mtr-0.94)

    Declared by:

    [1962]<nixpkgs/nixos/modules/programs/mtr.nix>

[1963]programs.nano.nanorc

    The system-wide nano configuration. See nanorc(5).

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    set nowrap
    set tabstospaces
    set tabsize 2
    ''

    Declared by:

    [1964]<nixpkgs/nixos/modules/programs/nano.nix>

[1965]programs.nano.syntaxHighlight

    Whether to enable syntax highlight for various languages.

    Type: boolean

    Default: true

    Declared by:

    [1966]<nixpkgs/nixos/modules/programs/nano.nix>

[1967]programs.neovim.enable

    Whether to enable Neovim.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1968]<nixpkgs/nixos/modules/programs/neovim.nix>

[1969]programs.neovim.package

    The package to use for the neovim binary.

    Type: package

    Default: pkgs.neovim-unwrapped

    Declared by:

    [1970]<nixpkgs/nixos/modules/programs/neovim.nix>

[1971]programs.neovim.configure

    Generate your init file from your list of plugins and custom commands. Neovim will then be
    wrapped to load nvim -u /nix/store/hash-vimrc

    Type: attribute set

    Default: { }

    Example:

    configure = {
        customRC = $'''
        " here your custom configuration goes!
        $''';
        packages.myVimPackage = with pkgs.vimPlugins; {
          # loaded on launch
          start = [ fugitive ];
          # manually loadable by calling `:packadd $plugin-name`
          opt = [ ];
        };
      };

    Declared by:

    [1972]<nixpkgs/nixos/modules/programs/neovim.nix>

[1973]programs.neovim.defaultEditor

    When enabled, installs neovim and configures neovim to be the default editor using the EDITOR
    environment variable.

    Type: boolean

    Default: false

    Declared by:

    [1974]<nixpkgs/nixos/modules/programs/neovim.nix>

[1975]programs.neovim.runtime

    Set of files that have to be linked in runtime.

    Type: attribute set of submodules

    Default: { }

    Example:

    runtime."ftplugin/c.vim".text = "setlocal omnifunc=v:lua.vim.lsp.omnifunc";

    Declared by:

    [1976]<nixpkgs/nixos/modules/programs/neovim.nix>

[1977]programs.neovim.runtime.<name>.enable

    Whether this /etc file should be generated. This option allows specific /etc files to be
    disabled.

    Type: boolean

    Default: true

    Declared by:

    [1978]<nixpkgs/nixos/modules/programs/neovim.nix>

[1979]programs.neovim.runtime.<name>.source

    Path of the source file.

    Type: path

    Declared by:

    [1980]<nixpkgs/nixos/modules/programs/neovim.nix>

[1981]programs.neovim.runtime.<name>.target

    Name of symlink. Defaults to the attribute name.

    Type: string

    Declared by:

    [1982]<nixpkgs/nixos/modules/programs/neovim.nix>

[1983]programs.neovim.runtime.<name>.text

    Text of the file.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [1984]<nixpkgs/nixos/modules/programs/neovim.nix>

[1985]programs.neovim.viAlias

    Symlink vi to nvim binary.

    Type: boolean

    Default: false

    Declared by:

    [1986]<nixpkgs/nixos/modules/programs/neovim.nix>

[1987]programs.neovim.vimAlias

    Symlink vim to nvim binary.

    Type: boolean

    Default: false

    Declared by:

    [1988]<nixpkgs/nixos/modules/programs/neovim.nix>

[1989]programs.neovim.withRuby

    Enable ruby provider.

    Type: boolean

    Default: true

    Declared by:

    [1990]<nixpkgs/nixos/modules/programs/neovim.nix>

[1991]programs.nm-applet.enable

    Whether to enable nm-applet.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1992]<nixpkgs/nixos/modules/programs/nm-applet.nix>

[1993]programs.nm-applet.indicator

    Whether to use indicator instead of status icon. It is needed for Appindicator environments,
    like Enlightenment.

    Type: boolean

    Default: true

    Declared by:

    [1994]<nixpkgs/nixos/modules/programs/nm-applet.nix>

[1995]programs.noisetorch.enable

    Whether to enable noisetorch + setcap wrapper.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [1996]<nixpkgs/nixos/modules/programs/noisetorch.nix>

[1997]programs.noisetorch.package

    The noisetorch package to use.

    Type: package

    Default: (build of NoiseTorch-0.10.1)

    Declared by:

    [1998]<nixpkgs/nixos/modules/programs/noisetorch.nix>

[1999]programs.npm.enable

    Whether to enable npm global config.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2000]<nixpkgs/nixos/modules/programs/npm.nix>

[2001]programs.npm.package

    The npm package version / flavor to use

    Type: path

    Default: (build of node_npm-7.11.1)

    Example:

    pkgs.nodePackages_13_x.npm

    Declared by:

    [2002]<nixpkgs/nixos/modules/programs/npm.nix>

[2003]programs.npm.npmrc

    The system-wide npm configuration. See [2004]https://docs.npmjs.com/misc/config.

    Type: strings concatenated with "\n"

    Default:

    ''
    prefix = ''${HOME}/.npm
    ''

    Example:

    ''
    prefix = ''${HOME}/.npm
    https-proxy=proxy.example.com
    init-license=MIT
    init-author-url=http://npmjs.org
    color=true
    ''

    Declared by:

    [2005]<nixpkgs/nixos/modules/programs/npm.nix>

[2006]programs.partition-manager.enable

    Whether to enable KDE Partition Manager.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2007]<nixpkgs/nixos/modules/programs/partition-manager.nix>

[2008]programs.phosh.enable

    Whether to enable Whether to enable, Phosh, related packages and default configurations. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2009]<nixpkgs/nixos/modules/programs/phosh.nix>

[2010]programs.phosh.phocConfig

    Configurations for the Phoc compositor.

    Type: strings concatenated with "\n" or path or submodule

    Default: { }

    Declared by:

    [2011]<nixpkgs/nixos/modules/programs/phosh.nix>

[2012]programs.plotinus.enable

    Whether to enable the Plotinus GTK 3 plugin. Plotinus provides a popup (triggered by
    Ctrl-Shift-P) to search the menus of a compatible application.

    Type: boolean

    Default: false

    Declared by:

    [2013]<nixpkgs/nixos/modules/programs/plotinus.nix>

[2014]programs.proxychains.enable

    Whether to enable installing proxychains configuration.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2015]<nixpkgs/nixos/modules/programs/proxychains.nix>

[2016]programs.proxychains.chain.length

    Chain length for random chain.

    Type: null or signed integer

    Default: null

    Declared by:

    [2017]<nixpkgs/nixos/modules/programs/proxychains.nix>

[2018]programs.proxychains.chain.type

    dynamic - Each connection will be done via chained proxies all proxies chained in the order
    as they appear in the list at least one proxy must be online to play in chain (dead proxies
    are skipped) otherwise EINTR is returned to the app.

    strict - Each connection will be done via chained proxies all proxies chained in the order as
    they appear in the list all proxies must be online to play in chain otherwise EINTR is
    returned to the app.

    random - Each connection will be done via random proxy (or proxy chain, see
    programs.proxychains.chain.length) from the list.

    Type: one of "dynamic", "strict", "random"

    Default: "strict"

    Declared by:

    [2019]<nixpkgs/nixos/modules/programs/proxychains.nix>

[2020]programs.proxychains.localnet

    By default enable localnet for loopback address ranges.

    Type: string

    Default: "127.0.0.0/255.0.0.0"

    Declared by:

    [2021]<nixpkgs/nixos/modules/programs/proxychains.nix>

[2022]programs.proxychains.proxies

    Proxies to be used by proxychains.

    Type: attribute set of submodules

    Example:

    { myproxy =
      { type = "socks4";
        host = "127.0.0.1";
        port = 1337;
      };
    }

    Declared by:

    [2023]<nixpkgs/nixos/modules/programs/proxychains.nix>

[2024]programs.proxychains.proxies.<name>.enable

    Whether to enable this proxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2025]<nixpkgs/nixos/modules/programs/proxychains.nix>

[2026]programs.proxychains.proxies.<name>.host

    Proxy host or IP address.

    Type: string

    Declared by:

    [2027]<nixpkgs/nixos/modules/programs/proxychains.nix>

[2028]programs.proxychains.proxies.<name>.port

    Proxy port

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Declared by:

    [2029]<nixpkgs/nixos/modules/programs/proxychains.nix>

[2030]programs.proxychains.proxies.<name>.type

    Proxy type.

    Type: one of "http", "socks4", "socks5"

    Declared by:

    [2031]<nixpkgs/nixos/modules/programs/proxychains.nix>

[2032]programs.proxychains.proxyDNS

    Proxy DNS requests - no leak for DNS data.

    Type: boolean

    Default: true

    Declared by:

    [2033]<nixpkgs/nixos/modules/programs/proxychains.nix>

[2034]programs.proxychains.quietMode

    Whether to enable Quiet mode (no output from the library)..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2035]<nixpkgs/nixos/modules/programs/proxychains.nix>

[2036]programs.proxychains.remoteDNSSubnet

    Set the class A subnet number to use for the internal remote DNS mapping, uses the reserved
    224.x.x.x range by default.

    Type: one of 10, 127, 224

    Default: 224

    Declared by:

    [2037]<nixpkgs/nixos/modules/programs/proxychains.nix>

[2038]programs.proxychains.tcpConnectTimeOut

    Connection time-out in milliseconds.

    Type: signed integer

    Default: 8000

    Declared by:

    [2039]<nixpkgs/nixos/modules/programs/proxychains.nix>

[2040]programs.proxychains.tcpReadTimeOut

    Connection read time-out in milliseconds.

    Type: signed integer

    Default: 15000

    Declared by:

    [2041]<nixpkgs/nixos/modules/programs/proxychains.nix>

[2042]programs.qt5ct.enable

    Whether to enable the Qt5 Configuration Tool (qt5ct), a program that allows users to
    configure Qt5 settings (theme, font, icons, etc.) under desktop environments or window
    manager without Qt integration.

    Official home page: [2043]https://sourceforge.net/projects/qt5ct/

    Type: boolean

    Default: false

    Declared by:

    [2044]<nixpkgs/nixos/modules/programs/qt5ct.nix>

[2045]programs.screen.screenrc

    The contents of /etc/screenrc file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [2046]<nixpkgs/nixos/modules/programs/screen.nix>

[2047]programs.seahorse.enable

    Whether to enable Seahorse, a GNOME application for managing encryption keys and passwords in
    the GNOME Keyring.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2048]<nixpkgs/nixos/modules/programs/seahorse.nix>

[2049]programs.sedutil.enable

    Whether to enable sedutil.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2050]<nixpkgs/nixos/modules/programs/sedutil.nix>

[2051]programs.singularity.enable

    Whether to enable Singularity.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2052]<nixpkgs/nixos/modules/programs/singularity.nix>

[2053]programs.slock.enable

    Whether to install slock screen locker with setuid wrapper.

    Type: boolean

    Default: false

    Declared by:

    [2054]<nixpkgs/nixos/modules/programs/slock.nix>

[2055]programs.spacefm.enable

    Whether to install SpaceFM and create /etc/spacefm/spacefm.conf.

    Type: boolean

    Default: false

    Declared by:

    [2056]<nixpkgs/nixos/modules/programs/spacefm.nix>

[2057]programs.spacefm.settings

    The system-wide spacefm configuration. Parameters to be written to /etc/spacefm/spacefm.conf.
    Refer to the [2058]relevant entry in the SpaceFM manual.

    Type: attribute set

    Default: { graphical_su = "\${pkgs.gksu}/bin/gksu"; terminal_su = "\${pkgs.sudo}/bin/sudo";
    tmp_dir = "/tmp"; }

    Example:

    {
              tmp_dir = "/tmp";
              terminal_su = "${pkgs.sudo}/bin/sudo";
              graphical_su = "${pkgs.gksu}/bin/gksu";
            }

    Declared by:

    [2059]<nixpkgs/nixos/modules/programs/spacefm.nix>

[2060]programs.ssh.package

    The package used for the openssh client and daemon.

    Type: package

    Default: "pkgs.openssh"

    Declared by:

    [2061]<nixpkgs/nixos/modules/programs/ssh.nix>

[2062]programs.ssh.agentPKCS11Whitelist

    A pattern-list of acceptable paths for PKCS#11 shared libraries that may be used with the -s
    option to ssh-add.

    Type: null or string

    Default: null

    Example: "\${pkgs.opensc}/lib/opensc-pkcs11.so"

    Declared by:

    [2063]<nixpkgs/nixos/modules/programs/ssh.nix>

[2064]programs.ssh.agentTimeout

    How long to keep the private keys in memory. Use null to keep them forever.

    Type: null or string

    Default: null

    Example: "1h"

    Declared by:

    [2065]<nixpkgs/nixos/modules/programs/ssh.nix>

[2066]programs.ssh.askPassword

    Program used by SSH to ask for passwords.

    Type: string

    Default: "\${pkgs.x11_ssh_askpass}/libexec/x11-ssh-askpass"

    Declared by:

    [2067]<nixpkgs/nixos/modules/programs/ssh.nix>

[2068]programs.ssh.ciphers

    Specifies the ciphers allowed and their order of preference.

    Type: null or list of strings

    Default: null

    Example: [ "chacha20-poly1305@openssh.com" "aes256-gcm@openssh.com" ]

    Declared by:

    [2069]<nixpkgs/nixos/modules/programs/ssh.nix>

[2070]programs.ssh.extraConfig

    Extra configuration text prepended to ssh_config. Other generated options will be added after
    a Host * pattern. See ssh_config(5) for help.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [2071]<nixpkgs/nixos/modules/programs/ssh.nix>

[2072]programs.ssh.forwardX11

    Whether to request X11 forwarding on outgoing connections by default. This is useful for
    running graphical programs on the remote machine and have them display to your local X11
    server. Historically, this value has depended on the value used by the local sshd daemon, but
    there really isn't a relation between the two. Note: there are some security risks to
    forwarding an X11 connection. NixOS's X server is built with the SECURITY extension, which
    prevents some obvious attacks. To enable or disable forwarding on a per-connection basis, see
    the -X and -x options to ssh. The -Y option to ssh enables trusted forwarding, which bypasses
    the SECURITY extension.

    Type: boolean

    Default: false

    Declared by:

    [2073]<nixpkgs/nixos/modules/programs/ssh.nix>

[2074]programs.ssh.hostKeyAlgorithms

    Specifies the host key algorithms that the client wants to use in order of preference.

    Type: list of strings

    Default: [ ]

    Example: [ "ssh-ed25519" "ssh-rsa" ]

    Declared by:

    [2075]<nixpkgs/nixos/modules/programs/ssh.nix>

[2076]programs.ssh.kexAlgorithms

    Specifies the available KEX (Key Exchange) algorithms.

    Type: null or list of strings

    Default: null

    Example: [ "curve25519-sha256@libssh.org" "diffie-hellman-group-exchange-sha256" ]

    Declared by:

    [2077]<nixpkgs/nixos/modules/programs/ssh.nix>

[2078]programs.ssh.knownHosts

    The set of system-wide known SSH hosts.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      myhost = {
        hostNames = [ "myhost" "myhost.mydomain.com" "10.10.1.4" ];
        publicKeyFile = ./pubkeys/myhost_ssh_host_dsa_key.pub;
      };
      myhost2 = {
        hostNames = [ "myhost2" ];
        publicKeyFile = ./pubkeys/myhost2_ssh_host_dsa_key.pub;
      };
    }

    Declared by:

    [2079]<nixpkgs/nixos/modules/programs/ssh.nix>

[2080]programs.ssh.knownHosts.<name>.certAuthority

    This public key is an SSH certificate authority, rather than an individual host's key.

    Type: boolean

    Default: false

    Declared by:

    [2081]<nixpkgs/nixos/modules/programs/ssh.nix>

[2082]programs.ssh.knownHosts.<name>.hostNames

    A list of host names and/or IP numbers used for accessing the host's ssh service.

    Type: list of strings

    Default: [ ]

    Declared by:

    [2083]<nixpkgs/nixos/modules/programs/ssh.nix>

[2084]programs.ssh.knownHosts.<name>.publicKey

    The public key data for the host. You can fetch a public key from a running SSH server with
    the ssh-keyscan command. The public key should not include any host names, only the key type
    and the key itself.

    Type: null or string

    Default: null

    Example: "ecdsa-sha2-nistp521 AAAAE2VjZHN...UEPg=="

    Declared by:

    [2085]<nixpkgs/nixos/modules/programs/ssh.nix>

[2086]programs.ssh.knownHosts.<name>.publicKeyFile

    The path to the public key file for the host. The public key file is read at build time and
    saved in the Nix store. You can fetch a public key file from a running SSH server with the 
    ssh-keyscan command. The content of the file should follow the same format as described for
    the publicKey option.

    Type: null or path

    Default: null

    Declared by:

    [2087]<nixpkgs/nixos/modules/programs/ssh.nix>

[2088]programs.ssh.macs

    Specifies the MAC (message authentication code) algorithms in order of preference. The MAC
    algorithm is used for data integrity protection.

    Type: null or list of strings

    Default: null

    Example: [ "hmac-sha2-512-etm@openssh.com" "hmac-sha1" ]

    Declared by:

    [2089]<nixpkgs/nixos/modules/programs/ssh.nix>

[2090]programs.ssh.pubkeyAcceptedKeyTypes

    Specifies the key types that will be used for public key authentication.

    Type: list of strings

    Default: [ ]

    Example: [ "ssh-ed25519" "ssh-rsa" ]

    Declared by:

    [2091]<nixpkgs/nixos/modules/programs/ssh.nix>

[2092]programs.ssh.setXAuthLocation

    Whether to set the path to xauth for X11-forwarded connections. This causes a dependency on
    X11 packages.

    Type: boolean

    Declared by:

    [2093]<nixpkgs/nixos/modules/programs/ssh.nix>

[2094]programs.ssh.startAgent

    Whether to start the OpenSSH agent when you log in. The OpenSSH agent remembers private keys
    for you so that you don't have to type in passphrases every time you make an SSH connection.
    Use ssh-add to add a key to the agent.

    Type: boolean

    Default: false

    Declared by:

    [2095]<nixpkgs/nixos/modules/programs/ssh.nix>

[2096]programs.steam.enable

    Whether to enable steam.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2097]<nixpkgs/nixos/modules/programs/steam.nix>

[2098]programs.steam.dedicatedServer.openFirewall

    Open ports in the firewall for Source Dedicated Server.

    Type: boolean

    Default: false

    Declared by:

    [2099]<nixpkgs/nixos/modules/programs/steam.nix>

[2100]programs.steam.remotePlay.openFirewall

    Open ports in the firewall for Steam Remote Play.

    Type: boolean

    Default: false

    Declared by:

    [2101]<nixpkgs/nixos/modules/programs/steam.nix>

[2102]programs.sway.enable

    Whether to enable Sway, the i3-compatible tiling Wayland compositor. You can manually launch
    Sway by executing "exec sway" on a TTY. Copy /etc/sway/config to ~/.config/sway/config to
    modify the default configuration. See [2103]https://github.com/swaywm/sway/wiki and "man 5
    sway" for more information.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2104]<nixpkgs/nixos/modules/programs/sway.nix>

[2105]programs.sway.extraOptions

    Command line arguments passed to launch Sway. Please DO NOT report issues if you use an
    unsupported GPU (proprietary drivers).

    Type: list of strings

    Default: [ ]

    Example: [ "--verbose" "--debug" "--unsupported-gpu" "--my-next-gpu-wont-be-nvidia" ]

    Declared by:

    [2106]<nixpkgs/nixos/modules/programs/sway.nix>

[2107]programs.sway.extraPackages

    Extra packages to be installed system wide. See [2108]https://github.com/swaywm/sway/wiki/
    Useful-add-ons-for-sway and [2109]https://github.com/swaywm/sway/wiki/i3-Migration-Guide#
    common-x11-apps-used-on-i3-with-wayland-alternatives for a list of useful software.

    Type: list of packages

    Default: with pkgs; [ swaylock swayidle rxvt-unicode alacritty dmenu ];

    Example:

    with pkgs; [
      i3status i3status-rust
      termite rofi light
    ]

    Declared by:

    [2110]<nixpkgs/nixos/modules/programs/sway.nix>

[2111]programs.sway.extraSessionCommands

    Shell commands executed just before Sway is started. See [2112]https://github.com/swaywm/sway
    /wiki/Running-programs-natively-under-wayland and [2113]https://github.com/swaywm/wlroots/
    blob/master/docs/env_vars.md for some useful environment variables.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    # SDL:
    export SDL_VIDEODRIVER=wayland
    # QT (needs qt5.qtwayland in systemPackages):
    export QT_QPA_PLATFORM=wayland-egl
    export QT_WAYLAND_DISABLE_WINDOWDECORATION="1"
    # Fix for some Java AWT applications (e.g. Android Studio),
    # use this if they aren't displayed properly:
    export _JAVA_AWT_WM_NONREPARENTING=1
    ''

    Declared by:

    [2114]<nixpkgs/nixos/modules/programs/sway.nix>

[2115]programs.sway.wrapperFeatures

    Attribute set of features to enable in the wrapper.

    Type: submodule

    Default: { }

    Example: { gtk = true; }

    Declared by:

    [2116]<nixpkgs/nixos/modules/programs/sway.nix>

[2117]programs.sway.wrapperFeatures.base

    Whether to make use of the base wrapper to execute extra session commands and prepend a
    dbus-run-session to the sway command.

    Type: boolean

    Default: true

    Example: false

    Declared by:

    [2118]<nixpkgs/nixos/modules/programs/sway.nix>

[2119]programs.sway.wrapperFeatures.gtk

    Whether to make use of the wrapGAppsHook wrapper to execute sway with required environment
    variables for GTK applications.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2120]<nixpkgs/nixos/modules/programs/sway.nix>

[2121]programs.sysdig.enable

    Whether to enable sysdig.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2122]<nixpkgs/nixos/modules/programs/sysdig.nix>

[2123]programs.system-config-printer.enable

    Whether to enable system-config-printer, a Graphical user interface for CUPS administration.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2124]<nixpkgs/nixos/modules/programs/system-config-printer.nix>

[2125]programs.systemtap.enable

    Install systemtap along with necessary kernel options.

    Type: boolean

    Default: false

    Declared by:

    [2126]<nixpkgs/nixos/modules/programs/systemtap.nix>

[2127]programs.thefuck.enable

    Whether to enable thefuck.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2128]<nixpkgs/nixos/modules/programs/thefuck.nix>

[2129]programs.thefuck.alias

    `thefuck` needs an alias to be configured. The default value is `fuck`, but you can use
    anything else as well.

    Type: string

    Default: "fuck"

    Declared by:

    [2130]<nixpkgs/nixos/modules/programs/thefuck.nix>

[2131]programs.tilp2.enable

    Enable tilp2 and udev rules for supported calculators.

    Type: boolean

    Default: false

    Declared by:

    [2132]<nixpkgs/nixos/modules/programs/tilp2.nix>

[2133]programs.tmux.enable

    Whenever to configure tmux system-wide.

    Type: boolean

    Default: false

    Related packages:

      □ pkgs.tmux (tmux-3.2a): Terminal multiplexer.

        tmux is intended to be a modern, BSD-licensed alternative to programs such as GNU screen. Major features include:

                 * A powerful, consistent, well-documented and easily scriptable command interface.
                 * A window may be split horizontally and vertically into panes.
                 * Panes can be freely moved and resized, or arranged into preset layouts.
                 * Support for UTF-8 and 256-colour terminals.
                 * Copy and paste with multiple buffers.
                 * Interactive menus to select windows, sessions or clients.
                 * Change the current window by searching for text in the target.
                 * Terminal locking, manually or after a timeout.
                 * A clean, easily extended, BSD-licensed codebase, under active development.

    Declared by:

    [2134]<nixpkgs/nixos/modules/programs/tmux.nix>

[2135]programs.tmux.aggressiveResize

    Resize the window to the size of the smallest session for which it is the current window.

    Type: boolean

    Default: false

    Declared by:

    [2136]<nixpkgs/nixos/modules/programs/tmux.nix>

[2137]programs.tmux.baseIndex

    Base index for windows and panes.

    Type: signed integer

    Default: 0

    Example: 1

    Declared by:

    [2138]<nixpkgs/nixos/modules/programs/tmux.nix>

[2139]programs.tmux.clock24

    Use 24 hour clock.

    Type: boolean

    Default: false

    Declared by:

    [2140]<nixpkgs/nixos/modules/programs/tmux.nix>

[2141]programs.tmux.customPaneNavigationAndResize

    Override the hjkl and HJKL bindings for pane navigation and resizing in VI mode.

    Type: boolean

    Default: false

    Declared by:

    [2142]<nixpkgs/nixos/modules/programs/tmux.nix>

[2143]programs.tmux.escapeTime

    Time in milliseconds for which tmux waits after an escape is input.

    Type: signed integer

    Default: 500

    Example: 0

    Declared by:

    [2144]<nixpkgs/nixos/modules/programs/tmux.nix>

[2145]programs.tmux.extraConfig

    Additional contents of /etc/tmux.conf

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [2146]<nixpkgs/nixos/modules/programs/tmux.nix>

[2147]programs.tmux.historyLimit

    Maximum number of lines held in window history.

    Type: signed integer

    Default: 2000

    Example: 5000

    Declared by:

    [2148]<nixpkgs/nixos/modules/programs/tmux.nix>

[2149]programs.tmux.keyMode

    VI or Emacs style shortcuts.

    Type: one of "emacs", "vi"

    Default: "emacs"

    Example: "vi"

    Declared by:

    [2150]<nixpkgs/nixos/modules/programs/tmux.nix>

[2151]programs.tmux.newSession

    Automatically spawn a session if trying to attach and none are running.

    Type: boolean

    Default: false

    Declared by:

    [2152]<nixpkgs/nixos/modules/programs/tmux.nix>

[2153]programs.tmux.resizeAmount

    Number of lines/columns when resizing.

    Type: signed integer

    Default: 5

    Example: 10

    Declared by:

    [2154]<nixpkgs/nixos/modules/programs/tmux.nix>

[2155]programs.tmux.reverseSplit

    Reverse the window split shortcuts.

    Type: boolean

    Default: false

    Declared by:

    [2156]<nixpkgs/nixos/modules/programs/tmux.nix>

[2157]programs.tmux.secureSocket

    Store tmux socket under /run, which is more secure than /tmp, but as a downside it doesn't
    survive user logout.

    Type: boolean

    Default: true

    Declared by:

    [2158]<nixpkgs/nixos/modules/programs/tmux.nix>

[2159]programs.tmux.shortcut

    Ctrl following by this key is used as the main shortcut.

    Type: string

    Default: "b"

    Example: "a"

    Declared by:

    [2160]<nixpkgs/nixos/modules/programs/tmux.nix>

[2161]programs.tmux.terminal

    Set the $TERM variable.

    Type: string

    Default: "screen"

    Example: "screen-256color"

    Declared by:

    [2162]<nixpkgs/nixos/modules/programs/tmux.nix>

[2163]programs.traceroute.enable

    Whether to configure a setcap wrapper for traceroute.

    Type: boolean

    Default: false

    Declared by:

    [2164]<nixpkgs/nixos/modules/programs/traceroute.nix>

[2165]programs.tsmClient.enable

    Whether to enable IBM Spectrum Protect (Tivoli Storage Manager, TSM) client command line
    applications with a client system-options file "dsm.sys" .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2166]<nixpkgs/nixos/modules/programs/tsm-client.nix>

[2167]programs.tsmClient.package

    The TSM client derivation to be added to the system environment. It will called with
    .override to add paths to the client system-options file.

    Type: package

    Default: "pkgs.tsm-client"

    Example:

    pkgs.tsm-client-withGui

    Declared by:

    [2168]<nixpkgs/nixos/modules/programs/tsm-client.nix>

[2169]programs.tsmClient.defaultServername

    If multiple server stanzas are declared with programs.tsmClient.servers, this option may be
    used to name a default server stanza that IBM TSM uses in the absence of a user-defined
    dsm.opt file. This option translates to a defaultserver configuration line.

    Type: null or string matching the pattern .{1,64}

    Default: null

    Example: "mainTsmServer"

    Declared by:

    [2170]<nixpkgs/nixos/modules/programs/tsm-client.nix>

[2171]programs.tsmClient.dsmSysText

    This configuration key contains the effective text of the client system-options file
    "dsm.sys". It should not be changed, but may be used to feed the configuration into other
    TSM-depending packages used on the system.

    Type: strings concatenated with "\n" (read only)

    Declared by:

    [2172]<nixpkgs/nixos/modules/programs/tsm-client.nix>

[2173]programs.tsmClient.servers

    Server definitions ("stanzas") for the client system-options file.

    Type: attribute set of submodules

    Default: { }

    Example: { mainTsmServer = { extraConfig = { compression = "yes"; } ; node = "MY-TSM-NODE";
    server = "tsmserver.company.com"; } ; }

    Declared by:

    [2174]<nixpkgs/nixos/modules/programs/tsm-client.nix>

[2175]programs.tsmClient.servers.<name>.extraConfig

    Additional key-value pairs for the server stanza. Values must be strings, or null for the key
    not to be used in the stanza (e.g. to overrule values generated by other options).

    Type: attribute set of null or strings

    Default: { }

    Example: { compression = "yes"; passwordaccess = null; }

    Declared by:

    [2176]<nixpkgs/nixos/modules/programs/tsm-client.nix>

[2177]programs.tsmClient.servers.<name>.genPasswd

    Whether to enable automatic client password generation. This option influences the
    passwordaccess directive in dsm.sys. The password will be stored in the directory given by
    the option passwdDir. Caution: If this option is enabled and the server forces to renew the
    password (e.g. on first connection), a random password will be generated and stored .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2178]<nixpkgs/nixos/modules/programs/tsm-client.nix>

[2179]programs.tsmClient.servers.<name>.includeExclude

    include.* and exclude.* directives to be used when sending files to the IBM TSM server. The
    lines will be written into a file that the inclexcl directive in dsm.sys points to.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    exclude.dir     /nix/store
    include.encrypt /home/.../*
    ''

    Declared by:

    [2180]<nixpkgs/nixos/modules/programs/tsm-client.nix>

[2181]programs.tsmClient.servers.<name>.name

    Local name of the IBM TSM server, must be uncapitalized and no longer than 64 chars. The
    value will be used for the server directive in dsm.sys.

    Type: string matching the pattern .{1,64}

    Example: "mainTsmServer"

    Declared by:

    [2182]<nixpkgs/nixos/modules/programs/tsm-client.nix>

[2183]programs.tsmClient.servers.<name>.node

    Target node name on the IBM TSM server. The value will be used for the nodename directive in
    dsm.sys.

    Type: string matching the pattern .+

    Example: "MY-TSM-NODE"

    Declared by:

    [2184]<nixpkgs/nixos/modules/programs/tsm-client.nix>

[2185]programs.tsmClient.servers.<name>.passwdDir

    Directory that holds the TSM node's password information. The value will be used for the
    passworddir directive in dsm.sys.

    Type: path

    Example: "/home/alice/tsm-password"

    Declared by:

    [2186]<nixpkgs/nixos/modules/programs/tsm-client.nix>

[2187]programs.tsmClient.servers.<name>.port

    TCP port of the IBM TSM server. The value will be used for the tcpport directive in dsm.sys.
    TSM does not support ports above 32767.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 1500

    Declared by:

    [2188]<nixpkgs/nixos/modules/programs/tsm-client.nix>

[2189]programs.tsmClient.servers.<name>.server

    Host/domain name or IP address of the IBM TSM server. The value will be used for the
    tcpserveraddress directive in dsm.sys.

    Type: string matching the pattern .+

    Example: "tsmserver.company.com"

    Declared by:

    [2190]<nixpkgs/nixos/modules/programs/tsm-client.nix>

[2191]programs.tsmClient.servers.<name>.text

    Additional text lines for the server stanza. This option can be used if certion configuration
    keys must be used multiple times or ordered in a certain way as the extraConfig option can't
    control the order of lines in the resulting stanza. Note that the server line at the
    beginning of the stanza is not part of this option's value.

    Type: strings concatenated with "\n"

    Example:

    lib.modules.mkAfter "compression no"

    Declared by:

    [2192]<nixpkgs/nixos/modules/programs/tsm-client.nix>

[2193]programs.tsmClient.wrappedPackage

    The TSM client derivation, wrapped with the path to the client system-options file "dsm.sys".
    This option is to provide the effective derivation for other modules that want to call TSM
    executables.

    Type: package (read only)

    Declared by:

    [2194]<nixpkgs/nixos/modules/programs/tsm-client.nix>

[2195]programs.turbovnc.ensureHeadlessSoftwareOpenGL

    Whether to set up NixOS such that TurboVNC's built-in software OpenGL implementation works.

    This will enable hardware.opengl.enable so that OpenGL programs can find Mesa's llvmpipe
    drivers.

    Setting this option to false does not mean that software OpenGL won't work; it may still work
    depending on your system configuration.

    This option is also intended to generate warnings if you are using some configuration that's
    incompatible with using headless software OpenGL in TurboVNC.

    Type: boolean

    Default: false

    Declared by:

    [2196]<nixpkgs/nixos/modules/programs/turbovnc.nix>

[2197]programs.udevil.enable

    Whether to enable udevil.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2198]<nixpkgs/nixos/modules/programs/udevil.nix>

[2199]programs.usbtop.enable

    Whether to enable usbtop and required kernel module.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2200]<nixpkgs/nixos/modules/programs/usbtop.nix>

[2201]programs.vim.package

    vim package to use.

    Type: package

    Default: "pkgs.vim"

    Example: "pkgs.vimHugeX"

    Declared by:

    [2202]<nixpkgs/nixos/modules/programs/vim.nix>

[2203]programs.vim.defaultEditor

    When enabled, installs vim and configures vim to be the default editor using the EDITOR
    environment variable.

    Type: boolean

    Default: false

    Declared by:

    [2204]<nixpkgs/nixos/modules/programs/vim.nix>

[2205]programs.wavemon.enable

    Whether to add wavemon to the global environment and configure a setcap wrapper for it.

    Type: boolean

    Default: false

    Declared by:

    [2206]<nixpkgs/nixos/modules/programs/wavemon.nix>

[2207]programs.waybar.enable

    Whether to enable waybar.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2208]<nixpkgs/nixos/modules/programs/waybar.nix>

[2209]programs.wireshark.enable

    Whether to add Wireshark to the global environment and configure a setcap wrapper for
    'dumpcap' for users in the 'wireshark' group.

    Type: boolean

    Default: false

    Declared by:

    [2210]<nixpkgs/nixos/modules/programs/wireshark.nix>

[2211]programs.wireshark.package

    Which Wireshark package to install in the global environment.

    Type: package

    Default: "pkgs.wireshark-cli"

    Declared by:

    [2212]<nixpkgs/nixos/modules/programs/wireshark.nix>

[2213]programs.wshowkeys.enable

    Whether to enable wshowkeys (displays keypresses on screen on supported Wayland compositors).
    It requires root permissions to read input events, but these permissions are dropped after
    startup.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2214]<nixpkgs/nixos/modules/programs/wshowkeys.nix>

[2215]programs.x2goserver.enable

    Enables the x2goserver module. NOTE: This will create a good amount of symlinks in `/usr/
    local/bin`

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2216]<nixpkgs/nixos/modules/programs/x2goserver.nix>

[2217]programs.x2goserver.nxagentDefaultOptions

    List of default nx agent options.

    Type: list of strings

    Default: [ "-extension GLX" "-nolisten tcp" ]

    Example: [ "-extension GLX" "-nolisten tcp" ]

    Declared by:

    [2218]<nixpkgs/nixos/modules/programs/x2goserver.nix>

[2219]programs.x2goserver.settings

    x2goserver.conf ini configuration as nix attributes. See `x2goserver.conf(5)` for details

    Type: attribute set of attribute sets

    Default: { }

    Example:

    superenicer = {
      "enable" = "yes";
      "idle-nice-level" = 19;
    };
    telekinesis = { "enable" = "no"; };

    Declared by:

    [2220]<nixpkgs/nixos/modules/programs/x2goserver.nix>

[2221]programs.x2goserver.superenicer.enable

    Enables the SupeReNicer code in x2gocleansessions, this will renice suspended sessions to
    nice level 19 and renice them to level 0 if the session becomes marked as running again

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2222]<nixpkgs/nixos/modules/programs/x2goserver.nix>

[2223]programs.xfs_quota.projects

    Setup of xfs_quota projects. Make sure the filesystem is mounted with the pquota option.

    Type: attribute set of submodules

    Default: { }

    Example: { projname = { id = 50; path = "/xfsprojects/projname"; sizeHardLimit = "50g"; } ; }

    Declared by:

    [2224]<nixpkgs/nixos/modules/programs/xfs_quota.nix>

[2225]programs.xfs_quota.projects.<name>.fileSystem

    XFS filesystem hosting the xfs_quota project.

    Type: string

    Default: "/"

    Declared by:

    [2226]<nixpkgs/nixos/modules/programs/xfs_quota.nix>

[2227]programs.xfs_quota.projects.<name>.id

    Project ID.

    Type: signed integer

    Declared by:

    [2228]<nixpkgs/nixos/modules/programs/xfs_quota.nix>

[2229]programs.xfs_quota.projects.<name>.path

    Project directory.

    Type: string

    Declared by:

    [2230]<nixpkgs/nixos/modules/programs/xfs_quota.nix>

[2231]programs.xfs_quota.projects.<name>.sizeHardLimit

    Hard limit of the project size.

    Type: null or string

    Default: null

    Example: "50g"

    Declared by:

    [2232]<nixpkgs/nixos/modules/programs/xfs_quota.nix>

[2233]programs.xfs_quota.projects.<name>.sizeSoftLimit

    Soft limit of the project size

    Type: null or string

    Default: null

    Example: "30g"

    Declared by:

    [2234]<nixpkgs/nixos/modules/programs/xfs_quota.nix>

[2235]programs.xonsh.enable

    Whether to configure xonsh as an interactive shell.

    Type: boolean

    Default: false

    Declared by:

    [2236]<nixpkgs/nixos/modules/programs/xonsh.nix>

[2237]programs.xonsh.package

    xonsh package to use.

    Type: package

    Default: (build of xonsh-0.9.27)

    Example:

    pkgs.xonsh.override { configFile = "/path/to/xonshrc"; }

    Declared by:

    [2238]<nixpkgs/nixos/modules/programs/xonsh.nix>

[2239]programs.xonsh.config

    Control file to customize your shell behavior.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [2240]<nixpkgs/nixos/modules/programs/xonsh.nix>

[2241]programs.xss-lock.enable

    Whether to enable xss-lock.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2242]<nixpkgs/nixos/modules/programs/xss-lock.nix>

[2243]programs.xss-lock.extraOptions

    Additional command-line arguments to pass to xss-lock.

    Type: list of strings

    Default: [ ]

    Example: [ "--ignore-sleep" ]

    Declared by:

    [2244]<nixpkgs/nixos/modules/programs/xss-lock.nix>

[2245]programs.xss-lock.lockerCommand

    Locker to be used with xsslock

    Type: strings concatenated with " "

    Default: "\${pkgs.i3lock}/bin/i3lock"

    Example:

    ${pkgs.i3lock-fancy}/bin/i3lock-fancy

    Declared by:

    [2246]<nixpkgs/nixos/modules/programs/xss-lock.nix>

[2247]programs.xwayland.enable

    Whether to enable Xwayland X server allows running X programs on a Wayland compositor. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2248]<nixpkgs/nixos/modules/programs/xwayland.nix>

[2249]programs.xwayland.package

    The Xwayland package

    Type: path

    Declared by:

    [2250]<nixpkgs/nixos/modules/programs/xwayland.nix>

[2251]programs.xwayland.defaultFontPath

    Default font path. Setting this option causes Xwayland to be rebuilt.

    Type: string

    Default: ""

    Declared by:

    [2252]<nixpkgs/nixos/modules/programs/xwayland.nix>

[2253]programs.yabar.enable

    Whether to enable yabar.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2254]<nixpkgs/nixos/modules/programs/yabar.nix>

[2255]programs.yabar.package

    The package which contains the `yabar` binary.

    Nixpkgs provides the `yabar` and `yabar-unstable` derivations since 18.03, so it's possible
    to choose.

    Type: package

    Default: (build of yabar-unstable-2018-01-18)

    Example:

    pkgs.yabar

    Declared by:

    [2256]<nixpkgs/nixos/modules/programs/yabar.nix>

[2257]programs.yabar.bars

    List of bars that should be rendered by yabar.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [2258]<nixpkgs/nixos/modules/programs/yabar.nix>

[2259]programs.yabar.bars.<name>.extra

    An attribute set which contains further attributes of a bar.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [2260]<nixpkgs/nixos/modules/programs/yabar.nix>

[2261]programs.yabar.bars.<name>.font

    The font that will be used to draw the status bar.

    Type: string

    Default: "sans bold 9"

    Example: "Droid Sans, FontAwesome Bold 9"

    Declared by:

    [2262]<nixpkgs/nixos/modules/programs/yabar.nix>

[2263]programs.yabar.bars.<name>.indicators

    Indicators that should be rendered by yabar.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [2264]<nixpkgs/nixos/modules/programs/yabar.nix>

[2265]programs.yabar.bars.<name>.indicators.<name>.align

    Whether to align the indicator at the left or right of the bar.

    Type: one of "left", "center", "right"

    Default: "left"

    Example: "right"

    Declared by:

    [2266]<nixpkgs/nixos/modules/programs/yabar.nix>

[2267]programs.yabar.bars.<name>.indicators.<name>.exec

    The type of the indicator to be executed.

    Type: string

    Example: "YABAR_DATE"

    Declared by:

    [2268]<nixpkgs/nixos/modules/programs/yabar.nix>

[2269]programs.yabar.bars.<name>.indicators.<name>.extra

    An attribute set which contains further attributes of a indicator.

    Type: attribute set of string or signed integers

    Default: { }

    Declared by:

    [2270]<nixpkgs/nixos/modules/programs/yabar.nix>

[2271]programs.yabar.bars.<name>.position

    The position where the bar will be rendered.

    Type: one of "top", "bottom"

    Default: "top"

    Example: "bottom"

    Declared by:

    [2272]<nixpkgs/nixos/modules/programs/yabar.nix>

[2273]programs.zmap.enable

    Whether to enable ZMap.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2274]<nixpkgs/nixos/modules/programs/zmap.nix>

[2275]programs.zsh.enable

    Whether to configure zsh as an interactive shell. To enable zsh for a particular user, use
    the users.users.<name?>.shell option for that user. To enable zsh system-wide use the
    users.defaultUserShell option.

    Type: boolean

    Default: false

    Declared by:

    [2276]<nixpkgs/nixos/modules/programs/zsh/zsh.nix>

[2277]programs.zsh.enableBashCompletion

    Enable compatibility with bash's programmable completion system.

    Type: boolean

    Default: false

    Declared by:

    [2278]<nixpkgs/nixos/modules/programs/zsh/zsh.nix>

[2279]programs.zsh.enableCompletion

    Enable zsh completion for all interactive zsh shells.

    Type: boolean

    Default: true

    Declared by:

    [2280]<nixpkgs/nixos/modules/programs/zsh/zsh.nix>

[2281]programs.zsh.enableGlobalCompInit

    Enable execution of compinit call for all interactive zsh shells.

    This option can be disabled if the user wants to extend its fpath and a custom compinit call
    in the local config is required.

    Type: boolean

    Default: true

    Declared by:

    [2282]<nixpkgs/nixos/modules/programs/zsh/zsh.nix>

[2283]programs.zsh.autosuggestions.enable

    Whether to enable zsh-autosuggestions.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2284]<nixpkgs/nixos/modules/programs/zsh/zsh-autosuggestions.nix>

[2285]programs.zsh.autosuggestions.extraConfig

    Attribute set with additional configuration values

    Type: attribute set of strings

    Default: { }

    Example:

    {
      "ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE" = "20";
    }

    Declared by:

    [2286]<nixpkgs/nixos/modules/programs/zsh/zsh-autosuggestions.nix>

[2287]programs.zsh.autosuggestions.highlightStyle

    Highlight style for suggestions ({fore,back}ground color)

    Type: string

    Default: "fg=8"

    Example: "fg=cyan"

    Declared by:

    [2288]<nixpkgs/nixos/modules/programs/zsh/zsh-autosuggestions.nix>

[2289]programs.zsh.autosuggestions.strategy

    Set ZSH_AUTOSUGGEST_STRATEGY to choose the strategy for generating suggestions. There are
    currently two to choose from:

    * history: Chooses the most recent match. * match_prev_cmd: Chooses the most recent match
    whose preceding history item matches the most recently executed command (more info). Note
    that this strategy won't work as expected with ZSH options that don't preserve the history
    order such as HIST_IGNORE_ALL_DUPS or HIST_EXPIRE_DUPS_FIRST.

    Type: one of "history", "match_prev_cmd"

    Default: "history"

    Declared by:

    [2290]<nixpkgs/nixos/modules/programs/zsh/zsh-autosuggestions.nix>

[2291]programs.zsh.histFile

    Change history file.

    Type: string

    Default: "\$HOME/.zsh_history"

    Declared by:

    [2292]<nixpkgs/nixos/modules/programs/zsh/zsh.nix>

[2293]programs.zsh.histSize

    Change history size.

    Type: signed integer

    Default: 2000

    Declared by:

    [2294]<nixpkgs/nixos/modules/programs/zsh/zsh.nix>

[2295]programs.zsh.interactiveShellInit

    Shell script code called during interactive zsh shell initialisation.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [2296]<nixpkgs/nixos/modules/programs/zsh/zsh.nix>

[2297]programs.zsh.loginShellInit

    Shell script code called during zsh login shell initialisation.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [2298]<nixpkgs/nixos/modules/programs/zsh/zsh.nix>

[2299]programs.zsh.ohMyZsh.enable

    Enable oh-my-zsh.

    Type: boolean

    Default: false

    Declared by:

    [2300]<nixpkgs/nixos/modules/programs/zsh/oh-my-zsh.nix>

[2301]programs.zsh.ohMyZsh.package

    Package to install for `oh-my-zsh` usage.

    Type: package

    Default: "pkgs.oh-my-zsh"

    Declared by:

    [2302]<nixpkgs/nixos/modules/programs/zsh/oh-my-zsh.nix>

[2303]programs.zsh.ohMyZsh.cacheDir

    Cache directory to be used by `oh-my-zsh`. Without this option it would default to the
    read-only nix store.

    Type: string

    Default: "\$HOME/.cache/oh-my-zsh"

    Declared by:

    [2304]<nixpkgs/nixos/modules/programs/zsh/oh-my-zsh.nix>

[2305]programs.zsh.ohMyZsh.custom

    Path to a custom oh-my-zsh package to override config of oh-my-zsh. (Can't be used along with
    `customPkgs`).

    Type: null or string

    Default: null

    Declared by:

    [2306]<nixpkgs/nixos/modules/programs/zsh/oh-my-zsh.nix>

[2307]programs.zsh.ohMyZsh.customPkgs

    List of custom packages that should be loaded into `oh-my-zsh`.

    Type: list of packages

    Default: [ ]

    Declared by:

    [2308]<nixpkgs/nixos/modules/programs/zsh/oh-my-zsh.nix>

[2309]programs.zsh.ohMyZsh.plugins

    List of oh-my-zsh plugins

    Type: list of strings

    Default: [ ]

    Declared by:

    [2310]<nixpkgs/nixos/modules/programs/zsh/oh-my-zsh.nix>

[2311]programs.zsh.ohMyZsh.theme

    Name of the theme to be used by oh-my-zsh.

    Type: string

    Default: ""

    Declared by:

    [2312]<nixpkgs/nixos/modules/programs/zsh/oh-my-zsh.nix>

[2313]programs.zsh.promptInit

    Shell script code used to initialise the zsh prompt.

    Type: strings concatenated with "\n"

    Default:

    ''
    # Note that to manually override this in ~/.zshrc you should run `prompt off`
    # before setting your PS1 and etc. Otherwise this will likely to interact with
    # your ~/.zshrc configuration in unexpected ways as the default prompt sets
    # a lot of different prompt variables.
    autoload -U promptinit && promptinit && prompt walters && setopt prompt_sp
    ''

    Declared by:

    [2314]<nixpkgs/nixos/modules/programs/zsh/zsh.nix>

[2315]programs.zsh.setOptions

    Configure zsh options. See zshoptions(1).

    Type: list of strings

    Default: [ "HIST_IGNORE_DUPS" "SHARE_HISTORY" "HIST_FCNTL_LOCK" ]

    Example: [ "EXTENDED_HISTORY" "RM_STAR_WAIT" ]

    Declared by:

    [2316]<nixpkgs/nixos/modules/programs/zsh/zsh.nix>

[2317]programs.zsh.shellAliases

    Set of aliases for zsh shell, which overrides environment.shellAliases. See
    environment.shellAliases for an option format description.

    Type: attribute set of null or string or paths

    Default: { }

    Declared by:

    [2318]<nixpkgs/nixos/modules/programs/zsh/zsh.nix>

[2319]programs.zsh.shellInit

    Shell script code called during zsh shell initialisation.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [2320]<nixpkgs/nixos/modules/programs/zsh/zsh.nix>

[2321]programs.zsh.syntaxHighlighting.enable

    Whether to enable zsh-syntax-highlighting.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2322]<nixpkgs/nixos/modules/programs/zsh/zsh-syntax-highlighting.nix>

[2323]programs.zsh.syntaxHighlighting.highlighters

    Specifies the highlighters to be used by zsh-syntax-highlighting.

    The following defined options can be found here: https://github.com/zsh-users/
    zsh-syntax-highlighting/blob/master/docs/highlighters.md

    Type: list of one of "main", "brackets", "pattern", "cursor", "root", "line"s

    Default: [ "main" ]

    Declared by:

    [2324]<nixpkgs/nixos/modules/programs/zsh/zsh-syntax-highlighting.nix>

[2325]programs.zsh.syntaxHighlighting.patterns

    Specifies custom patterns to be highlighted by zsh-syntax-highlighting.

    Please refer to the docs for more information about the usage: https://github.com/zsh-users/
    zsh-syntax-highlighting/blob/master/docs/highlighters/pattern.md

    Type: attribute set of strings

    Default: { }

    Example:

    {
      "rm -rf *" = "fg=white,bold,bg=red";
    }

    Declared by:

    [2326]<nixpkgs/nixos/modules/programs/zsh/zsh-syntax-highlighting.nix>

[2327]programs.zsh.syntaxHighlighting.styles

    Specifies custom styles to be highlighted by zsh-syntax-highlighting.

    Please refer to the docs for more information about the usage: https://github.com/zsh-users/
    zsh-syntax-highlighting/blob/master/docs/highlighters/main.md

    Type: attribute set of strings

    Default: { }

    Example:

    {
      "alias" = "fg=magenta,bold";
    }

    Declared by:

    [2328]<nixpkgs/nixos/modules/programs/zsh/zsh-syntax-highlighting.nix>

[2329]programs.zsh.vteIntegration

    Whether to enable Zsh integration for VTE terminals. This allows it to preserve the current
    directory of the shell across terminals.

    Type: boolean

    Default: false

    Declared by:

    [2330]<nixpkgs/nixos/modules/config/vte.nix>

[2331]programs.zsh.zsh-autoenv.enable

    Whether to enable zsh-autoenv.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2332]<nixpkgs/nixos/modules/programs/zsh/zsh-autoenv.nix>

[2333]programs.zsh.zsh-autoenv.package

    Package to install for `zsh-autoenv` usage.

    Type: package

    Default: "pkgs.zsh-autoenv"

    Declared by:

    [2334]<nixpkgs/nixos/modules/programs/zsh/zsh-autoenv.nix>

[2335]qt5.enable

    Whether to enable Qt5 theming configuration.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2336]<nixpkgs/nixos/modules/config/qt5.nix>

[2337]qt5.platformTheme

    Selects the platform theme to use for Qt5 applications.

    The options are

    gtk

        Use GTK theme with [2338]qtstyleplugins

    gnome

        Use GNOME theme with [2339]qgnomeplatform

    Type: one of "gtk2", "gnome"

    Example: "gnome"

    Related packages:

      □ pkgs.qgnomeplatform (qgnomeplatform-0.6.1): QPlatformTheme for a better Qt application
        inclusion in GNOME.

      □ pkgs.libsForQt5.qtstyleplugins (qtstyleplugins-unstable-2017-03-11): Additional style
        plugins for Qt5, including BB10, GTK, Cleanlooks, Motif, Plastique.

    Declared by:

    [2340]<nixpkgs/nixos/modules/config/qt5.nix>

[2341]qt5.style

    Selects the style to use for Qt5 applications.

    The options are

    adwaita, adwaita-dark

        Use Adwaita Qt style with [2342]adwaita

    cleanlooks, gtk2, motif, plastique

        Use styles from [2343]qtstyleplugins

    Type: one of "adwaita", "adwaita-dark", "cleanlooks", "gtk2", "motif", "plastique"

    Example: "adwaita"

    Related packages:

      □ pkgs.adwaita-qt (adwaita-qt-1.3.0): A style to bend Qt applications to look like they
        belong into GNOME Shell.

      □ pkgs.libsForQt5.qtstyleplugins (qtstyleplugins-unstable-2017-03-11): Additional style
        plugins for Qt5, including BB10, GTK, Cleanlooks, Motif, Plastique.

    Declared by:

    [2344]<nixpkgs/nixos/modules/config/qt5.nix>

[2345]security.acme.acceptTerms

    Accept the CA's terms of service. The default provider is Let's Encrypt, you can find their
    ToS at [2346]https://letsencrypt.org/repository/.

    Type: boolean

    Default: false

    Declared by:

    [2347]<nixpkgs/nixos/modules/security/acme.nix>

[2348]security.acme.certs

    Attribute set of certificates to get signed and renewed. Creates acme-${cert}.{service,timer}
    systemd units for each certificate defined here. Other services can add dependencies to those
    units if they rely on the certificates being present, or trigger restarts of the service if
    certificates get renewed.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "example.com" = {
        webroot = "/var/lib/acme/acme-challenge/";
        email = "foo@example.com";
        extraDomainNames = [ "www.example.com" "foo.example.com" ];
      };
      "bar.example.com" = {
        webroot = "/var/lib/acme/acme-challenge/";
        email = "bar@example.com";
      };
    }

    Declared by:

    [2349]<nixpkgs/nixos/modules/security/acme.nix>

[2350]security.acme.certs.<name>.credentialsFile

    Path to an EnvironmentFile for the cert's service containing any required and optional
    environment variables for your selected dnsProvider. To find out what values you need to set,
    consult the documentation at [2351]https://go-acme.github.io/lego/dns/ for the corresponding
    dnsProvider.

    Type: path

    Example: "/var/src/secrets/example.org-route53-api-token"

    Declared by:

    [2352]<nixpkgs/nixos/modules/security/acme.nix>

[2353]security.acme.certs.<name>.directory

    Directory where certificate and other state is stored.

    Type: string (read only)

    Default: "/var/lib/acme/‹name›"

    Declared by:

    [2354]<nixpkgs/nixos/modules/security/acme.nix>

[2355]security.acme.certs.<name>.dnsPropagationCheck

    Toggles lego DNS propagation check, which is used alongside DNS-01 challenge to ensure the
    DNS entries required are available.

    Type: boolean

    Default: true

    Declared by:

    [2356]<nixpkgs/nixos/modules/security/acme.nix>

[2357]security.acme.certs.<name>.dnsProvider

    DNS Challenge provider. For a list of supported providers, see the "code" field of the DNS
    providers listed at [2358]https://go-acme.github.io/lego/dns/.

    Type: null or string

    Default: null

    Example: "route53"

    Declared by:

    [2359]<nixpkgs/nixos/modules/security/acme.nix>

[2360]security.acme.certs.<name>.dnsResolver

    Set the resolver to use for performing recursive DNS queries. Supported: host:port. The
    default is to use the system resolvers, or Google's DNS resolvers if the system's cannot be
    determined.

    Type: null or string

    Default: null

    Example: "1.1.1.1:53"

    Declared by:

    [2361]<nixpkgs/nixos/modules/security/acme.nix>

[2362]security.acme.certs.<name>.domain

    Domain to fetch certificate for (defaults to the entry name).

    Type: string

    Default: "‹name›"

    Declared by:

    [2363]<nixpkgs/nixos/modules/security/acme.nix>

[2364]security.acme.certs.<name>.email

    Contact email address for the CA to be able to reach you.

    Type: null or string

    Default: null

    Declared by:

    [2365]<nixpkgs/nixos/modules/security/acme.nix>

[2366]security.acme.certs.<name>.extraDomainNames

    A list of extra domain names, which are included in the one certificate to be issued.

    Type: list of strings

    Default: [ ]

    Example:

    [
      "example.org"
      "mydomain.org"
    ]

    Declared by:

    [2367]<nixpkgs/nixos/modules/security/acme.nix>

[2368]security.acme.certs.<name>.extraLegoFlags

    Additional global flags to pass to all lego commands.

    Type: list of strings

    Default: [ ]

    Declared by:

    [2369]<nixpkgs/nixos/modules/security/acme.nix>

[2370]security.acme.certs.<name>.extraLegoRenewFlags

    Additional flags to pass to lego renew.

    Type: list of strings

    Default: [ ]

    Declared by:

    [2371]<nixpkgs/nixos/modules/security/acme.nix>

[2372]security.acme.certs.<name>.extraLegoRunFlags

    Additional flags to pass to lego run.

    Type: list of strings

    Default: [ ]

    Declared by:

    [2373]<nixpkgs/nixos/modules/security/acme.nix>

[2374]security.acme.certs.<name>.group

    Group running the ACME client.

    Type: string

    Default: "acme"

    Declared by:

    [2375]<nixpkgs/nixos/modules/security/acme.nix>

[2376]security.acme.certs.<name>.keyType

    Key type to use for private keys. For an up to date list of supported values check the
    --key-type option at [2377]https://go-acme.github.io/lego/usage/cli/#usage.

    Type: string

    Default: "ec256"

    Declared by:

    [2378]<nixpkgs/nixos/modules/security/acme.nix>

[2379]security.acme.certs.<name>.ocspMustStaple

    Turns on the OCSP Must-Staple TLS extension. Make sure you know what you're doing! See:

      □ [2380]https://blog.apnic.net/2019/01/15/is-the-web-ready-for-ocsp-must-staple/

      □ [2381]https://blog.hboeck.de/archives/
        886-The-Problem-with-OCSP-Stapling-and-Must-Staple-and-why-Certificate-Revocation-is-still-broken.html

    Type: boolean

    Default: false

    Declared by:

    [2382]<nixpkgs/nixos/modules/security/acme.nix>

[2383]security.acme.certs.<name>.postRun

    Commands to run after new certificates go live. Note that these commands run as the root
    user.

    Executed in the same directory with the new certificate.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "cp full.pem backup.pem"

    Declared by:

    [2384]<nixpkgs/nixos/modules/security/acme.nix>

[2385]security.acme.certs.<name>.server

    ACME Directory Resource URI. Defaults to Let's Encrypt's production endpoint, [2386]https://
    acme-v02.api.letsencrypt.org/directory, if unset.

    Type: null or string

    Default: null

    Declared by:

    [2387]<nixpkgs/nixos/modules/security/acme.nix>

[2388]security.acme.certs.<name>.webroot

    Where the webroot of the HTTP vhost is located. .well-known/acme-challenge/ directory will be
    created below the webroot if it doesn't exist. http://example.org/.well-known/acme-challenge/
    must also be available (notice unencrypted HTTP).

    Type: null or string

    Default: null

    Example: "/var/lib/acme/acme-challenge"

    Declared by:

    [2389]<nixpkgs/nixos/modules/security/acme.nix>

[2390]security.acme.email

    Contact email address for the CA to be able to reach you.

    Type: null or string

    Default: null

    Declared by:

    [2391]<nixpkgs/nixos/modules/security/acme.nix>

[2392]security.acme.preliminarySelfsigned

    Whether a preliminary self-signed certificate should be generated before doing ACME requests.
    This can be useful when certificates are required in a webserver, but ACME needs the
    webserver to make its requests.

    With preliminary self-signed certificate the webserver can be started and can later reload
    the correct ACME certificates.

    Type: boolean

    Default: true

    Declared by:

    [2393]<nixpkgs/nixos/modules/security/acme.nix>

[2394]security.acme.renewInterval

    Systemd calendar expression when to check for renewal. See systemd.time(7).

    Type: string

    Default: "daily"

    Declared by:

    [2395]<nixpkgs/nixos/modules/security/acme.nix>

[2396]security.acme.server

    ACME Directory Resource URI. Defaults to Let's Encrypt's production endpoint, [2397]https://
    acme-v02.api.letsencrypt.org/directory, if unset.

    Type: null or string

    Default: null

    Declared by:

    [2398]<nixpkgs/nixos/modules/security/acme.nix>

[2399]security.acme.validMinDays

    Minimum remaining validity before renewal in days.

    Type: signed integer

    Default: 30

    Declared by:

    [2400]<nixpkgs/nixos/modules/security/acme.nix>

[2401]security.allowSimultaneousMultithreading

    Whether to allow SMT/hyperthreading. Disabling SMT means that only physical CPU cores will be
    usable at runtime, potentially at significant performance cost.

    The primary motivation for disabling SMT is to mitigate the risk of leaking data between
    threads running on the same CPU core (due to e.g., shared caches). This attack vector is
    unproven.

    Disabling SMT is a supplement to the L1 data cache flushing mitigation (see [2402]
    security.virtualisation.flushL1DataCache) versus malicious VM guests (SMT could "bring back"
    previously flushed data).

    Type: boolean

    Default: true

    Declared by:

    [2403]<nixpkgs/nixos/modules/security/misc.nix>

[2404]security.allowUserNamespaces

    Whether to allow creation of user namespaces.

    The motivation for disabling user namespaces is the potential presence of code paths where
    the kernel's permission checking logic fails to account for namespacing, instead permitting a
    namespaced process to act outside the namespace with the same privileges as it would have
    inside it. This is particularly damaging in the common case of running as root within the
    namespace.

    When user namespace creation is disallowed, attempting to create a user namespace fails with
    "no space left on device" (ENOSPC). root may re-enable user namespace creation at runtime.

    Type: boolean

    Default: true

    Declared by:

    [2405]<nixpkgs/nixos/modules/security/misc.nix>

[2406]security.apparmor.enable

    Whether to enable the AppArmor Mandatory Access Control system.

    If you're enabling this module on a running system, note that a reboot will be required to
    activate AppArmor in the kernel.

    Also, beware that enabling this module privileges stability over security by not trying to
    kill unconfined but newly confinable running processes by default, though it would be needed
    because AppArmor can only confine new or already confined processes of an executable. This
    killing would for instance be necessary when upgrading to a NixOS revision introducing for
    the first time an AppArmor profile for the executable of a running process.

    Enable [2407]security.apparmor.killUnconfinedConfinables if you want this service to do such
    killing by sending a SIGTERM to those running processes.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2408]<nixpkgs/nixos/modules/security/apparmor.nix>

[2409]security.apparmor.enableCache

    Whether to enable caching of AppArmor policies in /var/cache/apparmor/.

    Beware that AppArmor policies almost always contain Nix store paths, and thus produce at each
    change of these paths a new cached version accumulating in the cache.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2410]<nixpkgs/nixos/modules/security/apparmor.nix>

[2411]security.apparmor.packages

    List of packages to be added to AppArmor's include path

    Type: list of packages

    Default: [ ]

    Declared by:

    [2412]<nixpkgs/nixos/modules/security/apparmor.nix>

[2413]security.apparmor.includes

    List of paths to be added to AppArmor's searched paths when resolving include directives.

    Type: attribute set of strings concatenated with "\n"s

    Default: { }

    Declared by:

    [2414]<nixpkgs/nixos/modules/security/apparmor.nix>

[2415]security.apparmor.killUnconfinedConfinables

    Whether to enable killing of processes which have an AppArmor profile enabled (in [2416]
    security.apparmor.policies) but are not confined (because AppArmor can only confine new
    processes).

    This is only sending a gracious SIGTERM signal to the processes, not a SIGKILL.

    Beware that due to a current limitation of AppArmor, only profiles with exact paths (and no
    name) can enable such kills.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2417]<nixpkgs/nixos/modules/security/apparmor.nix>

[2418]security.apparmor.policies

    AppArmor policies.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [2419]<nixpkgs/nixos/modules/security/apparmor.nix>

[2420]security.apparmor.policies.<name>.enable

    Whether to enable loading of the profile into the kernel.

    Type: boolean

    Default: true

    Example: false

    Declared by:

    [2421]<nixpkgs/nixos/modules/security/apparmor.nix>

[2422]security.apparmor.policies.<name>.enforce

    Whether to enable enforcing of the policy or only complain in the logs.

    Type: boolean

    Default: true

    Example: false

    Declared by:

    [2423]<nixpkgs/nixos/modules/security/apparmor.nix>

[2424]security.apparmor.policies.<name>.profile

    The policy of the profile.

    Type: strings concatenated with "\n"

    Declared by:

    [2425]<nixpkgs/nixos/modules/security/apparmor.nix>

[2426]security.audit.enable

    Whether to enable the Linux audit system. The special `lock' value can be used to enable
    auditing and prevent disabling it until a restart. Be careful about locking this, as it will
    prevent you from changing your audit configuration until you restart. If possible, test your
    configuration using build-vm beforehand.

    Type: one of false, true, "lock"

    Default: false

    Declared by:

    [2427]<nixpkgs/nixos/modules/security/audit.nix>

[2428]security.audit.backlogLimit

    The maximum number of outstanding audit buffers allowed; exceeding this is considered a
    failure and handled in a manner specified by failureMode.

    Type: signed integer

    Default: 64

    Declared by:

    [2429]<nixpkgs/nixos/modules/security/audit.nix>

[2430]security.audit.failureMode

    How to handle critical errors in the auditing system

    Type: one of "silent", "printk", "panic"

    Default: "printk"

    Declared by:

    [2431]<nixpkgs/nixos/modules/security/audit.nix>

[2432]security.audit.rateLimit

    The maximum messages per second permitted before triggering a failure as specified by
    failureMode. Setting it to zero disables the limit.

    Type: signed integer

    Default: 0

    Declared by:

    [2433]<nixpkgs/nixos/modules/security/audit.nix>

[2434]security.audit.rules

    The ordered audit rules, with each string appearing as one line of the audit.rules file.

    Type: list of strings

    Default: [ ]

    Example: [ "-a exit,always -F arch=b64 -S execve" ]

    Declared by:

    [2435]<nixpkgs/nixos/modules/security/audit.nix>

[2436]security.auditd.enable

    Whether to enable the Linux Audit daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2437]<nixpkgs/nixos/modules/security/auditd.nix>

[2438]security.chromiumSuidSandbox.enable

    Whether to install the Chromium SUID sandbox which is an executable that Chromium may use in
    order to achieve sandboxing.

    If you get the error "The SUID sandbox helper binary was found, but is not configured
    correctly.", turning this on might help.

    Also, if the URL chrome://sandbox tells you that "You are not adequately sandboxed!", turning
    this on might resolve the issue.

    Type: boolean

    Default: false

    Declared by:

    [2439]<nixpkgs/nixos/modules/security/chromium-suid-sandbox.nix>

[2440]security.dhparams.enable

    Whether to generate new DH params and clean up old DH params.

    Type: boolean

    Default: false

    Declared by:

    [2441]<nixpkgs/nixos/modules/security/dhparams.nix>

[2442]security.dhparams.defaultBitSize

    This allows to override the default bit size for all of the Diffie-Hellman parameters set in
    security.dhparams.params.

    Type: integer of at least 16 bits

    Default: 2048

    Declared by:

    [2443]<nixpkgs/nixos/modules/security/dhparams.nix>

[2444]security.dhparams.params

    Diffie-Hellman parameters to generate.

    The value is the size (in bits) of the DH params to generate. The generated DH params path
    can be found in config.security.dhparams.params.name.path.

    Note: The name of the DH params is taken as being the name of the service it serves and the
    params will be generated before the said service is started.
    Warning: If you are removing all dhparams from this list, you have to leave
    security.dhparams.enable for at least one activation in order to have them be cleaned up.
    This also means if you rollback to a version without any dhparams the existing ones won't be
    cleaned up. Of course this only applies if security.dhparams.stateful is true.
    Note: It's recommended to not set a specific bit size here, so that users can easily override
    this by setting security.dhparams.defaultBitSize.

    Type: attribute set of submodule or signed integer convertible to its

    Default: { }

    Example:

    { nginx.bits = 3072; }

    Declared by:

    [2445]<nixpkgs/nixos/modules/security/dhparams.nix>

[2446]security.dhparams.params.<name>.bits

    The bit size for the prime that is used during a Diffie-Hellman key exchange.

    Type: integer of at least 16 bits

    Default: 2048

    Declared by:

    [2447]<nixpkgs/nixos/modules/security/dhparams.nix>

[2448]security.dhparams.params.<name>.path

    The resulting path of the generated Diffie-Hellman parameters file for other services to
    reference. This could be either a store path or a file inside the directory specified by
    security.dhparams.path.

    Type: path (read only)

    Declared by:

    [2449]<nixpkgs/nixos/modules/security/dhparams.nix>

[2450]security.dhparams.path

    Path to the directory in which Diffie-Hellman parameters will be stored. This only is
    relevant if security.dhparams.stateful is true.

    Type: string

    Default: "/var/lib/dhparams"

    Declared by:

    [2451]<nixpkgs/nixos/modules/security/dhparams.nix>

[2452]security.dhparams.stateful

    Whether generation of Diffie-Hellman parameters should be stateful or not. If this is
    enabled, PEM-encoded files for Diffie-Hellman parameters are placed in the directory
    specified by security.dhparams.path. Otherwise the files are created within the Nix store.

    Note: If this is false the resulting store path will be non-deterministic and will be rebuilt
    every time the openssl package changes.

    Type: boolean

    Default: true

    Declared by:

    [2453]<nixpkgs/nixos/modules/security/dhparams.nix>

[2454]security.doas.enable

    Whether to enable the doas command, which allows non-root users to execute commands as root.

    Type: boolean

    Default: false

    Declared by:

    [2455]<nixpkgs/nixos/modules/security/doas.nix>

[2456]security.doas.extraConfig

    Extra configuration text appended to doas.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [2457]<nixpkgs/nixos/modules/security/doas.nix>

[2458]security.doas.extraRules

    Define specific rules to be set in the /etc/doas.conf file. More specific rules should come
    after more general ones in order to yield the expected behavior. You can use mkBefore and/or
    mkAfter to ensure this is the case when configuration options are merged.

    Type: list of submodules

    Default: [ ]

    Example:

    [
      # Allow execution of any command by any user in group doas, requiring
      # a password and keeping any previously-defined environment variables.
      { groups = [ "doas" ]; noPass = false; keepEnv = true; }

      # Allow execution of "/home/root/secret.sh" by user `backup` OR user
      # `database` OR any member of the group with GID `1006`, without a
      # password.
      { users = [ "backup" "database" ]; groups = [ 1006 ];
        cmd = "/home/root/secret.sh"; noPass = true; }

      # Allow any member of group `bar` to run `/home/baz/cmd1.sh` as user
      # `foo` with argument `hello-doas`.
      { groups = [ "bar" ]; runAs = "foo";
        cmd = "/home/baz/cmd1.sh"; args = [ "hello-doas" ]; }

      # Allow any member of group `bar` to run `/home/baz/cmd2.sh` as user
      # `foo` with no arguments.
      { groups = [ "bar" ]; runAs = "foo";
        cmd = "/home/baz/cmd2.sh"; args = [ ]; }

      # Allow user `abusers` to execute "nano" and unset the value of
      # SSH_AUTH_SOCK, override the value of ALPHA to 1, and inherit the
      # value of BETA from the current environment.
      { users = [ "abusers" ]; cmd = "nano";
        setEnv = [ "-SSH_AUTH_SOCK" "ALPHA=1" "BETA" ]; }
    ]

    Declared by:

    [2459]<nixpkgs/nixos/modules/security/doas.nix>

[2460]security.doas.extraRules.*.args

    Arguments that must be provided to the command. When set to [], the command must be run
    without any arguments.

    Type: null or list of strings

    Default: null

    Declared by:

    [2461]<nixpkgs/nixos/modules/security/doas.nix>

[2462]security.doas.extraRules.*.cmd

    The command the user is allowed to run. When set to null (the default), all commands are
    allowed.

    NOTE: It is best practice to specify absolute paths. If a relative path is specified, only a
    restricted PATH will be searched.

    Type: null or string

    Default: null

    Declared by:

    [2463]<nixpkgs/nixos/modules/security/doas.nix>

[2464]security.doas.extraRules.*.groups

    The groups / GIDs this rule should apply for.

    Type: list of string or signed integers

    Default: [ ]

    Declared by:

    [2465]<nixpkgs/nixos/modules/security/doas.nix>

[2466]security.doas.extraRules.*.keepEnv

    If true, environment variables other than those listed in doas(1) are kept when creating the
    environment for the new process.

    Type: boolean

    Default: false

    Declared by:

    [2467]<nixpkgs/nixos/modules/security/doas.nix>

[2468]security.doas.extraRules.*.noLog

    If true, successful executions will not be logged to syslogd(8).

    Type: boolean

    Default: false

    Declared by:

    [2469]<nixpkgs/nixos/modules/security/doas.nix>

[2470]security.doas.extraRules.*.noPass

    If true, the user is not required to enter a password.

    Type: boolean

    Default: false

    Declared by:

    [2471]<nixpkgs/nixos/modules/security/doas.nix>

[2472]security.doas.extraRules.*.persist

    If true, do not ask for a password again for some time after the user successfully
    authenticates.

    Type: boolean

    Default: false

    Declared by:

    [2473]<nixpkgs/nixos/modules/security/doas.nix>

[2474]security.doas.extraRules.*.runAs

    Which user or group the specified command is allowed to run as. When set to null (the
    default), all users are allowed.

    A user can be specified using just the username: "foo". It is also possible to only allow
    running as a specific group with ":bar".

    Type: null or string

    Default: null

    Declared by:

    [2475]<nixpkgs/nixos/modules/security/doas.nix>

[2476]security.doas.extraRules.*.setEnv

    Keep or set the specified variables. Variables may also be removed with a leading '-' or set
    using variable=value. If the first character of value is a '$', the value to be set is taken
    from the existing environment variable of the indicated name. This option is processed after
    the default environment has been created.

    NOTE: All rules have setenv { SSH_AUTH_SOCK } by default. To prevent SSH_AUTH_SOCK from being
    inherited, add "-SSH_AUTH_SOCK" anywhere in this list.

    Type: list of strings

    Default: [ ]

    Declared by:

    [2477]<nixpkgs/nixos/modules/security/doas.nix>

[2478]security.doas.extraRules.*.users

    The usernames / UIDs this rule should apply for.

    Type: list of string or signed integers

    Default: [ ]

    Declared by:

    [2479]<nixpkgs/nixos/modules/security/doas.nix>

[2480]security.doas.wheelNeedsPassword

    Whether users of the wheel group must provide a password to run commands as super user via 
    doas.

    Type: boolean

    Default: true

    Declared by:

    [2481]<nixpkgs/nixos/modules/security/doas.nix>

[2482]security.duosec.acceptEnvFactor

    Look for factor selection or passcode in the $DUO_PASSCODE environment variable before
    prompting the user for input.

    When $DUO_PASSCODE is non-empty, it will override autopush. The SSH client will need SendEnv
    DUO_PASSCODE in its configuration, and the SSH server will similarly need AcceptEnv
    DUO_PASSCODE.

    Type: boolean

    Default: false

    Declared by:

    [2483]<nixpkgs/nixos/modules/security/duosec.nix>

[2484]security.duosec.allowTcpForwarding

    By default, when SSH forwarding, enabling Duo Security will disable TCP forwarding. By
    enabling this, you potentially undermine some of the SSH based login security. Note this is
    not needed if you use PAM.

    Type: boolean

    Default: false

    Declared by:

    [2485]<nixpkgs/nixos/modules/security/duosec.nix>

[2486]security.duosec.autopush

    If true, Duo Unix will automatically send a push login request to the user’s phone, falling
    back on a phone call if push is unavailable. If false, the user will be prompted to choose an
    authentication method. When configured with autopush = yes, we recommend setting prompts = 1.

    Type: boolean

    Default: false

    Declared by:

    [2487]<nixpkgs/nixos/modules/security/duosec.nix>

[2488]security.duosec.failmode

    On service or configuration errors that prevent Duo authentication, fail "safe" (allow
    access) or "secure" (deny access). The default is "safe".

    Type: one of "safe", "secure"

    Default: "safe"

    Declared by:

    [2489]<nixpkgs/nixos/modules/security/duosec.nix>

[2490]security.duosec.fallbackLocalIP

    Duo Unix reports the IP address of the authorizing user, for the purposes of authorization
    and whitelisting. If Duo Unix cannot detect the IP address of the client, setting
    fallbackLocalIP = yes will cause Duo Unix to send the IP address of the server it is running
    on.

    If you are using IP whitelisting, enabling this option could cause unauthorized logins if the
    local IP is listed in the whitelist.

    Type: boolean

    Default: false

    Declared by:

    [2491]<nixpkgs/nixos/modules/security/duosec.nix>

[2492]security.duosec.groups

    If specified, Duo authentication is required only for users whose primary group or
    supplementary group list matches one of the space-separated pattern lists. Refer to [2493]
    https://duo.com/docs/duounix for details.

    Type: string

    Default: ""

    Example: "users,!wheel,!*admin guests"

    Declared by:

    [2494]<nixpkgs/nixos/modules/security/duosec.nix>

[2495]security.duosec.host

    Duo API hostname.

    Type: string

    Declared by:

    [2496]<nixpkgs/nixos/modules/security/duosec.nix>

[2497]security.duosec.integrationKey

    Integration key.

    Type: string

    Declared by:

    [2498]<nixpkgs/nixos/modules/security/duosec.nix>

[2499]security.duosec.motd

    Print the contents of /etc/motd to screen after a successful login.

    Type: boolean

    Default: false

    Declared by:

    [2500]<nixpkgs/nixos/modules/security/duosec.nix>

[2501]security.duosec.pam.enable

    If enabled, protect logins with Duo Security using PAM support.

    Type: boolean

    Default: false

    Declared by:

    [2502]<nixpkgs/nixos/modules/security/duosec.nix>

[2503]security.duosec.prompts

    If a user fails to authenticate with a second factor, Duo Unix will prompt the user to
    authenticate again. This option sets the maximum number of prompts that Duo Unix will display
    before denying access. Must be 1, 2, or 3. Default is 3.

    For example, when prompts = 1, the user will have to successfully authenticate on the first
    prompt, whereas if prompts = 2, if the user enters incorrect information at the initial
    prompt, he/she will be prompted to authenticate again.

    When configured with autopush = true, we recommend setting prompts = 1.

    Type: one of 1, 2, 3

    Default: 3

    Declared by:

    [2504]<nixpkgs/nixos/modules/security/duosec.nix>

[2505]security.duosec.pushinfo

    Include information such as the command to be executed in the Duo Push message.

    Type: boolean

    Default: false

    Declared by:

    [2506]<nixpkgs/nixos/modules/security/duosec.nix>

[2507]security.duosec.secretKeyFile

    A file containing your secret key. The security of your Duo application is tied to the
    security of your secret key.

    Type: null or path

    Default: null

    Example: "/run/keys/duo-skey"

    Declared by:

    [2508]<nixpkgs/nixos/modules/security/duosec.nix>

[2509]security.duosec.ssh.enable

    If enabled, protect SSH logins with Duo Security.

    Type: boolean

    Default: false

    Declared by:

    [2510]<nixpkgs/nixos/modules/security/duosec.nix>

[2511]security.forcePageTableIsolation

    Whether to force-enable the Page Table Isolation (PTI) Linux kernel feature even on CPU
    models that claim to be safe from Meltdown.

    This hardening feature is most beneficial to systems that run untrusted workloads that rely
    on address space isolation for security.

    Type: boolean

    Default: false

    Declared by:

    [2512]<nixpkgs/nixos/modules/security/misc.nix>

[2513]security.googleOsLogin.enable

    Whether to enable Google OS Login

    The OS Login package enables the following components: AuthorizedKeysCommand to query valid
    SSH keys from the user's OS Login profile during ssh authentication phase. NSS Module to
    provide user and group information PAM Module for the sshd service, providing authorization
    and authentication support, allowing the system to use data stored in Google Cloud IAM
    permissions to control both, the ability to log into an instance, and to perform operations
    as root (sudo).

    Type: boolean

    Default: false

    Declared by:

    [2514]<nixpkgs/nixos/modules/security/google_oslogin.nix>

[2515]security.lockKernelModules

    Disable kernel module loading once the system is fully initialised. Module loading is
    disabled until the next reboot. Problems caused by delayed module loading can be fixed by
    adding the module(s) in question to boot.kernelModules.

    Type: boolean

    Default: false

    Declared by:

    [2516]<nixpkgs/nixos/modules/security/lock-kernel-modules.nix>

[2517]security.pam.enableEcryptfs

    Whether to enable eCryptfs PAM module (mounting ecryptfs home directory on login).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2518]<nixpkgs/nixos/modules/security/pam.nix>

[2519]security.pam.enableOTPW

    Whether to enable the OTPW (one-time password) PAM module.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2520]<nixpkgs/nixos/modules/security/pam.nix>

[2521]security.pam.enableSSHAgentAuth

    Enable sudo logins if the user's SSH agent provides a key present in ~/.ssh/authorized_keys.
    This allows machines to exclusively use SSH keys instead of passwords.

    Type: boolean

    Default: false

    Declared by:

    [2522]<nixpkgs/nixos/modules/security/pam.nix>

[2523]security.pam.loginLimits

    Define resource limits that should apply to users or groups. Each item in the list should be
    an attribute set with a domain, type, item, and value attribute. The syntax and semantics of
    these attributes must be that described in the limits.conf(5) man page.

    Note that these limits do not apply to systemd services, whose limits can be changed via
    systemd.extraConfig instead.

    Type: unspecified

    Default: [ ]

    Example: [ { domain = "ftp"; item = "nproc"; type = "hard"; value = "0"; } { domain =
    "@student"; item = "maxlogins"; type = "-"; value = "4"; } ]

    Declared by:

    [2524]<nixpkgs/nixos/modules/security/pam.nix>

[2525]security.pam.makeHomeDir.skelDirectory

    Path to skeleton directory whose contents are copied to home directories newly created by
    pam_mkhomedir.

    Type: string

    Default: "/var/empty"

    Example: "/etc/skel"

    Declared by:

    [2526]<nixpkgs/nixos/modules/security/pam.nix>

[2527]security.pam.mount.enable

    Enable PAM mount system to mount fileystems on user login.

    Type: boolean

    Default: false

    Declared by:

    [2528]<nixpkgs/nixos/modules/security/pam_mount.nix>

[2529]security.pam.mount.extraVolumes

    List of volume definitions for pam_mount. For more information, visit [2530]http://
    pam-mount.sourceforge.net/pam_mount.conf.5.html.

    Type: list of strings

    Default: [ ]

    Declared by:

    [2531]<nixpkgs/nixos/modules/security/pam_mount.nix>

[2532]security.pam.oath.enable

    Enable the OATH (one-time password) PAM module.

    Type: boolean

    Default: false

    Declared by:

    [2533]<nixpkgs/nixos/modules/security/oath.nix>

[2534]security.pam.oath.digits

    Specify the length of the one-time password in number of digits.

    Type: one of 6, 7, 8

    Default: 6

    Declared by:

    [2535]<nixpkgs/nixos/modules/security/oath.nix>

[2536]security.pam.oath.usersFile

    Set the path to file where the user's credentials are stored. This file must not be world
    readable!

    Type: path

    Default: "/etc/users.oath"

    Declared by:

    [2537]<nixpkgs/nixos/modules/security/oath.nix>

[2538]security.pam.oath.window

    Specify the number of one-time passwords to check in order to accommodate for situations
    where the system and the client are slightly out of sync (iteration for HOTP or time steps
    for TOTP).

    Type: signed integer

    Default: 5

    Declared by:

    [2539]<nixpkgs/nixos/modules/security/oath.nix>

[2540]security.pam.p11.enable

    Enables P11 PAM (pam_p11) module.

    If set, users can log in with SSH keys and PKCS#11 tokens.

    More information can be found [2541]here.

    Type: boolean

    Default: false

    Declared by:

    [2542]<nixpkgs/nixos/modules/security/pam.nix>

[2543]security.pam.p11.control

    This option sets pam "control". If you want to have multi factor authentication, use
    "required". If you want to use the PKCS#11 device instead of the regular password, use
    "sufficient".

    Read pam.conf(5) for better understanding of this option.

    Type: one of "required", "requisite", "sufficient", "optional"

    Default: "sufficient"

    Declared by:

    [2544]<nixpkgs/nixos/modules/security/pam.nix>

[2545]security.pam.services

    This option defines the PAM services. A service typically corresponds to a program that uses
    PAM, e.g. login or passwd. Each attribute of this set defines a PAM service, with the
    attribute name defining the name of the service.

    Type: attribute set of submodules

    Default: [ ]

    Declared by:

    [2546]<nixpkgs/nixos/modules/security/pam.nix>

[2547]security.pam.services.<name>.enableAppArmor

    Enable support for attaching AppArmor profiles at the user/group level, e.g., as part of a
    role based access control scheme.

    Type: boolean

    Default: false

    Declared by:

    [2548]<nixpkgs/nixos/modules/security/pam.nix>

[2549]security.pam.services.<name>.enableGnomeKeyring

    If enabled, pam_gnome_keyring will attempt to automatically unlock the user's default Gnome
    keyring upon login. If the user login password does not match their keyring password, Gnome
    Keyring will prompt separately after login.

    Type: boolean

    Default: false

    Declared by:

    [2550]<nixpkgs/nixos/modules/security/pam.nix>

[2551]security.pam.services.<name>.enableKwallet

    If enabled, pam_wallet will attempt to automatically unlock the user's default KDE wallet
    upon login. If the user has no wallet named "kdewallet", or the login password does not match
    their wallet password, KDE will prompt separately after login.

    Type: boolean

    Default: false

    Declared by:

    [2552]<nixpkgs/nixos/modules/security/pam.nix>

[2553]security.pam.services.<name>.allowNullPassword

    Whether to allow logging into accounts that have no password set (i.e., have an empty
    password field in /etc/passwd or /etc/group). This does not enable logging into disabled
    accounts (i.e., that have the password field set to !). Note that regardless of what the
    pam_unix documentation says, accounts with hashed empty passwords are always allowed to log
    in.

    Type: boolean

    Default: false

    Declared by:

    [2554]<nixpkgs/nixos/modules/security/pam.nix>

[2555]security.pam.services.<name>.duoSecurity.enable

    If set, use the Duo Security pam module pam_duo for authentication. Requires configuration of
    security.duosec options.

    Type: boolean

    Default: false

    Declared by:

    [2556]<nixpkgs/nixos/modules/security/pam.nix>

[2557]security.pam.services.<name>.forwardXAuth

    Whether X authentication keys should be passed from the calling user to the target user (e.g.
    for su)

    Type: boolean

    Default: false

    Declared by:

    [2558]<nixpkgs/nixos/modules/security/pam.nix>

[2559]security.pam.services.<name>.fprintAuth

    If set, fingerprint reader will be used (if exists and your fingerprints are enrolled).

    Type: boolean

    Default: false

    Declared by:

    [2560]<nixpkgs/nixos/modules/security/pam.nix>

[2561]security.pam.services.<name>.gnupg.enable

    If enabled, pam_gnupg will attempt to automatically unlock the user's GPG keys with the login
    password via gpg-agent. The keygrips of all keys to be unlocked should be written to ~
    /.pam-gnupg, and can be queried with gpg -K --with-keygrip. Presetting passphrases must be
    enabled by adding allow-preset-passphrase in ~/.gnupg/gpg-agent.conf.

    Type: boolean

    Default: false

    Declared by:

    [2562]<nixpkgs/nixos/modules/security/pam.nix>

[2563]security.pam.services.<name>.gnupg.noAutostart

    Don't start gpg-agent if it is not running. Useful in conjunction with starting gpg-agent as
    a systemd user service.

    Type: boolean

    Default: false

    Declared by:

    [2564]<nixpkgs/nixos/modules/security/pam.nix>

[2565]security.pam.services.<name>.gnupg.storeOnly

    Don't send the password immediately after login, but store for PAM session.

    Type: boolean

    Default: false

    Declared by:

    [2566]<nixpkgs/nixos/modules/security/pam.nix>

[2567]security.pam.services.<name>.googleAuthenticator.enable

    If set, users with enabled Google Authenticator (created ~/.google_authenticator) will be
    required to provide Google Authenticator token to log in.

    Type: boolean

    Default: false

    Declared by:

    [2568]<nixpkgs/nixos/modules/security/pam.nix>

[2569]security.pam.services.<name>.googleOsLoginAccountVerification

    If set, will use the Google OS Login PAM modules (pam_oslogin_login, pam_oslogin_admin) to
    verify possible OS Login users and set sudoers configuration accordingly. This only makes
    sense to enable for the sshd PAM service.

    Type: boolean

    Default: false

    Declared by:

    [2570]<nixpkgs/nixos/modules/security/pam.nix>

[2571]security.pam.services.<name>.googleOsLoginAuthentication

    If set, will use the pam_oslogin_login's user authentication methods to authenticate users
    using 2FA. This only makes sense to enable for the sshd PAM service.

    Type: boolean

    Default: false

    Declared by:

    [2572]<nixpkgs/nixos/modules/security/pam.nix>

[2573]security.pam.services.<name>.limits

    Attribute set describing resource limits. Defaults to the value of security.pam.loginLimits.

    Type: unspecified

    Declared by:

    [2574]<nixpkgs/nixos/modules/security/pam.nix>

[2575]security.pam.services.<name>.logFailures

    Whether to log authentication failures in /var/log/faillog.

    Type: boolean

    Default: false

    Declared by:

    [2576]<nixpkgs/nixos/modules/security/pam.nix>

[2577]security.pam.services.<name>.makeHomeDir

    Whether to try to create home directories for users with $HOMEs pointing to nonexistent
    locations on session login.

    Type: boolean

    Default: false

    Declared by:

    [2578]<nixpkgs/nixos/modules/security/pam.nix>

[2579]security.pam.services.<name>.name

    Name of the PAM service.

    Type: string

    Example: "sshd"

    Declared by:

    [2580]<nixpkgs/nixos/modules/security/pam.nix>

[2581]security.pam.services.<name>.nodelay

    Wheather the delay after typing a wrong password should be disabled.

    Type: boolean

    Default: false

    Declared by:

    [2582]<nixpkgs/nixos/modules/security/pam.nix>

[2583]security.pam.services.<name>.oathAuth

    If set, the OATH Toolkit will be used.

    Type: boolean

    Default: false

    Declared by:

    [2584]<nixpkgs/nixos/modules/security/pam.nix>

[2585]security.pam.services.<name>.otpwAuth

    If set, the OTPW system will be used (if ~/.otpw exists).

    Type: boolean

    Default: false

    Declared by:

    [2586]<nixpkgs/nixos/modules/security/pam.nix>

[2587]security.pam.services.<name>.p11Auth

    If set, keys listed in ~/.ssh/authorized_keys and ~/.eid/authorized_certificates can be used
    to log in with the associated PKCS#11 tokens.

    Type: boolean

    Default: false

    Declared by:

    [2588]<nixpkgs/nixos/modules/security/pam.nix>

[2589]security.pam.services.<name>.pamMount

    Enable PAM mount (pam_mount) system to mount fileystems on user login.

    Type: boolean

    Default: false

    Declared by:

    [2590]<nixpkgs/nixos/modules/security/pam.nix>

[2591]security.pam.services.<name>.requireWheel

    Whether to permit root access only to members of group wheel.

    Type: boolean

    Default: false

    Declared by:

    [2592]<nixpkgs/nixos/modules/security/pam.nix>

[2593]security.pam.services.<name>.rootOK

    If set, root doesn't need to authenticate (e.g. for the useradd service).

    Type: boolean

    Default: false

    Declared by:

    [2594]<nixpkgs/nixos/modules/security/pam.nix>

[2595]security.pam.services.<name>.setEnvironment

    Whether the service should set the environment variables listed in
    environment.sessionVariables using pam_env.so.

    Type: boolean

    Default: true

    Declared by:

    [2596]<nixpkgs/nixos/modules/security/pam.nix>

[2597]security.pam.services.<name>.setLoginUid

    Set the login uid of the process (/proc/self/loginuid) for auditing purposes. The login uid
    is only set by ‘entry points’ like login and sshd, not by commands like sudo.

    Type: boolean

    Declared by:

    [2598]<nixpkgs/nixos/modules/security/pam.nix>

[2599]security.pam.services.<name>.showMotd

    Whether to show the message of the day.

    Type: boolean

    Default: false

    Declared by:

    [2600]<nixpkgs/nixos/modules/security/pam.nix>

[2601]security.pam.services.<name>.sshAgentAuth

    If set, the calling user's SSH agent is used to authenticate against the keys in the calling
    user's ~/.ssh/authorized_keys. This is useful for sudo on password-less remote systems.

    Type: boolean

    Default: false

    Declared by:

    [2602]<nixpkgs/nixos/modules/security/pam.nix>

[2603]security.pam.services.<name>.sssdStrictAccess

    enforce sssd access control

    Type: boolean

    Default: false

    Declared by:

    [2604]<nixpkgs/nixos/modules/security/pam.nix>

[2605]security.pam.services.<name>.startSession

    If set, the service will register a new session with systemd's login manager. For local
    sessions, this will give the user access to audio devices, CD-ROM drives. In the default
    PolicyKit configuration, it also allows the user to reboot the system.

    Type: boolean

    Default: false

    Declared by:

    [2606]<nixpkgs/nixos/modules/security/pam.nix>

[2607]security.pam.services.<name>.text

    Contents of the PAM service file.

    Type: null or strings concatenated with "\n"

    Declared by:

    [2608]<nixpkgs/nixos/modules/security/pam.nix>

[2609]security.pam.services.<name>.u2fAuth

    If set, users listed in $XDG_CONFIG_HOME/Yubico/u2f_keys (or $HOME/.config/Yubico/u2f_keys if
    XDG variable is not set) are able to log in with the associated U2F key. Path can be changed
    using security.pam.u2f.authFile option.

    Type: boolean

    Default: false

    Declared by:

    [2610]<nixpkgs/nixos/modules/security/pam.nix>

[2611]security.pam.services.<name>.unixAuth

    Whether users can log in with passwords defined in /etc/shadow.

    Type: boolean

    Default: true

    Declared by:

    [2612]<nixpkgs/nixos/modules/security/pam.nix>

[2613]security.pam.services.<name>.updateWtmp

    Whether to update /var/log/wtmp.

    Type: boolean

    Default: false

    Declared by:

    [2614]<nixpkgs/nixos/modules/security/pam.nix>

[2615]security.pam.services.<name>.usbAuth

    If set, users listed in /etc/pamusb.conf are able to log in with the associated USB key.

    Type: boolean

    Default: false

    Declared by:

    [2616]<nixpkgs/nixos/modules/security/pam.nix>

[2617]security.pam.services.<name>.yubicoAuth

    If set, users listed in ~/.yubico/authorized_yubikeys are able to log in with the associated
    Yubikey tokens.

    Type: boolean

    Default: false

    Declared by:

    [2618]<nixpkgs/nixos/modules/security/pam.nix>

[2619]security.pam.u2f.enable

    Enables U2F PAM (pam-u2f) module.

    If set, users listed in $XDG_CONFIG_HOME/Yubico/u2f_keys (or $HOME/.config/Yubico/u2f_keys if
    XDG variable is not set) are able to log in with the associated U2F key. The path can be
    changed using security.pam.u2f.authFile option.

    File format is: username:first_keyHandle,first_public_key: second_keyHandle,second_public_key
    This file can be generated using pamu2fcfg command.

    More information can be found [2620]here.

    Type: boolean

    Default: false

    Declared by:

    [2621]<nixpkgs/nixos/modules/security/pam.nix>

[2622]security.pam.u2f.appId

    By default pam-u2f module sets the application ID to pam://$HOSTNAME.

    When using pamu2fcfg, you can specify your application ID with the -i flag.

    More information can be found [2623] here

    Type: null or string

    Default: null

    Declared by:

    [2624]<nixpkgs/nixos/modules/security/pam.nix>

[2625]security.pam.u2f.authFile

    By default pam-u2f module reads the keys from $XDG_CONFIG_HOME/Yubico/u2f_keys (or $HOME
    /.config/Yubico/u2f_keys if XDG variable is not set).

    If you want to change auth file locations or centralize database (for example use /etc/
    u2f-mappings) you can set this option.

    File format is: username:first_keyHandle,first_public_key: second_keyHandle,second_public_key
    This file can be generated using pamu2fcfg command.

    More information can be found [2626]here.

    Type: null or path

    Default: null

    Declared by:

    [2627]<nixpkgs/nixos/modules/security/pam.nix>

[2628]security.pam.u2f.control

    This option sets pam "control". If you want to have multi factor authentication, use
    "required". If you want to use U2F device instead of regular password, use "sufficient".

    Read pam.conf(5) for better understanding of this option.

    Type: one of "required", "requisite", "sufficient", "optional"

    Default: "sufficient"

    Declared by:

    [2629]<nixpkgs/nixos/modules/security/pam.nix>

[2630]security.pam.u2f.cue

    By default pam-u2f module does not inform user that he needs to use the u2f device, it just
    waits without a prompt.

    If you set this option to true, cue option is added to pam-u2f module and reminder message
    will be displayed.

    Type: boolean

    Default: false

    Declared by:

    [2631]<nixpkgs/nixos/modules/security/pam.nix>

[2632]security.pam.u2f.debug

    Debug output to stderr.

    Type: boolean

    Default: false

    Declared by:

    [2633]<nixpkgs/nixos/modules/security/pam.nix>

[2634]security.pam.u2f.interactive

    Set to prompt a message and wait before testing the presence of a U2F device. Recommended if
    your device doesn’t have a tactile trigger.

    Type: boolean

    Default: false

    Declared by:

    [2635]<nixpkgs/nixos/modules/security/pam.nix>

[2636]security.pam.usb.enable

    Enable USB login for all login systems that support it. For more information, visit [2637]
    https://github.com/aluzzardi/pam_usb/wiki/Getting-Started#setting-up-devices-and-users.

    Type: boolean

    Default: false

    Declared by:

    [2638]<nixpkgs/nixos/modules/security/pam_usb.nix>

[2639]security.pam.yubico.enable

    Enables Yubico PAM (yubico-pam) module.

    If set, users listed in ~/.yubico/authorized_yubikeys are able to log in with the associated
    Yubikey tokens.

    The file must have only one line: username:yubikey_token_id1:yubikey_token_id2 More
    information can be found [2640]here.

    Type: boolean

    Default: false

    Declared by:

    [2641]<nixpkgs/nixos/modules/security/pam.nix>

[2642]security.pam.yubico.control

    This option sets pam "control". If you want to have multi factor authentication, use
    "required". If you want to use Yubikey instead of regular password, use "sufficient".

    Read pam.conf(5) for better understanding of this option.

    Type: one of "required", "requisite", "sufficient", "optional"

    Default: "sufficient"

    Declared by:

    [2643]<nixpkgs/nixos/modules/security/pam.nix>

[2644]security.pam.yubico.debug

    Debug output to stderr.

    Type: boolean

    Default: false

    Declared by:

    [2645]<nixpkgs/nixos/modules/security/pam.nix>

[2646]security.pam.yubico.id

    client id

    Type: string

    Example: "42"

    Declared by:

    [2647]<nixpkgs/nixos/modules/security/pam.nix>

[2648]security.pam.yubico.mode

    Mode of operation.

    Use "client" for online validation with a YubiKey validation service such as the YubiCloud.

    Use "challenge-response" for offline validation using YubiKeys with HMAC-SHA-1
    Challenge-Response configurations. See the man-page ykpamcfg(1) for further details on how to
    configure offline Challenge-Response validation.

    More information can be found [2649]here.

    Type: one of "client", "challenge-response"

    Default: "client"

    Declared by:

    [2650]<nixpkgs/nixos/modules/security/pam.nix>

[2651]security.pki.caCertificateBlacklist

    A list of blacklisted CA certificate names that won't be imported from the Mozilla Trust
    Store into /etc/ssl/certs/ca-certificates.crt. Use the names from that file.

    Type: list of strings

    Default: [ ]

    Example: [ "WoSign" "WoSign China" "CA WoSign ECC Root" "Certification Authority of WoSign
    G2" ]

    Declared by:

    [2652]<nixpkgs/nixos/modules/security/ca.nix>

[2653]security.pki.certificateFiles

    A list of files containing trusted root certificates in PEM format. These are concatenated to
    form /etc/ssl/certs/ca-certificates.crt, which is used by many programs that use OpenSSL,
    such as curl and git.

    Type: list of paths

    Default: [ ]

    Example:

    [ "${pkgs.cacert}/etc/ssl/certs/ca-bundle.crt" ]

    Declared by:

    [2654]<nixpkgs/nixos/modules/security/ca.nix>

[2655]security.pki.certificates

    A list of trusted root certificates in PEM format.

    Type: list of strings

    Default: [ ]

    Example:

    [ ''
        NixOS.org
        =========
        -----BEGIN CERTIFICATE-----
        MIIGUDCCBTigAwIBAgIDD8KWMA0GCSqGSIb3DQEBBQUAMIGMMQswCQYDVQQGEwJJ
        TDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0
        ...
        -----END CERTIFICATE-----
      ''
    ]

    Declared by:

    [2656]<nixpkgs/nixos/modules/security/ca.nix>

[2657]security.polkit.enable

    Whether to enable PolKit.

    Type: boolean

    Default: true

    Declared by:

    [2658]<nixpkgs/nixos/modules/security/polkit.nix>

[2659]security.polkit.adminIdentities

    Specifies which users are considered “administrators”, for those actions that require the
    user to authenticate as an administrator (i.e. have an auth_admin value). By default, this is
    all users in the wheel group.

    Type: list of strings

    Default: [ "unix-group:wheel" ]

    Example: [ "unix-user:alice" "unix-group:admin" ]

    Declared by:

    [2660]<nixpkgs/nixos/modules/security/polkit.nix>

[2661]security.polkit.extraConfig

    Any polkit rules to be added to config (in JavaScript ;-). See: http://www.freedesktop.org/
    software/polkit/docs/latest/polkit.8.html#polkit-rules

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    /* Log authorization checks. */
    polkit.addRule(function(action, subject) {
      polkit.log("user " +  subject.user + " is attempting action " + action.id + " from PID " + subject.pid);
    });

    /* Allow any local user to do anything (dangerous!). */
    polkit.addRule(function(action, subject) {
      if (subject.local) return "yes";
    });
    ''

    Declared by:

    [2662]<nixpkgs/nixos/modules/security/polkit.nix>

[2663]security.protectKernelImage

    Whether to prevent replacing the running kernel image.

    Type: boolean

    Default: false

    Declared by:

    [2664]<nixpkgs/nixos/modules/security/misc.nix>

[2665]security.rtkit.enable

    Whether to enable the RealtimeKit system service, which hands out realtime scheduling
    priority to user processes on demand. For example, the PulseAudio server uses this to acquire
    realtime priority.

    Type: boolean

    Default: false

    Declared by:

    [2666]<nixpkgs/nixos/modules/security/rtkit.nix>

[2667]security.sudo.enable

    Whether to enable the sudo command, which allows non-root users to execute commands as root.

    Type: boolean

    Default: true

    Declared by:

    [2668]<nixpkgs/nixos/modules/security/sudo.nix>

[2669]security.sudo.package

    Which package to use for `sudo`.

    Type: package

    Default: "pkgs.sudo"

    Declared by:

    [2670]<nixpkgs/nixos/modules/security/sudo.nix>

[2671]security.sudo.configFile

    This string contains the contents of the sudoers file.

    Type: strings concatenated with "\n"

    Declared by:

    [2672]<nixpkgs/nixos/modules/security/sudo.nix>

[2673]security.sudo.execWheelOnly

    Only allow members of the wheel group to execute sudo by setting the executable's permissions
    accordingly. This prevents users that are not members of wheel from exploiting
    vulnerabilities in sudo such as CVE-2021-3156.

    Type: boolean

    Default: false

    Declared by:

    [2674]<nixpkgs/nixos/modules/security/sudo.nix>

[2675]security.sudo.extraConfig

    Extra configuration text appended to sudoers.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [2676]<nixpkgs/nixos/modules/security/sudo.nix>

[2677]security.sudo.extraRules

    Define specific rules to be in the sudoers file. More specific rules should come after more
    general ones in order to yield the expected behavior. You can use mkBefore/mkAfter to ensure
    this is the case when configuration options are merged.

    Type: list of submodules

    Default: [ ]

    Example:

    [
      # Allow execution of any command by all users in group sudo,
      # requiring a password.
      { groups = [ "sudo" ]; commands = [ "ALL" ]; }

      # Allow execution of "/home/root/secret.sh" by user `backup`, `database`
      # and the group with GID `1006` without a password.
      { users = [ "backup" "database" ]; groups = [ 1006 ];
        commands = [ { command = "/home/root/secret.sh"; options = [ "SETENV" "NOPASSWD" ]; } ]; }

      # Allow all users of group `bar` to run two executables as user `foo`
      # with arguments being pre-set.
      { groups = [ "bar" ]; runAs = "foo";
        commands =
          [ "/home/baz/cmd1.sh hello-sudo"
              { command = ''/home/baz/cmd2.sh ""''; options = [ "SETENV" ]; } ]; }
    ]

    Declared by:

    [2678]<nixpkgs/nixos/modules/security/sudo.nix>

[2679]security.sudo.extraRules.*.commands

    The commands for which the rule should apply.

    Type: list of string or submodules

    Declared by:

    [2680]<nixpkgs/nixos/modules/security/sudo.nix>

[2681]security.sudo.extraRules.*.groups

    The groups / GIDs this rule should apply for.

    Type: list of string or signed integers

    Default: [ ]

    Declared by:

    [2682]<nixpkgs/nixos/modules/security/sudo.nix>

[2683]security.sudo.extraRules.*.host

    For what host this rule should apply.

    Type: string

    Default: "ALL"

    Declared by:

    [2684]<nixpkgs/nixos/modules/security/sudo.nix>

[2685]security.sudo.extraRules.*.runAs

    Under which user/group the specified command is allowed to run.

    A user can be specified using just the username: "foo". It is also possible to specify a user
    /group combination using "foo:bar" or to only allow running as a specific group with ":bar".

    Type: string

    Default: "ALL:ALL"

    Declared by:

    [2686]<nixpkgs/nixos/modules/security/sudo.nix>

[2687]security.sudo.extraRules.*.users

    The usernames / UIDs this rule should apply for.

    Type: list of string or signed integers

    Default: [ ]

    Declared by:

    [2688]<nixpkgs/nixos/modules/security/sudo.nix>

[2689]security.sudo.wheelNeedsPassword

    Whether users of the wheel group must provide a password to run commands as super user via 
    sudo.

    Type: boolean

    Default: true

    Declared by:

    [2690]<nixpkgs/nixos/modules/security/sudo.nix>

[2691]security.tpm2.enable

    Whether to enable Trusted Platform Module 2 support.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2692]<nixpkgs/nixos/modules/security/tpm2.nix>

[2693]security.tpm2.abrmd.enable

    Whether to enable Trusted Platform 2 userspace resource manager daemon .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2694]<nixpkgs/nixos/modules/security/tpm2.nix>

[2695]security.tpm2.abrmd.package

    tpm2-abrmd package to use

    Type: package

    Default: "pkgs.tpm2-abrmd"

    Declared by:

    [2696]<nixpkgs/nixos/modules/security/tpm2.nix>

[2697]security.tpm2.applyUdevRules

    Whether to make the /dev/tpm[0-9] devices accessible by the tssUser, or the /dev/tpmrm[0-9]
    by tssGroup respectively

    Type: boolean

    Default: true

    Declared by:

    [2698]<nixpkgs/nixos/modules/security/tpm2.nix>

[2699]security.tpm2.pkcs11.enable

    Whether to enable TPM2 PKCS#11 tool and shared library in system path (/run/current-system/sw
    /lib/libtpm2_pkcs11.so) .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2700]<nixpkgs/nixos/modules/security/tpm2.nix>

[2701]security.tpm2.pkcs11.package

    tpm2-pkcs11 package to use

    Type: package

    Default: "pkgs.tpm2-pkcs11"

    Declared by:

    [2702]<nixpkgs/nixos/modules/security/tpm2.nix>

[2703]security.tpm2.tctiEnvironment.enable

    Set common TCTI environment variables to the specified value. The variables are

      □ TPM2TOOLS_TCTI

      □ TPM2_PKCS11_TCTI

    Type: boolean

    Default: false

    Declared by:

    [2704]<nixpkgs/nixos/modules/security/tpm2.nix>

[2705]security.tpm2.tctiEnvironment.deviceConf

    Configuration part of the device TCTI, e.g. the path to the TPM device. Applies if interface
    is set to "device". The format is specified in the [2706] tpm2-tools repository.

    Type: string

    Default: "/dev/tpmrm0"

    Declared by:

    [2707]<nixpkgs/nixos/modules/security/tpm2.nix>

[2708]security.tpm2.tctiEnvironment.interface

    The name of the TPM command transmission interface (TCTI) library to use.

    Type: one of "tabrmd", "device"

    Default: "device"

    Declared by:

    [2709]<nixpkgs/nixos/modules/security/tpm2.nix>

[2710]security.tpm2.tctiEnvironment.tabrmdConf

    Configuration part of the tabrmd TCTI, like the D-Bus bus name. Applies if interface is set
    to "tabrmd". The format is specified in the [2711] tpm2-tools repository.

    Type: string

    Default: "bus_name=com.intel.tss2.Tabrmd"

    Declared by:

    [2712]<nixpkgs/nixos/modules/security/tpm2.nix>

[2713]security.tpm2.tssGroup

    Group of the tpm kernel resource manager (tpmrm) device-group, set if applyUdevRules is set.

    Type: null or string

    Default: "tss"

    Declared by:

    [2714]<nixpkgs/nixos/modules/security/tpm2.nix>

[2715]security.tpm2.tssUser

    Name of the tpm device-owner and service user, set if applyUdevRules is set.

    Type: null or string

    Default: ''"tss" when using the userspace resource manager,"root" otherwise''

    Declared by:

    [2716]<nixpkgs/nixos/modules/security/tpm2.nix>

[2717]security.unprivilegedUsernsClone

    When disabled, unprivileged users will not be able to create new namespaces. By default
    unprivileged user namespaces are disabled. This option only works in a hardened profile.

    Type: boolean

    Default: false

    Declared by:

    [2718]<nixpkgs/nixos/modules/security/misc.nix>

[2719]security.virtualisation.flushL1DataCache

    Whether the hypervisor should flush the L1 data cache before entering guests. See also [2720]
    security.allowSimultaneousMultithreading.

    null

        uses the kernel default

    "never"

        disables L1 data cache flushing entirely. May be appropriate if all guests are trusted.

    "cond"

        flushes L1 data cache only for pre-determined code paths. May leak information about the
        host address space layout.

    "always"

        flushes L1 data cache every time the hypervisor enters the guest. May incur significant
        performance cost.

    Type: null or one of "never", "cond", "always"

    Default: null

    Declared by:

    [2721]<nixpkgs/nixos/modules/security/misc.nix>

[2722]security.wrappers

    This option allows the ownership and permissions on the setuid wrappers for specific programs
    to be overridden from the default (setuid root, but not setgid root).

    Note

    The sub-attribute source is mandatory, it must be the absolute path to the program to be
    wrapped.

    The sub-attribute program is optional and can give the wrapper program a new name. The
    default name is the same as the attribute name itself.

    Additionally, this option can set capabilities on a wrapper program that propagates those
    capabilities down to the wrapped, real program.

    NOTE: cap_setpcap, which is required for the wrapper program to be able to raise caps into
    the Ambient set is NOT raised to the Ambient set so that the real program cannot modify its
    own capabilities!! This may be too restrictive for cases in which the real program needs
    cap_setpcap but it at least leans on the side security paranoid vs. too relaxed.

    Type: attribute set

    Default: { }

    Example:

    { sendmail.source = "/nix/store/.../bin/sendmail";
      ping = {
        source  = "${pkgs.iputils.out}/bin/ping";
        owner   = "nobody";
        group   = "nogroup";
        capabilities = "cap_net_raw+ep";
      };
    }

    Declared by:

    [2723]<nixpkgs/nixos/modules/security/wrappers/default.nix>

[2724]services.packagekit.enable

    Whether to enable PackageKit provides a cross-platform D-Bus abstraction layer for installing
    software. Software utilizing PackageKit can install software regardless of the package
    manager. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2725]<nixpkgs/nixos/modules/services/misc/packagekit.nix>

[2726]services.packagekit.settings

    Additional settings passed straight through to PackageKit.conf

    Type: attribute set of attribute set of INI atom (null, bool, int, float or string)ss

    Default: { }

    Declared by:

    [2727]<nixpkgs/nixos/modules/services/misc/packagekit.nix>

[2728]services.packagekit.vendorSettings

    Additional settings passed straight through to Vendor.conf

    Type: attribute set of attribute set of INI atom (null, bool, int, float or string)ss

    Default: { }

    Declared by:

    [2729]<nixpkgs/nixos/modules/services/misc/packagekit.nix>

[2730]services.SystemdJournal2Gelf.enable

    Whether to enable SystemdJournal2Gelf.

    Type: boolean

    Default: false

    Declared by:

    [2731]<nixpkgs/nixos/modules/services/logging/SystemdJournal2Gelf.nix>

[2732]services.SystemdJournal2Gelf.package

    SystemdJournal2Gelf package to use.

    Type: package

    Default: (build of SystemdJournal2Gelf-unstable-20200813)

    Declared by:

    [2733]<nixpkgs/nixos/modules/services/logging/SystemdJournal2Gelf.nix>

[2734]services.SystemdJournal2Gelf.extraOptions

    Any extra flags to pass to SystemdJournal2Gelf. Note that these are basically journalctl
    flags.

    Type: strings concatenated with " "

    Default: ""

    Declared by:

    [2735]<nixpkgs/nixos/modules/services/logging/SystemdJournal2Gelf.nix>

[2736]services.SystemdJournal2Gelf.graylogServer

    Host and port of your graylog2 input. This should be a GELF UDP input.

    Type: string

    Example: "graylog2.example.com:11201"

    Declared by:

    [2737]<nixpkgs/nixos/modules/services/logging/SystemdJournal2Gelf.nix>

[2738]services._3proxy.enable

    Whether to enable 3proxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2739]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2740]services._3proxy.confFile

    Ignore all other 3proxy options and load configuration from this file.

    Type: path

    Example: "/var/lib/3proxy/3proxy.conf"

    Declared by:

    [2741]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2742]services._3proxy.denyPrivate

    Whether to deny access to private IP ranges including loopback.

    Type: boolean

    Default: true

    Declared by:

    [2743]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2744]services._3proxy.extraConfig

    Extra configuration, appended to the 3proxy configuration file. Consult [2745]documentation
    for available options.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [2746]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2747]services._3proxy.privateRanges

    What IP ranges to deny access when denyPrivate is set tu true.

    Type: list of strings

    Default: [ "0.0.0.0/8" "127.0.0.0/8" "10.0.0.0/8" "100.64.0.0/10" "172.16.0.0/12"
    "192.168.0.0/16" "::" "::1" "fc00::/7" ]

    Example: [ "0.0.0.0/8" "127.0.0.0/8" "10.0.0.0/8" "100.64.0.0/10" "172.16.0.0/12"
    "192.168.0.0/16" "::" "::1" "fc00::/7" ]

    Declared by:

    [2748]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2749]services._3proxy.resolution

    Use this option to configure name resolution and DNS caching.

    Type: submodule

    Default: { }

    Declared by:

    [2750]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2751]services._3proxy.resolution.nscache

    Set name cache size for IPv4.

    Type: signed integer

    Default: 65535

    Example: 65535

    Declared by:

    [2752]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2753]services._3proxy.resolution.nscache6

    Set name cache size for IPv6.

    Type: signed integer

    Default: 65535

    Example: 65535

    Declared by:

    [2754]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2755]services._3proxy.resolution.nserver

    List of nameservers to use.

    Up to 5 nservers may be specified. If no nserver is configured, default system name
    resolution functions are used.

    Type: list of strings

    Default: [ ]

    Example: [ "127.0.0.53" "192.168.1.3:5353/tcp" ]

    Declared by:

    [2756]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2757]services._3proxy.resolution.nsrecord

    Adds static nsrecords.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      "files.local" = "192.168.1.12";
      "site.local" = "192.168.1.43";
    }

    Declared by:

    [2758]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2759]services._3proxy.services

    Use this option to define 3proxy services.

    Type: list of submodules

    Default: [ ]

    Example:

    [
      {
        type = "proxy";
        bindAddress = "192.168.1.24";
        bindPort = 3128;
        auth = [ "none" ];
      }
      {
        type = "proxy";
        bindAddress = "10.10.1.20";
        bindPort = 3128;
        auth = [ "iponly" ];
      }
      {
        type = "socks";
        bindAddress = "172.17.0.1";
        bindPort = 1080;
        auth = [ "strong" ];
      }
    ]

    Declared by:

    [2760]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2761]services._3proxy.services.*.acl

    Use this option to limit user access to resources.

    Type: list of submodules

    Default: [ ]

    Example:

    [
      {
        rule = "allow";
        users = [ "user1" ];
      }
      {
        rule = "allow";
        sources = [ "192.168.1.0/24" ];
      }
      {
        rule = "deny";
      }
    ]

    Declared by:

    [2762]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2763]services._3proxy.services.*.acl.*.rule

    ACL rule. The following values are valid:

      □ "allow": connections allowed.

      □ "deny": connections not allowed.

    Type: one of "allow", "deny"

    Example: "allow"

    Declared by:

    [2764]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2765]services._3proxy.services.*.acl.*.sources

    List of source IP range, use empty list for any.

    Type: list of strings

    Default: [ ]

    Example: [ "127.0.0.1" "192.168.1.0/24" ]

    Declared by:

    [2766]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2767]services._3proxy.services.*.acl.*.targetPorts

    List of target ports, use empty list for any.

    Type: list of signed integers

    Default: [ ]

    Example: [ 80 443 ]

    Declared by:

    [2768]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2769]services._3proxy.services.*.acl.*.targets

    List of target IP ranges, use empty list for any. May also contain host names instead of
    addresses. It's possible to use wildmask in the begginning and in the the end of hostname,
    e.g. *badsite.com or *badcontent*. Hostname is only checked if hostname presents in request.

    Type: list of strings

    Default: [ ]

    Example: [ "127.0.0.1" "192.168.1.0/24" ]

    Declared by:

    [2770]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2771]services._3proxy.services.*.acl.*.users

    List of users, use empty list for any.

    Type: list of strings

    Default: [ ]

    Example: [ "user1" "user2" "user3" ]

    Declared by:

    [2772]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2773]services._3proxy.services.*.auth

    Authentication type. The following values are valid:

      □ "none": disables both authentication and authorization. You can not use ACLs.

      □ "iponly": specifies no authentication. ACLs authorization is used.

      □ "strong": authentication by username/password. If user is not registered their access is
        denied regardless of ACLs.

    Double authentication is possible, e.g.

    { auth = [ "iponly" "strong" ]; acl = [ { rule = "allow"; targets = [ "192.168.0.0/16" ]; } {
    rule = "allow" users = [ "user1" "user2" ]; } ]; } In this example strong username
    authentication is not required to access 192.168.0.0/16.

    Type: list of one of "none", "iponly", "strong"s

    Example: [ "iponly" "strong" ]

    Declared by:

    [2774]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2775]services._3proxy.services.*.bindAddress

    Address used for service.

    Type: string

    Default: "[::]"

    Example: "127.0.0.1"

    Declared by:

    [2776]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2777]services._3proxy.services.*.bindPort

    Override default port used for service.

    Type: null or signed integer

    Default: null

    Example: 3128

    Declared by:

    [2778]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2779]services._3proxy.services.*.extraArguments

    Extra arguments for service. Consult "Options" section in [2780]documentation for available
    arguments.

    Type: null or string

    Default: null

    Example: "-46"

    Declared by:

    [2781]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2782]services._3proxy.services.*.extraConfig

    Extra configuration for service. Use this to configure things like bandwidth limiter or
    ACL-based redirection. Consult [2783]documentation for available options.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [2784]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2785]services._3proxy.services.*.maxConnections

    Maximum number of simulationeous connections to this service.

    Type: signed integer

    Default: 100

    Example: 1000

    Declared by:

    [2786]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2787]services._3proxy.services.*.type

    Service type. The following values are valid:

      □ "proxy": HTTP/HTTPS proxy (default port 3128).

      □ "socks": SOCKS 4/4.5/5 proxy (default port 1080).

      □ "pop3p": POP3 proxy (default port 110).

      □ "ftppr": FTP proxy (default port 21).

      □ "admin": Web interface (default port 80).

      □ "dnspr": Caching DNS proxy (default port 53).

      □ "tcppm": TCP portmapper.

      □ "udppm": UDP portmapper.

    Type: one of "proxy", "socks", "pop3p", "ftppr", "admin", "dnspr", "tcppm", "udppm"

    Example: "proxy"

    Declared by:

    [2788]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2789]services._3proxy.usersFile

    Load users and passwords from this file.

    Example users file with plain-text passwords:

    test1:CL:password1 test2:CL:password2

    Example users file with md5-crypted passwords:

    test1:CR:$1$tFkisVd2$1GA8JXkRmTXdLDytM/i3a1 test2:CR:$1$rkpibm5J$Aq1.9VtYAn0JrqZ8M.1ME.

    You can generate md5-crypted passwords via https://unix4lyfe.org/crypt/ Note that htpasswd
    tool generates incompatible md5-crypted passwords. Consult [2790]documentation for more
    information.

    Type: null or path

    Default: null

    Example: "/var/lib/3proxy/3proxy.passwd"

    Declared by:

    [2791]<nixpkgs/nixos/modules/services/networking/3proxy.nix>

[2792]services.accounts-daemon.enable

    Whether to enable AccountsService, a DBus service for accessing the list of user accounts and
    information attached to those accounts.

    Type: boolean

    Default: false

    Declared by:

    [2793]<nixpkgs/nixos/modules/services/desktops/accountsservice.nix>

[2794]services.acpid.enable

    Whether to enable the ACPI daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2795]<nixpkgs/nixos/modules/services/hardware/acpid.nix>

[2796]services.acpid.acEventCommands

    Shell commands to execute on an ac_adapter.* event.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [2797]<nixpkgs/nixos/modules/services/hardware/acpid.nix>

[2798]services.acpid.handlers

    Event handlers.

    Note: Handler can be a single command.

    Type: attribute set of submodules

    Default: { }

    Example: { ac-power = { action = "vals=(\$1) # space separated string to array of multiple
    values\ncase \${vals[3]} in\n 00000000)\n echo unplugged >> /tmp/acpi.log\n ;;\n 00000001)\n
    echo plugged in >> /tmp/acpi.log\n ;;\n *)\n echo unknown >> /tmp/acpi.log\n ;;\nesac\n";
    event = "ac_adapter/*"; } ; }

    Declared by:

    [2799]<nixpkgs/nixos/modules/services/hardware/acpid.nix>

[2800]services.acpid.handlers.<name>.action

    Shell commands to execute when the event is triggered.

    Type: strings concatenated with "\n"

    Declared by:

    [2801]<nixpkgs/nixos/modules/services/hardware/acpid.nix>

[2802]services.acpid.handlers.<name>.event

    Event type.

    Type: string

    Example: [ "button/power.*" "button/lid.*" "ac_adapter.*" "button/mute.*" "button/
    volumedown.*" "cd/play.*" "cd/next.*" ]

    Declared by:

    [2803]<nixpkgs/nixos/modules/services/hardware/acpid.nix>

[2804]services.acpid.lidEventCommands

    Shell commands to execute on a button/lid.* event.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [2805]<nixpkgs/nixos/modules/services/hardware/acpid.nix>

[2806]services.acpid.logEvents

    Log all event activity.

    Type: boolean

    Default: false

    Declared by:

    [2807]<nixpkgs/nixos/modules/services/hardware/acpid.nix>

[2808]services.acpid.powerEventCommands

    Shell commands to execute on a button/power.* event.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [2809]<nixpkgs/nixos/modules/services/hardware/acpid.nix>

[2810]services.activemq.enable

    Enable the Apache ActiveMQ message broker service.

    Type: boolean

    Default: false

    Declared by:

    [2811]<nixpkgs/nixos/modules/services/amqp/activemq/default.nix>

[2812]services.activemq.baseDir

    The base directory where ActiveMQ stores its persistent data and logs. This will be
    overridden if you set "activemq.base" and "activemq.data" in the javaProperties option. You
    can also override this in activemq.xml.

    Type: string

    Default: "/var/activemq"

    Declared by:

    [2813]<nixpkgs/nixos/modules/services/amqp/activemq/default.nix>

[2814]services.activemq.configurationDir

    The base directory for ActiveMQ's configuration. By default, this directory is searched for a
    file named activemq.xml, which should contain the configuration for the broker service.

    Type: string

    Default: "\${pkgs.activemq}/conf"

    Declared by:

    [2815]<nixpkgs/nixos/modules/services/amqp/activemq/default.nix>

[2816]services.activemq.configurationURI

    The URI that is passed along to the BrokerFactory to set up the configuration of the ActiveMQ
    broker service. You should not need to change this. For custom configuration, set the
    configurationDir instead, and create an activemq.xml configuration file in it.

    Type: string

    Default: "xbean:activemq.xml"

    Declared by:

    [2817]<nixpkgs/nixos/modules/services/amqp/activemq/default.nix>

[2818]services.activemq.extraJavaOptions

    Add extra options here that you want to be sent to the Java runtime when the broker service
    is started.

    Type: strings concatenated with " "

    Default: ""

    Example: "-Xmx2G -Xms2G -XX:MaxPermSize=512M"

    Declared by:

    [2819]<nixpkgs/nixos/modules/services/amqp/activemq/default.nix>

[2820]services.activemq.javaProperties

    Specifies Java properties that are sent to the ActiveMQ broker service with the "-D" option.
    You can set properties here to change the behaviour and configuration of the broker. All
    essential properties that are not set here are automatically given reasonable defaults.

    Type: attribute set

    Default: { }

    Example:

    {
      "java.net.preferIPv4Stack" = "true";
    }

    Declared by:

    [2821]<nixpkgs/nixos/modules/services/amqp/activemq/default.nix>

[2822]services.actkbd.enable

    Whether to enable the actkbd key mapping daemon.

    Turning this on will start an actkbd instance for every evdev input that has at least one key
    (which is okay even for systems with tiny memory footprint, since actkbd normally uses <100
    bytes of memory per instance).

    This allows binding keys globally without the need for e.g. X11.

    Type: boolean

    Default: false

    Declared by:

    [2823]<nixpkgs/nixos/modules/services/hardware/actkbd.nix>

[2824]services.actkbd.bindings

    Key bindings for actkbd.

    See actkbd README for documentation.

    The example shows a piece of what sound.mediaKeys.enable does when enabled.

    Type: list of submodules

    Default: [ ]

    Example:

    [ { keys = [ 113 ]; events = [ "key" ]; command = "${pkgs.alsaUtils}/bin/amixer -q set Master toggle"; }
    ]

    Declared by:

    [2825]<nixpkgs/nixos/modules/services/hardware/actkbd.nix>

[2826]services.actkbd.bindings.*.attributes

    List of attributes.

    Type: list of strings

    Default: [ "exec" ]

    Declared by:

    [2827]<nixpkgs/nixos/modules/services/hardware/actkbd.nix>

[2828]services.actkbd.bindings.*.command

    What to run.

    Type: string

    Default: ""

    Declared by:

    [2829]<nixpkgs/nixos/modules/services/hardware/actkbd.nix>

[2830]services.actkbd.bindings.*.events

    List of events to match.

    Type: list of one of "key", "rep", "rel"s

    Default: [ "key" ]

    Declared by:

    [2831]<nixpkgs/nixos/modules/services/hardware/actkbd.nix>

[2832]services.actkbd.bindings.*.keys

    List of keycodes to match.

    Type: list of signed integers

    Declared by:

    [2833]<nixpkgs/nixos/modules/services/hardware/actkbd.nix>

[2834]services.actkbd.extraConfig

    Literal contents to append to the end of actkbd configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [2835]<nixpkgs/nixos/modules/services/hardware/actkbd.nix>

[2836]services.adguardhome.enable

    Whether to enable AdGuard Home network-wide ad blocker.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2837]<nixpkgs/nixos/modules/services/networking/adguardhome.nix>

[2838]services.adguardhome.extraArgs

    Extra command line parameters to be passed to the adguardhome binary.

    Type: list of strings

    Default: [ ]

    Declared by:

    [2839]<nixpkgs/nixos/modules/services/networking/adguardhome.nix>

[2840]services.adguardhome.host

    Host address to bind HTTP server to.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [2841]<nixpkgs/nixos/modules/services/networking/adguardhome.nix>

[2842]services.adguardhome.openFirewall

    Open ports in the firewall for the AdGuard Home web interface. Does not open the port needed
    to access the DNS resolver.

    Type: boolean

    Default: false

    Declared by:

    [2843]<nixpkgs/nixos/modules/services/networking/adguardhome.nix>

[2844]services.adguardhome.port

    Port to serve HTTP pages on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 3000

    Declared by:

    [2845]<nixpkgs/nixos/modules/services/networking/adguardhome.nix>

[2846]services.aerospike.enable

    Whether to enable Aerospike server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2847]<nixpkgs/nixos/modules/services/databases/aerospike.nix>

[2848]services.aerospike.package

    Which Aerospike derivation to use

    Type: package

    Default: "pkgs.aerospike"

    Declared by:

    [2849]<nixpkgs/nixos/modules/services/databases/aerospike.nix>

[2850]services.aerospike.extraConfig

    Extra configuration

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    namespace test {
      replication-factor 2
      memory-size 4G
      default-ttl 30d
      storage-engine memory
    }
    ''

    Declared by:

    [2851]<nixpkgs/nixos/modules/services/databases/aerospike.nix>

[2852]services.aerospike.networkConfig

    network section of configuration file

    Type: strings concatenated with "\n"

    Default:

    ''
    service {
      address any
      port 3000
    }

    heartbeat {
      address any
      mode mesh
      port 3002
      interval 150
      timeout 10
    }

    fabric {
      address any
      port 3001
    }

    info {
      address any
      port 3003
    }
    ''

    Declared by:

    [2853]<nixpkgs/nixos/modules/services/databases/aerospike.nix>

[2854]services.aerospike.workDir

    Location where Aerospike stores its files

    Type: string

    Default: "/var/lib/aerospike"

    Declared by:

    [2855]<nixpkgs/nixos/modules/services/databases/aerospike.nix>

[2856]services.airsonic.enable

    Whether to enable Airsonic, the Free and Open Source media streaming server (fork of Subsonic
    and Libresonic).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2857]<nixpkgs/nixos/modules/services/misc/airsonic.nix>

[2858]services.airsonic.contextPath

    The context path, i.e., the last part of the Airsonic URL. Typically '/' or '/airsonic'.
    Default '/'

    Type: path

    Default: "/"

    Declared by:

    [2859]<nixpkgs/nixos/modules/services/misc/airsonic.nix>

[2860]services.airsonic.home

    The directory where Airsonic will create files. Make sure it is writable.

    Type: path

    Default: "/var/lib/airsonic"

    Declared by:

    [2861]<nixpkgs/nixos/modules/services/misc/airsonic.nix>

[2862]services.airsonic.jvmOptions

    Extra command line options for the JVM running AirSonic. Useful for sending jukebox output to
    non-default alsa devices.

    Type: list of strings

    Default: [ ]

    Example: [ "-Djavax.sound.sampled.Clip='#CODEC [plughw:1,0]'" "-Djavax.sound.sampled.Port='#
    Port CODEC [hw:1]'" "-Djavax.sound.sampled.SourceDataLine='#CODEC [plughw:1,0]'"
    "-Djavax.sound.sampled.TargetDataLine='#CODEC [plughw:1,0]'" ]

    Declared by:

    [2863]<nixpkgs/nixos/modules/services/misc/airsonic.nix>

[2864]services.airsonic.listenAddress

    The host name or IP address on which to bind Airsonic. Only relevant if you have multiple
    network interfaces and want to make Airsonic available on only one of them. The default value
    will bind Airsonic to all available network interfaces.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [2865]<nixpkgs/nixos/modules/services/misc/airsonic.nix>

[2866]services.airsonic.maxMemory

    The memory limit (max Java heap size) in megabytes. Default: 100

    Type: signed integer

    Default: 100

    Declared by:

    [2867]<nixpkgs/nixos/modules/services/misc/airsonic.nix>

[2868]services.airsonic.port

    The port on which Airsonic will listen for incoming HTTP traffic. Set to 0 to disable.

    Type: signed integer

    Default: 4040

    Declared by:

    [2869]<nixpkgs/nixos/modules/services/misc/airsonic.nix>

[2870]services.airsonic.transcoders

    List of paths to transcoder executables that should be accessible from Airsonic. Symlinks
    will be created to each executable inside /var/lib/airsonic/transcoders.

    Type: list of paths

    Default: [ "\${pkgs.ffmpeg.bin}/bin/ffmpeg" ]

    Declared by:

    [2871]<nixpkgs/nixos/modules/services/misc/airsonic.nix>

[2872]services.airsonic.user

    User account under which airsonic runs.

    Type: string

    Default: "airsonic"

    Declared by:

    [2873]<nixpkgs/nixos/modules/services/misc/airsonic.nix>

[2874]services.airsonic.virtualHost

    Name of the nginx virtualhost to use and setup. If null, do not setup any virtualhost.

    Type: null or string

    Default: null

    Declared by:

    [2875]<nixpkgs/nixos/modules/services/misc/airsonic.nix>

[2876]services.alerta.enable

    Whether to enable alerta.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2877]<nixpkgs/nixos/modules/services/monitoring/alerta.nix>

[2878]services.alerta.authenticationRequired

    Whether users must authenticate when using the web UI or command-line tool

    Type: boolean

    Default: false

    Declared by:

    [2879]<nixpkgs/nixos/modules/services/monitoring/alerta.nix>

[2880]services.alerta.bind

    Address to bind to. The default is to bind to all addresses

    Type: string

    Default: "0.0.0.0"

    Example:

    0.0.0.0

    Declared by:

    [2881]<nixpkgs/nixos/modules/services/monitoring/alerta.nix>

[2882]services.alerta.corsOrigins

    List of URLs that can access the API for Cross-Origin Resource Sharing (CORS)

    Type: list of strings

    Default: [ "http://localhost" "http://localhost:5000" ]

    Example: [ "http://localhost" "http://localhost:5000" ]

    Declared by:

    [2883]<nixpkgs/nixos/modules/services/monitoring/alerta.nix>

[2884]services.alerta.databaseName

    Name of the database instance to connect to

    Type: string

    Default: "monitoring"

    Example: "monitoring"

    Declared by:

    [2885]<nixpkgs/nixos/modules/services/monitoring/alerta.nix>

[2886]services.alerta.databaseUrl

    URL of the MongoDB or PostgreSQL database to connect to

    Type: string

    Default: "mongodb://localhost"

    Example: "mongodb://localhost"

    Declared by:

    [2887]<nixpkgs/nixos/modules/services/monitoring/alerta.nix>

[2888]services.alerta.extraConfig

    These lines go into alertad.conf verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [2889]<nixpkgs/nixos/modules/services/monitoring/alerta.nix>

[2890]services.alerta.logDir

    Location where the logfiles are stored

    Type: path

    Default: "/var/log/alerta"

    Declared by:

    [2891]<nixpkgs/nixos/modules/services/monitoring/alerta.nix>

[2892]services.alerta.port

    Port of Alerta

    Type: signed integer

    Default: 5000

    Declared by:

    [2893]<nixpkgs/nixos/modules/services/monitoring/alerta.nix>

[2894]services.alerta.signupEnabled

    Whether to prevent sign-up of new users via the web UI

    Type: boolean

    Default: true

    Declared by:

    [2895]<nixpkgs/nixos/modules/services/monitoring/alerta.nix>

[2896]services.amule.enable

    Whether to run the AMule daemon. You need to manually run "amuled --ec-config" to configure
    the service for the first time.

    Type: boolean

    Default: false

    Declared by:

    [2897]<nixpkgs/nixos/modules/services/networking/amuled.nix>

[2898]services.amule.dataDir

    The directory holding configuration, incoming and temporary files.

    Type: string

    Default: "/home/amule/"

    Declared by:

    [2899]<nixpkgs/nixos/modules/services/networking/amuled.nix>

[2900]services.amule.user

    The user the AMule daemon should run as.

    Type: null or string

    Default: null

    Declared by:

    [2901]<nixpkgs/nixos/modules/services/networking/amuled.nix>

[2902]services.ankisyncd.enable

    Whether to enable ankisyncd.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2903]<nixpkgs/nixos/modules/services/misc/ankisyncd.nix>

[2904]services.ankisyncd.package

    The package to use for the ankisyncd command.

    Type: package

    Default: pkgs.ankisyncd

    Declared by:

    [2905]<nixpkgs/nixos/modules/services/misc/ankisyncd.nix>

[2906]services.ankisyncd.host

    ankisyncd host

    Type: string

    Default: "localhost"

    Declared by:

    [2907]<nixpkgs/nixos/modules/services/misc/ankisyncd.nix>

[2908]services.ankisyncd.openFirewall

    Whether to open the firewall for the specified port.

    Type: boolean

    Default: false

    Declared by:

    [2909]<nixpkgs/nixos/modules/services/misc/ankisyncd.nix>

[2910]services.ankisyncd.port

    ankisyncd port

    Type: signed integer

    Default: 27701

    Declared by:

    [2911]<nixpkgs/nixos/modules/services/misc/ankisyncd.nix>

[2912]services.apache-kafka.enable

    Whether to enable Apache Kafka.

    Type: boolean

    Default: false

    Declared by:

    [2913]<nixpkgs/nixos/modules/services/misc/apache-kafka.nix>

[2914]services.apache-kafka.package

    The kafka package to use

    Type: package

    Default: "pkgs.apacheKafka"

    Declared by:

    [2915]<nixpkgs/nixos/modules/services/misc/apache-kafka.nix>

[2916]services.apache-kafka.brokerId

    Broker ID.

    Type: signed integer

    Default: -1

    Declared by:

    [2917]<nixpkgs/nixos/modules/services/misc/apache-kafka.nix>

[2918]services.apache-kafka.extraProperties

    Extra properties for server.properties.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [2919]<nixpkgs/nixos/modules/services/misc/apache-kafka.nix>

[2920]services.apache-kafka.hostname

    Hostname the broker should bind to.

    Type: string

    Default: "localhost"

    Declared by:

    [2921]<nixpkgs/nixos/modules/services/misc/apache-kafka.nix>

[2922]services.apache-kafka.jre

    The JRE with which to run Kafka

    Type: package

    Default: "pkgs.apacheKafka.passthru.jre"

    Declared by:

    [2923]<nixpkgs/nixos/modules/services/misc/apache-kafka.nix>

[2924]services.apache-kafka.jvmOptions

    Extra command line options for the JVM running Kafka.

    Type: list of strings

    Default: [ ]

    Example: [ "-Djava.net.preferIPv4Stack=true" "-Dcom.sun.management.jmxremote"
    "-Dcom.sun.management.jmxremote.local.only=true" ]

    Declared by:

    [2925]<nixpkgs/nixos/modules/services/misc/apache-kafka.nix>

[2926]services.apache-kafka.log4jProperties

    Kafka log4j property configuration.

    Type: strings concatenated with "\n"

    Default:

    ''
    log4j.rootLogger=INFO, stdout

    log4j.appender.stdout=org.apache.log4j.ConsoleAppender
    log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
    log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n
    ''

    Declared by:

    [2927]<nixpkgs/nixos/modules/services/misc/apache-kafka.nix>

[2928]services.apache-kafka.logDirs

    Log file directories

    Type: list of paths

    Default: [ "/tmp/kafka-logs" ]

    Declared by:

    [2929]<nixpkgs/nixos/modules/services/misc/apache-kafka.nix>

[2930]services.apache-kafka.port

    Port number the broker should listen on.

    Type: signed integer

    Default: 9092

    Declared by:

    [2931]<nixpkgs/nixos/modules/services/misc/apache-kafka.nix>

[2932]services.apache-kafka.serverProperties

    Complete server.properties content. Other server.properties config options will be ignored if
    this option is used.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [2933]<nixpkgs/nixos/modules/services/misc/apache-kafka.nix>

[2934]services.apache-kafka.zookeeper

    Zookeeper connection string

    Type: string

    Default: "localhost:2181"

    Declared by:

    [2935]<nixpkgs/nixos/modules/services/misc/apache-kafka.nix>

[2936]services.apcupsd.enable

    Whether to enable the APC UPS daemon. apcupsd monitors your UPS and permits orderly shutdown
    of your computer in the event of a power failure. User manual: http://www.apcupsd.com/manual/
    manual.html. Note that apcupsd runs as root (to allow shutdown of computer). You can check
    the status of your UPS with the "apcaccess" command.

    Type: boolean

    Default: false

    Declared by:

    [2937]<nixpkgs/nixos/modules/services/monitoring/apcupsd.nix>

[2938]services.apcupsd.configText

    Contents of the runtime configuration file, apcupsd.conf. The default settings makes apcupsd
    autodetect USB UPSes, limit network access to localhost and shutdown the system when the
    battery level is below 50 percent, or when the UPS has calculated that it has 5 minutes or
    less of remaining power-on time. See man apcupsd.conf for details.

    Type: strings concatenated with "\n"

    Default:

    ''
    UPSTYPE usb
    NISIP 127.0.0.1
    BATTERYLEVEL 50
    MINUTES 5
    ''

    Declared by:

    [2939]<nixpkgs/nixos/modules/services/monitoring/apcupsd.nix>

[2940]services.apcupsd.hooks

    Each attribute in this option names an apcupsd event and the string value it contains will be
    executed in a shell, in response to that event (prior to the default action). See "man
    apccontrol" for the list of events and what they represent.

    A hook script can stop apccontrol from doing its default action by exiting with value 99. Do
    not do this unless you know what you're doing.

    Type: attribute set of strings concatenated with "\n"s

    Default: { }

    Example: { doshutdown = "# shell commands to notify that the computer is shutting down"; }

    Declared by:

    [2941]<nixpkgs/nixos/modules/services/monitoring/apcupsd.nix>

[2942]services.arbtt.enable

    Enable the arbtt statistics capture service.

    Type: boolean

    Default: false

    Declared by:

    [2943]<nixpkgs/nixos/modules/services/monitoring/arbtt.nix>

[2944]services.arbtt.package

    The package to use for the arbtt binaries.

    Type: package

    Default: "pkgs.haskellPackages.arbtt"

    Example:

    pkgs.haskellPackages.arbtt

    Declared by:

    [2945]<nixpkgs/nixos/modules/services/monitoring/arbtt.nix>

[2946]services.arbtt.logFile

    The log file for captured samples.

    Type: string

    Default: "%h/.arbtt/capture.log"

    Example: "/home/username/.arbtt-capture.log"

    Declared by:

    [2947]<nixpkgs/nixos/modules/services/monitoring/arbtt.nix>

[2948]services.arbtt.sampleRate

    The sampling interval in seconds.

    Type: signed integer

    Default: 60

    Example: 120

    Declared by:

    [2949]<nixpkgs/nixos/modules/services/monitoring/arbtt.nix>

[2950]services.aria2.enable

    Whether or not to enable the headless Aria2 daemon service.

    Aria2 daemon can be controlled via the RPC interface using one of many WebUI (http://
    localhost:6800/ by default).

    Targets are downloaded to /var/lib/aria2/Downloads by default and are accessible to users in
    the "aria2" group.

    Type: boolean

    Default: false

    Declared by:

    [2951]<nixpkgs/nixos/modules/services/networking/aria2.nix>

[2952]services.aria2.downloadDir

    Directory to store downloaded files.

    Type: path

    Default: "/var/lib/aria2/Downloads"

    Declared by:

    [2953]<nixpkgs/nixos/modules/services/networking/aria2.nix>

[2954]services.aria2.extraArguments

    Additional arguments to be passed to Aria2.

    Type: strings concatenated with " "

    Default: ""

    Example: "--rpc-listen-all --remote-time=true"

    Declared by:

    [2955]<nixpkgs/nixos/modules/services/networking/aria2.nix>

[2956]services.aria2.listenPortRange

    Set UDP listening port range used by DHT(IPv4, IPv6) and UDP tracker.

    Type: list of attribute sets

    Default: [ { from = 6881; to = 6999; } ]

    Declared by:

    [2957]<nixpkgs/nixos/modules/services/networking/aria2.nix>

[2958]services.aria2.openPorts

    Open listen and RPC ports found in listenPortRange and rpcListenPort options in the firewall.

    Type: boolean

    Default: false

    Declared by:

    [2959]<nixpkgs/nixos/modules/services/networking/aria2.nix>

[2960]services.aria2.rpcListenPort

    Specify a port number for JSON-RPC/XML-RPC server to listen to. Possible Values: 1024-65535

    Type: signed integer

    Default: 6800

    Declared by:

    [2961]<nixpkgs/nixos/modules/services/networking/aria2.nix>

[2962]services.aria2.rpcSecret

    Set RPC secret authorization token. Read https://aria2.github.io/manual/en/html/aria2c.html#
    rpc-auth to know how this option value is used.

    Type: string

    Default: "aria2rpc"

    Declared by:

    [2963]<nixpkgs/nixos/modules/services/networking/aria2.nix>

[2964]services.asterisk.enable

    Whether to enable the Asterisk PBX server.

    Type: boolean

    Default: false

    Declared by:

    [2965]<nixpkgs/nixos/modules/services/networking/asterisk.nix>

[2966]services.asterisk.package

    The Asterisk package to use.

    Type: package

    Default: "pkgs.asterisk"

    Declared by:

    [2967]<nixpkgs/nixos/modules/services/networking/asterisk.nix>

[2968]services.asterisk.confFiles

    Sets the content of config files (typically ending with .conf) in the Asterisk configuration
    directory.

    Note that if you want to change asterisk.conf, it is preferable to use the
    services.asterisk.extraConfig option over this option. If "asterisk.conf" is specified with
    the confFiles option (not recommended), you must be prepared to set your own astetcdir path.

    See [2969]http://www.asterisk.org/community/documentation for more examples of what is
    possible here.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      "extensions.conf" = ''
        [tests]
        ; Dial 100 for "hello, world"
        exten => 100,1,Answer()
        same  =>     n,Wait(1)
        same  =>     n,Playback(hello-world)
        same  =>     n,Hangup()

        [softphones]
        include => tests

        [unauthorized]
      '';
      "sip.conf" = ''
        [general]
        allowguest=no              ; Require authentication
        context=unauthorized       ; Send unauthorized users to /dev/null
        srvlookup=no               ; Don't do DNS lookup
        udpbindaddr=0.0.0.0        ; Listen on all interfaces
        nat=force_rport,comedia    ; Assume device is behind NAT

        [softphone](!)
        type=friend                ; Match on username first, IP second
        context=softphones         ; Send to softphones context in
                                   ; extensions.conf file
        host=dynamic               ; Device will register with asterisk
        disallow=all               ; Manually specify codecs to allow
        allow=g722
        allow=ulaw
        allow=alaw

        [myphone](softphone)
        secret=GhoshevFew          ; Change this password!
      '';
      "logger.conf" = ''
        [general]

        [logfiles]
        ; Add debug output to log
        syslog.local0 => notice,warning,error,debug
      '';
    }

    Declared by:

    [2970]<nixpkgs/nixos/modules/services/networking/asterisk.nix>

[2971]services.asterisk.extraArguments

    Additional command line arguments to pass to Asterisk.

    Type: list of strings

    Default: [ ]

    Example: [ "-vvvddd" "-e" "1024" ]

    Declared by:

    [2972]<nixpkgs/nixos/modules/services/networking/asterisk.nix>

[2973]services.asterisk.extraConfig

    Extra configuration options appended to the default asterisk.conf file.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    [options]
    verbose=3
    debug=3
    ''

    Declared by:

    [2974]<nixpkgs/nixos/modules/services/networking/asterisk.nix>

[2975]services.asterisk.useTheseDefaultConfFiles

    Sets these config files to the default content. The default value for this option contains
    all necesscary files to avoid errors at startup. This does not override settings via
    services.asterisk.confFiles.

    Type: list of strings

    Default: [ "ari.conf" "acl.conf" "agents.conf" "amd.conf" "calendar.conf" "cdr.conf"
    "cdr_syslog.conf" "cdr_custom.conf" "cel.conf" "cel_custom.conf" "cli_aliases.conf"
    "confbridge.conf" "dundi.conf" "features.conf" "hep.conf" "iax.conf" "pjsip.conf"
    "pjsip_wizard.conf" "phone.conf" "phoneprov.conf" "queues.conf" "res_config_sqlite3.conf"
    "res_parking.conf" "statsd.conf" "udptl.conf" "unistim.conf" ]

    Example: [ "sip.conf" "dundi.conf" ]

    Declared by:

    [2976]<nixpkgs/nixos/modules/services/networking/asterisk.nix>

[2977]services.atd.enable

    Whether to enable the at daemon, a command scheduler.

    Type: boolean

    Default: false

    Declared by:

    [2978]<nixpkgs/nixos/modules/services/scheduling/atd.nix>

[2979]services.atd.allowEveryone

    Whether to make /var/spool/at{jobs,spool} writeable by everyone (and sticky). This is
    normally not needed since the at commands are setuid/setgid atd.

    Type: boolean

    Default: false

    Declared by:

    [2980]<nixpkgs/nixos/modules/services/scheduling/atd.nix>

[2981]services.atftpd.enable

    Whether to enable the atftpd TFTP server. By default, the server binds to address 0.0.0.0.

    Type: boolean

    Default: false

    Declared by:

    [2982]<nixpkgs/nixos/modules/services/networking/atftpd.nix>

[2983]services.atftpd.extraOptions

    Extra command line arguments to pass to atftp.

    Type: list of strings

    Default: [ ]

    Example:

    [ "--bind-address 192.168.9.1"
      "--verbose=7"
    ]

    Declared by:

    [2984]<nixpkgs/nixos/modules/services/networking/atftpd.nix>

[2985]services.atftpd.root

    Document root directory for the atftpd.

    Type: path

    Default: "/srv/tftp"

    Declared by:

    [2986]<nixpkgs/nixos/modules/services/networking/atftpd.nix>

[2987]services.auto-cpufreq.enable

    Whether to enable auto-cpufreq daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2988]<nixpkgs/nixos/modules/services/hardware/auto-cpufreq.nix>

[2989]services.autofs.enable

    Mount filesystems on demand. Unmount them automatically. You may also be interested in afuse.

    Type: boolean

    Default: false

    Declared by:

    [2990]<nixpkgs/nixos/modules/services/misc/autofs.nix>

[2991]services.autofs.autoMaster

    Contents of /etc/auto.master file. See auto.master(5) and autofs(5).

    Type: string

    Example:

    let
      mapConf = pkgs.writeText "auto" ''
       kernel    -ro,soft,intr       ftp.kernel.org:/pub/linux
       boot      -fstype=ext2        :/dev/hda1
       windoze   -fstype=smbfs       ://windoze/c
       removable -fstype=ext2        :/dev/hdd
       cd        -fstype=iso9660,ro  :/dev/hdc
       floppy    -fstype=auto        :/dev/fd0
       server    -rw,hard,intr       / -ro myserver.me.org:/ \
                                     /usr myserver.me.org:/usr \
                                     /home myserver.me.org:/home
      '';
    in ''
      /auto file:${mapConf}
    ''

    Declared by:

    [2992]<nixpkgs/nixos/modules/services/misc/autofs.nix>

[2993]services.autofs.debug

    Pass -d and -7 to automount and write log to the system journal.

    Type: boolean

    Default: false

    Declared by:

    [2994]<nixpkgs/nixos/modules/services/misc/autofs.nix>

[2995]services.autofs.timeout

    Set the global minimum timeout, in seconds, until directories are unmounted

    Type: signed integer

    Default: 600

    Declared by:

    [2996]<nixpkgs/nixos/modules/services/misc/autofs.nix>

[2997]services.automysqlbackup.enable

    Whether to enable AutoMySQLBackup.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [2998]<nixpkgs/nixos/modules/services/backup/automysqlbackup.nix>

[2999]services.automysqlbackup.calendar

    Configured when to run the backup service systemd unit (DayOfWeek Year-Month-Day
    Hour:Minute:Second).

    Type: string

    Default: "01:15:00"

    Declared by:

    [3000]<nixpkgs/nixos/modules/services/backup/automysqlbackup.nix>

[3001]services.automysqlbackup.config

    automysqlbackup configuration. Refer to ${pkgs.automysqlbackup}/etc/automysqlbackup.conf for
    details on supported values.

    Type: attribute set of string or signed integer or boolean or list of stringss

    Default: { }

    Example:

    {
      db_names = [ "nextcloud" "matomo" ];
      table_exclude = [ "nextcloud.oc_users" "nextcloud.oc_whats_new" ];
      mailcontent = "log";
      mail_address = "admin@example.org";
    }

    Declared by:

    [3002]<nixpkgs/nixos/modules/services/backup/automysqlbackup.nix>

[3003]services.autorandr.enable

    Whether to enable handling of hotplug and sleep events by autorandr.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3004]<nixpkgs/nixos/modules/services/misc/autorandr.nix>

[3005]services.autorandr.defaultTarget

    Fallback if no monitor layout can be detected. See the docs (https://github.com/phillipberndt
    /autorandr/blob/v1.0/README.md#how-to-use) for further reference.

    Type: string

    Default: "default"

    Declared by:

    [3006]<nixpkgs/nixos/modules/services/misc/autorandr.nix>

[3007]services.autossh.sessions

    List of AutoSSH sessions to start as systemd services. Each service is named 'autossh-
    {session.name}'.

    Type: list of submodules

    Default: [ ]

    Example: [ { extraArguments = "-N -D4343 billremote@socks.host.net"; monitoringPort = 20000;
    name = "socks-peer"; user = "bill"; } ]

    Declared by:

    [3008]<nixpkgs/nixos/modules/services/networking/autossh.nix>

[3009]services.autossh.sessions.*.extraArguments

    Arguments to be passed to AutoSSH and retransmitted to SSH process. Some meaningful options
    include -N (don't run remote command), -D (open SOCKS proxy on local port), -R (forward
    remote port), -L (forward local port), -v (Enable debug). Check ssh manual for the complete
    list.

    Type: strings concatenated with " "

    Example: "-N -D4343 bill@socks.example.net"

    Declared by:

    [3010]<nixpkgs/nixos/modules/services/networking/autossh.nix>

[3011]services.autossh.sessions.*.monitoringPort

    Port to be used by AutoSSH for peer monitoring. Note, that AutoSSH also uses mport+1. Value
    of 0 disables the keep-alive style monitoring

    Type: signed integer

    Default: 0

    Example: 20000

    Declared by:

    [3012]<nixpkgs/nixos/modules/services/networking/autossh.nix>

[3013]services.autossh.sessions.*.name

    Name of the local AutoSSH session

    Type: string

    Example: "socks-peer"

    Declared by:

    [3014]<nixpkgs/nixos/modules/services/networking/autossh.nix>

[3015]services.autossh.sessions.*.user

    Name of the user the AutoSSH session should run as

    Type: string

    Example: "bill"

    Declared by:

    [3016]<nixpkgs/nixos/modules/services/networking/autossh.nix>

[3017]services.avahi.enable

    Whether to run the Avahi daemon, which allows Avahi clients to use Avahi's service discovery
    facilities and also allows the local machine to advertise its presence and services (through
    the mDNS responder implemented by `avahi-daemon').

    Type: boolean

    Default: false

    Declared by:

    [3018]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3019]services.avahi.allowPointToPoint

    Whether to use POINTTOPOINT interfaces. Might make mDNS unreliable due to usually large
    latencies with such links and opens a potential security hole by allowing mDNS access from
    Internet connections.

    Type: boolean

    Default: false

    Declared by:

    [3020]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3021]services.avahi.browseDomains

    List of non-local DNS domains to be browsed.

    Type: list of strings

    Default: [ ]

    Example: [ "0pointer.de" "zeroconf.org" ]

    Declared by:

    [3022]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3023]services.avahi.cacheEntriesMax

    Number of resource records to be cached per interface. Use 0 to disable caching. Avahi daemon
    defaults to 4096 if not set.

    Type: null or signed integer

    Default: null

    Declared by:

    [3024]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3025]services.avahi.domainName

    Domain name for all advertisements.

    Type: string

    Default: "local"

    Declared by:

    [3026]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3027]services.avahi.extraConfig

    Extra config to append to avahi-daemon.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [3028]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3029]services.avahi.extraServiceFiles

    Specify custom service definitions which are placed in the avahi service directory. See the 
    avahi.service(5) manpage for detailed information.

    Type: attribute set of string or paths

    Default: { }

    Example:

    {
      ssh = "${pkgs.avahi}/etc/avahi/services/ssh.service";
      smb = ''
        <?xml version="1.0" standalone='no'?><!--*-nxml-*-->
        <!DOCTYPE service-group SYSTEM "avahi-service.dtd">
        <service-group>
          <name replace-wildcards="yes">%h</name>
          <service>
            <type>_smb._tcp</type>
            <port>445</port>
          </service>
        </service-group>
      '';
    }

    Declared by:

    [3030]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3031]services.avahi.hostName

    Host name advertised on the LAN. If not set, avahi will use the value of
    config.networking.hostName.

    Type: string

    Default: config.networking.hostName

    Declared by:

    [3032]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3033]services.avahi.interfaces

    List of network interfaces that should be used by the avahi-daemon. Other interfaces will be
    ignored. If null, all local interfaces except loopback and point-to-point will be used.

    Type: null or list of strings

    Default: null

    Declared by:

    [3034]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3035]services.avahi.ipv4

    Whether to use IPv4.

    Type: boolean

    Default: true

    Declared by:

    [3036]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3037]services.avahi.ipv6

    Whether to use IPv6.

    Type: boolean

    Default: "config.networking.enableIPv6"

    Declared by:

    [3038]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3039]services.avahi.nssmdns

    Whether to enable the mDNS NSS (Name Service Switch) plug-in. Enabling it allows applications
    to resolve names in the `.local' domain by transparently querying the Avahi daemon.

    Type: boolean

    Default: false

    Declared by:

    [3040]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3041]services.avahi.openFirewall

    Whether to open the firewall for UDP port 5353.

    Type: boolean

    Default: true

    Declared by:

    [3042]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3043]services.avahi.publish.enable

    Whether to allow publishing in general.

    Type: boolean

    Default: false

    Declared by:

    [3044]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3045]services.avahi.publish.addresses

    Whether to register mDNS address records for all local IP addresses.

    Type: boolean

    Default: false

    Declared by:

    [3046]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3047]services.avahi.publish.domain

    Whether to announce the locally used domain name for browsing by other hosts.

    Type: boolean

    Default: false

    Declared by:

    [3048]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3049]services.avahi.publish.hinfo

    Whether to register a mDNS HINFO record which contains information about the local operating
    system and CPU.

    Type: boolean

    Default: false

    Declared by:

    [3050]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3051]services.avahi.publish.userServices

    Whether to publish user services. Will set addresses=true.

    Type: boolean

    Default: false

    Declared by:

    [3052]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3053]services.avahi.publish.workstation

    Whether to register a service of type "_workstation._tcp" on the local LAN.

    Type: boolean

    Default: false

    Declared by:

    [3054]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3055]services.avahi.reflector

    Reflect incoming mDNS requests to all allowed network interfaces.

    Type: boolean

    Default: false

    Declared by:

    [3056]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3057]services.avahi.wideArea

    Whether to enable wide-area service discovery.

    Type: boolean

    Default: true

    Declared by:

    [3058]<nixpkgs/nixos/modules/services/networking/avahi-daemon.nix>

[3059]services.awstats.enable

    Whether to enable awstats.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3060]<nixpkgs/nixos/modules/services/logging/awstats.nix>

[3061]services.awstats.configs

    Attribute set of domains to collect stats for.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "mysite" = {
        domain = "example.com";
        logFile = "/var/log/nginx/access.log";
      };
    }

    Declared by:

    [3062]<nixpkgs/nixos/modules/services/logging/awstats.nix>

[3063]services.awstats.configs.<name>.domain

    The domain name to collect stats for.

    Type: string

    Default: "‹name›"

    Example: "example.com"

    Declared by:

    [3064]<nixpkgs/nixos/modules/services/logging/awstats.nix>

[3065]services.awstats.configs.<name>.extraConfig

    Extra configuration to be appendend to awstats.${name}.conf.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      "ValidHTTPCodes" = "404";
    }

    Declared by:

    [3066]<nixpkgs/nixos/modules/services/logging/awstats.nix>

[3067]services.awstats.configs.<name>.hostAliases

    List of aliases the site has.

    Type: list of strings

    Default: [ ]

    Example: ''[ "www.example.org" ]''

    Declared by:

    [3068]<nixpkgs/nixos/modules/services/logging/awstats.nix>

[3069]services.awstats.configs.<name>.logFile

    The log file to be scanned.

    For mail, set this to journalctl $OLD_CURSOR -u postfix.service | ${pkgs.perl}/bin/perl $
    {pkgs.awstats.out}/share/awstats/tools/maillogconvert.pl standard |

    Type: string

    Example: "/var/log/nginx/access.log"

    Declared by:

    [3070]<nixpkgs/nixos/modules/services/logging/awstats.nix>

[3071]services.awstats.configs.<name>.logFormat

    The log format being used.

    For mail, set this to %time2 %email %email_r %host %host_r %method %url %code %bytesd

    Type: string

    Default: "1"

    Declared by:

    [3072]<nixpkgs/nixos/modules/services/logging/awstats.nix>

[3073]services.awstats.configs.<name>.type

    The type of log being collected.

    Type: one of "mail", "web"

    Default: "web"

    Example: "mail"

    Declared by:

    [3074]<nixpkgs/nixos/modules/services/logging/awstats.nix>

[3075]services.awstats.configs.<name>.webService.enable

    Whether to enable awstats web service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3076]<nixpkgs/nixos/modules/services/logging/awstats.nix>

[3077]services.awstats.configs.<name>.webService.hostname

    The hostname the web service appears under.

    Type: string

    Default: "‹name›"

    Declared by:

    [3078]<nixpkgs/nixos/modules/services/logging/awstats.nix>

[3079]services.awstats.configs.<name>.webService.urlPrefix

    The URL prefix under which the awstats pages appear.

    Type: string

    Default: "/awstats"

    Declared by:

    [3080]<nixpkgs/nixos/modules/services/logging/awstats.nix>

[3081]services.awstats.dataDir

    The directory where awstats data will be stored.

    Type: path

    Default: "/var/lib/awstats"

    Declared by:

    [3082]<nixpkgs/nixos/modules/services/logging/awstats.nix>

[3083]services.awstats.updateAt

    Specification of the time at which awstats will get updated. (in the format described by 
    systemd.time(7))

    Type: null or string

    Default: null

    Example: "hourly"

    Declared by:

    [3084]<nixpkgs/nixos/modules/services/logging/awstats.nix>

[3085]services.babeld.enable

    Whether to enable the babeld network routing daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3086]<nixpkgs/nixos/modules/services/networking/babeld.nix>

[3087]services.babeld.extraConfig

    Options that will be copied to babeld.conf. See babeld(8) for details.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [3088]<nixpkgs/nixos/modules/services/networking/babeld.nix>

[3089]services.babeld.interfaceDefaults

    A set describing default parameters for babeld interfaces. See babeld(8) for options.

    Type: null or attribute set of unspecifieds

    Default: null

    Example: { split-horizon = true; type = "tunnel"; }

    Declared by:

    [3090]<nixpkgs/nixos/modules/services/networking/babeld.nix>

[3091]services.babeld.interfaces

    A set describing babeld interfaces. See babeld(8) for options.

    Type: attribute set of attribute set of unspecifiedss

    Default: { }

    Example: { enp0s2 = { hello-interval = 5; split-horizon = "auto"; type = "wired"; } ; }

    Declared by:

    [3092]<nixpkgs/nixos/modules/services/networking/babeld.nix>

[3093]services.bacula-dir.enable

    Whether to enable Bacula Director Daemon.

    Type: boolean

    Default: false

    Declared by:

    [3094]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3095]services.bacula-dir.extraConfig

    Extra configuration for Bacula Director Daemon.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    TODO
    ''

    Declared by:

    [3096]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3097]services.bacula-dir.extraDirectorConfig

    Extra configuration to be passed in Director directive.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    Maximum Concurrent Jobs = 20;
    Heartbeat Interval = 30;
    ''

    Declared by:

    [3098]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3099]services.bacula-dir.extraMessagesConfig

    Extra configuration to be passed in Messages directive.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    console = all
    ''

    Declared by:

    [3100]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3101]services.bacula-dir.name

    The director name used by the system administrator. This directive is required.

    Type: string

    Default: "nixos-dir"

    Declared by:

    [3102]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3103]services.bacula-dir.password

    Specifies the password that must be supplied for a Director.

    Type: string

    Declared by:

    [3104]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3105]services.bacula-dir.port

    Specify the port (a positive integer) on which the Director daemon will listen for Bacula
    Console connections. This same port number must be specified in the Director resource of the
    Console configuration file. The default is 9101, so normally this directive need not be
    specified. This directive should not be used if you specify DirAddresses (N.B plural)
    directive.

    Type: signed integer

    Default: 9101

    Declared by:

    [3106]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3107]services.bacula-fd.enable

    Whether to enable the Bacula File Daemon.

    Type: boolean

    Default: false

    Declared by:

    [3108]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3109]services.bacula-fd.director

    This option defines director resources in Bacula File Daemon.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [3110]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3111]services.bacula-fd.director.<name>.monitor

    If Monitor is set to no, this director will have full access to this Storage daemon. If
    Monitor is set to yes, this director will only be able to fetch the current status of this
    Storage daemon.

    Please note that if this director is being used by a Monitor, we highly recommend to set this
    directive to yes to avoid serious security problems.

    Type: one of "no", "yes"

    Default: "no"

    Example: "yes"

    Declared by:

    [3112]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3113]services.bacula-fd.director.<name>.password

    Specifies the password that must be supplied for the default Bacula Console to be authorized.
    The same password must appear in the Director resource of the Console configuration file. For
    added security, the password is never passed across the network but instead a challenge
    response hash code created with the password. This directive is required. If you have either
    /dev/random or bc on your machine, Bacula will generate a random password during the
    configuration process, otherwise it will be left blank and you must manually supply it.

    The password is plain text. It is not generated through any special process but as noted
    above, it is better to use random text for security reasons.

    Type: string

    Declared by:

    [3114]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3115]services.bacula-fd.extraClientConfig

    Extra configuration to be passed in Client directive.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    Maximum Concurrent Jobs = 20;
    Heartbeat Interval = 30;
    ''

    Declared by:

    [3116]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3117]services.bacula-fd.extraMessagesConfig

    Extra configuration to be passed in Messages directive.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    console = all
    ''

    Declared by:

    [3118]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3119]services.bacula-fd.name

    The client name that must be used by the Director when connecting. Generally, it is a good
    idea to use a name related to the machine so that error messages can be easily identified if
    you have multiple Clients. This directive is required.

    Type: string

    Default: "nixos-fd"

    Declared by:

    [3120]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3121]services.bacula-fd.port

    This specifies the port number on which the Client listens for Director connections. It must
    agree with the FDPort specified in the Client resource of the Director's configuration file.

    Type: signed integer

    Default: 9102

    Declared by:

    [3122]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3123]services.bacula-sd.enable

    Whether to enable Bacula Storage Daemon.

    Type: boolean

    Default: false

    Declared by:

    [3124]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3125]services.bacula-sd.autochanger

    This option defines Autochanger resources in Bacula Storage Daemon.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [3126]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3127]services.bacula-sd.autochanger.<name>.changerCommand

    The name-string specifies an external program to be called that will automatically change
    volumes as required by Bacula. Normally, this directive will be specified only in the
    AutoChanger resource, which is then used for all devices. However, you may also specify the
    different Changer Command in each Device resource. Most frequently, you will specify the
    Bacula supplied mtx-changer script as follows:

    "/path/mtx-changer %c %o %S %a %d"

    and you will install the mtx on your system (found in the depkgs release). An example of this
    command is in the default bacula-sd.conf file. For more details on the substitution
    characters that may be specified to configure your autochanger please see the
    AutochangersAutochangersChapter chapter of this manual. For FreeBSD users, you might want to
    see one of the several chio scripts in examples/autochangers.

    Type: string

    Default: "/etc/bacula/mtx-changer %c %o %S %a %d"

    Declared by:

    [3128]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3129]services.bacula-sd.autochanger.<name>.changerDevice

    The specified name-string must be the generic SCSI device name of the autochanger that
    corresponds to the normal read/write Archive Device specified in the Device resource. This
    generic SCSI device name should be specified if you have an autochanger or if you have a
    standard tape drive and want to use the Alert Command (see below). For example, on Linux
    systems, for an Archive Device name of /dev/nst0, you would specify /dev/sg0 for the Changer
    Device name. Depending on your exact configuration, and the number of autochangers or the
    type of autochanger, what you specify here can vary. This directive is optional. See the
    Using AutochangersAutochangersChapter chapter of this manual for more details of using this
    and the following autochanger directives.

    Type: string

    Declared by:

    [3130]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3131]services.bacula-sd.autochanger.<name>.devices

    Type: list of strings

    Declared by:

    [3132]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3133]services.bacula-sd.autochanger.<name>.extraAutochangerConfig

    Extra configuration to be passed in Autochanger directive.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''

    ''

    Declared by:

    [3134]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3135]services.bacula-sd.device

    This option defines Device resources in Bacula Storage Daemon.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [3136]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3137]services.bacula-sd.device.<name>.archiveDevice

    The specified name-string gives the system file name of the storage device managed by this
    storage daemon. This will usually be the device file name of a removable storage device (tape
    drive), for example /dev/nst0 or /dev/rmt/0mbn. For a DVD-writer, it will be for example /dev
    /hdc. It may also be a directory name if you are archiving to disk storage. In this case, you
    must supply the full absolute path to the directory. When specifying a tape device, it is
    preferable that the "non-rewind" variant of the device file name be given.

    Type: string

    Declared by:

    [3138]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3139]services.bacula-sd.device.<name>.extraDeviceConfig

    Extra configuration to be passed in Device directive.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    LabelMedia = yes
    Random Access = no
    AutomaticMount = no
    RemovableMedia = no
    MaximumOpenWait = 60
    AlwaysOpen = no
    ''

    Declared by:

    [3140]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3141]services.bacula-sd.device.<name>.mediaType

    The specified name-string names the type of media supported by this device, for example,
    DLT7000. Media type names are arbitrary in that you set them to anything you want, but they
    must be known to the volume database to keep track of which storage daemons can read which
    volumes. In general, each different storage type should have a unique Media Type associated
    with it. The same name-string must appear in the appropriate Storage resource definition in
    the Director's configuration file.

    Even though the names you assign are arbitrary (i.e. you choose the name you want), you
    should take care in specifying them because the Media Type is used to determine which storage
    device Bacula will select during restore. Thus you should probably use the same Media Type
    specification for all drives where the Media can be freely interchanged. This is not
    generally an issue if you have a single Storage daemon, but it is with multiple Storage
    daemons, especially if they have incompatible media.

    For example, if you specify a Media Type of DDS-4 then during the restore, Bacula will be
    able to choose any Storage Daemon that handles DDS-4. If you have an autochanger, you might
    want to name the Media Type in a way that is unique to the autochanger, unless you wish to
    possibly use the Volumes in other drives. You should also ensure to have unique Media Type
    names if the Media is not compatible between drives. This specification is required for all
    devices.

    In addition, if you are using disk storage, each Device resource will generally have a
    different mount point or directory. In order for Bacula to select the correct Device
    resource, each one must have a unique Media Type.

    Type: string

    Declared by:

    [3142]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3143]services.bacula-sd.director

    This option defines Director resources in Bacula Storage Daemon.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [3144]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3145]services.bacula-sd.director.<name>.monitor

    If Monitor is set to no, this director will have full access to this Storage daemon. If
    Monitor is set to yes, this director will only be able to fetch the current status of this
    Storage daemon.

    Please note that if this director is being used by a Monitor, we highly recommend to set this
    directive to yes to avoid serious security problems.

    Type: one of "no", "yes"

    Default: "no"

    Example: "yes"

    Declared by:

    [3146]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3147]services.bacula-sd.director.<name>.password

    Specifies the password that must be supplied for the default Bacula Console to be authorized.
    The same password must appear in the Director resource of the Console configuration file. For
    added security, the password is never passed across the network but instead a challenge
    response hash code created with the password. This directive is required. If you have either
    /dev/random or bc on your machine, Bacula will generate a random password during the
    configuration process, otherwise it will be left blank and you must manually supply it.

    The password is plain text. It is not generated through any special process but as noted
    above, it is better to use random text for security reasons.

    Type: string

    Declared by:

    [3148]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3149]services.bacula-sd.extraMessagesConfig

    Extra configuration to be passed in Messages directive.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    console = all
    ''

    Declared by:

    [3150]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3151]services.bacula-sd.extraStorageConfig

    Extra configuration to be passed in Storage directive.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    Maximum Concurrent Jobs = 20;
    Heartbeat Interval = 30;
    ''

    Declared by:

    [3152]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3153]services.bacula-sd.name

    Specifies the Name of the Storage daemon.

    Type: string

    Default: "nixos-sd"

    Declared by:

    [3154]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3155]services.bacula-sd.port

    Specifies port number on which the Storage daemon listens for Director connections.

    Type: signed integer

    Default: 9103

    Declared by:

    [3156]<nixpkgs/nixos/modules/services/backup/bacula.nix>

[3157]services.bamf.enable

    Whether to enable bamf.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3158]<nixpkgs/nixos/modules/services/desktops/bamf.nix>

[3159]services.bazarr.enable

    Whether to enable bazarr, a subtitle manager for Sonarr and Radarr.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3160]<nixpkgs/nixos/modules/services/misc/bazarr.nix>

[3161]services.bazarr.group

    Group under which bazarr runs.

    Type: string

    Default: "bazarr"

    Declared by:

    [3162]<nixpkgs/nixos/modules/services/misc/bazarr.nix>

[3163]services.bazarr.listenPort

    Port on which the bazarr web interface should listen

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 6767

    Declared by:

    [3164]<nixpkgs/nixos/modules/services/misc/bazarr.nix>

[3165]services.bazarr.openFirewall

    Open ports in the firewall for the bazarr web interface.

    Type: boolean

    Default: false

    Declared by:

    [3166]<nixpkgs/nixos/modules/services/misc/bazarr.nix>

[3167]services.bazarr.user

    User account under which bazarr runs.

    Type: string

    Default: "bazarr"

    Declared by:

    [3168]<nixpkgs/nixos/modules/services/misc/bazarr.nix>

[3169]services.beanstalkd.enable

    Whether to enable the Beanstalk work queue.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3170]<nixpkgs/nixos/modules/services/misc/beanstalkd.nix>

[3171]services.beanstalkd.listen.address

    IP address to listen on.

    Type: string

    Default: "127.0.0.1"

    Example: "0.0.0.0"

    Declared by:

    [3172]<nixpkgs/nixos/modules/services/misc/beanstalkd.nix>

[3173]services.beanstalkd.listen.port

    TCP port that will be used to accept client connections.

    Type: signed integer

    Default: 11300

    Declared by:

    [3174]<nixpkgs/nixos/modules/services/misc/beanstalkd.nix>

[3175]services.beanstalkd.openFirewall

    Whether to open ports in the firewall for the server.

    Type: boolean

    Default: false

    Declared by:

    [3176]<nixpkgs/nixos/modules/services/misc/beanstalkd.nix>

[3177]services.bee.enable

    Whether to enable Ethereum Swarm Bee.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3178]<nixpkgs/nixos/modules/services/networking/bee.nix>

[3179]services.bee.package

    The package providing the bee binary for the service.

    Type: package

    Default: "pkgs.bee"

    Example: "pkgs.bee-unstable"

    Declared by:

    [3180]<nixpkgs/nixos/modules/services/networking/bee.nix>

[3181]services.bee.daemonNiceLevel

    Daemon process priority for bee. 0 is the default Unix process priority, 19 is the lowest.

    Type: signed integer

    Default: 0

    Declared by:

    [3182]<nixpkgs/nixos/modules/services/networking/bee.nix>

[3183]services.bee.group

    Group the bee binary should execute under.

    Type: string

    Default: "bee"

    Declared by:

    [3184]<nixpkgs/nixos/modules/services/networking/bee.nix>

[3185]services.bee.settings

    Ethereum Swarm Bee configuration. Refer to [3186]https://gateway.ethswarm.org/bzz/
    docs.swarm.eth/docs/installation/configuration/ for details on supported values.

    Type: YAML value

    Declared by:

    [3187]<nixpkgs/nixos/modules/services/networking/bee.nix>

[3188]services.bee.user

    User the bee binary should execute under.

    Type: string

    Default: "bee"

    Declared by:

    [3189]<nixpkgs/nixos/modules/services/networking/bee.nix>

[3190]services.bee-clef.enable

    Whether to enable clef external signer instance for Ethereum Swarm Bee.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3191]<nixpkgs/nixos/modules/services/networking/bee-clef.nix>

[3192]services.bee-clef.dataDir

    Data dir for bee-clef. Beware that some helper scripts may not work when changed! The service
    itself should work fine, though.

    Type: null or string

    Default: "/var/lib/bee-clef"

    Declared by:

    [3193]<nixpkgs/nixos/modules/services/networking/bee-clef.nix>

[3194]services.bee-clef.group

    Group the bee-clef daemon should execute under.

    Type: string

    Default: "bee-clef"

    Declared by:

    [3195]<nixpkgs/nixos/modules/services/networking/bee-clef.nix>

[3196]services.bee-clef.passwordFile

    Password file for bee-clef.

    Type: null or string

    Default: "/var/lib/bee-clef/password"

    Declared by:

    [3197]<nixpkgs/nixos/modules/services/networking/bee-clef.nix>

[3198]services.bee-clef.user

    User the bee-clef daemon should execute under.

    Type: string

    Default: "bee-clef"

    Declared by:

    [3199]<nixpkgs/nixos/modules/services/networking/bee-clef.nix>

[3200]services.beesd.filesystems

    BTRFS filesystems to run block-level deduplication on.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      root = {
        spec = "LABEL=root";
        hashTableSizeMB = 2048;
        verbosity = "crit";
        extraOptions = [ "--loadavg-target" "5.0" ];
      };
    }

    Declared by:

    [3201]<nixpkgs/nixos/modules/services/misc/bees.nix>

[3202]services.beesd.filesystems.<name>.extraOptions

    Extra command-line options passed to the daemon. See upstream bees documentation.

    Type: list of strings

    Default: [ ]

    Example:

    [ "--thread-count" "4" ]

    Declared by:

    [3203]<nixpkgs/nixos/modules/services/misc/bees.nix>

[3204]services.beesd.filesystems.<name>.hashTableSizeMB

    Hash table size in MB; must be a multiple of 16.

    A larger ratio of index size to storage size means smaller blocks of duplicate content are
    recognized.

    If you have 1TB of data, a 4GB hash table (which is to say, a value of 4096) will permit 4KB
    extents (the smallest possible size) to be recognized, whereas a value of 1024 -- creating a
    1GB hash table -- will recognize only aligned duplicate blocks of 16KB.

    Type: signed integer

    Default: 1024

    Declared by:

    [3205]<nixpkgs/nixos/modules/services/misc/bees.nix>

[3206]services.beesd.filesystems.<name>.spec

    Description of how to identify the filesystem to be duplicated by this instance of bees. Note
    that deduplication crosses subvolumes; one must not configure multiple instances for
    subvolumes of the same filesystem (or block devices which are part of the same filesystem),
    but only for completely independent btrfs filesystems.

    This must be in a format usable by findmnt; that could be a key=value pair, or a bare path to
    a mount point.

    Type: string

    Example: "LABEL=MyBulkDataDrive"

    Declared by:

    [3207]<nixpkgs/nixos/modules/services/misc/bees.nix>

[3208]services.beesd.filesystems.<name>.verbosity

    Log verbosity (syslog keyword/level).

    Type: one of "alert", "crit", "debug", "emerg", "err", "info", "notice", "warning", 1, 2, 7,
    0, 3, 6, 5, 4

    Default: "info"

    Declared by:

    [3209]<nixpkgs/nixos/modules/services/misc/bees.nix>

[3210]services.beesd.filesystems.<name>.workDir

    Name (relative to the root of the filesystem) of the subvolume where the hash table will be
    stored.

    Type: string

    Default: ".beeshome"

    Declared by:

    [3211]<nixpkgs/nixos/modules/services/misc/bees.nix>

[3212]services.bepasty.enable

    Whether to enable Bepasty servers.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3213]<nixpkgs/nixos/modules/services/misc/bepasty.nix>

[3214]services.bepasty.servers

    configure a number of bepasty servers which will be started with gunicorn.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [3215]<nixpkgs/nixos/modules/services/misc/bepasty.nix>

[3216]services.bepasty.servers.<name>.bind

    Bind address to be used for this server.

    Type: string

    Default: "127.0.0.1:8000"

    Example: "0.0.0.0:8000"

    Declared by:

    [3217]<nixpkgs/nixos/modules/services/misc/bepasty.nix>

[3218]services.bepasty.servers.<name>.dataDir

    Path to the directory where the pastes will be saved to

    Type: string

    Default: "/var/lib/bepasty/data"

    Declared by:

    [3219]<nixpkgs/nixos/modules/services/misc/bepasty.nix>

[3220]services.bepasty.servers.<name>.defaultPermissions

    default permissions for all unauthenticated accesses.

    Type: string

    Default: "read"

    Example: "read,create,delete"

    Declared by:

    [3221]<nixpkgs/nixos/modules/services/misc/bepasty.nix>

[3222]services.bepasty.servers.<name>.extraConfig

    Extra configuration for bepasty server to be appended on the configuration. see https://
    bepasty-server.readthedocs.org/en/latest/quickstart.html#configuring-bepasty for all options.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    PERMISSIONS = {
      'myadminsecret': 'admin,list,create,read,delete',
    }
    MAX_ALLOWED_FILE_SIZE = 5 * 1000 * 1000
    ''

    Declared by:

    [3223]<nixpkgs/nixos/modules/services/misc/bepasty.nix>

[3224]services.bepasty.servers.<name>.secretKey

    server secret for safe session cookies, must be set.

    Warning: this secret is stored in the WORLD-READABLE Nix store!

    It's recommended to use secretKeyFile which takes precedence over secretKey.

    Type: string

    Default: ""

    Declared by:

    [3225]<nixpkgs/nixos/modules/services/misc/bepasty.nix>

[3226]services.bepasty.servers.<name>.secretKeyFile

    A file that contains the server secret for safe session cookies, must be set.

    secretKeyFile takes precedence over secretKey.

    Warning: when secretKey is non-empty secretKeyFile defaults to a file in the WORLD-READABLE
    Nix store containing that secret.

    Type: null or string

    Default: null

    Declared by:

    [3227]<nixpkgs/nixos/modules/services/misc/bepasty.nix>

[3228]services.bepasty.servers.<name>.workDir

    Path to the working directory (used for config and pidfile). Defaults to the users home
    directory.

    Type: string

    Default: "/var/lib/bepasty"

    Declared by:

    [3229]<nixpkgs/nixos/modules/services/misc/bepasty.nix>

[3230]services.biboumi.enable

    Whether to enable the Biboumi XMPP gateway to IRC.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3231]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3232]services.biboumi.credentialsFile

    Path to a configuration file to be merged with the settings. Beware not to surround "=" with
    spaces when setting biboumi's options in this file. Useful to merge a file which is better
    kept out of the Nix store because it contains sensible data like [3233]password.

    Type: path

    Default: "/dev/null"

    Example: "/run/keys/biboumi.cfg"

    Declared by:

    [3234]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3235]services.biboumi.openFirewall

    Whether to enable opening of the identd port in the firewall.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3236]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3237]services.biboumi.settings

    See [3238]biboumi 8.5 for documentation.

    Type: settings option

    Default: { }

    Declared by:

    [3239]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3240]services.biboumi.settings.admin

    The bare JID of the gateway administrator. This JID will have more privileges than other
    standard users, for example some administration ad-hoc commands will only be available to
    that JID.

    Type: list of strings

    Default: [ ]

    Example: [ "admin@example.org" ]

    Declared by:

    [3241]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3242]services.biboumi.settings.ca_file

    Specifies which file should be used as the list of trusted CA when negociating a TLS session.

    Type: path

    Default: "/etc/ssl/certs/ca-certificates.crt"

    Declared by:

    [3243]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3244]services.biboumi.settings.db_name

    The name of the database to use.

    Type: path or string

    Default: "/var/lib/biboumi/biboumi.sqlite"

    Example: "postgresql://user:secret@localhost"

    Declared by:

    [3245]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3246]services.biboumi.settings.hostname

    The hostname served by the XMPP gateway. This domain must be configured in the XMPP server as
    an external component.

    Type: string

    Example: "biboumi.example.org"

    Declared by:

    [3247]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3248]services.biboumi.settings.identd_port

    The TCP port on which to listen for identd queries.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 113

    Example: 0

    Declared by:

    [3249]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3250]services.biboumi.settings.log_level

    Indicate what type of log messages to write in the logs. 0 is debug, 1 is info, 2 is warning,
    3 is error.

    Type: integer between 0 and 3 (both inclusive)

    Default: 1

    Declared by:

    [3251]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3252]services.biboumi.settings.password

    The password used to authenticate the XMPP component to your XMPP server. This password must
    be configured in the XMPP server, associated with the external component on [3253]hostname.

    Set it to null and use [3254]credentialsFile if you do not want this password to go into the
    Nix store.

    Type: null or string

    Declared by:

    [3255]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3256]services.biboumi.settings.persistent_by_default

    Whether all rooms will be persistent by default: the value of the “persistent” option in the
    global configuration of each user will be “true”, but the value of each individual room will
    still default to false. This means that a user just needs to change the global “persistent”
    configuration option to false in order to override this.

    Type: boolean

    Default: false

    Declared by:

    [3257]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3258]services.biboumi.settings.policy_directory

    A directory that should contain the policy files, used to customize Botan’s behaviour when
    negociating the TLS connections with the IRC servers.

    Type: path

    Default: "\${pkgs.biboumi}/etc/biboumi"

    Declared by:

    [3259]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3260]services.biboumi.settings.port

    The TCP port to use to connect to the local XMPP component.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 5347

    Declared by:

    [3261]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3262]services.biboumi.settings.realname_customization

    Whether the users will be able to use the ad-hoc commands that lets them configure their
    realname and username.

    Type: boolean

    Default: true

    Declared by:

    [3263]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3264]services.biboumi.settings.realname_from_jid

    Whether the realname and username of each biboumi user will be extracted from their JID.
    Otherwise they will be set to the nick they used to connect to the IRC server.

    Type: boolean

    Default: false

    Declared by:

    [3265]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3266]services.biboumi.settings.xmpp_server_ip

    The IP address to connect to the XMPP server on. The connection to the XMPP server is
    unencrypted, so the biboumi instance and the server should normally be on the same host.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [3267]<nixpkgs/nixos/modules/services/networking/biboumi.nix>

[3268]services.bind.enable

    Whether to enable BIND domain name server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3269]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3270]services.bind.blockedNetworks

    What networks are just blocked.

    Type: list of strings

    Default: [ ]

    Declared by:

    [3271]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3272]services.bind.cacheNetworks

    What networks are allowed to use us as a resolver. Note that this is for recursive queries --
    all networks are allowed to query zones configured with the `zones` option. It is recommended
    that you limit cacheNetworks to avoid your server being used for DNS amplification attacks.

    Type: list of strings

    Default: [ "127.0.0.0/24" ]

    Declared by:

    [3273]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3274]services.bind.configFile

    Overridable config file to use for named. By default, that generated by nixos.

    Type: path

    Default: "confFile"

    Declared by:

    [3275]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3276]services.bind.extraConfig

    Extra lines to be added verbatim to the generated named configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [3277]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3278]services.bind.extraOptions

    Extra lines to be added verbatim to the options section of the generated named configuration
    file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [3279]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3280]services.bind.forwarders

    List of servers we should forward requests to.

    Type: list of strings

    Default: [ ]

    Declared by:

    [3281]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3282]services.bind.ipv4Only

    Only use ipv4, even if the host supports ipv6.

    Type: boolean

    Default: false

    Declared by:

    [3283]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3284]services.bind.listenOn

    Interfaces to listen on.

    Type: list of strings

    Default: [ "any" ]

    Declared by:

    [3285]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3286]services.bind.listenOnIpv6

    Ipv6 interfaces to listen on.

    Type: list of strings

    Default: [ "any" ]

    Declared by:

    [3287]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3288]services.bind.zones

    List of zones we claim authority over.

    Type: attribute set of submodules or list of attribute sets convertible to it

    Default: [ ]

    Example: { example.com = { extraConfig = ""; file = "/var/dns/example.com"; master = false;
    masters = [ "192.168.0.1" ] ; slaves = [ ] ; } ; }

    Declared by:

    [3289]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3290]services.bind.zones.<name>.extraConfig

    Extra zone config to be appended at the end of the zone section.

    Type: string

    Default: ""

    Declared by:

    [3291]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3292]services.bind.zones.<name>.file

    Zone file resource records contain columns of data, separated by whitespace, that define the
    record.

    Type: string or path

    Declared by:

    [3293]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3294]services.bind.zones.<name>.master

    Master=false means slave server

    Type: boolean

    Declared by:

    [3295]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3296]services.bind.zones.<name>.masters

    List of servers for inclusion in stub and secondary zones.

    Type: list of strings

    Declared by:

    [3297]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3298]services.bind.zones.<name>.name

    Name of the zone.

    Type: string

    Default: "‹name›"

    Declared by:

    [3299]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3300]services.bind.zones.<name>.slaves

    Addresses who may request zone transfers.

    Type: list of strings

    Default: [ ]

    Declared by:

    [3301]<nixpkgs/nixos/modules/services/networking/bind.nix>

[3302]services.bird.enable

    Whether to enable BIRD Internet Routing Daemon (1.9.x with IPv4 suport).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3303]<nixpkgs/nixos/modules/services/networking/bird.nix>

[3304]services.bird.checkConfig

    Whether the config should be checked at build time. Disabling this might become necessary if
    the config includes files not present during build time.

    Type: boolean

    Default: true

    Declared by:

    [3305]<nixpkgs/nixos/modules/services/networking/bird.nix>

[3306]services.bird.config

    BIRD Internet Routing Daemon configuration file. [3307]http://bird.network.cz/

    Type: strings concatenated with "\n"

    Declared by:

    [3308]<nixpkgs/nixos/modules/services/networking/bird.nix>

[3309]services.bird2.enable

    Whether to enable BIRD Internet Routing Daemon (2.x).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3310]<nixpkgs/nixos/modules/services/networking/bird.nix>

[3311]services.bird2.checkConfig

    Whether the config should be checked at build time. Disabling this might become necessary if
    the config includes files not present during build time.

    Type: boolean

    Default: true

    Declared by:

    [3312]<nixpkgs/nixos/modules/services/networking/bird.nix>

[3313]services.bird2.config

    BIRD Internet Routing Daemon configuration file. [3314]http://bird.network.cz/

    Type: strings concatenated with "\n"

    Declared by:

    [3315]<nixpkgs/nixos/modules/services/networking/bird.nix>

[3316]services.bird6.enable

    Whether to enable BIRD Internet Routing Daemon (1.9.x with IPv6 suport).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3317]<nixpkgs/nixos/modules/services/networking/bird.nix>

[3318]services.bird6.checkConfig

    Whether the config should be checked at build time. Disabling this might become necessary if
    the config includes files not present during build time.

    Type: boolean

    Default: true

    Declared by:

    [3319]<nixpkgs/nixos/modules/services/networking/bird.nix>

[3320]services.bird6.config

    BIRD Internet Routing Daemon configuration file. [3321]http://bird.network.cz/

    Type: strings concatenated with "\n"

    Declared by:

    [3322]<nixpkgs/nixos/modules/services/networking/bird.nix>

[3323]services.bitcoind

    Specification of one or more bitcoind instances.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [3324]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3325]services.bitcoind.<name>.enable

    Whether to enable Bitcoin daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3326]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3327]services.bitcoind.<name>.package

    The package providing bitcoin binaries.

    Type: package

    Default: "pkgs.bitcoind"

    Declared by:

    [3328]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3329]services.bitcoind.<name>.configFile

    The configuration file path to supply bitcoind.

    Type: null or path

    Default: null

    Example: "/var/lib/‹name›/bitcoin.conf"

    Declared by:

    [3330]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3331]services.bitcoind.<name>.dataDir

    The data directory for bitcoind.

    Type: path

    Default: "/var/lib/bitcoind-‹name›"

    Declared by:

    [3332]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3333]services.bitcoind.<name>.dbCache

    Override the default database cache size in MiB.

    Type: null or integer between 4 and 16384 (both inclusive)

    Default: null

    Example: 4000

    Declared by:

    [3334]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3335]services.bitcoind.<name>.extraCmdlineOptions

    Extra command line options to pass to bitcoind. Run bitcoind --help to list all available
    options.

    Type: list of strings

    Default: [ ]

    Declared by:

    [3336]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3337]services.bitcoind.<name>.extraConfig

    Additional configurations to be appended to bitcoin.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    par=16
    rpcthreads=16
    logips=1
    ''

    Declared by:

    [3338]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3339]services.bitcoind.<name>.group

    The group as which to run bitcoind.

    Type: string

    Default: "bitcoind-‹name›"

    Declared by:

    [3340]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3341]services.bitcoind.<name>.pidFile

    Location of bitcoind pid file.

    Type: path

    Default: "/var/lib/bitcoind-‹name›/bitcoind.pid"

    Declared by:

    [3342]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3343]services.bitcoind.<name>.port

    Override the default port on which to listen for connections.

    Type: null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: null

    Declared by:

    [3344]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3345]services.bitcoind.<name>.prune

    Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the
    pruneblockchain RPC to be called to delete specific blocks, and enables automatic pruning of
    old blocks if a target size in MiB is provided. This mode is incompatible with -txindex and
    -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain.
    ("disable" = disable pruning blocks, "manual" = allow manual pruning via RPC, >=550 =
    automatically prune block files to stay under the specified target size in MiB).

    Type: null or unsigned integer, meaning >=0 or one of "disable", "manual" convertible to it

    Default: null

    Example: 10000

    Declared by:

    [3346]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3347]services.bitcoind.<name>.rpc.port

    Override the default port on which to listen for JSON-RPC connections.

    Type: null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: null

    Declared by:

    [3348]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3349]services.bitcoind.<name>.rpc.users

    RPC user information for JSON-RPC connnections.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      alice.passwordHMAC = "f7efda5c189b999524f151318c0c86$d5b51b3beffbc02b724e5d095828e0bc8b2456e9ac8757ae3211a5d9b16a22ae";
      bob.passwordHMAC = "b2dd077cb54591a2f3139e69a897ac$4e71f08d48b4347cf8eff3815c0e25ae2e9a4340474079f55705f40574f4ec99";
    }

    Declared by:

    [3350]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3351]services.bitcoind.<name>.rpc.users.<name>.name

    Username for JSON-RPC connections.

    Type: string

    Example: "alice"

    Declared by:

    [3352]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3353]services.bitcoind.<name>.rpc.users.<name>.passwordHMAC

    Password HMAC-SHA-256 for JSON-RPC connections. Must be a string of the format <SALT-HEX>$
    <HMAC-HEX>.

    Tool (Python script) for HMAC generation is available here: [3354]https://github.com/bitcoin/
    bitcoin/blob/master/share/rpcauth/rpcauth.py

    Type: string matching the pattern [0-9a-f]+\$[0-9a-f]{64}

    Example: "f7efda5c189b999524f151318c0c86\
    $d5b51b3beffbc02b724e5d095828e0bc8b2456e9ac8757ae3211a5d9b16a22ae"

    Declared by:

    [3355]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3356]services.bitcoind.<name>.testnet

    Whether to use the testnet instead of mainnet.

    Type: boolean

    Default: false

    Declared by:

    [3357]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3358]services.bitcoind.<name>.user

    The user as which to run bitcoind.

    Type: string

    Default: "bitcoind-‹name›"

    Declared by:

    [3359]<nixpkgs/nixos/modules/services/networking/bitcoind.nix>

[3360]services.bitlbee.enable

    Whether to run the BitlBee IRC to other chat network gateway. Running it allows you to access
    the MSN, Jabber, Yahoo! and ICQ chat networks via an IRC client.

    Type: boolean

    Default: false

    Declared by:

    [3361]<nixpkgs/nixos/modules/services/networking/bitlbee.nix>

[3362]services.bitlbee.authBackend

    How users are authenticated storage -- save passwords internally pam -- Linux PAM
    authentication

    Type: one of "storage", "pam"

    Default: "storage"

    Declared by:

    [3363]<nixpkgs/nixos/modules/services/networking/bitlbee.nix>

[3364]services.bitlbee.authMode

    The following authentication modes are available: Open -- Accept connections from anyone, use
    NickServ for user authentication. Closed -- Require authorization (using the PASS command
    during login) before allowing the user to connect at all. Registered -- Only allow registered
    users to use this server; this disables the register- and the account command until the user
    identifies himself.

    Type: one of "Open", "Closed", "Registered"

    Default: "Open"

    Declared by:

    [3365]<nixpkgs/nixos/modules/services/networking/bitlbee.nix>

[3366]services.bitlbee.configDir

    Specify an alternative directory to store all the per-user configuration files.

    Type: path

    Default: "/var/lib/bitlbee"

    Declared by:

    [3367]<nixpkgs/nixos/modules/services/networking/bitlbee.nix>

[3368]services.bitlbee.extraDefaults

    Will be inserted in the Default section of the config file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [3369]<nixpkgs/nixos/modules/services/networking/bitlbee.nix>

[3370]services.bitlbee.extraSettings

    Will be inserted in the Settings section of the config file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [3371]<nixpkgs/nixos/modules/services/networking/bitlbee.nix>

[3372]services.bitlbee.hostName

    Normally, BitlBee gets a hostname using getsockname(). If you have a nicer alias for your
    BitlBee daemon, you can set it here and BitlBee will identify itself with that name instead.

    Type: string

    Default: ""

    Declared by:

    [3373]<nixpkgs/nixos/modules/services/networking/bitlbee.nix>

[3374]services.bitlbee.interface

    The interface the BitlBee deamon will be listening to. If `127.0.0.1', only clients on the
    local host can connect to it; if `0.0.0.0', clients can access it from any network interface.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [3375]<nixpkgs/nixos/modules/services/networking/bitlbee.nix>

[3376]services.bitlbee.libpurple_plugins

    The list of libpurple plugins to install.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.purple-matrix ]

    Declared by:

    [3377]<nixpkgs/nixos/modules/services/networking/bitlbee.nix>

[3378]services.bitlbee.plugins

    The list of bitlbee plugins to install.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.bitlbee-facebook ]

    Declared by:

    [3379]<nixpkgs/nixos/modules/services/networking/bitlbee.nix>

[3380]services.bitlbee.portNumber

    Number of the port BitlBee will be listening to.

    Type: signed integer

    Default: 6667

    Declared by:

    [3381]<nixpkgs/nixos/modules/services/networking/bitlbee.nix>

[3382]services.bitlbee.protocols

    This option allows to remove the support of protocol, even if compiled in. If nothing is
    given, there are no restrictions.

    Type: string

    Default: ""

    Declared by:

    [3383]<nixpkgs/nixos/modules/services/networking/bitlbee.nix>

[3384]services.bitwarden_rs.enable

    Whether to enable bitwarden_rs.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3385]<nixpkgs/nixos/modules/services/security/bitwarden_rs/default.nix>

[3386]services.bitwarden_rs.backupDir

    The directory under which bitwarden_rs will backup its persistent data.

    Type: null or string

    Default: null

    Declared by:

    [3387]<nixpkgs/nixos/modules/services/security/bitwarden_rs/default.nix>

[3388]services.bitwarden_rs.config

    The configuration of bitwarden_rs is done through environment variables, therefore the names
    are converted from camel case (e.g. disable2FARemember) to upper case snake case (e.g.
    DISABLE_2FA_REMEMBER). In this conversion digits (0-9) are handled just like upper case
    characters, so foo2 would be converted to FOO_2. Names already in this format remain
    unchanged, so FOO2 remains FOO2 if passed as such, even though foo2 would have been converted
    to FOO_2. This allows working around any potential future conflicting naming conventions.

    Based on the attributes passed to this config option an environment file will be generated
    that is passed to bitwarden_rs's systemd service.

    The available configuration options can be found in [3389]the environment template file.

    Type: attribute set of null or boolean or signed integer or strings

    Default: { }

    Example:

    {
      domain = "https://bw.domain.tld:8443";
      signupsAllowed = true;
      rocketPort = 8222;
      rocketLog = "critical";
    }

    Declared by:

    [3390]<nixpkgs/nixos/modules/services/security/bitwarden_rs/default.nix>

[3391]services.bitwarden_rs.dbBackend

    Which database backend bitwarden_rs will be using.

    Type: one of "sqlite", "mysql", "postgresql"

    Default: "sqlite"

    Declared by:

    [3392]<nixpkgs/nixos/modules/services/security/bitwarden_rs/default.nix>

[3393]services.bitwarden_rs.environmentFile

    Additional environment file as defined in systemd.exec(5).

    Secrets like ADMIN_TOKEN and SMTP_PASSWORD may be passed to the service without adding them
    to the world-readable Nix store.

    Note that this file needs to be available on the host on which bitwarden_rs is running.

    Type: null or path

    Default: null

    Example: "/root/bitwarden_rs.env"

    Declared by:

    [3394]<nixpkgs/nixos/modules/services/security/bitwarden_rs/default.nix>

[3395]services.blackfire-agent.enable

    Whether to enable Blackfire profiler agent.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3396]<nixpkgs/nixos/modules/services/development/blackfire.nix>

[3397]services.blackfire-agent.settings

    See https://blackfire.io/docs/configuration/agent

    Type: attribute set of strings

    Declared by:

    [3398]<nixpkgs/nixos/modules/services/development/blackfire.nix>

[3399]services.blackfire-agent.settings.server-id

    Sets the server id used to authenticate with Blackfire

    You can find your personal server-id at https://blackfire.io/my/settings/credentials

    Type: string

    Declared by:

    [3400]<nixpkgs/nixos/modules/services/development/blackfire.nix>

[3401]services.blackfire-agent.settings.server-token

    Sets the server token used to authenticate with Blackfire

    You can find your personal server-token at https://blackfire.io/my/settings/credentials

    Type: string

    Declared by:

    [3402]<nixpkgs/nixos/modules/services/development/blackfire.nix>

[3403]services.blockbook-frontend

    Specification of one or more blockbook-frontend instances.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [3404]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3405]services.blockbook-frontend.<name>.enable

    Whether to enable blockbook-frontend application..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3406]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3407]services.blockbook-frontend.<name>.package

    Which blockbook package to use.

    Type: package

    Default: (build of blockbook-0.3.4)

    Declared by:

    [3408]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3409]services.blockbook-frontend.<name>.certFile

    To enable SSL, specify path to the name of certificate files without extension. Expecting
    certFile.crt and certFile.key.

    Type: null or path

    Default: null

    Example: "/etc/secrets/blockbook-frontend-‹name›/certFile"

    Declared by:

    [3410]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3411]services.blockbook-frontend.<name>.coinName

    See [3412]https://github.com/trezor/blockbook/blob/master/bchain/coins/blockchain.go#L61 for
    current of coins supported in master (Note: may differ from release).

    Type: string

    Default: "Bitcoin"

    Example: "Bitcoin"

    Declared by:

    [3413]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3414]services.blockbook-frontend.<name>.configFile

    Location of the blockbook configuration file.

    Type: null or path

    Default: null

    Example: "/var/lib/blockbook-frontend-‹name›/config.json"

    Declared by:

    [3415]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3416]services.blockbook-frontend.<name>.cssDir

    Location of the dir with main.css CSS file. By default, the one shipped with the package is
    used.

    Type: path

    Default: "\${pkgs.blockbook}/share/css/"

    Example: "/var/lib/blockbook-frontend-‹name›/static/css/"

    Declared by:

    [3417]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3418]services.blockbook-frontend.<name>.dataDir

    Location of blockbook-frontend-‹name› data directory.

    Type: path

    Default: "/var/lib/blockbook-frontend-‹name›"

    Declared by:

    [3419]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3420]services.blockbook-frontend.<name>.debug

    Debug mode, return more verbose errors, reload templates on each request.

    Type: boolean

    Default: false

    Declared by:

    [3421]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3422]services.blockbook-frontend.<name>.extraCmdLineOptions

    Extra command line options to pass to Blockbook. Run blockbook --help to list all available
    options.

    Type: list of strings

    Default: [ ]

    Example: [ "-workers=1" "-dbcache=0" "-logtosderr" ]

    Declared by:

    [3423]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3424]services.blockbook-frontend.<name>.extraConfig

    Additional configurations to be appended to coin.conf. Overrides any already defined
    configuration options. See [3425]https://github.com/trezor/blockbook/tree/master/configs/
    coins for current configuration options supported in master (Note: may differ from release).

    Type: attribute set

    Default: { }

    Example:

    {
             "alternative_estimate_fee" = "whatthefee-disabled";
             "alternative_estimate_fee_params" = "{\"url\": \"https://whatthefee.io/data.json\", \"periodSeconds\": 60}";
             "fiat_rates" = "coingecko";
             "fiat_rates_params" = "{\"url\": \"https://api.coingecko.com/api/v3\", \"coin\": \"bitcoin\", \"periodSeconds\": 60}";
             "coin_shortcut" = "BTC";
             "coin_label" = "Bitcoin";
             "parse" = true;
             "subversion" = "";
             "address_format" = "";
             "xpub_magic" = 76067358;
             "xpub_magic_segwit_p2sh" = 77429938;
             "xpub_magic_segwit_native" = 78792518;
             "mempool_workers" = 8;
             "mempool_sub_workers" = 2;
             "block_addresses_to_keep" = 300;
           }

    Declared by:

    [3426]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3427]services.blockbook-frontend.<name>.group

    The group as which to run blockbook-frontend-‹name›.

    Type: string

    Default: "blockbook-frontend-‹name›"

    Declared by:

    [3428]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3429]services.blockbook-frontend.<name>.internal

    Internal http server binding [address]:port.

    Type: null or string

    Default: ":9030"

    Example: ":9030"

    Declared by:

    [3430]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3431]services.blockbook-frontend.<name>.messageQueueBinding

    Message Queue Binding address:port.

    Type: string

    Default: "tcp://127.0.0.1:38330"

    Example: "tcp://127.0.0.1:38330"

    Declared by:

    [3432]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3433]services.blockbook-frontend.<name>.public

    Public http server binding [address]:port.

    Type: null or string

    Default: ":9130"

    Example: ":9130"

    Declared by:

    [3434]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3435]services.blockbook-frontend.<name>.rpc.password

    RPC password for JSON-RPC connections. Warning: this is stored in cleartext in the Nix
    store!!! Use configFile or passwordFile if needed.

    Type: string

    Default: "rpc"

    Example: "rpc"

    Declared by:

    [3436]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3437]services.blockbook-frontend.<name>.rpc.passwordFile

    File containing password of the RPC user. Note: This options is ignored when configFile is
    used.

    Type: null or path

    Default: null

    Declared by:

    [3438]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3439]services.blockbook-frontend.<name>.rpc.port

    Port for JSON-RPC connections.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8030

    Declared by:

    [3440]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3441]services.blockbook-frontend.<name>.rpc.url

    URL for JSON-RPC connections.

    Type: string

    Default: "http://127.0.0.1"

    Declared by:

    [3442]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3443]services.blockbook-frontend.<name>.rpc.user

    Username for JSON-RPC connections.

    Type: string

    Default: "rpc"

    Example: "rpc"

    Declared by:

    [3444]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3445]services.blockbook-frontend.<name>.sync

    Synchronizes until tip, if together with zeromq, keeps index synchronized.

    Type: boolean

    Default: true

    Declared by:

    [3446]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3447]services.blockbook-frontend.<name>.templateDir

    Location of the HTML templates. By default, ones shipped with the package are used.

    Type: path

    Default: "\${pkgs.blockbook}/share/templates/"

    Example: "/var/lib/blockbook-frontend-‹name›/templates/static/"

    Declared by:

    [3448]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3449]services.blockbook-frontend.<name>.user

    The user as which to run blockbook-frontend-‹name›.

    Type: string

    Default: "blockbook-frontend-‹name›"

    Declared by:

    [3450]<nixpkgs/nixos/modules/services/networking/blockbook-frontend.nix>

[3451]services.bloop.extraOptions

    Specifies additional command line argument to pass to bloop java process.

    Type: list of strings

    Default: [ ]

    Example: [ "-J-Xmx2G" "-J-XX:MaxInlineLevel=20" "-J-XX:+UseParallelGC" ]

    Declared by:

    [3452]<nixpkgs/nixos/modules/services/development/bloop.nix>

[3453]services.bloop.install

    Whether to install a user service for the Bloop server.

    The service must be manually started for each user with "systemctl --user start bloop".

    Type: boolean

    Default: false

    Declared by:

    [3454]<nixpkgs/nixos/modules/services/development/bloop.nix>

[3455]services.blueman.enable

    Whether to enable blueman.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3456]<nixpkgs/nixos/modules/services/desktops/blueman.nix>

[3457]services.boinc.enable

    Whether to enable the BOINC distributed computing client. If this option is set to true, the
    boinc_client daemon will be run as a background service. The boinccmd command can be used to
    control the daemon.

    Type: boolean

    Default: false

    Declared by:

    [3458]<nixpkgs/nixos/modules/services/computing/boinc/client.nix>

[3459]services.boinc.package

    Which BOINC package to use.

    Type: package

    Default: "pkgs.boinc"

    Declared by:

    [3460]<nixpkgs/nixos/modules/services/computing/boinc/client.nix>

[3461]services.boinc.allowRemoteGuiRpc

    If set to true, any remote host can connect to and control this BOINC client (subject to
    password authentication). If instead set to false, only the hosts listed in dataDir/
    remote_hosts.cfg will be allowed to connect.

    See also: [3462]http://boinc.berkeley.edu/wiki/Controlling_BOINC_remotely#Remote_access

    Type: boolean

    Default: false

    Declared by:

    [3463]<nixpkgs/nixos/modules/services/computing/boinc/client.nix>

[3464]services.boinc.dataDir

    The directory in which to store BOINC's configuration and data files.

    Type: path

    Default: "/var/lib/boinc"

    Declared by:

    [3465]<nixpkgs/nixos/modules/services/computing/boinc/client.nix>

[3466]services.boinc.extraEnvPackages

    Additional packages to make available in the environment in which BOINC will run. Common
    choices are:

    pkgs.virtualbox

        The VirtualBox virtual machine framework. Required by some BOINC projects, such as
        ATLAS@home.

    pkgs.ocl-icd

        OpenCL infrastructure library. Required by BOINC projects that use OpenCL, in addition to
        a device-specific OpenCL driver.

    pkgs.linuxPackages.nvidia_x11

        Provides CUDA libraries. Required by BOINC projects that use CUDA. Note that this
        requires an NVIDIA graphics device to be present on the system.

        Also provides OpenCL drivers for NVIDIA GPUs; pkgs.ocl-icd is also needed in this case.

    Type: list of packages

    Default: [ ]

    Example: "[ pkgs.virtualbox ]"

    Declared by:

    [3467]<nixpkgs/nixos/modules/services/computing/boinc/client.nix>

[3468]services.bookstack.enable

    Whether to enable BookStack.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3469]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3470]services.bookstack.appKeyFile

    A file containing the AppKey. Used for encryption where needed. Can be generated with head -c
    32 /dev/urandom| base64 and must be prefixed with base64:.

    Type: path

    Example: "/run/keys/bookstack-appkey"

    Declared by:

    [3471]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3472]services.bookstack.appURL

    The root URL that you want to host BookStack on. All URLs in BookStack will be generated
    using this value. If you change this in the future you may need to run a command to update
    stored URLs in the database. Command example: php artisan bookstack:update-url https://
    old.example.com https://new.example.com

    Type: string

    Example: "https://example.com"

    Declared by:

    [3473]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3474]services.bookstack.cacheDir

    BookStack cache directory

    Type: path

    Default: "/var/cache/bookstack"

    Declared by:

    [3475]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3476]services.bookstack.dataDir

    BookStack data directory

    Type: path

    Default: "/var/lib/bookstack"

    Declared by:

    [3477]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3478]services.bookstack.database.createLocally

    Create the database and database user locally.

    Type: boolean

    Default: false

    Declared by:

    [3479]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3480]services.bookstack.database.host

    Database host address.

    Type: string

    Default: "localhost"

    Declared by:

    [3481]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3482]services.bookstack.database.name

    Database name.

    Type: string

    Default: "bookstack"

    Declared by:

    [3483]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3484]services.bookstack.database.passwordFile

    A file containing the password corresponding to database.user.

    Type: null or path

    Default: null

    Example: "/run/keys/bookstack-dbpassword"

    Declared by:

    [3485]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3486]services.bookstack.database.port

    Database host port.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 3306

    Declared by:

    [3487]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3488]services.bookstack.database.user

    Database username.

    Type: string

    Default: "\${user}"

    Declared by:

    [3489]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3490]services.bookstack.extraConfig

    Lines to be appended verbatim to the BookStack configuration. Refer to [3491]https://
    www.bookstackapp.com/docs/ for details on supported values.

    Type: null or strings concatenated with "\n"

    Default: null

    Example:

    ''
    ALLOWED_IFRAME_HOSTS="https://example.com"
    WKHTMLTOPDF=/home/user/bins/wkhtmltopdf
    ''

    Declared by:

    [3492]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3493]services.bookstack.group

    Group bookstack runs as.

    Type: string

    Default: "bookstack"

    Declared by:

    [3494]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3495]services.bookstack.mail.driver

    Mail driver to use.

    Type: one of "smtp", "sendmail"

    Default: "smtp"

    Declared by:

    [3496]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3497]services.bookstack.mail.encryption

    SMTP encryption mechanism to use.

    Type: null or one of "tls"

    Default: null

    Declared by:

    [3498]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3499]services.bookstack.mail.from

    Mail "from" email.

    Type: string

    Default: "mail@bookstackapp.com"

    Declared by:

    [3500]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3501]services.bookstack.mail.fromName

    Mail "from" name.

    Type: string

    Default: "BookStack"

    Declared by:

    [3502]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3503]services.bookstack.mail.host

    Mail host address.

    Type: string

    Default: "localhost"

    Declared by:

    [3504]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3505]services.bookstack.mail.passwordFile

    A file containing the password corresponding to mail.user.

    Type: null or path

    Default: null

    Example: "/run/keys/bookstack-mailpassword"

    Declared by:

    [3506]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3507]services.bookstack.mail.port

    Mail host port.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 1025

    Declared by:

    [3508]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3509]services.bookstack.mail.user

    Mail username.

    Type: null or string

    Default: null

    Example: "bookstack"

    Declared by:

    [3510]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3511]services.bookstack.maxUploadSize

    The maximum size for uploads (e.g. images).

    Type: string

    Default: "18M"

    Example: "1G"

    Declared by:

    [3512]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3513]services.bookstack.nginx

    With this option, you can customize the nginx virtualHost settings.

    Type: submodule

    Default: { }

    Example: { enableACME = true; forceSSL = true; serverAliases = [ "bookstack.\$
    {config.networking.domain}" ] ; }

    Declared by:

    [3514]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3515]services.bookstack.nginx.enableACME

    Whether to ask Let's Encrypt to sign a certificate for this vhost. Alternately, you can use
    an existing certificate through useACMEHost.

    Type: boolean

    Default: false

    Declared by:

    [3516]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3517]services.bookstack.nginx.acmeFallbackHost

    Host which to proxy requests to if acme challenge is not found. Useful if you want multiple
    hosts to be able to verify the same domain name.

    Type: null or string

    Default: null

    Declared by:

    [3518]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3519]services.bookstack.nginx.acmeRoot

    Directory for the acme challenge which is PUBLIC, don't put certs or keys in here

    Type: string

    Default: "/var/lib/acme/acme-challenge"

    Declared by:

    [3520]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3521]services.bookstack.nginx.addSSL

    Whether to enable HTTPS in addition to plain HTTP. This will set defaults for listen to
    listen on all interfaces on the respective default ports (80, 443).

    Type: boolean

    Default: false

    Declared by:

    [3522]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3523]services.bookstack.nginx.basicAuth

    Basic Auth protection for a vhost.

    WARNING: This is implemented to store the password in plain text in the Nix store.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      user = "password";
    };

    Declared by:

    [3524]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3525]services.bookstack.nginx.basicAuthFile

    Basic Auth password file for a vhost. Can be created via: htpasswd -c <filename> <username>.

    WARNING: The generate file contains the users' passwords in a non-cryptographically-securely
    hashed way.

    Type: null or path

    Default: null

    Declared by:

    [3526]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3527]services.bookstack.nginx.default

    Makes this vhost the default.

    Type: boolean

    Default: false

    Declared by:

    [3528]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3529]services.bookstack.nginx.extraConfig

    These lines go to the end of the vhost verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [3530]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3531]services.bookstack.nginx.forceSSL

    Whether to add a separate nginx server block that permanently redirects (301) all plain HTTP
    traffic to HTTPS. This will set defaults for listen to listen on all interfaces on the
    respective default ports (80, 443), where the non-SSL listens are used for the redirect
    vhosts.

    Type: boolean

    Default: false

    Declared by:

    [3532]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3533]services.bookstack.nginx.globalRedirect

    If set, all requests for this host are redirected permanently to the given hostname.

    Type: null or string

    Default: null

    Example: "newserver.example.org"

    Declared by:

    [3534]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3535]services.bookstack.nginx.http2

    Whether to enable HTTP 2. Note that (as of writing) due to nginx's implementation, to disable
    HTTP 2 you have to disable it on all vhosts that use a given IP address / port. If there is
    one server block configured to enable http2,then it is enabled for all server blocks on this
    IP. See https://stackoverflow.com/a/39466948/263061.

    Type: boolean

    Default: true

    Declared by:

    [3536]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3537]services.bookstack.nginx.http3

    Whether to enable HTTP 3. This requires using pkgs.nginxQuic package which can be achived by
    setting services.nginx.package = pkgs.nginxQuic;. Note that HTTP 3 support is experimental
    and *not* yet recommended for production. Read more at https://quic.nginx.org/

    Type: boolean

    Default: false

    Declared by:

    [3538]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3539]services.bookstack.nginx.listen

    Listen addresses and ports for this virtual host. IPv6 addresses must be enclosed in square
    brackets. Note: this option overrides addSSL and onlySSL.

    Type: list of submodules

    Default: [ ]

    Example: [ { addr = "195.154.1.1"; port = 443; ssl = true; } { addr = "192.154.1.1"; port =
    80; } ]

    Declared by:

    [3540]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3541]services.bookstack.nginx.listen.*.addr

    IP address.

    Type: string

    Declared by:

    [3542]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3543]services.bookstack.nginx.listen.*.extraParameters

    Extra parameters of this listen directive.

    Type: list of strings

    Default: [ ]

    Example: [ "reuseport" "deferred" ]

    Declared by:

    [3544]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3545]services.bookstack.nginx.listen.*.port

    Port number.

    Type: signed integer

    Default: 80

    Declared by:

    [3546]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3547]services.bookstack.nginx.listen.*.ssl

    Enable SSL.

    Type: boolean

    Default: false

    Declared by:

    [3548]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3549]services.bookstack.nginx.locations

    Declarative location config

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "/" = {
        proxyPass = "http://localhost:3000";
      };
    };

    Declared by:

    [3550]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3551]services.bookstack.nginx.locations.<name>.alias

    Alias directory for requests.

    Type: null or path

    Default: null

    Example: "/your/alias/directory"

    Declared by:

    [3552]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3553]services.bookstack.nginx.locations.<name>.basicAuth

    Basic Auth protection for a vhost.

    WARNING: This is implemented to store the password in plain text in the Nix store.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      user = "password";
    };

    Declared by:

    [3554]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3555]services.bookstack.nginx.locations.<name>.basicAuthFile

    Basic Auth password file for a vhost. Can be created via: htpasswd -c <filename> <username>.

    WARNING: The generate file contains the users' passwords in a non-cryptographically-securely
    hashed way.

    Type: null or path

    Default: null

    Declared by:

    [3556]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3557]services.bookstack.nginx.locations.<name>.extraConfig

    These lines go to the end of the location verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [3558]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3559]services.bookstack.nginx.locations.<name>.fastcgiParams

    FastCGI parameters to override. Unlike in the Nginx configuration file, overriding only some
    default parameters won't unset the default values for other parameters.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [3560]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3561]services.bookstack.nginx.locations.<name>.index

    Adds index directive.

    Type: null or string

    Default: null

    Example: "index.php index.html"

    Declared by:

    [3562]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3563]services.bookstack.nginx.locations.<name>.priority

    Order of this location block in relation to the others in the vhost. The semantics are the
    same as with `lib.mkOrder`. Smaller values have a greater priority.

    Type: signed integer

    Default: 1000

    Declared by:

    [3564]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3565]services.bookstack.nginx.locations.<name>.proxyPass

    Adds proxy_pass directive and sets recommended proxy headers if recommendedProxySettings is
    enabled.

    Type: null or string

    Default: null

    Example: "http://www.example.org/"

    Declared by:

    [3566]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3567]services.bookstack.nginx.locations.<name>.proxyWebsockets

    Whether to support proxying websocket connections with HTTP/1.1.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3568]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3569]services.bookstack.nginx.locations.<name>.return

    Adds a return directive, for e.g. redirections.

    Type: null or string

    Default: null

    Example: "301 http://example.com\$request_uri"

    Declared by:

    [3570]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3571]services.bookstack.nginx.locations.<name>.root

    Root directory for requests.

    Type: null or path

    Default: null

    Example: "/your/root/directory"

    Declared by:

    [3572]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3573]services.bookstack.nginx.locations.<name>.tryFiles

    Adds try_files directive.

    Type: null or string

    Default: null

    Example: "\$uri =404"

    Declared by:

    [3574]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3575]services.bookstack.nginx.onlySSL

    Whether to enable HTTPS and reject plain HTTP connections. This will set defaults for listen
    to listen on all interfaces on port 443.

    Type: boolean

    Default: false

    Declared by:

    [3576]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3577]services.bookstack.nginx.root

    The path of the web root directory.

    Type: null or path

    Default: null

    Example: "/data/webserver/docs"

    Declared by:

    [3578]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3579]services.bookstack.nginx.serverAliases

    Additional names of virtual hosts served by this virtual host configuration.

    Type: list of strings

    Default: [ ]

    Example: [ "www.example.org" "example.org" ]

    Declared by:

    [3580]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3581]services.bookstack.nginx.serverName

    Name of this virtual host. Defaults to attribute name in virtualHosts.

    Type: null or string

    Default: null

    Example: "example.org"

    Declared by:

    [3582]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3583]services.bookstack.nginx.sslCertificate

    Path to server SSL certificate.

    Type: path

    Example: "/var/host.cert"

    Declared by:

    [3584]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3585]services.bookstack.nginx.sslCertificateKey

    Path to server SSL certificate key.

    Type: path

    Example: "/var/host.key"

    Declared by:

    [3586]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3587]services.bookstack.nginx.sslTrustedCertificate

    Path to root SSL certificate for stapling and client certificates.

    Type: null or path

    Default: null

    Example: "/var/root.cert"

    Declared by:

    [3588]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3589]services.bookstack.nginx.useACMEHost

    A host of an existing Let's Encrypt certificate to use. This is useful if you have many
    subdomains and want to avoid hitting the [3590]rate limit. Alternately, you can generate a
    certificate through enableACME. Note that this option does not create any certificates, nor
    it does add subdomains to existing ones – you will need to create them manually using [3591]
    security.acme.certs.

    Type: null or string

    Default: null

    Declared by:

    [3592]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3593]services.bookstack.poolConfig

    Options for the bookstack PHP pool. See the documentation on php-fpm.conf for details on
    configuration directives.

    Type: attribute set of string or signed integer or booleans

    Default: { pm = "dynamic"; pm.max_children = 32; pm.max_requests = 500; pm.max_spare_servers
    = 4; pm.min_spare_servers = 2; pm.start_servers = 2; }

    Declared by:

    [3594]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3595]services.bookstack.user

    User bookstack runs as.

    Type: string

    Default: "bookstack"

    Declared by:

    [3596]<nixpkgs/nixos/modules/services/web-apps/bookstack.nix>

[3597]services.borgbackup.jobs

    Deduplicating backups using BorgBackup. Adding a job will cause a borg-job-NAME wrapper to be
    added to your system path, so that you can perform maintenance easily. See also the chapter
    about BorgBackup in the NixOS manual.

    Type: attribute set of submodules

    Default: { }

    Example:

      { # for a local backup
        rootBackup = {
          paths = "/";
          exclude = [ "/nix" ];
          repo = "/path/to/local/repo";
          encryption = {
            mode = "repokey";
            passphrase = "secret";
          };
          compression = "auto,lzma";
          startAt = "weekly";
        };
      }
      { # Root backing each day up to a remote backup server. We assume that you have
        #   * created a password less key: ssh-keygen -N "" -t ed25519 -f /path/to/ssh_key
        #     best practices are: use -t ed25519, /path/to = /run/keys
        #   * the passphrase is in the file /run/keys/borgbackup_passphrase
        #   * you have initialized the repository manually
        paths = [ "/etc" "/home" ];
        exclude = [ "/nix" "'**/.cache'" ];
        doInit = false;
        repo =  "user3@arep.repo.borgbase.com:repo";
        encryption = {
          mode = "repokey-blake2";
          passCommand = "cat /path/to/passphrase";
        };
        environment = { BORG_RSH = "ssh -i /path/to/ssh_key"; };
        compression = "auto,lzma";
        startAt = "daily";
    };

    Declared by:

    [3598]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3599]services.borgbackup.jobs.<name>.appendFailedSuffix

    Append a .failed suffix to the archive name, which is only removed if borg create has a zero
    exit status.

    Type: boolean

    Default: true

    Declared by:

    [3600]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3601]services.borgbackup.jobs.<name>.archiveBaseName

    How to name the created archives. A timestamp, whose format is determined by dateFormat, will
    be appended. The full name can be modified at runtime ($archiveName). Placeholders like
    {hostname} must not be used.

    Type: string matching the pattern [^/{}]+

    Default: "\${config.networking.hostName}-<name>"

    Declared by:

    [3602]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3603]services.borgbackup.jobs.<name>.compression

    Compression method to use. Refer to borg help compression for all available options.

    Type: string matching the pattern none|(auto,)?(lz4|zstd|zlib|lzma)(,[[:digit:]]{1,2})?

    Default: "lz4"

    Example: "auto,lzma"

    Declared by:

    [3604]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3605]services.borgbackup.jobs.<name>.dateFormat

    Arguments passed to date to create a timestamp suffix for the archive name.

    Type: string

    Default: "+%Y-%m-%dT%H:%M:%S"

    Example: "-u +%s"

    Declared by:

    [3606]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3607]services.borgbackup.jobs.<name>.doInit

    Run borg init if the specified repo does not exist. You should set this to false if the
    repository is located on an external drive that might not always be mounted.

    Type: boolean

    Default: true

    Declared by:

    [3608]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3609]services.borgbackup.jobs.<name>.encryption.mode

    Encryption mode to use. Setting a mode other than "none" requires you to specify a
    passCommand or a passphrase.

    Type: one of "repokey", "keyfile", "repokey-blake2", "keyfile-blake2", "authenticated",
    "authenticated-blake2", "none"

    Example:

    ''
    encryption.mode = "repokey-blake2" ;
    encryption.passphrase = "mySecretPassphrase" ;
    ''

    Declared by:

    [3610]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3611]services.borgbackup.jobs.<name>.encryption.passCommand

    A command which prints the passphrase to stdout. Mutually exclusive with passphrase.

    Type: null or string

    Default: null

    Example: "cat /path/to/passphrase_file"

    Declared by:

    [3612]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3613]services.borgbackup.jobs.<name>.encryption.passphrase

    The passphrase the backups are encrypted with. Mutually exclusive with passCommand. If you do
    not want the passphrase to be stored in the world-readable Nix store, use passCommand.

    Type: null or string

    Default: null

    Declared by:

    [3614]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3615]services.borgbackup.jobs.<name>.environment

    Environment variables passed to the backup script. You can for example specify which SSH key
    to use.

    Type: attribute set of strings

    Default: { }

    Example: { BORG_RSH = "ssh -i /path/to/key"; }

    Declared by:

    [3616]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3617]services.borgbackup.jobs.<name>.exclude

    Exclude paths matching any of the given patterns. See borg help patterns for pattern syntax.

    Type: list of strings

    Default: [ ]

    Example: [ "/home/*/.cache" "/nix" ]

    Declared by:

    [3618]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3619]services.borgbackup.jobs.<name>.extraArgs

    Additional arguments for all borg calls the service has. Handle with care.

    Type: string

    Default: ""

    Example: "--remote-path=/path/to/borg"

    Declared by:

    [3620]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3621]services.borgbackup.jobs.<name>.extraCreateArgs

    Additional arguments for borg create. Can also be set at runtime using $extraCreateArgs.

    Type: string

    Default: ""

    Example: "--stats --checkpoint-interval 600"

    Declared by:

    [3622]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3623]services.borgbackup.jobs.<name>.extraInitArgs

    Additional arguments for borg init. Can also be set at runtime using $extraInitArgs.

    Type: string

    Default: ""

    Example: "--append-only"

    Declared by:

    [3624]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3625]services.borgbackup.jobs.<name>.extraPruneArgs

    Additional arguments for borg prune. Can also be set at runtime using $extraPruneArgs.

    Type: string

    Default: ""

    Example: "--save-space"

    Declared by:

    [3626]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3627]services.borgbackup.jobs.<name>.group

    The group borg is run as. User or group needs read permission for the specified paths.

    Type: string

    Default: "root"

    Declared by:

    [3628]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3629]services.borgbackup.jobs.<name>.paths

    Path(s) to back up.

    Type: list of strings or string convertible to it

    Example: "/home/user"

    Declared by:

    [3630]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3631]services.borgbackup.jobs.<name>.postCreate

    Shell commands to run after borg create. The name of the created archive is stored in
    $archiveName.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [3632]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3633]services.borgbackup.jobs.<name>.postHook

    Shell commands to run just before exit. They are executed even if a previous command exits
    with a non-zero exit code. The latter is available as $exitStatus.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [3634]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3635]services.borgbackup.jobs.<name>.postInit

    Shell commands to run after borg init.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [3636]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3637]services.borgbackup.jobs.<name>.postPrune

    Shell commands to run after borg prune.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [3638]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3639]services.borgbackup.jobs.<name>.preHook

    Shell commands to run before the backup. This can for example be used to mount file systems.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    # To add excluded paths at runtime
    extraCreateArgs="$extraCreateArgs --exclude /some/path"
    ''

    Declared by:

    [3640]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3641]services.borgbackup.jobs.<name>.privateTmp

    Set the PrivateTmp option for the systemd-service. Set to false if you need sockets or other
    files from global /tmp.

    Type: boolean

    Default: true

    Declared by:

    [3642]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3643]services.borgbackup.jobs.<name>.prune.keep

    Prune a repository by deleting all archives not matching any of the specified retention
    options. See borg help prune for the available options.

    Type: attribute set of signed integer or string matching the pattern [[:digit:]]+[Hdwmy]s

    Default: { }

    Example:

    {
      within = "1d"; # Keep all archives from the last day
      daily = 7;
      weekly = 4;
      monthly = -1;  # Keep at least one archive for each month
    }

    Declared by:

    [3644]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3645]services.borgbackup.jobs.<name>.prune.prefix

    Only consider archive names starting with this prefix for pruning. By default, only archives
    created by this job are considered. Use "" to consider all archives.

    Type: string

    Default: "\${archiveBaseName}"

    Declared by:

    [3646]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3647]services.borgbackup.jobs.<name>.readWritePaths

    By default, borg cannot write anywhere on the system but $HOME/.config/borg and $HOME/.cache/
    borg. If, for example, your preHook script needs to dump files somewhere, put those
    directories here.

    Type: list of paths

    Default: [ ]

    Example: [ "/var/backup/mysqldump" ]

    Declared by:

    [3648]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3649]services.borgbackup.jobs.<name>.removableDevice

    Whether the repo (which must be local) is a removable device.

    Type: boolean

    Default: false

    Declared by:

    [3650]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3651]services.borgbackup.jobs.<name>.repo

    Remote or local repository to back up to.

    Type: string

    Example: "user@machine:/path/to/repo"

    Declared by:

    [3652]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3653]services.borgbackup.jobs.<name>.startAt

    When or how often the backup should run. Must be in the format described in systemd.time(7).
    If you do not want the backup to start automatically, use [ ]. It will generate a systemd
    service borgbackup-job-NAME. You may trigger it manually via systemctl restart
    borgbackup-job-NAME.

    Type: string or list of strings

    Default: "daily"

    Declared by:

    [3654]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3655]services.borgbackup.jobs.<name>.user

    The user borg is run as. User or group need read permission for the specified paths.

    Type: string

    Default: "root"

    Declared by:

    [3656]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3657]services.borgbackup.repos

    Serve BorgBackup repositories to given public SSH keys, restricting their access to the
    repository only. See also the chapter about BorgBackup in the NixOS manual. Also, clients do
    not need to specify the absolute path when accessing the repository, i.e. user@machine:. is
    enough. (Note colon and dot.)

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [3658]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3659]services.borgbackup.repos.<name>.allowSubRepos

    Allow clients to create repositories in subdirectories of the specified path. These can be
    accessed using user@machine:path/to/subrepo. Note that a quota applies to repositories
    independently. Therefore, if this is enabled, clients can create multiple repositories and
    upload an arbitrary amount of data.

    Type: boolean

    Default: false

    Declared by:

    [3660]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3661]services.borgbackup.repos.<name>.authorizedKeys

    Public SSH keys that are given full write access to this repository. You should use a
    different SSH key for each repository you write to, because the specified keys are restricted
    to running borg serve and can only access this single repository.

    Type: list of strings

    Default: [ ]

    Declared by:

    [3662]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3663]services.borgbackup.repos.<name>.authorizedKeysAppendOnly

    Public SSH keys that can only be used to append new data (archives) to the repository. Note
    that archives can still be marked as deleted and are subsequently removed from disk upon
    accessing the repo with full write access, e.g. when pruning.

    Type: list of strings

    Default: [ ]

    Declared by:

    [3664]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3665]services.borgbackup.repos.<name>.group

    The group borg serve is run as. User or group needs write permission for the specified path.

    Type: string

    Default: "borg"

    Declared by:

    [3666]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3667]services.borgbackup.repos.<name>.path

    Where to store the backups. Note that the directory is created automatically, with correct
    permissions.

    Type: path

    Default: "/var/lib/borgbackup"

    Declared by:

    [3668]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3669]services.borgbackup.repos.<name>.quota

    Storage quota for the repository. This quota is ensured for all sub-repositories if
    allowSubRepos is enabled but not for the overall storage space used.

    Type: null or string matching the pattern [[:digit:].]+[KMGTP]?

    Default: null

    Example: "100G"

    Declared by:

    [3670]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3671]services.borgbackup.repos.<name>.user

    The user borg serve is run as. User or group needs write permission for the specified path.

    Type: string

    Default: "borg"

    Declared by:

    [3672]<nixpkgs/nixos/modules/services/backup/borgbackup.nix>

[3673]services.borgmatic.enable

    Whether to enable borgmatic.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3674]<nixpkgs/nixos/modules/services/backup/borgmatic.nix>

[3675]services.borgmatic.settings

    See https://torsion.org/borgmatic/docs/reference/configuration/

    Type: attribute set of anythings

    Declared by:

    [3676]<nixpkgs/nixos/modules/services/backup/borgmatic.nix>

[3677]services.borgmatic.settings.location.repositories

    Paths to local or remote repositories (required). Tildes are expanded. Multiple repositories
    are backed up to in sequence. Borg placeholders can be used. See the output of "borg help
    placeholders" for details. See ssh_command for SSH options like identity file or port. If
    systemd service is used, then add local repository paths in the systemd service file to the
    ReadWritePaths list.

    Type: list of strings

    Example: [ "user@backupserver:sourcehostname.borg" "user@backupserver:{fqdn}" ]

    Declared by:

    [3678]<nixpkgs/nixos/modules/services/backup/borgmatic.nix>

[3679]services.borgmatic.settings.location.source_directories

    List of source directories to backup (required). Globs and tildes are expanded.

    Type: list of strings

    Example: [ "/home" "/etc" "/var/log/syslog*" ]

    Declared by:

    [3680]<nixpkgs/nixos/modules/services/backup/borgmatic.nix>

[3681]services.bosun.enable

    Whether to run bosun.

    Type: boolean

    Default: false

    Declared by:

    [3682]<nixpkgs/nixos/modules/services/monitoring/bosun.nix>

[3683]services.bosun.package

    bosun binary to use.

    Type: package

    Default: "pkgs.bosun"

    Example:

    pkgs.bosun

    Declared by:

    [3684]<nixpkgs/nixos/modules/services/monitoring/bosun.nix>

[3685]services.bosun.checkFrequency

    Bosun's check frequency

    Type: string

    Default: "5m"

    Declared by:

    [3686]<nixpkgs/nixos/modules/services/monitoring/bosun.nix>

[3687]services.bosun.extraConfig

    Extra configuration options for Bosun. You should describe your desired templates, alerts,
    macros, etc through this configuration option.

    A detailed description of the supported syntax can be found at-spi2-atk http://bosun.org/
    configuration.html

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [3688]<nixpkgs/nixos/modules/services/monitoring/bosun.nix>

[3689]services.bosun.group

    Group account under which bosun runs.

    Type: string

    Default: "bosun"

    Declared by:

    [3690]<nixpkgs/nixos/modules/services/monitoring/bosun.nix>

[3691]services.bosun.influxHost

    Host and port of the influxdb database.

    Type: null or string

    Default: null

    Example: "localhost:8086"

    Declared by:

    [3692]<nixpkgs/nixos/modules/services/monitoring/bosun.nix>

[3693]services.bosun.ledisDir

    Path to bosun's ledis data dir

    Type: path

    Default: "/var/lib/bosun/ledis_data"

    Declared by:

    [3694]<nixpkgs/nixos/modules/services/monitoring/bosun.nix>

[3695]services.bosun.listenAddress

    The host address and port that bosun's web interface will listen on.

    Type: string

    Default: ":8070"

    Declared by:

    [3696]<nixpkgs/nixos/modules/services/monitoring/bosun.nix>

[3697]services.bosun.opentsdbHost

    Host and port of the OpenTSDB database that stores bosun data. To disable opentsdb you can
    pass null as parameter.

    Type: null or string

    Default: "localhost:4242"

    Declared by:

    [3698]<nixpkgs/nixos/modules/services/monitoring/bosun.nix>

[3699]services.bosun.stateFile

    Path to bosun's state file.

    Type: path

    Default: "/var/lib/bosun/bosun.state"

    Declared by:

    [3700]<nixpkgs/nixos/modules/services/monitoring/bosun.nix>

[3701]services.bosun.user

    User account under which bosun runs.

    Type: string

    Default: "bosun"

    Declared by:

    [3702]<nixpkgs/nixos/modules/services/monitoring/bosun.nix>

[3703]services.botamusique.enable

    Whether to enable botamusique, a bot to play audio streams on mumble.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3704]<nixpkgs/nixos/modules/services/audio/botamusique.nix>

[3705]services.botamusique.package

    The botamusique package to use.

    Type: package

    Default: (build of botamusique-unstable-2021-06-01)

    Declared by:

    [3706]<nixpkgs/nixos/modules/services/audio/botamusique.nix>

[3707]services.botamusique.settings

    Your configuration.ini as a Nix attribute set. Look up possible options in the [3708]
    configuration.example.ini.

    Type: attribute set of attribute set of INI atom (null, bool, int, float or string)ss

    Default: { }

    Declared by:

    [3709]<nixpkgs/nixos/modules/services/audio/botamusique.nix>

[3710]services.botamusique.settings.bot.comment

    Comment displayed for the bot.

    Type: string

    Default: "Hi, I'm here to play radio, local music or youtube/soundcloud music. Have fun!"

    Declared by:

    [3711]<nixpkgs/nixos/modules/services/audio/botamusique.nix>

[3712]services.botamusique.settings.bot.username

    Name the bot should appear with.

    Type: string

    Default: "botamusique"

    Declared by:

    [3713]<nixpkgs/nixos/modules/services/audio/botamusique.nix>

[3714]services.botamusique.settings.server.host

    Hostname of the mumble server to connect to.

    Type: string

    Default: "localhost"

    Example: "mumble.example.com"

    Declared by:

    [3715]<nixpkgs/nixos/modules/services/audio/botamusique.nix>

[3716]services.botamusique.settings.server.port

    Port of the mumble server to connect to.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 64738

    Declared by:

    [3717]<nixpkgs/nixos/modules/services/audio/botamusique.nix>

[3718]services.brltty.enable

    Whether to enable the BRLTTY daemon.

    Type: boolean

    Default: false

    Declared by:

    [3719]<nixpkgs/nixos/modules/services/hardware/brltty.nix>

[3720]services.btrfs.autoScrub.enable

    Whether to enable regular btrfs scrub.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3721]<nixpkgs/nixos/modules/tasks/filesystems/btrfs.nix>

[3722]services.btrfs.autoScrub.fileSystems

    List of paths to btrfs filesystems to regularily call btrfs scrub on. Defaults to all mount
    points with btrfs filesystems. If you mount a filesystem multiple times or additionally mount
    subvolumes, you need to manually specify this list to avoid scrubbing multiple times.

    Type: list of paths

    Example: [ "/" ]

    Declared by:

    [3723]<nixpkgs/nixos/modules/tasks/filesystems/btrfs.nix>

[3724]services.btrfs.autoScrub.interval

    Systemd calendar expression for when to scrub btrfs filesystems. The recommended period is a
    month but could be less (btrfs-scrub(8)). See systemd.time(7) for more information on the
    syntax.

    Type: string

    Default: "monthly"

    Example: "weekly"

    Declared by:

    [3725]<nixpkgs/nixos/modules/tasks/filesystems/btrfs.nix>

[3726]services.buildbot-master.enable

    Whether to enable the Buildbot continuous integration server.

    Type: boolean

    Default: false

    Declared by:

    [3727]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3728]services.buildbot-master.package

    Package to use for buildbot.

    Type: package

    Default: "pkgs.python3Packages.buildbot-full"

    Example:

    pkgs.python3Packages.buildbot

    Declared by:

    [3729]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3730]services.buildbot-master.packages

    Packages to add to PATH for the buildbot process.

    Type: list of packages

    Default: [ (build of git-2.31.1) ]

    Example:

    [ pkgs.git ]

    Declared by:

    [3731]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3732]services.buildbot-master.buildbotDir

    Specifies the Buildbot directory.

    Type: path

    Default: "/home/buildbot/master"

    Declared by:

    [3733]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3734]services.buildbot-master.buildbotUrl

    Specifies the Buildbot URL.

    Type: string

    Default: "http://localhost:8010/"

    Declared by:

    [3735]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3736]services.buildbot-master.builders

    List of Builders.

    Type: list of strings

    Default: [ "util.BuilderConfig(name='runtests',workernames=['example-worker'],factory=
    factory)" ]

    Declared by:

    [3737]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3738]services.buildbot-master.changeSource

    List of Change Sources.

    Type: list of strings

    Default: [ ]

    Example: [ "changes.GitPoller('git://github.com/buildbot/pyflakes.git', workdir=
    'gitpoller-workdir', branch='master', pollinterval=300)" ]

    Declared by:

    [3739]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3740]services.buildbot-master.dbUrl

    Specifies the database connection string.

    Type: string

    Default: "sqlite:///state.sqlite"

    Declared by:

    [3741]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3742]services.buildbot-master.extraConfig

    Extra configuration to append to master.cfg

    Type: string

    Default: "c['buildbotNetUsageData'] = None"

    Declared by:

    [3743]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3744]services.buildbot-master.extraGroups

    List of extra groups that the buildbot user should be a part of.

    Type: list of strings

    Default: [ ]

    Declared by:

    [3745]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3746]services.buildbot-master.factorySteps

    Factory Steps

    Type: list of strings

    Default: [ ]

    Example: [ "steps.Git(repourl='git://github.com/buildbot/pyflakes.git', mode='incremental')"
    "steps.ShellCommand(command=['trial', 'pyflakes'])" ]

    Declared by:

    [3747]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3748]services.buildbot-master.group

    Primary group of buildbot user.

    Type: string

    Default: "buildbot"

    Declared by:

    [3749]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3750]services.buildbot-master.home

    Buildbot home directory.

    Type: path

    Default: "/home/buildbot"

    Declared by:

    [3751]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3752]services.buildbot-master.listenAddress

    Specifies the bind address on which the buildbot HTTP interface listens.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [3753]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3754]services.buildbot-master.masterCfg

    Optionally pass master.cfg path. Other options in this configuration will be ignored.

    Type: path

    Default: (build of master.cfg)

    Example: "/etc/nixos/buildbot/master.cfg"

    Declared by:

    [3755]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3756]services.buildbot-master.pbPort

    The buildmaster will listen on a TCP port of your choosing for connections from workers. It
    can also use this port for connections from remote Change Sources, status clients, and debug
    tools. This port should be visible to the outside world, and you’ll need to tell your worker
    admins about your choice. If put in (single) quotes, this can also be used as a connection
    string, as defined in the [3757]ConnectionStrings guide.

    Type: string or signed integer

    Default: 9989

    Example: "'tcp:9990:interface=127.0.0.1'"

    Declared by:

    [3758]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3759]services.buildbot-master.port

    Specifies port number on which the buildbot HTTP interface listens.

    Type: signed integer

    Default: 8010

    Declared by:

    [3760]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3761]services.buildbot-master.pythonPackages

    Packages to add the to the PYTHONPATH of the buildbot process.

    Type: function that evaluates to a(n) listOf

    Default: "pythonPackages: with pythonPackages; [ ]"

    Example:

    pythonPackages: with pythonPackages; [ requests ]

    Declared by:

    [3762]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3763]services.buildbot-master.reporters

    List of reporter objects used to present build status to various users.

    Type: list of strings

    Default: [ ]

    Declared by:

    [3764]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3765]services.buildbot-master.schedulers

    List of Schedulers.

    Type: list of strings

    Default: [ "schedulers.SingleBranchScheduler(name='all', change_filter=util.ChangeFilter
    (branch='master'), treeStableTimer=None, builderNames=['runtests'])"
    "schedulers.ForceScheduler(name='force',builderNames=['runtests'])" ]

    Declared by:

    [3766]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3767]services.buildbot-master.title

    Specifies the Buildbot Title.

    Type: string

    Default: "Buildbot"

    Declared by:

    [3768]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3769]services.buildbot-master.titleUrl

    Specifies the Buildbot TitleURL.

    Type: string

    Default: "Buildbot"

    Declared by:

    [3770]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3771]services.buildbot-master.user

    User the buildbot server should execute under.

    Type: string

    Default: "buildbot"

    Declared by:

    [3772]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3773]services.buildbot-master.workers

    List of Workers.

    Type: list of strings

    Default: [ "worker.Worker('example-worker', 'pass')" ]

    Declared by:

    [3774]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/master.nix>

[3775]services.buildbot-worker.enable

    Whether to enable the Buildbot Worker.

    Type: boolean

    Default: false

    Declared by:

    [3776]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/worker.nix>

[3777]services.buildbot-worker.package

    Package to use for buildbot worker.

    Type: package

    Default: "pkgs.python3Packages.buildbot-worker"

    Example:

    pkgs.python2Packages.buildbot-worker

    Declared by:

    [3778]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/worker.nix>

[3779]services.buildbot-worker.packages

    Packages to add to PATH for the buildbot process.

    Type: list of packages

    Default: [ (build of ) ]

    Example:

    [ pkgs.git ]

    Declared by:

    [3780]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/worker.nix>

[3781]services.buildbot-worker.adminMessage

    Name of the administrator of this worker

    Type: null or string

    Default: null

    Declared by:

    [3782]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/worker.nix>

[3783]services.buildbot-worker.buildbotDir

    Specifies the Buildbot directory.

    Type: path

    Default: "/home/bbworker/worker"

    Declared by:

    [3784]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/worker.nix>

[3785]services.buildbot-worker.extraGroups

    List of extra groups that the Buildbot Worker user should be a part of.

    Type: list of strings

    Default: [ ]

    Declared by:

    [3786]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/worker.nix>

[3787]services.buildbot-worker.group

    Primary group of buildbot Worker user.

    Type: string

    Default: "bbworker"

    Declared by:

    [3788]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/worker.nix>

[3789]services.buildbot-worker.home

    Buildbot home directory.

    Type: path

    Default: "/home/bbworker"

    Declared by:

    [3790]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/worker.nix>

[3791]services.buildbot-worker.hostMessage

    Description of this worker

    Type: null or string

    Default: null

    Declared by:

    [3792]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/worker.nix>

[3793]services.buildbot-worker.keepalive

    This is a number that indicates how frequently keepalive messages should be sent from the
    worker to the buildmaster, expressed in seconds.

    Type: signed integer

    Default: 600

    Declared by:

    [3794]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/worker.nix>

[3795]services.buildbot-worker.masterUrl

    Specifies the Buildbot Worker connection string.

    Type: string

    Default: "localhost:9989"

    Declared by:

    [3796]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/worker.nix>

[3797]services.buildbot-worker.user

    User the buildbot Worker should execute under.

    Type: string

    Default: "bbworker"

    Declared by:

    [3798]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/worker.nix>

[3799]services.buildbot-worker.workerPass

    Specifies the Buildbot Worker password.

    Type: string

    Default: "pass"

    Declared by:

    [3800]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/worker.nix>

[3801]services.buildbot-worker.workerPassFile

    File used to store the Buildbot Worker password

    Type: path

    Declared by:

    [3802]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/worker.nix>

[3803]services.buildbot-worker.workerUser

    Specifies the Buildbot Worker user.

    Type: string

    Default: "example-worker"

    Declared by:

    [3804]<nixpkgs/nixos/modules/services/continuous-integration/buildbot/worker.nix>

[3805]services.buildkite-agents

    Attribute set of buildkite agents. The attribute key is combined with the hostname and a
    unique integer to create the final agent name. This can be overridden by setting the `name`
    attribute.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [3806]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3807]services.buildkite-agents.<name>.enable

    Whether to enable this buildkite agent

    Type: boolean

    Default: true

    Declared by:

    [3808]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3809]services.buildkite-agents.<name>.package

    Which buildkite-agent derivation to use

    Type: package

    Default: "pkgs.buildkite-agent"

    Declared by:

    [3810]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3811]services.buildkite-agents.<name>.dataDir

    The workdir for the agent

    Type: string

    Default: "/var/lib/buildkite-agent-‹name›"

    Declared by:

    [3812]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3813]services.buildkite-agents.<name>.extraConfig

    Extra lines to be added verbatim to the configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "debug=true"

    Declared by:

    [3814]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3815]services.buildkite-agents.<name>.hooks.checkout

    The `checkout` hook script will replace the default checkout routine of the bootstrap.sh
    script. You can use this hook to do your own SCM checkout behaviour

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [3816]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3817]services.buildkite-agents.<name>.hooks.command

    The `command` hook script will replace the default implementation of running the build
    command.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [3818]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3819]services.buildkite-agents.<name>.hooks.environment

    The `environment` hook will run before all other commands, and can be used to set up secrets,
    data, etc. Anything exported in hooks will be available to the build script.

    Note: the contents of this file will be copied to the world-readable Nix store.

    Type: null or strings concatenated with "\n"

    Default: null

    Example:

    ''
    export SECRET_VAR=`head -1 /run/keys/secret`
    ''

    Declared by:

    [3820]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3821]services.buildkite-agents.<name>.hooks.post-artifact

    The `post-artifact` hook will run just after artifacts are uploaded

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [3822]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3823]services.buildkite-agents.<name>.hooks.post-checkout

    The `post-checkout` hook will run after the bootstrap script has checked out your projects
    source code.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [3824]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3825]services.buildkite-agents.<name>.hooks.post-command

    The `post-command` hook will run after the bootstrap script has run your build commands

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [3826]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3827]services.buildkite-agents.<name>.hooks.pre-artifact

    The `pre-artifact` hook will run just before artifacts are uploaded

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [3828]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3829]services.buildkite-agents.<name>.hooks.pre-checkout

    The `pre-checkout` hook will run just before your projects source code is checked out from
    your SCM provider

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [3830]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3831]services.buildkite-agents.<name>.hooks.pre-command

    The `pre-command` hook will run just before your build command runs

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [3832]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3833]services.buildkite-agents.<name>.hooks.pre-exit

    The `pre-exit` hook will run just before your build job finishes

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [3834]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3835]services.buildkite-agents.<name>.hooksPath

    Path to the directory storing the hooks. Consider using services.buildkite-agents.
    <name>.hooks.<name> instead.

    Type: path

    Default: "generated from services.buildkite-agents.<name>.hooks"

    Declared by:

    [3836]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3837]services.buildkite-agents.<name>.name

    The name of the agent as seen in the buildkite dashboard.

    Type: string

    Default: "%hostname-‹name›-%n"

    Declared by:

    [3838]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3839]services.buildkite-agents.<name>.privateSshKeyPath

    OpenSSH private key

    A run-time path to the key file, which is supposed to be provisioned outside of Nix store.

    Type: null or path

    Default: null

    Declared by:

    [3840]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3841]services.buildkite-agents.<name>.runtimePackages

    Add programs to the buildkite-agent environment

    Type: list of packages

    Default: "[ pkgs.bash pkgs.gnutar pkgs.gzip pkgs.git pkgs.nix ]"

    Declared by:

    [3842]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3843]services.buildkite-agents.<name>.shell

    Command that buildkite-agent 3 will execute when it spawns a shell.

    Type: string

    Default: "\${pkgs.bash}/bin/bash -e -c"

    Declared by:

    [3844]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3845]services.buildkite-agents.<name>.tags

    Tags for the agent.

    Type: attribute set of string or list of stringss

    Default: { }

    Example: { docker = "true"; queue = "default"; ruby2 = "true"; }

    Declared by:

    [3846]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3847]services.buildkite-agents.<name>.tokenPath

    The token from your Buildkite "Agents" page.

    A run-time path to the token file, which is supposed to be provisioned outside of Nix store.

    Type: path

    Declared by:

    [3848]<nixpkgs/nixos/modules/services/continuous-integration/buildkite-agents.nix>

[3849]services.cachefilesd.enable

    Whether to enable cachefilesd network filesystems caching daemon.

    Type: boolean

    Default: false

    Declared by:

    [3850]<nixpkgs/nixos/modules/services/network-filesystems/cachefilesd.nix>

[3851]services.cachefilesd.cacheDir

    Directory to contain filesystem cache.

    Type: string

    Default: "/var/cache/fscache"

    Declared by:

    [3852]<nixpkgs/nixos/modules/services/network-filesystems/cachefilesd.nix>

[3853]services.cachefilesd.extraConfig

    Additional configuration file entries. See cachefilesd.conf(5) for more information.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "brun 10%"

    Declared by:

    [3854]<nixpkgs/nixos/modules/services/network-filesystems/cachefilesd.nix>

[3855]services.caddy.enable

    Whether to enable Caddy web server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3856]<nixpkgs/nixos/modules/services/web-servers/caddy.nix>

[3857]services.caddy.package

    Caddy package to use.

    Type: package

    Default: "pkgs.caddy"

    Example: "pkgs.caddy"

    Declared by:

    [3858]<nixpkgs/nixos/modules/services/web-servers/caddy.nix>

[3859]services.caddy.adapter

    Name of the config adapter to use. See https://caddyserver.com/docs/config-adapters for the
    full list.

    Type: string

    Default: "caddyfile"

    Example: "nginx"

    Declared by:

    [3860]<nixpkgs/nixos/modules/services/web-servers/caddy.nix>

[3861]services.caddy.ca

    Certificate authority ACME server. The default (Let's Encrypt production server) should be
    fine for most people.

    Type: string

    Default: "https://acme-v02.api.letsencrypt.org/directory"

    Example: "https://acme-staging-v02.api.letsencrypt.org/directory"

    Declared by:

    [3862]<nixpkgs/nixos/modules/services/web-servers/caddy.nix>

[3863]services.caddy.config

    Verbatim Caddyfile to use. Caddy v2 supports multiple config formats via adapters (see
    services.caddy.adapter).

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    example.com {
      encode gzip
      log
      root /srv/http
    }
    ''

    Declared by:

    [3864]<nixpkgs/nixos/modules/services/web-servers/caddy.nix>

[3865]services.caddy.dataDir

    The data directory, for storing certificates. Before 17.09, this would create a .caddy
    directory. With 17.09 the contents of the .caddy directory are in the specified data
    directory instead.

    Caddy v2 replaced CADDYPATH with XDG directories. See https://caddyserver.com/docs/
    conventions#file-locations.

    Type: path

    Default: "/var/lib/caddy"

    Declared by:

    [3866]<nixpkgs/nixos/modules/services/web-servers/caddy.nix>

[3867]services.caddy.email

    Email address (for Let's Encrypt certificate)

    Type: string

    Default: ""

    Declared by:

    [3868]<nixpkgs/nixos/modules/services/web-servers/caddy.nix>

[3869]services.caddy.group

    Group account under which caddy runs.

    Type: string

    Default: "caddy"

    Declared by:

    [3870]<nixpkgs/nixos/modules/services/web-servers/caddy.nix>

[3871]services.caddy.user

    User account under which caddy runs.

    Type: string

    Default: "caddy"

    Declared by:

    [3872]<nixpkgs/nixos/modules/services/web-servers/caddy.nix>

[3873]services.cadvisor.enable

    Whether to enable cadvisor service.

    Type: boolean

    Default: false

    Declared by:

    [3874]<nixpkgs/nixos/modules/services/monitoring/cadvisor.nix>

[3875]services.cadvisor.extraOptions

    Additional cadvisor options.

    See [3876]https://github.com/google/cadvisor/blob/master/docs/runtime_options.md for
    available options.

    Type: list of strings

    Default: [ ]

    Declared by:

    [3877]<nixpkgs/nixos/modules/services/monitoring/cadvisor.nix>

[3878]services.cadvisor.listenAddress

    Cadvisor listening host

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [3879]<nixpkgs/nixos/modules/services/monitoring/cadvisor.nix>

[3880]services.cadvisor.port

    Cadvisor listening port

    Type: signed integer

    Default: 8080

    Declared by:

    [3881]<nixpkgs/nixos/modules/services/monitoring/cadvisor.nix>

[3882]services.cadvisor.storageDriver

    Cadvisor storage driver.

    Type: null or string

    Default: null

    Example: "influxdb"

    Declared by:

    [3883]<nixpkgs/nixos/modules/services/monitoring/cadvisor.nix>

[3884]services.cadvisor.storageDriverDb

    Cadvisord storage driver database name.

    Type: string

    Default: "root"

    Declared by:

    [3885]<nixpkgs/nixos/modules/services/monitoring/cadvisor.nix>

[3886]services.cadvisor.storageDriverHost

    Cadvisor storage driver host.

    Type: string

    Default: "localhost:8086"

    Declared by:

    [3887]<nixpkgs/nixos/modules/services/monitoring/cadvisor.nix>

[3888]services.cadvisor.storageDriverPassword

    Cadvisor storage driver password.

    Warning: this password is stored in the world-readable Nix store. It's recommended to use the
    storageDriverPasswordFile option since that gives you control over the security of the
    password. storageDriverPasswordFile also takes precedence over storageDriverPassword.

    Type: string

    Default: "root"

    Declared by:

    [3889]<nixpkgs/nixos/modules/services/monitoring/cadvisor.nix>

[3890]services.cadvisor.storageDriverPasswordFile

    File that contains the cadvisor storage driver password.

    storageDriverPasswordFile takes precedence over storageDriverPassword

    Warning: when storageDriverPassword is non-empty this defaults to a file in the
    world-readable Nix store that contains the value of storageDriverPassword.

    It's recommended to override this with a path not in the Nix store. Tip: use [3891]nixops key
    management

    Type: string

    Declared by:

    [3892]<nixpkgs/nixos/modules/services/monitoring/cadvisor.nix>

[3893]services.cadvisor.storageDriverSecure

    Cadvisor storage driver, enable secure communication.

    Type: boolean

    Default: false

    Declared by:

    [3894]<nixpkgs/nixos/modules/services/monitoring/cadvisor.nix>

[3895]services.cadvisor.storageDriverUser

    Cadvisor storage driver username.

    Type: string

    Default: "root"

    Declared by:

    [3896]<nixpkgs/nixos/modules/services/monitoring/cadvisor.nix>

[3897]services.cage.enable

    Whether to enable cage kiosk service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3898]<nixpkgs/nixos/modules/services/wayland/cage.nix>

[3899]services.cage.extraArguments

    Additional command line arguments to pass to Cage.

    Type: list of strings

    Default: "[]"

    Example: [ "-d" ]

    Declared by:

    [3900]<nixpkgs/nixos/modules/services/wayland/cage.nix>

[3901]services.cage.program

    Program to run in cage.

    Type: path

    Default: "\${pkgs.xterm}/bin/xterm"

    Declared by:

    [3902]<nixpkgs/nixos/modules/services/wayland/cage.nix>

[3903]services.cage.user

    User to log-in as.

    Type: string

    Default: "demo"

    Declared by:

    [3904]<nixpkgs/nixos/modules/services/wayland/cage.nix>

[3905]services.calibre-server.enable

    Whether to enable calibre-server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3906]<nixpkgs/nixos/modules/services/misc/calibre-server.nix>

[3907]services.calibre-server.group

    The group under which calibre-server runs.

    Type: string

    Default: "calibre-server"

    Declared by:

    [3908]<nixpkgs/nixos/modules/services/misc/calibre-server.nix>

[3909]services.calibre-server.libraries

    The directories of the libraries to serve. They must be readable for the user under which the
    server runs.

    Type: list of paths

    Declared by:

    [3910]<nixpkgs/nixos/modules/services/misc/calibre-server.nix>

[3911]services.calibre-server.user

    The user under which calibre-server runs.

    Type: string

    Default: "calibre-server"

    Declared by:

    [3912]<nixpkgs/nixos/modules/services/misc/calibre-server.nix>

[3913]services.calibre-web.enable

    Whether to enable Calibre-Web.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3914]<nixpkgs/nixos/modules/services/web-apps/calibre-web.nix>

[3915]services.calibre-web.dataDir

    The directory below /var/lib where Calibre-Web stores its data.

    Type: string

    Default: "calibre-web"

    Declared by:

    [3916]<nixpkgs/nixos/modules/services/web-apps/calibre-web.nix>

[3917]services.calibre-web.group

    Group account under which Calibre-Web runs.

    Type: string

    Default: "calibre-web"

    Declared by:

    [3918]<nixpkgs/nixos/modules/services/web-apps/calibre-web.nix>

[3919]services.calibre-web.listen.ip

    IP address that Calibre-Web should listen on.

    Type: string

    Default: "::1"

    Declared by:

    [3920]<nixpkgs/nixos/modules/services/web-apps/calibre-web.nix>

[3921]services.calibre-web.listen.port

    Listen port for Calibre-Web.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8083

    Declared by:

    [3922]<nixpkgs/nixos/modules/services/web-apps/calibre-web.nix>

[3923]services.calibre-web.openFirewall

    Open ports in the firewall for the server.

    Type: boolean

    Default: false

    Declared by:

    [3924]<nixpkgs/nixos/modules/services/web-apps/calibre-web.nix>

[3925]services.calibre-web.options.enableBookConversion

    Configure path to the Calibre's ebook-convert in the DB.

    Type: boolean

    Default: false

    Declared by:

    [3926]<nixpkgs/nixos/modules/services/web-apps/calibre-web.nix>

[3927]services.calibre-web.options.enableBookUploading

    Allow books to be uploaded via Calibre-Web UI.

    Type: boolean

    Default: false

    Declared by:

    [3928]<nixpkgs/nixos/modules/services/web-apps/calibre-web.nix>

[3929]services.calibre-web.options.calibreLibrary

    Path to Calibre library.

    Type: null or path

    Default: null

    Declared by:

    [3930]<nixpkgs/nixos/modules/services/web-apps/calibre-web.nix>

[3931]services.calibre-web.options.reverseProxyAuth.enable

    Enable authorization using auth proxy.

    Type: boolean

    Default: false

    Declared by:

    [3932]<nixpkgs/nixos/modules/services/web-apps/calibre-web.nix>

[3933]services.calibre-web.options.reverseProxyAuth.header

    Auth proxy header name.

    Type: string

    Default: ""

    Declared by:

    [3934]<nixpkgs/nixos/modules/services/web-apps/calibre-web.nix>

[3935]services.calibre-web.user

    User account under which Calibre-Web runs.

    Type: string

    Default: "calibre-web"

    Declared by:

    [3936]<nixpkgs/nixos/modules/services/web-apps/calibre-web.nix>

[3937]services.canto-daemon.enable

    Whether to enable the canto RSS daemon.

    Type: boolean

    Default: false

    Declared by:

    [3938]<nixpkgs/nixos/modules/services/misc/canto-daemon.nix>

[3939]services.cassandra.enable

    Whether to enable Apache Cassandra – Scalable and highly available database. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3940]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3941]services.cassandra.package

    The Apache Cassandra package to use.

    Type: package

    Default: "pkgs.cassandra"

    Example:

    pkgs.cassandra_3_11

    Declared by:

    [3942]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3943]services.cassandra.allowClients

    Enables or disables the native transport server (CQL binary protocol). This server uses the
    same address as the rpcAddress, but the port it uses is not rpc_port but
    native_transport_port. See the official Cassandra docs for more information on these
    variables and set them using extraConfig.

    Type: boolean

    Default: true

    Declared by:

    [3944]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3945]services.cassandra.clusterName

    The name of the cluster. This setting prevents nodes in one logical cluster from joining
    another. All nodes in a cluster must have the same value.

    Type: string

    Default: "Test Cluster"

    Declared by:

    [3946]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3947]services.cassandra.extraConfig

    Extra options to be merged into cassandra.yaml as nix attribute set.

    Type: attribute set

    Default: { }

    Example: { commitlog_sync_batch_window_in_ms = 3; }

    Declared by:

    [3948]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3949]services.cassandra.extraEnvSh

    Extra shell lines to be appended onto cassandra-env.sh.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "CLASSPATH=\$CLASSPATH:\${extraJar}"

    Declared by:

    [3950]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3951]services.cassandra.fullRepairInterval

    Set the interval how often full repairs are run, i.e. nodetool repair --full is executed. See
    https://cassandra.apache.org/doc/latest/operating/repair.html for more information.

    Set to null to disable full repairs.

    Type: null or string

    Default: "3w"

    Example: null

    Declared by:

    [3952]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3953]services.cassandra.fullRepairOptions

    Options passed through to the full repair command.

    Type: list of strings

    Default: [ ]

    Example: [ "--partitioner-range" ]

    Declared by:

    [3954]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3955]services.cassandra.group

    Run Apache Cassandra under this group.

    Type: string

    Default: "cassandra"

    Declared by:

    [3956]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3957]services.cassandra.heapNewSize

    Must be left blank or set together with heapNewSize. If left blank a sensible value for the
    available amount of RAM and CPU cores is calculated.

    Override to set the amount of memory to allocate to the JVM at start-up. For production use
    you may wish to adjust this for your environment. HEAP_NEWSIZE refers to the size of the
    young generation.

    The main trade-off for the young generation is that the larger it is, the longer GC pause
    times will be. The shorter it is, the more expensive GC will be (usually).

    The example HEAP_NEWSIZE assumes a modern 8-core+ machine for decent pause times. If in
    doubt, and if you do not particularly want to tweak, go with 100 MB per physical CPU core.

    Type: null or string

    Default: null

    Example: "800M"

    Declared by:

    [3958]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3959]services.cassandra.homeDir

    Home directory for Apache Cassandra.

    Type: path

    Default: "/var/lib/cassandra"

    Declared by:

    [3960]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3961]services.cassandra.incrementalRepairInterval

    Set the interval how often incremental repairs are run, i.e. nodetool repair is executed. See
    https://cassandra.apache.org/doc/latest/operating/repair.html for more information.

    Set to null to disable incremental repairs.

    Type: null or string

    Default: "3d"

    Example: null

    Declared by:

    [3962]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3963]services.cassandra.incrementalRepairOptions

    Options passed through to the incremental repair command.

    Type: list of strings

    Default: [ ]

    Example: [ "--partitioner-range" ]

    Declared by:

    [3964]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3965]services.cassandra.jmxPort

    Specifies the default port over which Cassandra will be available for JMX connections. For
    security reasons, you should not expose this port to the internet. Firewall it if needed.

    Type: signed integer

    Default: 7199

    Declared by:

    [3966]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3967]services.cassandra.jmxRoles

    Roles that are allowed to access the JMX (e.g. nodetool) BEWARE: The passwords will be stored
    world readable in the nix-store. It's recommended to use your own protected file using
    jmxRolesFile

    Doesn't work in versions older than 3.11 because they don't like that it's world readable.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [3968]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3969]services.cassandra.jmxRoles.*.password

    Password for JMX

    Type: string

    Declared by:

    [3970]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3971]services.cassandra.jmxRoles.*.username

    Username for JMX

    Type: string

    Declared by:

    [3972]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3973]services.cassandra.jmxRolesFile

    Specify your own jmx roles file.

    Make sure the permissions forbid "others" from reading the file if you're using Cassandra
    below version 3.11.

    Type: null or path

    Default: (build of jmx-roles-file)

    Example: "/var/lib/cassandra/jmx.password"

    Declared by:

    [3974]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3975]services.cassandra.jvmOpts

    Populate the JVM_OPT environment variable.

    Type: list of strings

    Default: [ ]

    Declared by:

    [3976]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3977]services.cassandra.listenAddress

    Address or interface to bind to and tell other Cassandra nodes to connect to. You _must_
    change this if you want multiple nodes to be able to communicate!

    Set listenAddress OR listenInterface, not both.

    Leaving it blank leaves it up to InetAddress.getLocalHost(). This will always do the Right
    Thing _if_ the node is properly configured (hostname, name resolution, etc), and the Right
    Thing is to use the address associated with the hostname (it might not be).

    Setting listen_address to 0.0.0.0 is always wrong.

    Type: null or string

    Default: "127.0.0.1"

    Example: null

    Declared by:

    [3978]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3979]services.cassandra.listenInterface

    Set listenAddress OR listenInterface, not both. Interfaces must correspond to a single
    address, IP aliasing is not supported.

    Type: null or string

    Default: null

    Example: "eth1"

    Declared by:

    [3980]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3981]services.cassandra.logbackConfig

    XML logback configuration for cassandra

    Type: strings concatenated with "\n"

    Default:

    ''
    <configuration scan="false">
      <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
          <pattern>%-5level %date{HH:mm:ss,SSS} %msg%n</pattern>
        </encoder>
      </appender>

      <root level="INFO">
        <appender-ref ref="STDOUT" />
      </root>

      <logger name="com.thinkaurelius.thrift" level="ERROR"/>
    </configuration>
    ''

    Declared by:

    [3982]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3983]services.cassandra.mallocArenaMax

    Set this to control the amount of arenas per-thread in glibc.

    Type: null or signed integer

    Default: null

    Example: 4

    Declared by:

    [3984]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3985]services.cassandra.maxHeapSize

    Must be left blank or set together with heapNewSize. If left blank a sensible value for the
    available amount of RAM and CPU cores is calculated.

    Override to set the amount of memory to allocate to the JVM at start-up. For production use
    you may wish to adjust this for your environment. MAX_HEAP_SIZE is the total amount of memory
    dedicated to the Java heap. HEAP_NEWSIZE refers to the size of the young generation.

    The main trade-off for the young generation is that the larger it is, the longer GC pause
    times will be. The shorter it is, the more expensive GC will be (usually).

    Type: null or string

    Default: null

    Example: "4G"

    Declared by:

    [3986]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3987]services.cassandra.remoteJmx

    Cassandra ships with JMX accessible *only* from localhost. To enable remote JMX connections
    set to true.

    Be sure to also enable authentication and/or TLS. See: https://wiki.apache.org/cassandra/
    JmxSecurity

    Type: boolean

    Default: false

    Declared by:

    [3988]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3989]services.cassandra.rpcAddress

    The address or interface to bind the native transport server to.

    Set rpcAddress OR rpcInterface, not both.

    Leaving rpcAddress blank has the same effect as on listenAddress (i.e. it will be based on
    the configured hostname of the node).

    Note that unlike listenAddress, you can specify 0.0.0.0, but you must also set
    extraConfig.broadcast_rpc_address to a value other than 0.0.0.0.

    For security reasons, you should not expose this port to the internet. Firewall it if needed.

    Type: null or string

    Default: "127.0.0.1"

    Example: null

    Declared by:

    [3990]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3991]services.cassandra.rpcInterface

    Set rpcAddress OR rpcInterface, not both. Interfaces must correspond to a single address, IP
    aliasing is not supported.

    Type: null or string

    Default: null

    Example: "eth1"

    Declared by:

    [3992]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3993]services.cassandra.seedAddresses

    The addresses of hosts designated as contact points in the cluster. A joining node contacts
    one of the nodes in the seeds list to learn the topology of the ring. Set to 127.0.0.1 for a
    single node cluster.

    Type: list of strings

    Default: [ "127.0.0.1" ]

    Declared by:

    [3994]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3995]services.cassandra.user

    Run Apache Cassandra under this user.

    Type: string

    Default: "cassandra"

    Declared by:

    [3996]<nixpkgs/nixos/modules/services/databases/cassandra.nix>

[3997]services.ceph.enable

    Whether to enable Ceph global configuration.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [3998]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[3999]services.ceph.client.enable

    Whether to enable Ceph client configuration.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4000]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4001]services.ceph.client.extraConfig

    Extra configuration to add to the client section. Configuration for rados gateways would be
    added here, with their own sections, see example.

    Type: attribute set of attribute set of stringss

    Default: { }

    Example:

    ''
    {
      # This would create a section for a radosgw daemon named node0 and related
      # configuration for it
      "client.radosgw.node0" = { "some config option" = "true"; };
    };
    ''

    Declared by:

    [4002]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4003]services.ceph.extraConfig

    Extra configuration to add to the global section. Use for setting values that are common for
    all daemons in the cluster.

    Type: attribute set of strings

    Default: { }

    Example:

    ''
    {
      "ms bind ipv6" = "true";
    };
    ''

    Declared by:

    [4004]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4005]services.ceph.global.authClientRequired

    Enables requiring the cluster to authenticate itself to the client.

    Type: one of "cephx", "none"

    Default: "cephx"

    Declared by:

    [4006]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4007]services.ceph.global.authClusterRequired

    Enables requiring daemons to authenticate with eachother in the cluster.

    Type: one of "cephx", "none"

    Default: "cephx"

    Declared by:

    [4008]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4009]services.ceph.global.authServiceRequired

    Enables requiring clients to authenticate with the cluster to access services in the cluster
    (e.g. radosgw, mds or osd).

    Type: one of "cephx", "none"

    Default: "cephx"

    Declared by:

    [4010]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4011]services.ceph.global.clusterName

    Name of cluster

    Type: string

    Default: "ceph"

    Declared by:

    [4012]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4013]services.ceph.global.clusterNetwork

    A comma-separated list of subnets that will be used as cluster networks in the cluster.

    Type: null or strings concatenated with ","

    Default: null

    Example:

    ''
    10.10.0.0/24, 192.168.0.0/24
    ''

    Declared by:

    [4014]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4015]services.ceph.global.fsid

    Filesystem ID, a generated uuid, its must be generated and set before attempting to start a
    cluster

    Type: string

    Example:

    ''
    433a2193-4f8a-47a0-95d2-209d7ca2cca5
    ''

    Declared by:

    [4016]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4017]services.ceph.global.maxOpenFiles

    Max open files for each OSD daemon.

    Type: signed integer

    Default: 131072

    Declared by:

    [4018]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4019]services.ceph.global.mgrModulePath

    Path at which to find ceph-mgr modules.

    Type: path

    Default: "\${pkgs.ceph.lib}/lib/ceph/mgr"

    Declared by:

    [4020]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4021]services.ceph.global.monHost

    List of hostname shortnames/IP addresses of the initial monitors.

    Type: null or strings concatenated with ","

    Default: null

    Example:

    ''
    10.10.0.1, 10.10.0.2, 10.10.0.3
    ''

    Declared by:

    [4022]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4023]services.ceph.global.monInitialMembers

    List of hosts that will be used as monitors at startup.

    Type: null or strings concatenated with ","

    Default: null

    Example:

    ''
    node0, node1, node2
    ''

    Declared by:

    [4024]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4025]services.ceph.global.publicNetwork

    A comma-separated list of subnets that will be used as public networks in the cluster.

    Type: null or strings concatenated with ","

    Default: null

    Example:

    ''
    10.20.0.0/24, 192.168.1.0/24
    ''

    Declared by:

    [4026]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4027]services.ceph.global.rgwMimeTypesFile

    Path to mime types used by radosgw.

    Type: null or path

    Default: "\${pkgs.mime-types}/etc/mime.types"

    Declared by:

    [4028]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4029]services.ceph.mds.enable

    Whether to enable Ceph MDS daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4030]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4031]services.ceph.mds.daemons

    A list of metadata service daemons that should have a service created. The names correspond
    to the id part in ceph i.e. [ "name1" ] would result in mds.name1

    Type: list of strings

    Default: [ ]

    Example:

    ''
    [ "name1" "name2" ];
    ''

    Declared by:

    [4032]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4033]services.ceph.mds.extraConfig

    Extra configuration to add to the MDS section.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [4034]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4035]services.ceph.mgr.enable

    Whether to enable Ceph MGR daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4036]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4037]services.ceph.mgr.daemons

    A list of names for manager daemons that should have a service created. The names correspond
    to the id part in ceph i.e. [ "name1" ] would result in mgr.name1

    Type: list of strings

    Default: [ ]

    Example:

    ''
    [ "name1" "name2" ];
    ''

    Declared by:

    [4038]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4039]services.ceph.mgr.extraConfig

    Extra configuration to add to the global section for manager daemons.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [4040]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4041]services.ceph.mon.enable

    Whether to enable Ceph MON daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4042]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4043]services.ceph.mon.daemons

    A list of monitor daemons that should have a service created. The names correspond to the id
    part in ceph i.e. [ "name1" ] would result in mon.name1

    Type: list of strings

    Default: [ ]

    Example:

    ''
    [ "name1" "name2" ];
    ''

    Declared by:

    [4044]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4045]services.ceph.mon.extraConfig

    Extra configuration to add to the monitor section.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [4046]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4047]services.ceph.osd.enable

    Whether to enable Ceph OSD daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4048]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4049]services.ceph.osd.daemons

    A list of OSD daemons that should have a service created. The names correspond to the id part
    in ceph i.e. [ "name1" ] would result in osd.name1

    Type: list of strings

    Default: [ ]

    Example:

    ''
    [ "name1" "name2" ];
    ''

    Declared by:

    [4050]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4051]services.ceph.osd.extraConfig

    Extra configuration to add to the OSD section.

    Type: attribute set of strings

    Default: { osd crush chooseleaf type = "1"; osd journal size = "10000"; osd pool default min
    size = "2"; osd pool default pg num = "200"; osd pool default pgp num = "200"; osd pool
    default size = "3"; }

    Declared by:

    [4052]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4053]services.ceph.rgw.enable

    Whether to enable Ceph RadosGW daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4054]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4055]services.ceph.rgw.daemons

    A list of rados gateway daemons that should have a service created. The names correspond to
    the id part in ceph i.e. [ "name1" ] would result in client.name1, radosgw daemons aren't
    daemons to cluster in the sense that OSD, MGR or MON daemons are. They are simply daemons,
    from ceph, that uses the cluster as a backend.

    Type: list of strings

    Default: [ ]

    Example:

    ''
    [ "name1" "name2" ];
    ''

    Declared by:

    [4056]<nixpkgs/nixos/modules/services/network-filesystems/ceph.nix>

[4057]services.certmgr.enable

    Whether to enable certmgr.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4058]<nixpkgs/nixos/modules/services/security/certmgr.nix>

[4059]services.certmgr.package

    Which certmgr package to use in the service.

    Type: package

    Default: "pkgs.certmgr"

    Declared by:

    [4060]<nixpkgs/nixos/modules/services/security/certmgr.nix>

[4061]services.certmgr.defaultRemote

    The default CA host:port to use.

    Type: string

    Default: "127.0.0.1:8888"

    Declared by:

    [4062]<nixpkgs/nixos/modules/services/security/certmgr.nix>

[4063]services.certmgr.metricsAddress

    The address for the Prometheus HTTP endpoint.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [4064]<nixpkgs/nixos/modules/services/security/certmgr.nix>

[4065]services.certmgr.metricsPort

    The port for the Prometheus HTTP endpoint.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9488

    Declared by:

    [4066]<nixpkgs/nixos/modules/services/security/certmgr.nix>

[4067]services.certmgr.renewInterval

    How often to check certificate expirations and how often to update the cert_next_expires
    metric.

    Type: string

    Default: "30m"

    Declared by:

    [4068]<nixpkgs/nixos/modules/services/security/certmgr.nix>

[4069]services.certmgr.specs

    Certificate specs as described by: [4070]https://github.com/cloudflare/certmgr#
    certificate-specs These will be added to the Nix store, so they will be world readable.

    Type: attribute set of path or submodules

    Default: { }

    Example:

    {
      exampleCert =
      let
        domain = "example.com";
        secret = name: "/var/lib/secrets/${name}.pem";
      in {
        service = "nginx";
        action = "reload";
        authority = {
          file.path = secret "ca";
        };
        certificate = {
          path = secret domain;
        };
        private_key = {
          owner = "root";
          group = "root";
          mode = "0600";
          path = secret "${domain}-key";
        };
        request = {
          CN = domain;
          hosts = [ "mail.${domain}" "www.${domain}" ];
          key = {
            algo = "rsa";
            size = 2048;
          };
          names = {
            O = "Example Organization";
            C = "USA";
          };
        };
      };
      otherCert = "/var/certmgr/specs/other-cert.json";
    }

    Declared by:

    [4071]<nixpkgs/nixos/modules/services/security/certmgr.nix>

[4072]services.certmgr.svcManager

    This specifies the service manager to use for restarting or reloading services. See: [4073]
    https://github.com/cloudflare/certmgr#certmgryaml. For how to use the "command" service
    manager in particular, see: [4074]https://github.com/cloudflare/certmgr#
    command-svcmgr-and-how-to-use-it.

    Type: one of "circus", "command", "dummy", "openrc", "systemd", "sysv"

    Default: "systemd"

    Declared by:

    [4075]<nixpkgs/nixos/modules/services/security/certmgr.nix>

[4076]services.certmgr.validMin

    The interval before a certificate expires to start attempting to renew it.

    Type: string

    Default: "72h"

    Declared by:

    [4077]<nixpkgs/nixos/modules/services/security/certmgr.nix>

[4078]services.cfdyndns.enable

    Whether to enable Cloudflare Dynamic DNS Client.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4079]<nixpkgs/nixos/modules/services/misc/cfdyndns.nix>

[4080]services.cfdyndns.apikeyFile

    The path to a file containing the API Key used to authenticate with CloudFlare.

    Type: null or string

    Default: null

    Declared by:

    [4081]<nixpkgs/nixos/modules/services/misc/cfdyndns.nix>

[4082]services.cfdyndns.email

    The email address to use to authenticate to CloudFlare.

    Type: string

    Declared by:

    [4083]<nixpkgs/nixos/modules/services/misc/cfdyndns.nix>

[4084]services.cfdyndns.records

    The records to update in CloudFlare.

    Type: list of strings

    Default: [ ]

    Example: [ "host.tld" ]

    Declared by:

    [4085]<nixpkgs/nixos/modules/services/misc/cfdyndns.nix>

[4086]services.cfssl.enable

    Whether to enable the CFSSL CA api-server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4087]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4088]services.cfssl.address

    Address to bind.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [4089]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4090]services.cfssl.ca

    CA used to sign the new certificate -- accepts '[file:]fname' or 'env:varname'.

    Type: string

    Default: "\${cfg.dataDir}/ca.pem"

    Declared by:

    [4091]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4092]services.cfssl.caBundle

    Path to root certificate store.

    Type: null or path

    Default: null

    Declared by:

    [4093]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4094]services.cfssl.caKey

    CA private key -- accepts '[file:]fname' or 'env:varname'.

    Type: string

    Default: "file:\${cfg.dataDir}/ca-key.pem"

    Declared by:

    [4095]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4096]services.cfssl.configFile

    Path to configuration file. Do not put this in nix-store as it might contain secrets.

    Type: null or string

    Default: null

    Declared by:

    [4097]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4098]services.cfssl.dataDir

    Cfssl work directory.

    Type: path

    Default: "/var/lib/cfssl"

    Declared by:

    [4099]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4100]services.cfssl.dbConfig

    Certificate db configuration file. Path must be writeable.

    Type: null or path

    Default: null

    Declared by:

    [4101]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4102]services.cfssl.intBundle

    Path to intermediate certificate store.

    Type: null or path

    Default: null

    Declared by:

    [4103]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4104]services.cfssl.intDir

    Intermediates directory.

    Type: null or path

    Default: null

    Declared by:

    [4105]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4106]services.cfssl.logLevel

    Log level (0 = DEBUG, 5 = FATAL).

    Type: one of 0, 1, 2, 3, 4, 5

    Default: 1

    Declared by:

    [4107]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4108]services.cfssl.metadata

    Metadata file for root certificate presence. The content of the file is a json dictionary
    (k,v): each key k is a SHA-1 digest of a root certificate while value v is a list of key
    store filenames.

    Type: null or path

    Default: null

    Declared by:

    [4109]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4110]services.cfssl.mutualTlsCa

    Mutual TLS - require clients be signed by this CA.

    Type: null or path

    Default: null

    Declared by:

    [4111]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4112]services.cfssl.mutualTlsClientCert

    Mutual TLS - client certificate to call remote instance requiring client certs.

    Type: null or path

    Default: null

    Declared by:

    [4113]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4114]services.cfssl.mutualTlsClientKey

    Mutual TLS - client key to call remote instance requiring client certs. Do not put this in
    nix-store.

    Type: null or path

    Default: null

    Declared by:

    [4115]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4116]services.cfssl.mutualTlsCn

    Mutual TLS - regex for whitelist of allowed client CNs.

    Type: null or string

    Default: null

    Declared by:

    [4117]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4118]services.cfssl.port

    Port to bind.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8888

    Declared by:

    [4119]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4120]services.cfssl.remote

    Remote CFSSL server.

    Type: null or string

    Default: null

    Declared by:

    [4121]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4122]services.cfssl.responder

    Certificate for OCSP responder.

    Type: null or path

    Default: null

    Declared by:

    [4123]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4124]services.cfssl.responderKey

    Private key for OCSP responder certificate. Do not put this in nix-store.

    Type: null or string

    Default: null

    Declared by:

    [4125]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4126]services.cfssl.tlsCert

    Other endpoint's CA to set up TLS protocol.

    Type: null or path

    Default: null

    Declared by:

    [4127]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4128]services.cfssl.tlsKey

    Other endpoint's CA private key. Do not put this in nix-store.

    Type: null or string

    Default: null

    Declared by:

    [4129]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4130]services.cfssl.tlsRemoteCa

    CAs to trust for remote TLS requests.

    Type: null or path

    Default: null

    Declared by:

    [4131]<nixpkgs/nixos/modules/services/security/cfssl.nix>

[4132]services.cgminer.enable

    Whether to enable cgminer, an ASIC/FPGA/GPU miner for bitcoin and litecoin.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4133]<nixpkgs/nixos/modules/services/misc/cgminer.nix>

[4134]services.cgminer.package

    Which cgminer derivation to use.

    Type: package

    Default: "pkgs.cgminer"

    Declared by:

    [4135]<nixpkgs/nixos/modules/services/misc/cgminer.nix>

[4136]services.cgminer.config

    Additional config

    Type: boolean or signed integer

    Default: { }

    Example: { auto-fan = true; auto-gpu = true; expiry = 120; failover-only = true; gpu-threads
    = 2; log = 5; queue = 1; scan-time = 60; temp-histeresys = 3; }

    Declared by:

    [4137]<nixpkgs/nixos/modules/services/misc/cgminer.nix>

[4138]services.cgminer.hardware

    List of config options for every GPU

    Type: list of attribute set of string or signed integerss

    Default: [ ]

    Example: [ { gpu-engine = "0-985"; gpu-fan = "0-85"; gpu-memclock = 860; gpu-powertune = 20;
    intensity = 9; temp-cutoff = 95; temp-overheat = 85; temp-target = 75; } { gpu-engine =
    "0-950"; gpu-fan = "0-85"; gpu-memclock = 825; gpu-powertune = 20; intensity = 9; temp-cutoff
    = 95; temp-overheat = 85; temp-target = 75; } ]

    Declared by:

    [4139]<nixpkgs/nixos/modules/services/misc/cgminer.nix>

[4140]services.cgminer.pools

    List of pools where to mine

    Type: list of attribute set of stringss

    Default: [ ]

    Example: [ { password = "X"; url = "http://p2pool.org:9332"; username =
    "17EUZxTvs9uRmPsjPZSYUU3zCz9iwstudk"; } ]

    Declared by:

    [4141]<nixpkgs/nixos/modules/services/misc/cgminer.nix>

[4142]services.cgminer.user

    User account under which cgminer runs

    Type: string

    Default: "cgminer"

    Declared by:

    [4143]<nixpkgs/nixos/modules/services/misc/cgminer.nix>

[4144]services.charybdis.enable

    Whether to enable Charybdis IRC daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4145]<nixpkgs/nixos/modules/services/networking/charybdis.nix>

[4146]services.charybdis.config

    Charybdis IRC daemon configuration file.

    Type: string

    Declared by:

    [4147]<nixpkgs/nixos/modules/services/networking/charybdis.nix>

[4148]services.charybdis.group

    Charybdis IRC daemon group.

    Type: string

    Default: "ircd"

    Declared by:

    [4149]<nixpkgs/nixos/modules/services/networking/charybdis.nix>

[4150]services.charybdis.motd

    Charybdis MOTD text.

    Charybdis will read its MOTD from /etc/charybdis/ircd.motd . If set, the value of this option
    will be written to this path.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [4151]<nixpkgs/nixos/modules/services/networking/charybdis.nix>

[4152]services.charybdis.statedir

    Location of the state directory of charybdis.

    Type: path

    Default: "/var/lib/charybdis"

    Declared by:

    [4153]<nixpkgs/nixos/modules/services/networking/charybdis.nix>

[4154]services.charybdis.user

    Charybdis IRC daemon user.

    Type: string

    Default: "ircd"

    Declared by:

    [4155]<nixpkgs/nixos/modules/services/networking/charybdis.nix>

[4156]services.chrony.enable

    Whether to synchronise your machine's time using chrony. Make sure you disable NTP if you
    enable this service.

    Type: boolean

    Default: false

    Declared by:

    [4157]<nixpkgs/nixos/modules/services/networking/ntp/chrony.nix>

[4158]services.chrony.enableNTS

    Whether to enable Network Time Security authentication. Make sure it is supported by your
    selected NTP server(s).

    Type: boolean

    Default: false

    Declared by:

    [4159]<nixpkgs/nixos/modules/services/networking/ntp/chrony.nix>

[4160]services.chrony.package

    Which chrony package to use.

    Type: package

    Default: "pkgs.chrony"

    Declared by:

    [4161]<nixpkgs/nixos/modules/services/networking/ntp/chrony.nix>

[4162]services.chrony.directory

    Directory where chrony state is stored.

    Type: string

    Default: "/var/lib/chrony"

    Declared by:

    [4163]<nixpkgs/nixos/modules/services/networking/ntp/chrony.nix>

[4164]services.chrony.extraConfig

    Extra configuration directives that should be added to chrony.conf

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [4165]<nixpkgs/nixos/modules/services/networking/ntp/chrony.nix>

[4166]services.chrony.extraFlags

    Extra flags passed to the chronyd command.

    Type: list of strings

    Default: [ ]

    Example: [ "-s" ]

    Declared by:

    [4167]<nixpkgs/nixos/modules/services/networking/ntp/chrony.nix>

[4168]services.chrony.initstepslew

    Allow chronyd to make a rapid measurement of the system clock error at boot time, and to
    correct the system clock by stepping before normal operation begins.

    Type: attribute set of boolean or signed integers

    Default: { enabled = true; threshold = 1000; }

    Declared by:

    [4169]<nixpkgs/nixos/modules/services/networking/ntp/chrony.nix>

[4170]services.chrony.serverOption

    Set option for server directives.

    Use "iburst" to rapidly poll on startup. Recommended if your machine is consistently online.

    Use "offline" to prevent polling on startup. Recommended if your machine boots offline or is
    otherwise frequently offline.

    Type: one of "iburst", "offline"

    Default: "iburst"

    Declared by:

    [4171]<nixpkgs/nixos/modules/services/networking/ntp/chrony.nix>

[4172]services.chrony.servers

    The set of NTP servers from which to synchronise.

    Type: list of strings

    Default: [ "0.nixos.pool.ntp.org" "1.nixos.pool.ntp.org" "2.nixos.pool.ntp.org"
    "3.nixos.pool.ntp.org" ]

    Declared by:

    [4173]<nixpkgs/nixos/modules/services/networking/ntp/chrony.nix>

[4174]services.cinnamon.apps.enable

    Whether to enable Cinnamon default applications.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4175]<nixpkgs/nixos/modules/services/x11/desktop-managers/cinnamon.nix>

[4176]services.cjdns.enable

    Whether to enable the cjdns network encryption and routing engine. A file at /etc/cjdns.keys
    will be created if it does not exist to contain a random secret key that your IPv6 address
    will be derived from.

    Type: boolean

    Default: false

    Declared by:

    [4177]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4178]services.cjdns.ETHInterface.beacon

    Auto-connect to other cjdns nodes on the same network. Options: 0: Disabled. 1: Accept
    beacons, this will cause cjdns to accept incoming beacon messages and try connecting to the
    sender. 2: Accept and send beacons, this will cause cjdns to broadcast messages on the local
    network which contain a randomly generated per-session password, other nodes which have this
    set to 1 or 2 will hear the beacon messages and connect automatically.

    Type: signed integer

    Default: 2

    Declared by:

    [4179]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4180]services.cjdns.ETHInterface.bind

    Bind to this device for native ethernet operation. all is a pseudo-name which will try to
    connect to all devices.

    Type: string

    Default: ""

    Example: "eth0"

    Declared by:

    [4181]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4182]services.cjdns.ETHInterface.connectTo

    Credentials for connecting look similar to UDP credientials except they begin with the mac
    address.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "01:02:03:04:05:06" = {
        hostname = "homer.hype";
        password = "5kG15EfpdcKNX3f2GSQ0H1HC7yIfxoCoImnO5FHM";
        publicKey = "371zpkgs8ss387tmr81q04mp0hg1skb51hw34vk1cq644mjqhup0.k";
      };
    }

    Declared by:

    [4183]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4184]services.cjdns.ETHInterface.connectTo.<name>.hostname

    Optional hostname to add to /etc/hosts; prevents reverse lookup failures.

    Type: string

    Default: ""

    Example: "foobar.hype"

    Declared by:

    [4185]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4186]services.cjdns.ETHInterface.connectTo.<name>.login

    (optional) name your peer has for you

    Type: string

    Default: ""

    Declared by:

    [4187]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4188]services.cjdns.ETHInterface.connectTo.<name>.password

    Authorized password to the opposite end of the tunnel.

    Type: string

    Declared by:

    [4189]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4190]services.cjdns.ETHInterface.connectTo.<name>.peerName

    (optional) human-readable name for peer

    Type: string

    Default: ""

    Declared by:

    [4191]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4192]services.cjdns.ETHInterface.connectTo.<name>.publicKey

    Public key at the opposite end of the tunnel.

    Type: string

    Declared by:

    [4193]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4194]services.cjdns.UDPInterface.bind

    Address and port to bind UDP tunnels to.

    Type: string

    Default: ""

    Example: "192.168.1.32:43211"

    Declared by:

    [4195]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4196]services.cjdns.UDPInterface.connectTo

    Credentials for making UDP tunnels.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "192.168.1.1:27313" = {
        hostname = "homer.hype";
        password = "5kG15EfpdcKNX3f2GSQ0H1HC7yIfxoCoImnO5FHM";
        publicKey = "371zpkgs8ss387tmr81q04mp0hg1skb51hw34vk1cq644mjqhup0.k";
      };
    }

    Declared by:

    [4197]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4198]services.cjdns.UDPInterface.connectTo.<name>.hostname

    Optional hostname to add to /etc/hosts; prevents reverse lookup failures.

    Type: string

    Default: ""

    Example: "foobar.hype"

    Declared by:

    [4199]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4200]services.cjdns.UDPInterface.connectTo.<name>.login

    (optional) name your peer has for you

    Type: string

    Default: ""

    Declared by:

    [4201]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4202]services.cjdns.UDPInterface.connectTo.<name>.password

    Authorized password to the opposite end of the tunnel.

    Type: string

    Declared by:

    [4203]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4204]services.cjdns.UDPInterface.connectTo.<name>.peerName

    (optional) human-readable name for peer

    Type: string

    Default: ""

    Declared by:

    [4205]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4206]services.cjdns.UDPInterface.connectTo.<name>.publicKey

    Public key at the opposite end of the tunnel.

    Type: string

    Declared by:

    [4207]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4208]services.cjdns.addExtraHosts

    Whether to add cjdns peers with an associated hostname to /etc/hosts. Beware that enabling
    this incurs heavy eval-time costs.

    Type: boolean

    Default: false

    Declared by:

    [4209]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4210]services.cjdns.admin.bind

    Bind the administration port to this address and port.

    Type: string

    Default: "127.0.0.1:11234"

    Declared by:

    [4211]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4212]services.cjdns.authorizedPasswords

    Any remote cjdns nodes that offer these passwords on connection will be allowed to route
    through this node.

    Type: list of strings

    Default: [ ]

    Example: [ "snyrfgkqsc98qh1y4s5hbu0j57xw5s0" "z9md3t4p45mfrjzdjurxn4wuj0d8swv"
    "49275fut6tmzu354pq70sr5b95qq0vj" ]

    Declared by:

    [4213]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4214]services.cjdns.confFile

    Ignore all other cjdns options and load configuration from this file.

    Type: null or path

    Default: null

    Example: "/etc/cjdroute.conf"

    Declared by:

    [4215]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4216]services.cjdns.extraConfig

    Extra configuration, given as attrs, that will be merged recursively with the rest of the
    JSON generated by this module, at the root node.

    Type: attribute set

    Default: { }

    Example: { router = { interface = { tunDevice = "tun10"; } ; } ; }

    Declared by:

    [4217]<nixpkgs/nixos/modules/services/networking/cjdns.nix>

[4218]services.clamav.daemon.enable

    Whether to enable ClamAV clamd daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4219]<nixpkgs/nixos/modules/services/security/clamav.nix>

[4220]services.clamav.daemon.settings

    ClamAV configuration. Refer to [4221]https://linux.die.net/man/5/clamd.conf, for details on
    supported values.

    Type: attribute set of boolean or signed integer or string or list of stringss

    Default: { }

    Declared by:

    [4222]<nixpkgs/nixos/modules/services/security/clamav.nix>

[4223]services.clamav.updater.enable

    Whether to enable ClamAV freshclam updater.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4224]<nixpkgs/nixos/modules/services/security/clamav.nix>

[4225]services.clamav.updater.frequency

    Number of database checks per day.

    Type: signed integer

    Default: 12

    Declared by:

    [4226]<nixpkgs/nixos/modules/services/security/clamav.nix>

[4227]services.clamav.updater.interval

    How often freshclam is invoked. See systemd.time(7) for more information about the format.

    Type: string

    Default: "hourly"

    Declared by:

    [4228]<nixpkgs/nixos/modules/services/security/clamav.nix>

[4229]services.clamav.updater.settings

    freshclam configuration. Refer to [4230]https://linux.die.net/man/5/freshclam.conf, for
    details on supported values.

    Type: attribute set of boolean or signed integer or string or list of stringss

    Default: { }

    Declared by:

    [4231]<nixpkgs/nixos/modules/services/security/clamav.nix>

[4232]services.clamsmtp.enable

    Whether to enable clamsmtp.

    Type: boolean

    Default: false

    Declared by:

    [4233]<nixpkgs/nixos/modules/services/mail/clamsmtp.nix>

[4234]services.clamsmtp.instances

    Instances of clamsmtp to run.

    Type: list of submodules

    Declared by:

    [4235]<nixpkgs/nixos/modules/services/mail/clamsmtp.nix>

[4236]services.clamsmtp.instances.*.action

    Action to take when a virus is detected.

    Note that viruses often spoof sender addresses, so bouncing is in most cases not a good idea.

    Type: one of "bounce", "drop", "pass"

    Default: "drop"

    Declared by:

    [4237]<nixpkgs/nixos/modules/services/mail/clamsmtp.nix>

[4238]services.clamsmtp.instances.*.header

    A header to add to scanned messages. See clamsmtpd.conf(5) for more details. Empty means no
    header.

    Type: string

    Default: ""

    Example: "X-Virus-Scanned: ClamAV using ClamSMTP"

    Declared by:

    [4239]<nixpkgs/nixos/modules/services/mail/clamsmtp.nix>

[4240]services.clamsmtp.instances.*.keepAlives

    Number of seconds to wait between each NOOP sent to the sending server. 0 to disable.

    This is meant for slow servers where the sending MTA times out waiting for clamd to scan the
    file.

    Type: signed integer

    Default: 0

    Declared by:

    [4241]<nixpkgs/nixos/modules/services/mail/clamsmtp.nix>

[4242]services.clamsmtp.instances.*.listen

    Address to wait for incoming SMTP connections on. See clamsmtpd.conf(5) for more details.

    Type: string

    Example: "127.0.0.1:10025"

    Declared by:

    [4243]<nixpkgs/nixos/modules/services/mail/clamsmtp.nix>

[4244]services.clamsmtp.instances.*.maxConnections

    Maximum number of connections to accept at once.

    Type: signed integer

    Default: 64

    Declared by:

    [4245]<nixpkgs/nixos/modules/services/mail/clamsmtp.nix>

[4246]services.clamsmtp.instances.*.outAddress

    Address of the SMTP server to send email to once it has been scanned.

    Type: string

    Declared by:

    [4247]<nixpkgs/nixos/modules/services/mail/clamsmtp.nix>

[4248]services.clamsmtp.instances.*.quarantine

    Whether to quarantine files that contain viruses by leaving them in the temporary directory.

    Type: boolean

    Default: false

    Declared by:

    [4249]<nixpkgs/nixos/modules/services/mail/clamsmtp.nix>

[4250]services.clamsmtp.instances.*.tempDirectory

    Temporary directory that needs to be accessible to both clamd and clamsmtpd.

    Type: string

    Default: "/tmp"

    Declared by:

    [4251]<nixpkgs/nixos/modules/services/mail/clamsmtp.nix>

[4252]services.clamsmtp.instances.*.timeout

    Time-out for network connections.

    Type: signed integer

    Default: 180

    Declared by:

    [4253]<nixpkgs/nixos/modules/services/mail/clamsmtp.nix>

[4254]services.clamsmtp.instances.*.transparentProxy

    Enable clamsmtp's transparent proxy support.

    Type: boolean

    Default: false

    Declared by:

    [4255]<nixpkgs/nixos/modules/services/mail/clamsmtp.nix>

[4256]services.clamsmtp.instances.*.virusAction

    Command to run when a virus is found. Please see VIRUS ACTION in clamsmtpd(8) for a
    discussion of this option and its safe use.

    Type: null or path

    Default: null

    Declared by:

    [4257]<nixpkgs/nixos/modules/services/mail/clamsmtp.nix>

[4258]services.clamsmtp.instances.*.xClient

    Send the XCLIENT command to the receiving server, for forwarding client addresses and
    connection information if the receiving server supports this feature.

    Type: boolean

    Default: false

    Declared by:

    [4259]<nixpkgs/nixos/modules/services/mail/clamsmtp.nix>

[4260]services.clickhouse.enable

    Whether to enable ClickHouse database server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4261]<nixpkgs/nixos/modules/services/databases/clickhouse.nix>

[4262]services.clight.enable

    Whether to enable clight or not.

    Type: boolean

    Default: false

    Declared by:

    [4263]<nixpkgs/nixos/modules/services/x11/clight.nix>

[4264]services.clight.settings

    Additional configuration to extend clight.conf. See [4265]https://github.com/FedeDP/Clight/
    blob/master/Extra/clight.conf for a sample configuration file.

    Type: attribute set of null or signed integer or string or boolean or floating point number
    or list of signed integer or string or boolean or floating point numbers or attribute set of
    signed integer or string or boolean or floating point number or list of signed integer or
    string or boolean or floating point numbersss

    Default: { }

    Example: { ac_capture_timeouts = [ 120 300 60 ] ; captures = 20; gamma_long_transition =
    true; }

    Declared by:

    [4266]<nixpkgs/nixos/modules/services/x11/clight.nix>

[4267]services.clight.temperature.day

    Colour temperature to use during the day, between 1000 and 25000 K.

    Type: signed integer

    Default: 5500

    Declared by:

    [4268]<nixpkgs/nixos/modules/services/x11/clight.nix>

[4269]services.clight.temperature.night

    Colour temperature to use at night, between 1000 and 25000 K.

    Type: signed integer

    Default: 3700

    Declared by:

    [4270]<nixpkgs/nixos/modules/services/x11/clight.nix>

[4271]services.clipmenu.enable

    Whether to enable clipmenu, the clipboard management daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4272]<nixpkgs/nixos/modules/services/misc/clipmenu.nix>

[4273]services.clipmenu.package

    clipmenu derivation to use.

    Type: package

    Default: "pkgs.clipmenu"

    Declared by:

    [4274]<nixpkgs/nixos/modules/services/misc/clipmenu.nix>

[4275]services.cloud-init.enable

    Enable the cloud-init service. This services reads configuration metadata in a cloud
    environment and configures the machine according to this metadata.

    This configuration is not completely compatible with the NixOS way of doing configuration, as
    configuration done by cloud-init might be overriden by a subsequent nixos-rebuild call.
    However, some parts of cloud-init fall outside of NixOS's responsibility, like filesystem
    resizing and ssh public key provisioning, and cloud-init is useful for that parts. Thus, be
    wary that using cloud-init in NixOS might come as some cost.

    Type: boolean

    Default: false

    Declared by:

    [4276]<nixpkgs/nixos/modules/services/system/cloud-init.nix>

[4277]services.cloud-init.btrfs.enable

    Allow the cloud-init service to operate `btrfs` filesystem.

    Type: boolean

    Default: false

    Declared by:

    [4278]<nixpkgs/nixos/modules/services/system/cloud-init.nix>

[4279]services.cloud-init.config

    cloud-init configuration.

    Type: string

    Default:

    ''
    system_info:
      distro: nixos
    users:
       - root

    disable_root: false
    preserve_hostname: false

    cloud_init_modules:
     - migrator
     - seed_random
     - bootcmd
     - write-files
     - growpart
     - resizefs
     - update_etc_hosts
     - ca-certs
     - rsyslog
     - users-groups

    cloud_config_modules:
     - disk_setup
     - mounts
     - ssh-import-id
     - set-passwords
     - timezone
     - disable-ec2-metadata
     - runcmd
     - ssh

    cloud_final_modules:
     - rightscale_userdata
     - scripts-vendor
     - scripts-per-once
     - scripts-per-boot
     - scripts-per-instance
     - scripts-user
     - ssh-authkey-fingerprints
     - keys-to-console
     - phone-home
     - final-message
     - power-state-change
    ''

    Declared by:

    [4280]<nixpkgs/nixos/modules/services/system/cloud-init.nix>

[4281]services.cloud-init.ext4.enable

    Allow the cloud-init service to operate `ext4` filesystem.

    Type: boolean

    Default: true

    Declared by:

    [4282]<nixpkgs/nixos/modules/services/system/cloud-init.nix>

[4283]services.cntlm.enable

    Whether to enable cntlm, which starts a local proxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4284]<nixpkgs/nixos/modules/services/networking/cntlm.nix>

[4285]services.cntlm.configText

    Verbatim contents of cntlm.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [4286]<nixpkgs/nixos/modules/services/networking/cntlm.nix>

[4287]services.cntlm.domain

    Proxy account domain/workgroup name.

    Type: string

    Declared by:

    [4288]<nixpkgs/nixos/modules/services/networking/cntlm.nix>

[4289]services.cntlm.extraConfig

    Additional config appended to the end of the generated cntlm.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [4290]<nixpkgs/nixos/modules/services/networking/cntlm.nix>

[4291]services.cntlm.netbios_hostname

    The hostname of your machine.

    Type: string

    Default: ""

    Declared by:

    [4292]<nixpkgs/nixos/modules/services/networking/cntlm.nix>

[4293]services.cntlm.noproxy

    A list of domains where the proxy is skipped.

    Type: list of strings

    Default: [ ]

    Example: [ "*.example.com" "example.com" ]

    Declared by:

    [4294]<nixpkgs/nixos/modules/services/networking/cntlm.nix>

[4295]services.cntlm.password

    Proxy account password. Note: use chmod 0600 on /etc/cntlm.password for security.

    Type: string

    Default: "/etc/cntlm.password"

    Declared by:

    [4296]<nixpkgs/nixos/modules/services/networking/cntlm.nix>

[4297]services.cntlm.port

    Specifies on which ports the cntlm daemon listens.

    Type: list of 16 bit unsigned integer; between 0 and 65535 (both inclusive)s

    Default: [ 3128 ]

    Declared by:

    [4298]<nixpkgs/nixos/modules/services/networking/cntlm.nix>

[4299]services.cntlm.proxy

    A list of NTLM/NTLMv2 authenticating HTTP proxies.

    Parent proxy, which requires authentication. The same as proxy on the command-line, can be
    used more than once to specify unlimited number of proxies. Should one proxy fail, cntlm
    automatically moves on to the next one. The connect request fails only if the whole list of
    proxies is scanned and (for each request) and found to be invalid. Command-line takes
    precedence over the configuration file.

    Type: list of strings

    Example: [ "proxy.example.com:81" ]

    Declared by:

    [4300]<nixpkgs/nixos/modules/services/networking/cntlm.nix>

[4301]services.cntlm.username

    Proxy account name, without the possibility to include domain name ('at' sign is interpreted
    literally).

    Type: string

    Declared by:

    [4302]<nixpkgs/nixos/modules/services/networking/cntlm.nix>

[4303]services.cockroachdb.enable

    Whether to enable CockroachDB Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4304]<nixpkgs/nixos/modules/services/databases/cockroachdb.nix>

[4305]services.cockroachdb.package

    The CockroachDB derivation to use for running the service.

    This would primarily be useful to enable Enterprise Edition features in your own custom
    CockroachDB build (Nixpkgs CockroachDB binaries only contain open source features and open
    source code).

    Type: package

    Default: "pkgs.cockroachdb"

    Declared by:

    [4306]<nixpkgs/nixos/modules/services/databases/cockroachdb.nix>

[4307]services.cockroachdb.cache

    The total size for caches.

    This can be a percentage, expressed with a fraction sign or as a decimal-point number, or any
    bytes-based unit. For example, "25%", "0.25" both represent 25% of the available system
    memory. The values "1000000000" and "1GB" both represent 1 gigabyte of memory.

    Type: string

    Default: "25%"

    Declared by:

    [4308]<nixpkgs/nixos/modules/services/databases/cockroachdb.nix>

[4309]services.cockroachdb.certsDir

    The path to the certificate directory.

    Type: null or path

    Default: null

    Declared by:

    [4310]<nixpkgs/nixos/modules/services/databases/cockroachdb.nix>

[4311]services.cockroachdb.group

    User account under which CockroachDB runs

    Type: string

    Default: "cockroachdb"

    Declared by:

    [4312]<nixpkgs/nixos/modules/services/databases/cockroachdb.nix>

[4313]services.cockroachdb.http.address

    Address to bind to for http-based Admin UI

    Type: string

    Default: "localhost"

    Declared by:

    [4314]<nixpkgs/nixos/modules/services/databases/cockroachdb.nix>

[4315]services.cockroachdb.http.port

    Port to bind to for http-based Admin UI

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8080

    Declared by:

    [4316]<nixpkgs/nixos/modules/services/databases/cockroachdb.nix>

[4317]services.cockroachdb.insecure

    Run in insecure mode.

    Type: boolean

    Default: false

    Declared by:

    [4318]<nixpkgs/nixos/modules/services/databases/cockroachdb.nix>

[4319]services.cockroachdb.join

    The addresses for connecting the node to a cluster.

    Type: null or string

    Default: null

    Declared by:

    [4320]<nixpkgs/nixos/modules/services/databases/cockroachdb.nix>

[4321]services.cockroachdb.listen.address

    Address to bind to for intra-cluster communication

    Type: string

    Default: "localhost"

    Declared by:

    [4322]<nixpkgs/nixos/modules/services/databases/cockroachdb.nix>

[4323]services.cockroachdb.listen.port

    Port to bind to for intra-cluster communication

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 26257

    Declared by:

    [4324]<nixpkgs/nixos/modules/services/databases/cockroachdb.nix>

[4325]services.cockroachdb.locality

    An ordered, comma-separated list of key-value pairs that describe the topography of the
    machine. Topography might include country, datacenter or rack designations. Data is
    automatically replicated to maximize diversities of each tier. The order of tiers is used to
    determine the priority of the diversity, so the more inclusive localities like country should
    come before less inclusive localities like datacenter. The tiers and order must be the same
    on all nodes. Including more tiers is better than including fewer. For example:

    country=us,region=us-west,datacenter=us-west-1b,rack=12 country=ca,region=ca-east,datacenter=
    ca-east-2,rack=4 planet=earth,province=manitoba,colo=secondary,power=3

    Type: null or string

    Default: null

    Declared by:

    [4326]<nixpkgs/nixos/modules/services/databases/cockroachdb.nix>

[4327]services.cockroachdb.maxSqlMemory

    The maximum in-memory storage capacity available to store temporary data for SQL queries.

    This can be a percentage, expressed with a fraction sign or as a decimal-point number, or any
    bytes-based unit. For example, "25%", "0.25" both represent 25% of the available system
    memory. The values "1000000000" and "1GB" both represent 1 gigabyte of memory.

    Type: string

    Default: "25%"

    Declared by:

    [4328]<nixpkgs/nixos/modules/services/databases/cockroachdb.nix>

[4329]services.cockroachdb.openPorts

    Open firewall ports for cluster communication by default

    Type: boolean

    Default: false

    Declared by:

    [4330]<nixpkgs/nixos/modules/services/databases/cockroachdb.nix>

[4331]services.cockroachdb.user

    User account under which CockroachDB runs

    Type: string

    Default: "cockroachdb"

    Declared by:

    [4332]<nixpkgs/nixos/modules/services/databases/cockroachdb.nix>

[4333]services.collectd.enable

    Whether to enable collectd agent.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4334]<nixpkgs/nixos/modules/services/monitoring/collectd.nix>

[4335]services.collectd.package

    Which collectd package to use.

    Type: package

    Default: "pkgs.collectd"

    Declared by:

    [4336]<nixpkgs/nixos/modules/services/monitoring/collectd.nix>

[4337]services.collectd.autoLoadPlugin

    Enable plugin autoloading.

    Type: boolean

    Default: false

    Declared by:

    [4338]<nixpkgs/nixos/modules/services/monitoring/collectd.nix>

[4339]services.collectd.buildMinimalPackage

    Build a minimal collectd package with only the configured `services.collectd.plugins`

    Type: boolean

    Default: false

    Declared by:

    [4340]<nixpkgs/nixos/modules/services/monitoring/collectd.nix>

[4341]services.collectd.dataDir

    Data directory for collectd agent.

    Type: path

    Default: "/var/lib/collectd"

    Declared by:

    [4342]<nixpkgs/nixos/modules/services/monitoring/collectd.nix>

[4343]services.collectd.extraConfig

    Extra configuration for collectd.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [4344]<nixpkgs/nixos/modules/services/monitoring/collectd.nix>

[4345]services.collectd.include

    Additional paths to load config from.

    Type: list of strings

    Default: [ ]

    Declared by:

    [4346]<nixpkgs/nixos/modules/services/monitoring/collectd.nix>

[4347]services.collectd.plugins

    Attribute set of plugin names to plugin config segments

    Type: attribute set of strings

    Default: { }

    Example: { cpu = ""; memory = ""; network = "Server 192.168.1.1 25826"; }

    Declared by:

    [4348]<nixpkgs/nixos/modules/services/monitoring/collectd.nix>

[4349]services.collectd.user

    User under which to run collectd.

    Type: null or string

    Default: "collectd"

    Declared by:

    [4350]<nixpkgs/nixos/modules/services/monitoring/collectd.nix>

[4351]services.colord.enable

    Whether to enable colord, the color management daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4352]<nixpkgs/nixos/modules/services/x11/colord.nix>

[4353]services.compton

    Alias of services.picom.

    Type: submodule

    Declared by:

    [4354]<nixpkgs/nixos/modules/services/x11/picom.nix>

[4355]services.confd.enable

    Whether to enable confd service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4356]<nixpkgs/nixos/modules/services/misc/confd.nix>

[4357]services.confd.package

    Confd package to use.

    Type: package

    Default: "pkgs.confd"

    Declared by:

    [4358]<nixpkgs/nixos/modules/services/misc/confd.nix>

[4359]services.confd.backend

    Confd config storage backend to use.

    Type: one of "etcd", "consul", "redis", "zookeeper"

    Default: "etcd"

    Declared by:

    [4360]<nixpkgs/nixos/modules/services/misc/confd.nix>

[4361]services.confd.confDir

    The path to the confd configs.

    Type: path

    Default: "/etc/confd"

    Declared by:

    [4362]<nixpkgs/nixos/modules/services/misc/confd.nix>

[4363]services.confd.interval

    Confd check interval.

    Type: signed integer

    Default: 10

    Declared by:

    [4364]<nixpkgs/nixos/modules/services/misc/confd.nix>

[4365]services.confd.logLevel

    Confd log level.

    Type: one of "info", "debug"

    Default: "info"

    Declared by:

    [4366]<nixpkgs/nixos/modules/services/misc/confd.nix>

[4367]services.confd.nodes

    Confd list of nodes to connect to.

    Type: list of strings

    Default: [ "http://127.0.0.1:2379" ]

    Declared by:

    [4368]<nixpkgs/nixos/modules/services/misc/confd.nix>

[4369]services.confd.prefix

    The string to prefix to keys.

    Type: path

    Default: "/"

    Declared by:

    [4370]<nixpkgs/nixos/modules/services/misc/confd.nix>

[4371]services.confd.watch

    Confd, whether to watch etcd config for changes.

    Type: boolean

    Default: true

    Declared by:

    [4372]<nixpkgs/nixos/modules/services/misc/confd.nix>

[4373]services.confluence.enable

    Whether to enable Atlassian Confluence service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4374]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4375]services.confluence.package

    Atlassian Confluence package to use.

    Type: package

    Default: "pkgs.atlassian-confluence"

    Declared by:

    [4376]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4377]services.confluence.catalinaOptions

    Java options to pass to catalina/tomcat.

    Type: list of strings

    Default: [ ]

    Example: [ "-Xms1024m" "-Xmx2048m" "-Dconfluence.disable.peopledirectory.all=true" ]

    Declared by:

    [4378]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4379]services.confluence.group

    Group which runs confluence.

    Type: string

    Default: "confluence"

    Declared by:

    [4380]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4381]services.confluence.home

    Home directory of the confluence instance.

    Type: string

    Default: "/var/lib/confluence"

    Declared by:

    [4382]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4383]services.confluence.jrePackage

    Note that Atlassian only support the Oracle JRE (JRASERVER-46152).

    Type: package

    Default: "pkgs.oraclejre8"

    Declared by:

    [4384]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4385]services.confluence.listenAddress

    Address to listen on.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [4386]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4387]services.confluence.listenPort

    Port to listen on.

    Type: signed integer

    Default: 8090

    Declared by:

    [4388]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4389]services.confluence.proxy.enable

    Whether to enable proxy support.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4390]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4391]services.confluence.proxy.name

    Virtual hostname at the proxy

    Type: string

    Example: "confluence.example.com"

    Declared by:

    [4392]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4393]services.confluence.proxy.port

    Port used at the proxy

    Type: signed integer

    Default: 443

    Example: 80

    Declared by:

    [4394]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4395]services.confluence.proxy.scheme

    Protocol used at the proxy.

    Type: string

    Default: "https"

    Example: "http"

    Declared by:

    [4396]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4397]services.confluence.sso.enable

    Whether to enable SSO with Atlassian Crowd.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4398]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4399]services.confluence.sso.applicationName

    Exact name of this Confluence instance in Crowd

    Type: string

    Example: "jira"

    Declared by:

    [4400]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4401]services.confluence.sso.applicationPassword

    Application password of this Confluence instance in Crowd

    Type: string

    Declared by:

    [4402]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4403]services.confluence.sso.crowd

    Crowd Base URL without trailing slash

    Type: string

    Example: "http://localhost:8095/crowd"

    Declared by:

    [4404]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4405]services.confluence.sso.validationInterval

    Set to 0, if you want authentication checks to occur on each request. Otherwise set to the
    number of minutes between request to validate if the user is logged in or out of the Crowd
    SSO server. Setting this value to 1 or higher will increase the performance of Crowd's
    integration.

    Type: signed integer

    Default: 2

    Example: 0

    Declared by:

    [4406]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4407]services.confluence.user

    User which runs confluence.

    Type: string

    Default: "confluence"

    Declared by:

    [4408]<nixpkgs/nixos/modules/services/web-apps/atlassian/confluence.nix>

[4409]services.connman.enable

    Whether to use ConnMan for managing your network connections.

    Type: boolean

    Default: false

    Declared by:

    [4410]<nixpkgs/nixos/modules/services/networking/connman.nix>

[4411]services.connman.enableVPN

    Whether to enable ConnMan VPN service.

    Type: boolean

    Default: true

    Declared by:

    [4412]<nixpkgs/nixos/modules/services/networking/connman.nix>

[4413]services.connman.package

    The connman package / build flavor

    Type: path

    Default: (build of connman-1.39)

    Example:

    pkgs.connmanFull

    Declared by:

    [4414]<nixpkgs/nixos/modules/services/networking/connman.nix>

[4415]services.connman.extraConfig

    Configuration lines appended to the generated connman configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [4416]<nixpkgs/nixos/modules/services/networking/connman.nix>

[4417]services.connman.extraFlags

    Extra flags to pass to connmand

    Type: list of strings

    Default: [ ]

    Example: [ "--nodnsproxy" ]

    Declared by:

    [4418]<nixpkgs/nixos/modules/services/networking/connman.nix>

[4419]services.connman.networkInterfaceBlacklist

    Default blacklisted interfaces, this includes NixOS containers interfaces (ve).

    Type: list of strings

    Default: [ "vmnet" "vboxnet" "virbr" "ifb" "ve" ]

    Declared by:

    [4420]<nixpkgs/nixos/modules/services/networking/connman.nix>

[4421]services.connman.wifi.backend

    Specify the Wi-Fi backend used. Currently supported are wpa_supplicant or iwd.

    Type: one of "wpa_supplicant", "iwd"

    Default: "wpa_supplicant"

    Declared by:

    [4422]<nixpkgs/nixos/modules/services/networking/connman.nix>

[4423]services.consul.enable

    Enables the consul daemon.

    Type: boolean

    Default: false

    Declared by:

    [4424]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4425]services.consul.package

    The package used for the Consul agent and CLI.

    Type: package

    Default: "pkgs.consul"

    Declared by:

    [4426]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4427]services.consul.alerts.enable

    Whether to enable consul-alerts.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4428]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4429]services.consul.alerts.package

    Package to use for consul-alerts.

    Type: package

    Default: "pkgs.consul-alerts"

    Declared by:

    [4430]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4431]services.consul.alerts.consulAddr

    Consul api listening adddress

    Type: string

    Default: "localhost:8500"

    Declared by:

    [4432]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4433]services.consul.alerts.listenAddr

    Api listening address.

    Type: string

    Default: "localhost:9000"

    Declared by:

    [4434]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4435]services.consul.alerts.watchChecks

    Whether to enable check watcher.

    Type: boolean

    Default: true

    Declared by:

    [4436]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4437]services.consul.alerts.watchEvents

    Whether to enable event watcher.

    Type: boolean

    Default: true

    Declared by:

    [4438]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4439]services.consul.dropPrivileges

    Whether the consul agent should be run as a non-root consul user.

    Type: boolean

    Default: true

    Declared by:

    [4440]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4441]services.consul.extraConfig

    Extra configuration options which are serialized to json and added to the config.json file.

    Type: attribute set of anythings

    Default: { }

    Declared by:

    [4442]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4443]services.consul.extraConfigFiles

    Additional configuration files to pass to consul NOTE: These will not trigger the service to
    be restarted when altered.

    Type: list of strings

    Default: [ ]

    Declared by:

    [4444]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4445]services.consul.forceIpv4

    Whether we should force the interfaces to only pull ipv4 addresses.

    Type: boolean

    Default: false

    Declared by:

    [4446]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4447]services.consul.interface.advertise

    The name of the interface to pull the advertise_addr from.

    Type: null or string

    Default: null

    Declared by:

    [4448]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4449]services.consul.interface.bind

    The name of the interface to pull the bind_addr from.

    Type: null or string

    Default: null

    Declared by:

    [4450]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4451]services.consul.leaveOnStop

    If enabled, causes a leave action to be sent when closing consul. This allows a clean
    termination of the node, but permanently removes it from the cluster. You probably don't want
    this option unless you are running a node which going offline in a permanent / semi-permanent
    fashion.

    Type: boolean

    Default: false

    Declared by:

    [4452]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4453]services.consul.webUi

    Enables the web interface on the consul http port.

    Type: boolean

    Default: false

    Declared by:

    [4454]<nixpkgs/nixos/modules/services/networking/consul.nix>

[4455]services.convos.enable

    Whether to enable Convos.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4456]<nixpkgs/nixos/modules/services/web-apps/convos.nix>

[4457]services.convos.listenAddress

    Address or host the web interface should listen on

    Type: string

    Default: "*"

    Example: "127.0.0.1"

    Declared by:

    [4458]<nixpkgs/nixos/modules/services/web-apps/convos.nix>

[4459]services.convos.listenPort

    Port the web interface should listen on

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 3000

    Example: 8080

    Declared by:

    [4460]<nixpkgs/nixos/modules/services/web-apps/convos.nix>

[4461]services.convos.reverseProxy

    Enables reverse proxy support. This will allow Convos to automatically pick up the
    X-Forwarded-For and X-Request-Base HTTP headers set in your reverse proxy web server. Note
    that enabling this option without a reverse proxy in front will be a security issue.

    Type: boolean

    Default: false

    Declared by:

    [4462]<nixpkgs/nixos/modules/services/web-apps/convos.nix>

[4463]services.coredns.enable

    Whether to enable Coredns dns server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4464]<nixpkgs/nixos/modules/services/networking/coredns.nix>

[4465]services.coredns.package

    Coredns package to use.

    Type: package

    Default: "pkgs.coredns"

    Declared by:

    [4466]<nixpkgs/nixos/modules/services/networking/coredns.nix>

[4467]services.coredns.config

    Verbatim Corefile to use. See [4468]https://coredns.io/manual/toc/#configuration for details.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    . {
      whoami
    }
    ''

    Declared by:

    [4469]<nixpkgs/nixos/modules/services/networking/coredns.nix>

[4470]services.corerad.enable

    Whether to enable CoreRAD IPv6 NDP RA daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4471]<nixpkgs/nixos/modules/services/networking/corerad.nix>

[4472]services.corerad.package

    CoreRAD package to use.

    Type: package

    Default: pkgs.corerad

    Declared by:

    [4473]<nixpkgs/nixos/modules/services/networking/corerad.nix>

[4474]services.corerad.configFile

    Path to CoreRAD TOML configuration file.

    Type: path

    Example:

    "${pkgs.corerad}/etc/corerad/corerad.toml"

    Declared by:

    [4475]<nixpkgs/nixos/modules/services/networking/corerad.nix>

[4476]services.corerad.settings

    Configuration for CoreRAD, see [4477]https://github.com/mdlayher/corerad/blob/master/internal
    /config/default.toml for supported values. Ignored if configFile is set.

    Type: TOML value

    Example:

    {
      interfaces = [
        # eth0 is an upstream interface monitoring for IPv6 router advertisements.
        {
          name = "eth0";
          monitor = true;
        }
        # eth1 is a downstream interface advertising IPv6 prefixes for SLAAC.
        {
          name = "eth1";
          advertise = true;
          prefix = [{ prefix = "::/64"; }];
        }
      ];
      # Optionally enable Prometheus metrics.
      debug = {
        address = "localhost:9430";
        prometheus = true;
      };
    }

    Declared by:

    [4478]<nixpkgs/nixos/modules/services/networking/corerad.nix>

[4479]services.coturn.enable

    Whether to enable coturn TURN server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4480]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4481]services.coturn.alt-listening-port

    Alternative listening port for UDP and TCP listeners; default (or zero) value means
    "listening port plus one". This is needed for RFC 5780 support (STUN extension specs, NAT
    behavior discovery). The TURN Server supports RFC 5780 only if it is started with more than
    one listening IP address of the same family (IPv4 or IPv6). RFC 5780 is supported only by UDP
    protocol, other protocols are listening to that endpoint only for "symmetry".

    Type: signed integer

    Default: "listening-port + 1"

    Declared by:

    [4482]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4483]services.coturn.alt-tls-listening-port

    Alternative listening port for TLS and DTLS protocols.

    Type: signed integer

    Default: "tls-listening-port + 1"

    Declared by:

    [4484]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4485]services.coturn.cert

    Certificate file in PEM format.

    Type: null or string

    Default: null

    Example: "/var/lib/acme/example.com/fullchain.pem"

    Declared by:

    [4486]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4487]services.coturn.cli-ip

    Local system IP address to be used for CLI server endpoint.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [4488]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4489]services.coturn.cli-password

    CLI access password. For the security reasons, it is recommended to use the encrypted for of
    the password (see the -P command in the turnadmin utility).

    Type: null or string

    Default: null

    Declared by:

    [4490]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4491]services.coturn.cli-port

    CLI server port.

    Type: signed integer

    Default: 5766

    Declared by:

    [4492]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4493]services.coturn.dh-file

    Use custom DH TLS key, stored in PEM format in the file.

    Type: null or string

    Default: null

    Declared by:

    [4494]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4495]services.coturn.extraConfig

    Additional configuration options

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [4496]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4497]services.coturn.listening-ips

    Listener IP addresses of relay server. If no IP(s) specified in the config file or in the
    command line options, then all IPv4 and IPv6 system IPs will be used for listening.

    Type: list of strings

    Default: [ ]

    Example: [ "203.0.113.42" "2001:DB8::42" ]

    Declared by:

    [4498]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4499]services.coturn.listening-port

    TURN listener port for UDP and TCP. Note: actually, TLS and DTLS sessions can connect to the
    "plain" TCP and UDP port(s), too - if allowed by configuration.

    Type: signed integer

    Default: 3478

    Declared by:

    [4500]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4501]services.coturn.lt-cred-mech

    Use long-term credential mechanism.

    Type: boolean

    Default: false

    Declared by:

    [4502]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4503]services.coturn.max-port

    Upper bound of UDP relay endpoints

    Type: signed integer

    Default: 65535

    Declared by:

    [4504]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4505]services.coturn.min-port

    Lower bound of UDP relay endpoints

    Type: signed integer

    Default: 49152

    Declared by:

    [4506]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4507]services.coturn.no-auth

    This option is opposite to lt-cred-mech. (TURN Server with no-auth option allows anonymous
    access). If neither option is defined, and no users are defined, then no-auth is default. If
    at least one user is defined, in this file or in command line or in usersdb file, then
    lt-cred-mech is default.

    Type: boolean

    Default: false

    Declared by:

    [4508]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4509]services.coturn.no-cli

    Turn OFF the CLI support.

    Type: boolean

    Default: false

    Declared by:

    [4510]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4511]services.coturn.no-dtls

    Disable DTLS client listener

    Type: boolean

    Default: false

    Declared by:

    [4512]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4513]services.coturn.no-tcp

    Disable TCP client listener

    Type: boolean

    Default: false

    Declared by:

    [4514]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4515]services.coturn.no-tcp-relay

    Disable TCP relay endpoints

    Type: boolean

    Default: false

    Declared by:

    [4516]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4517]services.coturn.no-tls

    Disable TLS client listener

    Type: boolean

    Default: false

    Declared by:

    [4518]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4519]services.coturn.no-udp

    Disable UDP client listener

    Type: boolean

    Default: false

    Declared by:

    [4520]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4521]services.coturn.no-udp-relay

    Disable UDP relay endpoints

    Type: boolean

    Default: false

    Declared by:

    [4522]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4523]services.coturn.pkey

    Private key file in PEM format.

    Type: null or string

    Default: null

    Example: "/var/lib/acme/example.com/key.pem"

    Declared by:

    [4524]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4525]services.coturn.realm

    The default realm to be used for the users when no explicit origin/realm relationship was
    found in the database, or if the TURN server is not using any database (just the
    commands-line settings and the userdb file). Must be used with long-term credentials
    mechanism or with TURN REST API.

    Type: string

    Default: "nixos"

    Example: "example.com"

    Declared by:

    [4526]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4527]services.coturn.relay-ips

    Relay address (the local IP address that will be used to relay the packets to the peer).
    Multiple relay addresses may be used. The same IP(s) can be used as both listening IP(s) and
    relay IP(s).

    If no relay IP(s) specified, then the turnserver will apply the default policy: it will
    decide itself which relay addresses to be used, and it will always be using the client socket
    IP address as the relay IP address of the TURN session (if the requested relay address family
    is the same as the family of the client socket).

    Type: list of strings

    Default: [ ]

    Example: [ "203.0.113.42" "2001:DB8::42" ]

    Declared by:

    [4528]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4529]services.coturn.secure-stun

    Require authentication of the STUN Binding request. By default, the clients are allowed
    anonymous access to the STUN Binding functionality.

    Type: boolean

    Default: false

    Declared by:

    [4530]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4531]services.coturn.static-auth-secret

    'Static' authentication secret value (a string) for TURN REST API only. If not set, then the
    turn server will try to use the 'dynamic' value in turn_secret table in user database (if
    present). The database-stored value can be changed on-the-fly by a separate program, so this
    is why that other mode is 'dynamic'.

    Type: null or string

    Default: null

    Declared by:

    [4532]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4533]services.coturn.tls-listening-port

    TURN listener port for TLS. Note: actually, "plain" TCP and UDP sessions can connect to the
    TLS and DTLS port(s), too - if allowed by configuration. The TURN server "automatically"
    recognizes the type of traffic. Actually, two listening endpoints (the "plain" one and the
    "tls" one) are equivalent in terms of functionality; but we keep both endpoints to satisfy
    the RFC 5766 specs. For secure TCP connections, we currently support SSL version 3 and TLS
    version 1.0, 1.1 and 1.2. For secure UDP connections, we support DTLS version 1.

    Type: signed integer

    Default: 5349

    Declared by:

    [4534]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4535]services.coturn.use-auth-secret

    TURN REST API flag. Flag that sets a special authorization option that is based upon
    authentication secret. This feature can be used with the long-term authentication mechanism,
    only. This feature purpose is to support "TURN Server REST API", see "TURN REST API" link in
    the project's page https://github.com/coturn/coturn/

    This option is used with timestamp:

    usercombo -> "timestamp:userid" turn user -> usercombo turn password -> base64(hmac(secret
    key, usercombo))

    This allows TURN credentials to be accounted for a specific user id. If you don't have a
    suitable id, the timestamp alone can be used. This option is just turning on secret-based
    authentication. The actual value of the secret is defined either by option
    static-auth-secret, or can be found in the turn_secret table in the database.

    Type: boolean

    Default: false

    Declared by:

    [4536]<nixpkgs/nixos/modules/services/networking/coturn.nix>

[4537]services.couchdb.enable

    Whether to run CouchDB Server.

    Type: boolean

    Default: false

    Declared by:

    [4538]<nixpkgs/nixos/modules/services/databases/couchdb.nix>

[4539]services.couchdb.package

    CouchDB package to use.

    Type: package

    Default: "pkgs.couchdb"

    Example:

    pkgs.couchdb

    Declared by:

    [4540]<nixpkgs/nixos/modules/services/databases/couchdb.nix>

[4541]services.couchdb.adminPass

    Couchdb (i.e. fauxton) account with permission for all dbs and tasks.

    Type: null or string

    Default: null

    Declared by:

    [4542]<nixpkgs/nixos/modules/services/databases/couchdb.nix>

[4543]services.couchdb.adminUser

    Couchdb (i.e. fauxton) account with permission for all dbs and tasks.

    Type: string

    Default: "admin"

    Declared by:

    [4544]<nixpkgs/nixos/modules/services/databases/couchdb.nix>

[4545]services.couchdb.bindAddress

    Defines the IP address by which CouchDB will be accessible.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [4546]<nixpkgs/nixos/modules/services/databases/couchdb.nix>

[4547]services.couchdb.configFile

    Configuration file for persisting runtime changes. File needs to be readable and writable
    from couchdb user/group.

    Type: path

    Declared by:

    [4548]<nixpkgs/nixos/modules/services/databases/couchdb.nix>

[4549]services.couchdb.databaseDir

    Specifies location of CouchDB database files (*.couch named). This location should be
    writable and readable for the user the CouchDB service runs as (couchdb by default).

    Type: path

    Default: "/var/lib/couchdb"

    Declared by:

    [4550]<nixpkgs/nixos/modules/services/databases/couchdb.nix>

[4551]services.couchdb.extraConfig

    Extra configuration. Overrides any other cofiguration.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [4552]<nixpkgs/nixos/modules/services/databases/couchdb.nix>

[4553]services.couchdb.group

    Group account under which couchdb runs.

    Type: string

    Default: "couchdb"

    Declared by:

    [4554]<nixpkgs/nixos/modules/services/databases/couchdb.nix>

[4555]services.couchdb.logFile

    Specifies the location of file for logging output.

    Type: path

    Default: "/var/log/couchdb.log"

    Declared by:

    [4556]<nixpkgs/nixos/modules/services/databases/couchdb.nix>

[4557]services.couchdb.port

    Defined the port number to listen.

    Type: signed integer

    Default: 5984

    Declared by:

    [4558]<nixpkgs/nixos/modules/services/databases/couchdb.nix>

[4559]services.couchdb.uriFile

    This file contains the full URI that can be used to access this instance of CouchDB. It is
    used to help discover the port CouchDB is running on (if it was set to 0 (e.g. automatically
    assigned any free one). This file should be writable and readable for the user that runs the
    CouchDB service (couchdb by default).

    Type: path

    Default: "/run/couchdb/couchdb.uri"

    Declared by:

    [4560]<nixpkgs/nixos/modules/services/databases/couchdb.nix>

[4561]services.couchdb.user

    User account under which couchdb runs.

    Type: string

    Default: "couchdb"

    Declared by:

    [4562]<nixpkgs/nixos/modules/services/databases/couchdb.nix>

[4563]services.couchdb.viewIndexDir

    Specifies location of CouchDB view index files. This location should be writable and readable
    for the user that runs the CouchDB service (couchdb by default).

    Type: path

    Default: "/var/lib/couchdb"

    Declared by:

    [4564]<nixpkgs/nixos/modules/services/databases/couchdb.nix>

[4565]services.couchpotato.enable

    Whether to enable CouchPotato Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4566]<nixpkgs/nixos/modules/services/misc/couchpotato.nix>

[4567]services.cpuminer-cryptonight.enable

    Whether to enable the cpuminer cryptonight miner.

    Type: boolean

    Default: false

    Declared by:

    [4568]<nixpkgs/nixos/modules/services/misc/cpuminer-cryptonight.nix>

[4569]services.cpuminer-cryptonight.pass

    Password for mining server

    Type: string

    Default: "x"

    Declared by:

    [4570]<nixpkgs/nixos/modules/services/misc/cpuminer-cryptonight.nix>

[4571]services.cpuminer-cryptonight.threads

    Number of miner threads, defaults to available processors

    Type: signed integer

    Default: 0

    Declared by:

    [4572]<nixpkgs/nixos/modules/services/misc/cpuminer-cryptonight.nix>

[4573]services.cpuminer-cryptonight.url

    URL of mining server

    Type: string

    Declared by:

    [4574]<nixpkgs/nixos/modules/services/misc/cpuminer-cryptonight.nix>

[4575]services.cpuminer-cryptonight.user

    Username for mining server

    Type: string

    Declared by:

    [4576]<nixpkgs/nixos/modules/services/misc/cpuminer-cryptonight.nix>

[4577]services.croc.enable

    Whether to enable croc relay.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4578]<nixpkgs/nixos/modules/services/networking/croc.nix>

[4579]services.croc.debug

    Whether to enable debug logs.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4580]<nixpkgs/nixos/modules/services/networking/croc.nix>

[4581]services.croc.openFirewall

    Whether to enable opening of the peer port(s) in the firewall.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4582]<nixpkgs/nixos/modules/services/networking/croc.nix>

[4583]services.croc.pass

    Password or passwordfile for the relay.

    Type: path or string

    Default: "pass123"

    Declared by:

    [4584]<nixpkgs/nixos/modules/services/networking/croc.nix>

[4585]services.croc.ports

    Ports of the relay.

    Type: list of 16 bit unsigned integer; between 0 and 65535 (both inclusive)s

    Default: [ 9009 9010 9011 9012 9013 ]

    Declared by:

    [4586]<nixpkgs/nixos/modules/services/networking/croc.nix>

[4587]services.cron.enable

    Whether to enable the Vixie cron daemon.

    Type: boolean

    Default: false

    Declared by:

    [4588]<nixpkgs/nixos/modules/services/scheduling/cron.nix>

[4589]services.cron.cronFiles

    A list of extra crontab files that will be read and appended to the main crontab file when
    the cron service starts.

    Type: list of paths

    Default: [ ]

    Declared by:

    [4590]<nixpkgs/nixos/modules/services/scheduling/cron.nix>

[4591]services.cron.mailto

    Email address to which job output will be mailed.

    Type: null or string

    Default: null

    Declared by:

    [4592]<nixpkgs/nixos/modules/services/scheduling/cron.nix>

[4593]services.cron.systemCronJobs

    A list of Cron jobs to be appended to the system-wide crontab. See the manual page for
    crontab for the expected format. If you want to get the results mailed you must setuid
    sendmail. See security.wrappers

    If neither /var/cron/cron.deny nor /var/cron/cron.allow exist only root is allowed to have
    its own crontab file. The /var/cron/cron.deny file is created automatically for you, so every
    user can use a crontab.

    Many nixos modules set systemCronJobs, so if you decide to disable vixie cron and enable
    another cron daemon, you may want it to get its system crontab based on systemCronJobs.

    Type: list of strings

    Default: [ ]

    Example:

    [ "* * * * *  test   ls -l / > /tmp/cronout 2>&1"
      "* * * * *  eelco  echo Hello World > /home/eelco/cronout"
    ]

    Declared by:

    [4594]<nixpkgs/nixos/modules/services/scheduling/cron.nix>

[4595]services.crowd.enable

    Whether to enable Atlassian Crowd service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4596]<nixpkgs/nixos/modules/services/web-apps/atlassian/crowd.nix>

[4597]services.crowd.package

    Atlassian Crowd package to use.

    Type: package

    Default: "pkgs.atlassian-crowd"

    Declared by:

    [4598]<nixpkgs/nixos/modules/services/web-apps/atlassian/crowd.nix>

[4599]services.crowd.catalinaOptions

    Java options to pass to catalina/tomcat.

    Type: list of strings

    Default: [ ]

    Example: [ "-Xms1024m" "-Xmx2048m" ]

    Declared by:

    [4600]<nixpkgs/nixos/modules/services/web-apps/atlassian/crowd.nix>

[4601]services.crowd.group

    Group which runs Crowd.

    Type: string

    Default: "crowd"

    Declared by:

    [4602]<nixpkgs/nixos/modules/services/web-apps/atlassian/crowd.nix>

[4603]services.crowd.home

    Home directory of the Crowd instance.

    Type: string

    Default: "/var/lib/crowd"

    Declared by:

    [4604]<nixpkgs/nixos/modules/services/web-apps/atlassian/crowd.nix>

[4605]services.crowd.jrePackage

    Note that Atlassian only support the Oracle JRE (JRASERVER-46152).

    Type: package

    Default: "pkgs.oraclejre8"

    Declared by:

    [4606]<nixpkgs/nixos/modules/services/web-apps/atlassian/crowd.nix>

[4607]services.crowd.listenAddress

    Address to listen on.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [4608]<nixpkgs/nixos/modules/services/web-apps/atlassian/crowd.nix>

[4609]services.crowd.listenPort

    Port to listen on.

    Type: signed integer

    Default: 8092

    Declared by:

    [4610]<nixpkgs/nixos/modules/services/web-apps/atlassian/crowd.nix>

[4611]services.crowd.openidPassword

    Application password for OpenID server.

    Type: string

    Declared by:

    [4612]<nixpkgs/nixos/modules/services/web-apps/atlassian/crowd.nix>

[4613]services.crowd.proxy.enable

    Whether to enable reverse proxy support.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4614]<nixpkgs/nixos/modules/services/web-apps/atlassian/crowd.nix>

[4615]services.crowd.proxy.name

    Virtual hostname at the proxy

    Type: string

    Example: "crowd.example.com"

    Declared by:

    [4616]<nixpkgs/nixos/modules/services/web-apps/atlassian/crowd.nix>

[4617]services.crowd.proxy.port

    Port used at the proxy

    Type: signed integer

    Default: 443

    Example: 80

    Declared by:

    [4618]<nixpkgs/nixos/modules/services/web-apps/atlassian/crowd.nix>

[4619]services.crowd.proxy.scheme

    Protocol used at the proxy.

    Type: string

    Default: "https"

    Example: "http"

    Declared by:

    [4620]<nixpkgs/nixos/modules/services/web-apps/atlassian/crowd.nix>

[4621]services.crowd.proxy.secure

    Whether the connections to the proxy should be considered secure.

    Type: boolean

    Default: true

    Declared by:

    [4622]<nixpkgs/nixos/modules/services/web-apps/atlassian/crowd.nix>

[4623]services.crowd.user

    User which runs Crowd.

    Type: string

    Default: "crowd"

    Declared by:

    [4624]<nixpkgs/nixos/modules/services/web-apps/atlassian/crowd.nix>

[4625]services.cryptpad.enable

    Whether to enable the Cryptpad service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4626]<nixpkgs/nixos/modules/services/web-apps/cryptpad.nix>

[4627]services.cryptpad.package

    Cryptpad package to use.

    Type: package

    Default: "pkgs.cryptpad"

    Declared by:

    [4628]<nixpkgs/nixos/modules/services/web-apps/cryptpad.nix>

[4629]services.cryptpad.configFile

    Path to the JavaScript configuration file.

    See [4630]https://github.com/xwiki-labs/cryptpad/blob/master/config/config.example.js for a
    configuration example.

    Type: path

    Default: "\${cfg.package}/lib/node_modules/cryptpad/config/config.example.js"

    Declared by:

    [4631]<nixpkgs/nixos/modules/services/web-apps/cryptpad.nix>

[4632]services.dante.enable

    Whether to enable Dante SOCKS proxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4633]<nixpkgs/nixos/modules/services/networking/dante.nix>

[4634]services.dante.config

    Contents of Dante's configuration file. NOTE: user.privileged, user.unprivileged and
    logoutput are set by the service.

    Type: strings concatenated with "\n"

    Declared by:

    [4635]<nixpkgs/nixos/modules/services/networking/dante.nix>

[4636]services.darkhttpd.enable

    Whether to enable DarkHTTPd web server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4637]<nixpkgs/nixos/modules/services/web-servers/darkhttpd.nix>

[4638]services.darkhttpd.address

    Address to listen on. Pass `all` to listen on all interfaces.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [4639]<nixpkgs/nixos/modules/services/web-servers/darkhttpd.nix>

[4640]services.darkhttpd.extraArgs

    Additional configuration passed to the executable.

    Type: list of strings

    Default: [ ]

    Declared by:

    [4641]<nixpkgs/nixos/modules/services/web-servers/darkhttpd.nix>

[4642]services.darkhttpd.hideServerId

    Don't identify the server type in headers or directory listings.

    Type: boolean

    Default: true

    Declared by:

    [4643]<nixpkgs/nixos/modules/services/web-servers/darkhttpd.nix>

[4644]services.darkhttpd.port

    Port to listen on. Pass 0 to let the system choose any free port for you.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 80

    Declared by:

    [4645]<nixpkgs/nixos/modules/services/web-servers/darkhttpd.nix>

[4646]services.darkhttpd.rootDir

    Path from which to serve files.

    Type: path

    Declared by:

    [4647]<nixpkgs/nixos/modules/services/web-servers/darkhttpd.nix>

[4648]services.das_watchdog.enable

    Whether to enable realtime watchdog.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4649]<nixpkgs/nixos/modules/services/monitoring/das_watchdog.nix>

[4650]services.datadog-agent.enable

    Whether to enable the datadog-agent v6 monitoring service

    Type: boolean

    Default: false

    Declared by:

    [4651]<nixpkgs/nixos/modules/services/monitoring/datadog-agent.nix>

[4652]services.datadog-agent.enableLiveProcessCollection

    Whether to enable the live process collection agent.

    Type: boolean

    Default: false

    Declared by:

    [4653]<nixpkgs/nixos/modules/services/monitoring/datadog-agent.nix>

[4654]services.datadog-agent.enableTraceAgent

    Whether to enable the trace agent.

    Type: boolean

    Default: false

    Declared by:

    [4655]<nixpkgs/nixos/modules/services/monitoring/datadog-agent.nix>

[4656]services.datadog-agent.package

    Which DataDog v6 agent package to use. Note that the provided package is expected to have an
    overridable `pythonPackages`-attribute which configures the Python environment with the
    Datadog checks.

    Type: package

    Default: "pkgs.datadog-agent"

    Declared by:

    [4657]<nixpkgs/nixos/modules/services/monitoring/datadog-agent.nix>

[4658]services.datadog-agent.apiKeyFile

    Path to a file containing the Datadog API key to associate the agent with your account.

    Type: path

    Example: "/run/keys/datadog_api_key"

    Declared by:

    [4659]<nixpkgs/nixos/modules/services/monitoring/datadog-agent.nix>

[4660]services.datadog-agent.checks

    Configuration for all Datadog checks. Keys of this attribute set will be used as the name of
    the check to create the appropriate configuration in `conf.d/$check.d/conf.yaml`.

    The configuration is converted into JSON from the plain Nix language configuration, meaning
    that you should write configuration adhering to Datadog's documentation - but in Nix
    language.

    Refer to the implementation of this module (specifically the definition of `defaultChecks`)
    for an example.

    Note: The 'disk' and 'network' check are configured in separate options because they exist by
    default. Attempting to override their configuration here will have no effect.

    Type: attribute set of attribute sets

    Default: { }

    Example: { http_check = { init_config = null; instances = [ { name = "some-service"; tags = [
    "some-service" ] ; url = "http://localhost:1337/healthz"; } ] ; } ; }

    Declared by:

    [4661]<nixpkgs/nixos/modules/services/monitoring/datadog-agent.nix>

[4662]services.datadog-agent.ddUrl

    Custom dd_url to configure the agent with. Useful if traffic to datadog needs to go through a
    proxy. Don't use this to point to another datadog site (EU) - use site instead.

    Type: null or string

    Default: null

    Example: "http://haproxy.example.com:3834"

    Declared by:

    [4663]<nixpkgs/nixos/modules/services/monitoring/datadog-agent.nix>

[4664]services.datadog-agent.diskCheck

    Disk check config

    Type: attribute set

    Default: { init_config = { } ; instances = [ { use_mount = "false"; } ] ; }

    Declared by:

    [4665]<nixpkgs/nixos/modules/services/monitoring/datadog-agent.nix>

[4666]services.datadog-agent.extraConfig

    Extra configuration options that will be merged into the main config file datadog.yaml.

    Type: attribute set

    Default: { }

    Declared by:

    [4667]<nixpkgs/nixos/modules/services/monitoring/datadog-agent.nix>

[4668]services.datadog-agent.extraIntegrations

    Extra integrations from the Datadog core-integrations repository that should be built and
    included.

    By default the included integrations are disk, mongo, network, nginx and postgres.

    To include additional integrations the name of the derivation and a function to filter its
    dependencies from the Python package set must be provided.

    Type: attribute set

    Default: { }

    Example: { ntp = "<function>"; }

    Declared by:

    [4669]<nixpkgs/nixos/modules/services/monitoring/datadog-agent.nix>

[4670]services.datadog-agent.hostname

    The hostname to show in the Datadog dashboard (optional)

    Type: null or string

    Default: null

    Example: "mymachine.mydomain"

    Declared by:

    [4671]<nixpkgs/nixos/modules/services/monitoring/datadog-agent.nix>

[4672]services.datadog-agent.logLevel

    Logging verbosity.

    Type: null or one of "DEBUG", "INFO", "WARN", "ERROR"

    Default: null

    Declared by:

    [4673]<nixpkgs/nixos/modules/services/monitoring/datadog-agent.nix>

[4674]services.datadog-agent.networkCheck

    Network check config

    Type: attribute set

    Default: { init_config = { } ; instances = [ { collect_connection_state = false;
    excluded_interfaces = [ "lo" "lo0" ] ; } ] ; }

    Declared by:

    [4675]<nixpkgs/nixos/modules/services/monitoring/datadog-agent.nix>

[4676]services.datadog-agent.site

    The datadog site to point the agent towards. Set to datadoghq.eu to point it to their EU
    site.

    Type: null or string

    Default: null

    Example: "datadoghq.eu"

    Declared by:

    [4677]<nixpkgs/nixos/modules/services/monitoring/datadog-agent.nix>

[4678]services.datadog-agent.tags

    The tags to mark this Datadog agent

    Type: null or list of strings

    Default: null

    Example: [ "test" "service" ]

    Declared by:

    [4679]<nixpkgs/nixos/modules/services/monitoring/datadog-agent.nix>

[4680]services.davfs2.enable

    Whether to enable davfs2.

    Type: boolean

    Default: false

    Declared by:

    [4681]<nixpkgs/nixos/modules/services/network-filesystems/davfs2.nix>

[4682]services.davfs2.davGroup

    The group of the running mount.davfs daemon. Ordinary users must be member of this group in
    order to mount a davfs2 file system. Value must be given as name, not as numerical id.

    Type: string

    Default: "davfs2"

    Declared by:

    [4683]<nixpkgs/nixos/modules/services/network-filesystems/davfs2.nix>

[4684]services.davfs2.davUser

    When invoked by root the mount.davfs daemon will run as this user. Value must be given as
    name, not as numerical id.

    Type: string

    Default: "davfs2"

    Declared by:

    [4685]<nixpkgs/nixos/modules/services/network-filesystems/davfs2.nix>

[4686]services.davfs2.extraConfig

    Extra lines appended to the configuration of davfs2.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    kernel_fs coda
    proxy foo.bar:8080
    use_locks 0
    ''

    Declared by:

    [4687]<nixpkgs/nixos/modules/services/network-filesystems/davfs2.nix>

[4688]services.davmail.enable

    Whether to enable davmail, an MS Exchange gateway.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4689]<nixpkgs/nixos/modules/services/mail/davmail.nix>

[4690]services.davmail.config

    Davmail configuration. Refer to [4691]http://davmail.sourceforge.net/serversetup.html and 
    [4692]http://davmail.sourceforge.net/advanced.html for details on supported values.

    Type: davmail config type (str, int, bool or attribute set thereof)

    Default: { }

    Example:

    {
      davmail.allowRemote = true;
      davmail.imapPort = 55555;
      davmail.bindAddress = "10.0.1.2";
      davmail.smtpSaveInSent = true;
      davmail.folderSizeLimit = 10;
      davmail.caldavAutoSchedule = false;
      log4j.logger.rootLogger = "DEBUG";
    }

    Declared by:

    [4693]<nixpkgs/nixos/modules/services/mail/davmail.nix>

[4694]services.davmail.url

    Outlook Web Access URL to access the exchange server, i.e. the base webmail URL.

    Type: string

    Example: "https://outlook.office365.com/EWS/Exchange.asmx"

    Declared by:

    [4695]<nixpkgs/nixos/modules/services/mail/davmail.nix>

[4696]services.dbus.packages

    Packages whose D-Bus configuration files should be included in the configuration of the D-Bus
    system-wide or session-wide message bus. Specifically, files in the following directories
    will be included into their respective DBus configuration paths: pkg/etc/dbus-1/system.d pkg/
    share/dbus-1/system.d pkg/share/dbus-1/system-services pkg/etc/dbus-1/session.d pkg/share/
    dbus-1/session.d pkg/share/dbus-1/services

    Type: list of paths

    Default: [ ]

    Declared by:

    [4697]<nixpkgs/nixos/modules/services/system/dbus.nix>

[4698]services.dbus.apparmor

    AppArmor mode for dbus.

    enabled enables mediation when it's supported in the kernel, disabled always disables
    AppArmor even with kernel support, and required fails when AppArmor was not found in the
    kernel.

    Type: one of "enabled", "disabled", "required"

    Default: "disabled"

    Declared by:

    [4699]<nixpkgs/nixos/modules/services/system/dbus.nix>

[4700]services.dd-agent.enable

    Whether to enable the dd-agent v5 monitoring service. For datadog-agent v6, see
    services.datadog-agent.enable.

    Type: boolean

    Default: false

    Declared by:

    [4701]<nixpkgs/nixos/modules/services/monitoring/dd-agent/dd-agent.nix>

[4702]services.dd-agent.api_key

    The Datadog API key to associate the agent with your account.

    Warning: this key is stored in cleartext within the world-readable Nix store! Consider using
    the new v6 services.datadog-agent module instead.

    Type: string

    Example: "ae0aa6a8f08efa988ba0a17578f009ab"

    Declared by:

    [4703]<nixpkgs/nixos/modules/services/monitoring/dd-agent/dd-agent.nix>

[4704]services.dd-agent.hostname

    The hostname to show in the Datadog dashboard (optional)

    Type: null or string

    Default: null

    Example: "mymachine.mydomain"

    Declared by:

    [4705]<nixpkgs/nixos/modules/services/monitoring/dd-agent/dd-agent.nix>

[4706]services.dd-agent.jmxConfig

    JMX integration configuration

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [4707]<nixpkgs/nixos/modules/services/monitoring/dd-agent/dd-agent.nix>

[4708]services.dd-agent.mongoConfig

    MongoDB integration configuration

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [4709]<nixpkgs/nixos/modules/services/monitoring/dd-agent/dd-agent.nix>

[4710]services.dd-agent.nginxConfig

    Datadog nginx integration configuration

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [4711]<nixpkgs/nixos/modules/services/monitoring/dd-agent/dd-agent.nix>

[4712]services.dd-agent.postgresqlConfig

    Datadog PostgreSQL integration configuration

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [4713]<nixpkgs/nixos/modules/services/monitoring/dd-agent/dd-agent.nix>

[4714]services.dd-agent.processConfig

    Process integration configuration See [4715]https://docs.datadoghq.com/integrations/process/

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [4716]<nixpkgs/nixos/modules/services/monitoring/dd-agent/dd-agent.nix>

[4717]services.dd-agent.tags

    The tags to mark this Datadog agent

    Type: null or list of strings

    Default: null

    Example: [ "test" "service" ]

    Declared by:

    [4718]<nixpkgs/nixos/modules/services/monitoring/dd-agent/dd-agent.nix>

[4719]services.ddclient.enable

    Whether to synchronise your machine's IP address with a dynamic DNS provider (e.g.
    dyndns.org).

    Type: boolean

    Default: false

    Declared by:

    [4720]<nixpkgs/nixos/modules/services/networking/ddclient.nix>

[4721]services.ddclient.configFile

    Path to configuration file. When set to the default '/etc/ddclient.conf' it will be populated
    with the various other options in this module. When it is changed (for example: '/root/nixos/
    secrets/ddclient.conf') the file read directly to configure ddclient. This is a source of
    impurity. The purpose of this is to avoid placing secrets into the store.

    Type: path

    Default: "/etc/ddclient.conf"

    Example: "/root/nixos/secrets/ddclient.conf"

    Declared by:

    [4722]<nixpkgs/nixos/modules/services/networking/ddclient.nix>

[4723]services.ddclient.domains

    Domain name(s) to synchronize.

    Type: list of strings

    Default: [ "" ]

    Declared by:

    [4724]<nixpkgs/nixos/modules/services/networking/ddclient.nix>

[4725]services.ddclient.extraConfig

    Extra configuration. Contents will be added verbatim to the configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [4726]<nixpkgs/nixos/modules/services/networking/ddclient.nix>

[4727]services.ddclient.interval

    The interval at which to run the check and update. See man 7 systemd.time for the format.

    Type: string

    Default: "10min"

    Declared by:

    [4728]<nixpkgs/nixos/modules/services/networking/ddclient.nix>

[4729]services.ddclient.password

    Password. WARNING: The password becomes world readable in the Nix store.

    Type: string

    Default: ""

    Declared by:

    [4730]<nixpkgs/nixos/modules/services/networking/ddclient.nix>

[4731]services.ddclient.protocol

    Protocol to use with dynamic DNS provider (see https://sourceforge.net/p/ddclient/wiki/
    protocols).

    Type: string

    Default: "dyndns2"

    Declared by:

    [4732]<nixpkgs/nixos/modules/services/networking/ddclient.nix>

[4733]services.ddclient.quiet

    Print no messages for unnecessary updates.

    Type: boolean

    Default: false

    Declared by:

    [4734]<nixpkgs/nixos/modules/services/networking/ddclient.nix>

[4735]services.ddclient.script

    script as required by some providers.

    Type: string

    Default: ""

    Declared by:

    [4736]<nixpkgs/nixos/modules/services/networking/ddclient.nix>

[4737]services.ddclient.server

    Server address.

    Type: string

    Default: ""

    Declared by:

    [4738]<nixpkgs/nixos/modules/services/networking/ddclient.nix>

[4739]services.ddclient.ssl

    Whether to use to use SSL/TLS to connect to dynamic DNS provider.

    Type: boolean

    Default: true

    Declared by:

    [4740]<nixpkgs/nixos/modules/services/networking/ddclient.nix>

[4741]services.ddclient.use

    Method to determine the IP address to send to the dynamic DNS provider.

    Type: string

    Default: "web, web=checkip.dyndns.com/, web-skip='Current IP Address: '"

    Declared by:

    [4742]<nixpkgs/nixos/modules/services/networking/ddclient.nix>

[4743]services.ddclient.username

    User name.

    Type: string

    Default: ""

    Declared by:

    [4744]<nixpkgs/nixos/modules/services/networking/ddclient.nix>

[4745]services.ddclient.verbose

    Print verbose information.

    Type: boolean

    Default: true

    Declared by:

    [4746]<nixpkgs/nixos/modules/services/networking/ddclient.nix>

[4747]services.ddclient.zone

    zone as required by some providers.

    Type: string

    Default: ""

    Declared by:

    [4748]<nixpkgs/nixos/modules/services/networking/ddclient.nix>

[4749]services.deluge.enable

    Whether to enable Deluge daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4750]<nixpkgs/nixos/modules/services/torrent/deluge.nix>

[4751]services.deluge.package

    Deluge package to use.

    Type: package

    Example:

    pkgs.deluge-1_x

    Declared by:

    [4752]<nixpkgs/nixos/modules/services/torrent/deluge.nix>

[4753]services.deluge.authFile

    The file managing the authentication for deluge, the format of this file is straightforward,
    each line contains a username:password:level tuple in plaintext. It only has an effect when
    services.deluge.declarative is set to true. See [4754]https://dev.deluge-torrent.org/wiki/
    UserGuide/Authentication for more informations.

    Type: path

    Example: "/run/keys/deluge-auth"

    Declared by:

    [4755]<nixpkgs/nixos/modules/services/torrent/deluge.nix>

[4756]services.deluge.config

    Deluge core configuration for the core.conf file. Only has an effect when
    services.deluge.declarative is set to true. String values must be quoted, integer and boolean
    values must not. See [4757]https://git.deluge-torrent.org/deluge/tree/deluge/core/
    preferencesmanager.py#n41 for the availaible options.

    Type: attribute set

    Default: { }

    Example:

    {
      download_location = "/srv/torrents/";
      max_upload_speed = "1000.0";
      share_ratio_limit = "2.0";
      allow_remote = true;
      daemon_port = 58846;
      listen_ports = [ 6881 6889 ];
    }

    Declared by:

    [4758]<nixpkgs/nixos/modules/services/torrent/deluge.nix>

[4759]services.deluge.dataDir

    The directory where deluge will create files.

    Type: path

    Default: "/var/lib/deluge"

    Declared by:

    [4760]<nixpkgs/nixos/modules/services/torrent/deluge.nix>

[4761]services.deluge.declarative

    Whether to use a declarative deluge configuration. Only if set to true, the options
    services.deluge.config, services.deluge.openFirewall and services.deluge.authFile will be
    applied.

    Type: boolean

    Default: false

    Declared by:

    [4762]<nixpkgs/nixos/modules/services/torrent/deluge.nix>

[4763]services.deluge.extraPackages

    Extra packages available at runtime to enable Deluge's plugins. For example, extraction
    utilities are required for the built-in "Extractor" plugin. This always contains unzip,
    gnutar, xz and bzip2.

    Type: list of packages

    Default: [ ]

    Declared by:

    [4764]<nixpkgs/nixos/modules/services/torrent/deluge.nix>

[4765]services.deluge.group

    Group under which deluge runs.

    Type: string

    Default: "deluge"

    Declared by:

    [4766]<nixpkgs/nixos/modules/services/torrent/deluge.nix>

[4767]services.deluge.openFilesLimit

    Number of files to allow deluged to open.

    Type: signed integer or string

    Default: 4096

    Declared by:

    [4768]<nixpkgs/nixos/modules/services/torrent/deluge.nix>

[4769]services.deluge.openFirewall

    Whether to open the firewall for the ports in services.deluge.config.listen_ports. It only
    takes effet if services.deluge.declarative is set to true.

    It does NOT apply to the daemon port nor the web UI port. To access those ports secuerly
    check the documentation [4770]https://dev.deluge-torrent.org/wiki/UserGuide/ThinClient#
    CreateSSHTunnel or use a VPN or configure certificates for deluge.

    Type: boolean

    Default: false

    Declared by:

    [4771]<nixpkgs/nixos/modules/services/torrent/deluge.nix>

[4772]services.deluge.user

    User account under which deluge runs.

    Type: string

    Default: "deluge"

    Declared by:

    [4773]<nixpkgs/nixos/modules/services/torrent/deluge.nix>

[4774]services.deluge.web.enable

    Whether to enable Deluge Web daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4775]<nixpkgs/nixos/modules/services/torrent/deluge.nix>

[4776]services.deluge.web.openFirewall

    Open ports in the firewall for deluge web daemon

    Type: boolean

    Default: false

    Declared by:

    [4777]<nixpkgs/nixos/modules/services/torrent/deluge.nix>

[4778]services.deluge.web.port

    Deluge web UI port.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8112

    Declared by:

    [4779]<nixpkgs/nixos/modules/services/torrent/deluge.nix>

[4780]services.devmon.enable

    Whether to enable devmon, an automatic device mounting daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4781]<nixpkgs/nixos/modules/services/misc/devmon.nix>

[4782]services.dhcpd4.enable

    Whether to enable the DHCPv4 server.

    Type: boolean

    Default: false

    Declared by:

    [4783]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4784]services.dhcpd4.authoritative

    Whether the DHCP server shall send DHCPNAK messages to misconfigured clients. If this is not
    done, clients may be unable to get a correct IP address after changing subnets until their
    old lease has expired.

    Type: boolean

    Default: true

    Declared by:

    [4785]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4786]services.dhcpd4.configFile

    The path of the DHCP server configuration file. If no file is specified, a file is generated
    using the other options.

    Type: null or path

    Default: null

    Declared by:

    [4787]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4788]services.dhcpd4.extraConfig

    Extra text to be appended to the DHCP server configuration file. Currently, you almost
    certainly need to specify something there, such as the options specifying the subnet mask,
    DNS servers, etc.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    option subnet-mask 255.255.255.0;
    option broadcast-address 192.168.1.255;
    option routers 192.168.1.5;
    option domain-name-servers 130.161.158.4, 130.161.33.17, 130.161.180.1;
    option domain-name "example.org";
    subnet 192.168.1.0 netmask 255.255.255.0 {
      range 192.168.1.100 192.168.1.200;
    }
    ''

    Declared by:

    [4789]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4790]services.dhcpd4.extraFlags

    Additional command line flags to be passed to the dhcpd daemon.

    Type: list of strings

    Default: [ ]

    Declared by:

    [4791]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4792]services.dhcpd4.interfaces

    The interfaces on which the DHCP server should listen.

    Type: list of strings

    Default: [ "eth0" ]

    Declared by:

    [4793]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4794]services.dhcpd4.machines

    A list mapping Ethernet addresses to IPv4 addresses for the DHCP server.

    Type: list of submodules

    Default: [ ]

    Example: [ { ethernetAddress = "00:16:76:9a:32:1d"; hostName = "foo"; ipAddress =
    "192.168.1.10"; } { ethernetAddress = "00:19:d1:1d:c4:9a"; hostName = "bar"; ipAddress =
    "192.168.1.11"; } ]

    Declared by:

    [4795]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4796]services.dhcpd4.machines.*.ethernetAddress

    MAC address of the machine.

    Type: string

    Example: "00:16:76:9a:32:1d"

    Declared by:

    [4797]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4798]services.dhcpd4.machines.*.hostName

    Hostname which is assigned statically to the machine.

    Type: string

    Example: "foo"

    Declared by:

    [4799]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4800]services.dhcpd4.machines.*.ipAddress

    IP address of the machine.

    Type: string

    Example: "192.168.1.10"

    Declared by:

    [4801]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4802]services.dhcpd4.stateDir

    State directory for the DHCP server.

    Type: path

    Default: "/var/lib/dhcp"

    Declared by:

    [4803]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4804]services.dhcpd6.enable

    Whether to enable the DHCPv6 server.

    Type: boolean

    Default: false

    Declared by:

    [4805]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4806]services.dhcpd6.authoritative

    Whether the DHCP server shall send DHCPNAK messages to misconfigured clients. If this is not
    done, clients may be unable to get a correct IP address after changing subnets until their
    old lease has expired.

    Type: boolean

    Default: true

    Declared by:

    [4807]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4808]services.dhcpd6.configFile

    The path of the DHCP server configuration file. If no file is specified, a file is generated
    using the other options.

    Type: null or path

    Default: null

    Declared by:

    [4809]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4810]services.dhcpd6.extraConfig

    Extra text to be appended to the DHCP server configuration file. Currently, you almost
    certainly need to specify something there, such as the options specifying the subnet mask,
    DNS servers, etc.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    option subnet-mask 255.255.255.0;
    option broadcast-address 192.168.1.255;
    option routers 192.168.1.5;
    option domain-name-servers 130.161.158.4, 130.161.33.17, 130.161.180.1;
    option domain-name "example.org";
    subnet 192.168.1.0 netmask 255.255.255.0 {
      range 192.168.1.100 192.168.1.200;
    }
    ''

    Declared by:

    [4811]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4812]services.dhcpd6.extraFlags

    Additional command line flags to be passed to the dhcpd daemon.

    Type: list of strings

    Default: [ ]

    Declared by:

    [4813]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4814]services.dhcpd6.interfaces

    The interfaces on which the DHCP server should listen.

    Type: list of strings

    Default: [ "eth0" ]

    Declared by:

    [4815]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4816]services.dhcpd6.machines

    A list mapping Ethernet addresses to IPv6 addresses for the DHCP server.

    Type: list of submodules

    Default: [ ]

    Example: [ { ethernetAddress = "00:16:76:9a:32:1d"; hostName = "foo"; ipAddress =
    "192.168.1.10"; } { ethernetAddress = "00:19:d1:1d:c4:9a"; hostName = "bar"; ipAddress =
    "192.168.1.11"; } ]

    Declared by:

    [4817]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4818]services.dhcpd6.machines.*.ethernetAddress

    MAC address of the machine.

    Type: string

    Example: "00:16:76:9a:32:1d"

    Declared by:

    [4819]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4820]services.dhcpd6.machines.*.hostName

    Hostname which is assigned statically to the machine.

    Type: string

    Example: "foo"

    Declared by:

    [4821]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4822]services.dhcpd6.machines.*.ipAddress

    IP address of the machine.

    Type: string

    Example: "192.168.1.10"

    Declared by:

    [4823]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4824]services.dhcpd6.stateDir

    State directory for the DHCP server.

    Type: path

    Default: "/var/lib/dhcp6"

    Declared by:

    [4825]<nixpkgs/nixos/modules/services/networking/dhcpd.nix>

[4826]services.dictd.enable

    Whether to enable the DICT.org dictionary server.

    Type: boolean

    Default: false

    Declared by:

    [4827]<nixpkgs/nixos/modules/services/misc/dictd.nix>

[4828]services.dictd.DBs

    List of databases to make available.

    Type: list of packages

    Default: "with pkgs.dictdDBs; [ wiktionary wordnet ]"

    Example:

    [ pkgs.dictdDBs.nld2eng ]

    Declared by:

    [4829]<nixpkgs/nixos/modules/services/misc/dictd.nix>

[4830]services.diod.enable

    Whether to enable the diod 9P file server.

    Type: boolean

    Default: false

    Declared by:

    [4831]<nixpkgs/nixos/modules/services/network-filesystems/diod.nix>

[4832]services.diod.allsquash

    Remap all users to "nobody". The attaching user need not be present in the password file.

    Type: boolean

    Default: true

    Declared by:

    [4833]<nixpkgs/nixos/modules/services/network-filesystems/diod.nix>

[4834]services.diod.authRequired

    Allow clients to connect without authentication, i.e. without a valid MUNGE credential.

    Type: boolean

    Default: false

    Declared by:

    [4835]<nixpkgs/nixos/modules/services/network-filesystems/diod.nix>

[4836]services.diod.exportall

    Export all file systems listed in /proc/mounts. If new file systems are mounted after diod
    has started, they will become immediately mountable. If there is a duplicate entry for a file
    system in the exports list, any options listed in the exports entry will apply.

    Type: boolean

    Default: true

    Declared by:

    [4837]<nixpkgs/nixos/modules/services/network-filesystems/diod.nix>

[4838]services.diod.exportopts

    Establish a default set of export options. These are overridden, not appended to, by opts
    attributes in an "exports" entry.

    Type: list of strings

    Default: [ ]

    Declared by:

    [4839]<nixpkgs/nixos/modules/services/network-filesystems/diod.nix>

[4840]services.diod.exports

    List the file systems that clients will be allowed to mount. All paths should be fully
    qualified. The exports table can include two types of element: a string element (as above),
    or an alternate table element form { path="/path", opts="ro" }. In the alternate form, the
    (optional) opts attribute is a comma-separated list of export options. The two table element
    forms can be mixed in the exports table. Note that although diod will not traverse file
    system boundaries for a given mount due to inode uniqueness constraints, subdirectories of a
    file system can be separately exported.

    Type: list of strings

    Default: [ ]

    Declared by:

    [4841]<nixpkgs/nixos/modules/services/network-filesystems/diod.nix>

[4842]services.diod.extraConfig

    Extra configuration options for diod.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [4843]<nixpkgs/nixos/modules/services/network-filesystems/diod.nix>

[4844]services.diod.listen

    [ "IP:PORT" [,"IP:PORT",...] ] List the interfaces and ports that diod should listen on.

    Type: list of strings

    Default: [ "0.0.0.0:564" ]

    Declared by:

    [4845]<nixpkgs/nixos/modules/services/network-filesystems/diod.nix>

[4846]services.diod.logdest

    Set the destination for logging. The value has the form of "syslog:facility:level" or
    "filename".

    Type: string

    Default: "syslog:daemon:err"

    Declared by:

    [4847]<nixpkgs/nixos/modules/services/network-filesystems/diod.nix>

[4848]services.diod.nwthreads

    Sets the (fixed) number of worker threads created to handle 9P requests for a unique aname.

    Type: signed integer

    Default: 16

    Declared by:

    [4849]<nixpkgs/nixos/modules/services/network-filesystems/diod.nix>

[4850]services.diod.squashuser

    Change the squash user. The squash user must be present in the password file.

    Type: string

    Default: "nobody"

    Declared by:

    [4851]<nixpkgs/nixos/modules/services/network-filesystems/diod.nix>

[4852]services.diod.statfsPassthru

    This option configures statfs to return the host file system's type rather than V9FS_MAGIC.

    Type: boolean

    Default: false

    Declared by:

    [4853]<nixpkgs/nixos/modules/services/network-filesystems/diod.nix>

[4854]services.diod.userdb

    This option disables password/group lookups. It allows any uid to attach and assumes gid=uid,
    and supplementary groups contain only the primary gid.

    Type: boolean

    Default: false

    Declared by:

    [4855]<nixpkgs/nixos/modules/services/network-filesystems/diod.nix>

[4856]services.discourse.enable

    Whether to enable Discourse, an open source discussion platform.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4857]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4858]services.discourse.enableACME

    Whether an ACME certificate should be used to secure connections to the server.

    Type: boolean

    Default: "true, unless services.discourse.sslCertificate and
    services.discourse.sslCertificateKey are set."

    Declared by:

    [4859]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4860]services.discourse.package

    The discourse package to use.

    Type: package

    Default: "pkgs.discourse"

    Declared by:

    [4861]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4862]services.discourse.admin.email

    The admin user email address.

    Type: string

    Example: "admin@example.com"

    Declared by:

    [4863]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4864]services.discourse.admin.fullName

    The admin user's full name.

    Type: string

    Declared by:

    [4865]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4866]services.discourse.admin.passwordFile

    A path to a file containing the admin user's password.

    This should be a string, not a nix path, since nix paths are copied into the world-readable
    nix store.

    Type: path

    Declared by:

    [4867]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4868]services.discourse.admin.username

    The admin user username.

    Type: string

    Example: "admin"

    Declared by:

    [4869]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4870]services.discourse.backendSettings

    Additional settings to put in the discourse.conf file.

    Look in the [4871]discourse_defaults.conf file in the upstream distribution to find available
    options.

    Setting an option to null means “define variable, but leave right-hand side empty”.

    Type: attribute set of null or string or signed integer or boolean or floating point numbers

    Default: { }

    Example:

    {
      max_reqs_per_ip_per_minute = 300;
      max_reqs_per_ip_per_10_seconds = 60;
      max_asset_reqs_per_ip_per_10_seconds = 250;
      max_reqs_per_ip_mode = "warn+block";
    };

    Declared by:

    [4872]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4873]services.discourse.database.createLocally

    Whether a database should be automatically created on the local host. Set this to false if
    you plan on provisioning a local database yourself. This has no effect if
    services.discourse.database.host is customized.

    Type: boolean

    Default: true

    Declared by:

    [4874]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4875]services.discourse.database.host

    Discourse database hostname. null means “prefer local unix socket connection”.

    Type: null or string

    Default: null

    Declared by:

    [4876]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4877]services.discourse.database.ignorePostgresqlVersion

    Whether to allow other versions of PostgreSQL than the recommended one. Only effective when
    services.discourse.database.createLocally is enabled.

    Type: boolean

    Default: false

    Declared by:

    [4878]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4879]services.discourse.database.name

    Discourse database name.

    Type: string

    Default: "discourse"

    Declared by:

    [4880]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4881]services.discourse.database.passwordFile

    File containing the Discourse database user password.

    This should be a string, not a nix path, since nix paths are copied into the world-readable
    nix store.

    Type: null or path

    Default: null

    Declared by:

    [4882]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4883]services.discourse.database.pool

    Database connection pool size.

    Type: signed integer

    Default: 8

    Declared by:

    [4884]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4885]services.discourse.database.username

    Discourse database user.

    Type: string

    Default: "discourse"

    Declared by:

    [4886]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4887]services.discourse.hostname

    The hostname to serve Discourse on.

    Type: string

    Default: "config.networking.fqdn"

    Example: "discourse.example.com"

    Declared by:

    [4888]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4889]services.discourse.mail.contactEmailAddress

    Email address of key contact responsible for this site. Used for critical notifications, as
    well as on the /about contact form for urgent matters.

    Type: string

    Default: ""

    Declared by:

    [4890]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4891]services.discourse.mail.incoming.enable

    Whether to set up Postfix to receive incoming mail.

    Type: boolean

    Default: false

    Declared by:

    [4892]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4893]services.discourse.mail.incoming.apiKeyFile

    A file containing the Discourse API key used to add posts and messages from mail. If left at
    its default value null, one will be automatically generated.

    This should be a string, not a nix path, since nix paths are copied into the world-readable
    nix store.

    Type: null or path

    Default: null

    Declared by:

    [4894]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4895]services.discourse.mail.incoming.mailReceiverPackage

    The discourse-mail-receiver package to use.

    Type: package

    Default: "pkgs.discourse-mail-receiver"

    Declared by:

    [4896]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4897]services.discourse.mail.incoming.replyEmailAddress

    Template for reply by email incoming email address, for example: %{reply_key}
    @reply.example.com or replies+%{reply_key}@example.com

    Type: string

    Default: "%{reply_key}@`config.services.discourse.hostname`"

    Declared by:

    [4898]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4899]services.discourse.mail.notificationEmailAddress

    The from: email address used when sending all essential system emails. The domain specified
    here must have SPF, DKIM and reverse PTR records set correctly for email to arrive.

    Type: string

    Default:

    ''
    "notifications@`config.services.discourse.hostname`" if
    config.services.discourse.mail.incoming.enable is "true",
    otherwise "noreply`config.services.discourse.hostname`"
    ''

    Declared by:

    [4900]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4901]services.discourse.mail.outgoing.enableStartTLSAuto

    Whether to try to use StartTLS.

    Type: boolean

    Default: true

    Declared by:

    [4902]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4903]services.discourse.mail.outgoing.authentication

    Authentication type to use, see http://api.rubyonrails.org/classes/ActionMailer/Base.html

    Type: null or one of "plain", "login", "cram_md5"

    Default: null

    Declared by:

    [4904]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4905]services.discourse.mail.outgoing.domain

    HELO domain to use for outgoing mail.

    Type: string

    Default: "nixos"

    Declared by:

    [4906]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4907]services.discourse.mail.outgoing.forceTLS

    Force implicit TLS as per RFC 8314 3.3.

    Type: boolean

    Default: false

    Declared by:

    [4908]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4909]services.discourse.mail.outgoing.opensslVerifyMode

    How OpenSSL checks the certificate, see http://api.rubyonrails.org/classes/ActionMailer/
    Base.html

    Type: string

    Default: "peer"

    Declared by:

    [4910]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4911]services.discourse.mail.outgoing.passwordFile

    A file containing the password of the SMTP server account.

    This should be a string, not a nix path, since nix paths are copied into the world-readable
    nix store.

    Type: null or path

    Default: null

    Declared by:

    [4912]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4913]services.discourse.mail.outgoing.port

    The port of the SMTP server Discourse should use to send email.

    Type: signed integer

    Default: 25

    Declared by:

    [4914]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4915]services.discourse.mail.outgoing.serverAddress

    The address of the SMTP server Discourse should use to send email.

    Type: string

    Default: "localhost"

    Declared by:

    [4916]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4917]services.discourse.mail.outgoing.username

    The username of the SMTP server.

    Type: null or string

    Default: null

    Declared by:

    [4918]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4919]services.discourse.nginx.enable

    Whether an nginx virtual host should be set up to serve Discourse. Only disable if you're
    planning to use a different web server, which is not recommended.

    Type: boolean

    Default: true

    Declared by:

    [4920]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4921]services.discourse.plugins

    Discourse plugins to install as a list of derivations. As long as a plugin supports the
    standard install method, packaging it should only require fetching its source with an
    appropriate fetcher.

    Type: list of packages

    Default: [ ]

    Example:

    ''
    [
      (pkgs.fetchFromGitHub {
        owner = "discourse";
        repo = "discourse-spoiler-alert";
        rev = "e200cfa571d252cab63f3d30d619b370986e4cee";
        sha256 = "0ya69ix5g77wz4c9x9gmng6l25ghb5xxlx3icr6jam16q14dzc33";
      })
    ];
    ''

    Declared by:

    [4922]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4923]services.discourse.redis.dbNumber

    Redis database number.

    Type: signed integer

    Default: 0

    Declared by:

    [4924]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4925]services.discourse.redis.host

    Redis server hostname.

    Type: string

    Default: "localhost"

    Declared by:

    [4926]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4927]services.discourse.redis.passwordFile

    File containing the Redis password.

    This should be a string, not a nix path, since nix paths are copied into the world-readable
    nix store.

    Type: null or path

    Default: null

    Declared by:

    [4928]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4929]services.discourse.redis.useSSL

    Connect to Redis with SSL.

    Type: boolean

    Default: false

    Declared by:

    [4930]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4931]services.discourse.secretKeyBaseFile

    The path to a file containing the secret_key_base secret.

    Discourse uses secret_key_base to encrypt the cookie store, which contains session data, and
    to digest user auth tokens.

    Needs to be a 64 byte long string of hexadecimal characters. You can generate one by running

    $ openssl rand -hex 64 >/path/to/secret_key_base_file

    This should be a string, not a nix path, since nix paths are copied into the world-readable
    nix store.

    Type: null or path

    Default: null

    Example: "/run/keys/secret_key_base"

    Declared by:

    [4932]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4933]services.discourse.sidekiqProcesses

    How many Sidekiq processes should be spawned.

    Type: signed integer

    Default: 1

    Declared by:

    [4934]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4935]services.discourse.siteSettings

    Discourse site settings. These are the settings that can be changed from the UI. This only
    defines their default values: they can still be overridden from the UI.

    Available settings can be found by looking in the [4936]site_settings.yml file of the
    upstream distribution. To find a setting's path, you only need to care about the first two
    levels; i.e. its category and name. See the example.

    Settings containing secret data should be set to an attribute set containing the attribute
    _secret - a string pointing to a file containing the value the option should be set to. See
    the example to get a better picture of this: in the resulting config/nixos_site_settings.json
    file, the login.github_client_secret key will be set to the contents of the /run/keys/
    discourse_github_client_secret file.

    Type: JSON value

    Default: { }

    Example:

    {
      required = {
        title = "My Cats";
        site_description = "Discuss My Cats (and be nice plz)";
      };
      login = {
        enable_github_logins = true;
        github_client_id = "a2f6dfe838cb3206ce20";
        github_client_secret._secret = /run/keys/discourse_github_client_secret;
      };
    };

    Declared by:

    [4937]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4938]services.discourse.sslCertificate

    The path to the server SSL certificate. Set this to enable SSL.

    Type: null or path

    Default: null

    Example: "/run/keys/ssl.cert"

    Declared by:

    [4939]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4940]services.discourse.sslCertificateKey

    The path to the server SSL certificate key. Set this to enable SSL.

    Type: null or path

    Default: null

    Example: "/run/keys/ssl.key"

    Declared by:

    [4941]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4942]services.discourse.unicornTimeout

    Time in seconds before a request to Unicorn times out.

    This can be raised if the system Discourse is running on is too slow to handle many requests
    within 30 seconds.

    Type: signed integer

    Default: 30

    Declared by:

    [4943]<nixpkgs/nixos/modules/services/web-apps/discourse.nix>

[4944]services.disnix.enable

    Whether to enable Disnix.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4945]<nixpkgs/nixos/modules/services/misc/disnix.nix>

[4946]services.disnix.enableMultiUser

    Whether to support multi-user mode by enabling the Disnix D-Bus service

    Type: boolean

    Default: true

    Declared by:

    [4947]<nixpkgs/nixos/modules/services/misc/disnix.nix>

[4948]services.disnix.enableProfilePath

    Whether to enable exposing the Disnix profiles in the system's PATH.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4949]<nixpkgs/nixos/modules/services/misc/disnix.nix>

[4950]services.disnix.package

    The Disnix package

    Type: path

    Default: "pkgs.disnix"

    Declared by:

    [4951]<nixpkgs/nixos/modules/services/misc/disnix.nix>

[4952]services.disnix.profiles

    Names of the Disnix profiles to expose in the system's PATH

    Type: list of strings

    Default: [ "default" ]

    Example: [ "default" ]

    Declared by:

    [4953]<nixpkgs/nixos/modules/services/misc/disnix.nix>

[4954]services.disnix.useWebServiceInterface

    Whether to enable the DisnixWebService interface running on Apache Tomcat.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4955]<nixpkgs/nixos/modules/services/misc/disnix.nix>

[4956]services.dkimproxy-out.enable

    Whether to enable dkimproxy_out.

    Note that a key will be auto-generated, and can be found in /var/lib/dkimproxy-out.

    Type: boolean

    Default: false

    Declared by:

    [4957]<nixpkgs/nixos/modules/services/mail/dkimproxy-out.nix>

[4958]services.dkimproxy-out.domains

    List of domains DKIMproxy can sign for.

    Type: list of strings

    Example: [ "example.org" "example.com" ]

    Declared by:

    [4959]<nixpkgs/nixos/modules/services/mail/dkimproxy-out.nix>

[4960]services.dkimproxy-out.keySize

    Size of the RSA key to use to sign outgoing emails. Note that the maximum mandatorily
    verified as per RFC6376 is 2048.

    Type: signed integer

    Default: 2048

    Declared by:

    [4961]<nixpkgs/nixos/modules/services/mail/dkimproxy-out.nix>

[4962]services.dkimproxy-out.listen

    Address:port DKIMproxy should listen on.

    Type: string

    Example: "127.0.0.1:10027"

    Declared by:

    [4963]<nixpkgs/nixos/modules/services/mail/dkimproxy-out.nix>

[4964]services.dkimproxy-out.relay

    Address:port DKIMproxy should forward mail to.

    Type: string

    Example: "127.0.0.1:10028"

    Declared by:

    [4965]<nixpkgs/nixos/modules/services/mail/dkimproxy-out.nix>

[4966]services.dkimproxy-out.selector

    The selector to use for DKIM key identification.

    For example, if 'selector1' is used here, then for each domain 'example.org' given in `domain
    `, 'selector1._domainkey.example.org' should contain the TXT record indicating the public key
    is the one in /var/lib/dkimproxy-out/public.key: "v=DKIM1; t=s; p=[THE PUBLIC KEY]".

    Type: string

    Example: "selector1"

    Declared by:

    [4967]<nixpkgs/nixos/modules/services/mail/dkimproxy-out.nix>

[4968]services.dleyna-renderer.enable

    Whether to enable dleyna-renderer service, a DBus service for handling DLNA renderers.

    Type: boolean

    Default: false

    Declared by:

    [4969]<nixpkgs/nixos/modules/services/desktops/dleyna-renderer.nix>

[4970]services.dleyna-server.enable

    Whether to enable dleyna-server service, a DBus service for handling DLNA servers.

    Type: boolean

    Default: false

    Declared by:

    [4971]<nixpkgs/nixos/modules/services/desktops/dleyna-server.nix>

[4972]services.dnscache.enable

    Whether to run the dnscache caching dns server.

    Type: boolean

    Default: false

    Declared by:

    [4973]<nixpkgs/nixos/modules/services/networking/dnscache.nix>

[4974]services.dnscache.clientIps

    Client IP addresses (or prefixes) from which to accept connections.

    Type: list of strings

    Default: [ "127.0.0.1" ]

    Example: [ "192.168" "172.23.75.82" ]

    Declared by:

    [4975]<nixpkgs/nixos/modules/services/networking/dnscache.nix>

[4976]services.dnscache.domainServers

    Table of {hostname: server} pairs to use as authoritative servers for hosts (and subhosts).
    If entry for @ is not specified predefined list of root servers is used.

    Type: attribute set of list of stringss

    Default: { }

    Example:

    {
      "@" = ["8.8.8.8" "8.8.4.4"];
      "example.com" = ["192.168.100.100"];
    }

    Declared by:

    [4977]<nixpkgs/nixos/modules/services/networking/dnscache.nix>

[4978]services.dnscache.forwardOnly

    Whether to treat root servers (for @) as caching servers, requesting addresses the same way a
    client does. This is needed if you want to use e.g. Google DNS as your upstream DNS.

    Type: boolean

    Default: false

    Declared by:

    [4979]<nixpkgs/nixos/modules/services/networking/dnscache.nix>

[4980]services.dnscache.ip

    IP address on which to listen for connections.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [4981]<nixpkgs/nixos/modules/services/networking/dnscache.nix>

[4982]services.dnscrypt-proxy2.enable

    Whether to enable dnscrypt-proxy2.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4983]<nixpkgs/nixos/modules/services/networking/dnscrypt-proxy2.nix>

[4984]services.dnscrypt-proxy2.configFile

    Path to TOML config file. See: [4985]https://github.com/DNSCrypt/dnscrypt-proxy/blob/master/
    dnscrypt-proxy/example-dnscrypt-proxy.toml If this option is set, it will override any
    configuration done in options.services.dnscrypt-proxy2.settings.

    Type: path

    Default: TOML file generated from services.dnscrypt-proxy2.settings

    Example: "/etc/dnscrypt-proxy/dnscrypt-proxy.toml"

    Declared by:

    [4986]<nixpkgs/nixos/modules/services/networking/dnscrypt-proxy2.nix>

[4987]services.dnscrypt-proxy2.settings

    Attrset that is converted and passed as TOML config file. For available params, see: [4988]
    https://github.com/DNSCrypt/dnscrypt-proxy/blob/2.0.45/dnscrypt-proxy/
    example-dnscrypt-proxy.toml

    Type: attribute set

    Default: { }

    Example:

    {
      sources.public-resolvers = {
        urls = [ "https://download.dnscrypt.info/resolvers-list/v2/public-resolvers.md" ];
        cache_file = "public-resolvers.md";
        minisign_key = "RWQf6LRCGA9i53mlYecO4IzT51TGPpvWucNSCh1CBM0QTaLn73Y7GFO3";
        refresh_delay = 72;
      };
    }

    Declared by:

    [4989]<nixpkgs/nixos/modules/services/networking/dnscrypt-proxy2.nix>

[4990]services.dnscrypt-proxy2.upstreamDefaults

    Whether to base the config declared in services.dnscrypt-proxy2.settings on the upstream
    example config ([4991]https://github.com/DNSCrypt/dnscrypt-proxy/blob/master/dnscrypt-proxy/
    example-dnscrypt-proxy.toml)

    Disable this if you want to declare your dnscrypt config from scratch.

    Type: boolean

    Default: true

    Declared by:

    [4992]<nixpkgs/nixos/modules/services/networking/dnscrypt-proxy2.nix>

[4993]services.dnscrypt-wrapper.enable

    Whether to enable DNSCrypt wrapper.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [4994]<nixpkgs/nixos/modules/services/networking/dnscrypt-wrapper.nix>

[4995]services.dnscrypt-wrapper.address

    The DNSCrypt wrapper will bind to this IP address.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [4996]<nixpkgs/nixos/modules/services/networking/dnscrypt-wrapper.nix>

[4997]services.dnscrypt-wrapper.keys.checkInterval

    The time interval (in minutes) between key expiration checks.

    Type: signed integer

    Default: 1440

    Declared by:

    [4998]<nixpkgs/nixos/modules/services/networking/dnscrypt-wrapper.nix>

[4999]services.dnscrypt-wrapper.keys.expiration

    The duration (in days) of the time-limited secret key. This will be automatically rotated
    before expiration.

    Type: signed integer

    Default: 30

    Declared by:

    [5000]<nixpkgs/nixos/modules/services/networking/dnscrypt-wrapper.nix>

[5001]services.dnscrypt-wrapper.port

    The DNSCrypt wrapper will listen for DNS queries on this port.

    Type: signed integer

    Default: 5353

    Declared by:

    [5002]<nixpkgs/nixos/modules/services/networking/dnscrypt-wrapper.nix>

[5003]services.dnscrypt-wrapper.providerKey.public

    The filepath to the provider public key. If not given a new provider key pair will be
    generated on the first run.

    Type: null or path

    Default: null

    Example: "/etc/secrets/public.key"

    Declared by:

    [5004]<nixpkgs/nixos/modules/services/networking/dnscrypt-wrapper.nix>

[5005]services.dnscrypt-wrapper.providerKey.secret

    The filepath to the provider secret key. If not given a new provider key pair will be
    generated on the first run.

    Type: null or path

    Default: null

    Example: "/etc/secrets/secret.key"

    Declared by:

    [5006]<nixpkgs/nixos/modules/services/networking/dnscrypt-wrapper.nix>

[5007]services.dnscrypt-wrapper.providerName

    The name that will be given to this DNSCrypt resolver. Note: the resolver name must start
    with 2.dnscrypt-cert..

    Type: string

    Default: "2.dnscrypt-cert.nixos"

    Example: "2.dnscrypt-cert.myresolver"

    Declared by:

    [5008]<nixpkgs/nixos/modules/services/networking/dnscrypt-wrapper.nix>

[5009]services.dnscrypt-wrapper.upstream.address

    The IP address of the upstream DNS server DNSCrypt will "wrap".

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [5010]<nixpkgs/nixos/modules/services/networking/dnscrypt-wrapper.nix>

[5011]services.dnscrypt-wrapper.upstream.port

    The port of the upstream DNS server DNSCrypt will "wrap".

    Type: signed integer

    Default: 53

    Declared by:

    [5012]<nixpkgs/nixos/modules/services/networking/dnscrypt-wrapper.nix>

[5013]services.dnsdist.enable

    Whether to enable dnsdist domain name server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5014]<nixpkgs/nixos/modules/services/networking/dnsdist.nix>

[5015]services.dnsdist.extraConfig

    Extra lines to be added verbatim to dnsdist.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [5016]<nixpkgs/nixos/modules/services/networking/dnsdist.nix>

[5017]services.dnsdist.listenAddress

    Listen IP Address

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [5018]<nixpkgs/nixos/modules/services/networking/dnsdist.nix>

[5019]services.dnsdist.listenPort

    Listen port

    Type: signed integer

    Default: 53

    Declared by:

    [5020]<nixpkgs/nixos/modules/services/networking/dnsdist.nix>

[5021]services.dnsmasq.enable

    Whether to run dnsmasq.

    Type: boolean

    Default: false

    Declared by:

    [5022]<nixpkgs/nixos/modules/services/networking/dnsmasq.nix>

[5023]services.dnsmasq.alwaysKeepRunning

    If enabled, systemd will always respawn dnsmasq even if shut down manually. The default,
    disabled, will only restart it on error.

    Type: boolean

    Default: false

    Declared by:

    [5024]<nixpkgs/nixos/modules/services/networking/dnsmasq.nix>

[5025]services.dnsmasq.extraConfig

    Extra configuration directives that should be added to dnsmasq.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [5026]<nixpkgs/nixos/modules/services/networking/dnsmasq.nix>

[5027]services.dnsmasq.resolveLocalQueries

    Whether dnsmasq should resolve local queries (i.e. add 127.0.0.1 to /etc/resolv.conf).

    Type: boolean

    Default: true

    Declared by:

    [5028]<nixpkgs/nixos/modules/services/networking/dnsmasq.nix>

[5029]services.dnsmasq.servers

    The DNS servers which dnsmasq should query.

    Type: list of strings

    Default: [ ]

    Example: [ "8.8.8.8" "8.8.4.4" ]

    Declared by:

    [5030]<nixpkgs/nixos/modules/services/networking/dnsmasq.nix>

[5031]services.do-agent.enable

    Whether to enable do-agent, the DigitalOcean droplet metrics agent.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5032]<nixpkgs/nixos/modules/services/monitoring/do-agent.nix>

[5033]services.dockerRegistry.enable

    Whether to enable Docker Registry.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5034]<nixpkgs/nixos/modules/services/misc/docker-registry.nix>

[5035]services.dockerRegistry.enableDelete

    Enable delete for manifests and blobs.

    Type: boolean

    Default: false

    Declared by:

    [5036]<nixpkgs/nixos/modules/services/misc/docker-registry.nix>

[5037]services.dockerRegistry.enableGarbageCollect

    Whether to enable garbage collect.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5038]<nixpkgs/nixos/modules/services/misc/docker-registry.nix>

[5039]services.dockerRegistry.enableRedisCache

    Whether to enable redis as blob cache.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5040]<nixpkgs/nixos/modules/services/misc/docker-registry.nix>

[5041]services.dockerRegistry.extraConfig

    Docker extra registry configuration via environment variables.

    Type: attribute set

    Default: { }

    Declared by:

    [5042]<nixpkgs/nixos/modules/services/misc/docker-registry.nix>

[5043]services.dockerRegistry.garbageCollectDates

    Specification (in the format described by systemd.time(7)) of the time at which the garbage
    collect will occur.

    Type: string

    Default: "daily"

    Declared by:

    [5044]<nixpkgs/nixos/modules/services/misc/docker-registry.nix>

[5045]services.dockerRegistry.listenAddress

    Docker registry host or ip to bind to.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [5046]<nixpkgs/nixos/modules/services/misc/docker-registry.nix>

[5047]services.dockerRegistry.port

    Docker registry port to bind to.

    Type: signed integer

    Default: 5000

    Declared by:

    [5048]<nixpkgs/nixos/modules/services/misc/docker-registry.nix>

[5049]services.dockerRegistry.redisPassword

    Set redis password.

    Type: string

    Default: ""

    Declared by:

    [5050]<nixpkgs/nixos/modules/services/misc/docker-registry.nix>

[5051]services.dockerRegistry.redisUrl

    Set redis host and port.

    Type: string

    Default: "localhost:6379"

    Declared by:

    [5052]<nixpkgs/nixos/modules/services/misc/docker-registry.nix>

[5053]services.dockerRegistry.storagePath

    Docker registry storage path for the filesystem storage backend. Set to null to configure
    another backend via extraConfig.

    Type: null or path

    Default: "/var/lib/docker-registry"

    Declared by:

    [5054]<nixpkgs/nixos/modules/services/misc/docker-registry.nix>

[5055]services.documize.enable

    Whether to enable Documize Wiki.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5056]<nixpkgs/nixos/modules/services/web-apps/documize.nix>

[5057]services.documize.package

    Which package to use for documize.

    Type: package

    Default: (build of documize-community-3.9.0)

    Declared by:

    [5058]<nixpkgs/nixos/modules/services/web-apps/documize.nix>

[5059]services.documize.cert

    The cert.pem file used for https.

    Type: null or string

    Default: null

    Declared by:

    [5060]<nixpkgs/nixos/modules/services/web-apps/documize.nix>

[5061]services.documize.db

    Database specific connection string for example:

      □ MySQL/Percona/MariaDB: user:password@tcp(host:3306)/documize

      □ MySQLv8+: user:password@tcp(host:3306)/documize?allowNativePasswords=true

      □ PostgreSQL: host=localhost port=5432 dbname=documize user=admin password=secret sslmode=
        disable

      □ MSSQL: sqlserver://username:password@localhost:1433?database=Documize or sqlserver://
        sa@localhost/SQLExpress?database=Documize

    Type: string

    Declared by:

    [5062]<nixpkgs/nixos/modules/services/web-apps/documize.nix>

[5063]services.documize.dbtype

    Specify the database provider: mysql, percona, mariadb, postgresql, sqlserver

    Type: one of "mysql", "percona", "mariadb", "postgresql", "sqlserver"

    Default: "postgresql"

    Declared by:

    [5064]<nixpkgs/nixos/modules/services/web-apps/documize.nix>

[5065]services.documize.forcesslport

    Redirect given http port number to TLS.

    Type: null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: null

    Declared by:

    [5066]<nixpkgs/nixos/modules/services/web-apps/documize.nix>

[5067]services.documize.key

    The key.pem file used for https.

    Type: null or string

    Default: null

    Declared by:

    [5068]<nixpkgs/nixos/modules/services/web-apps/documize.nix>

[5069]services.documize.location

    reserved

    Type: null or string

    Default: null

    Declared by:

    [5070]<nixpkgs/nixos/modules/services/web-apps/documize.nix>

[5071]services.documize.offline

    Set true for offline mode.

    Type: boolean

    Default: false

    Declared by:

    [5072]<nixpkgs/nixos/modules/services/web-apps/documize.nix>

[5073]services.documize.port

    The http/https port number.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 5001

    Declared by:

    [5074]<nixpkgs/nixos/modules/services/web-apps/documize.nix>

[5075]services.documize.salt

    The salt string used to encode JWT tokens, if not set a random value will be generated.

    Type: null or string

    Default: null

    Example: "3edIYV6c8B28b19fh"

    Declared by:

    [5076]<nixpkgs/nixos/modules/services/web-apps/documize.nix>

[5077]services.documize.stateDirectoryName

    The name of the directory below /var/lib/private where documize runs in and stores, for
    example, backups.

    Type: string

    Default: "documize"

    Declared by:

    [5078]<nixpkgs/nixos/modules/services/web-apps/documize.nix>

[5079]services.doh-proxy-rust.enable

    Whether to enable doh-proxy-rust.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5080]<nixpkgs/nixos/modules/services/networking/doh-proxy-rust.nix>

[5081]services.doh-proxy-rust.flags

    A list of command-line flags to pass to doh-proxy. For details on the available options, see 
    [5082]https://github.com/jedisct1/doh-server#usage.

    Type: list of strings

    Default: [ ]

    Example:

    Declared by:

    [5083]<nixpkgs/nixos/modules/services/networking/doh-proxy-rust.nix>

[5084]services.dokuwiki

    Sepcification of one or more dokuwiki sites to serve.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [5085]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5086]services.dokuwiki.<name>.enable

    Whether to enable DokuWiki web application..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5087]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5088]services.dokuwiki.<name>.package

    Which dokuwiki package to use.

    Type: package

    Default: (build of dokuwiki-2020-07-29)

    Declared by:

    [5089]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5090]services.dokuwiki.<name>.acl

    Access Control Lists: see [5091]https://www.dokuwiki.org/acl Mutually exclusive with
    services.dokuwiki.aclFile Set this to a value other than null to take precedence over aclFile
    option.

    Warning: Consider using aclFile instead if you do not want to store the ACL in the
    world-readable Nix store.

    Type: null or strings concatenated with "\n"

    Default: null

    Example: "* @ALL 8"

    Declared by:

    [5092]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5093]services.dokuwiki.<name>.aclFile

    Location of the dokuwiki acl rules. Mutually exclusive with services.dokuwiki.acl Mutually
    exclusive with services.dokuwiki.acl which is preferred. Consult documentation [5094]https://
    www.dokuwiki.org/acl for further instructions. Example: [5095]https://github.com/splitbrain/
    dokuwiki/blob/master/conf/acl.auth.php.dist

    Type: null or string

    Default: "/var/lib/dokuwiki/‹name›/acl.auth.php"

    Example: "/var/lib/dokuwiki/‹name›/acl.auth.php"

    Declared by:

    [5096]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5097]services.dokuwiki.<name>.aclUse

    Necessary for users to log in into the system. Also limits anonymous users. When disabled,
    everyone is able to create and edit content.

    Type: boolean

    Default: true

    Declared by:

    [5098]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5099]services.dokuwiki.<name>.disableActions

    Disable individual action modes. Refer to [5100]https://www.dokuwiki.org/config:action_modes
    for details on supported values.

    Type: null or string

    Default: ""

    Example: "search,register"

    Declared by:

    [5101]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5102]services.dokuwiki.<name>.extraConfig

    DokuWiki configuration. Refer to [5103]https://www.dokuwiki.org/config for details on
    supported values.

    Type: null or strings concatenated with "\n"

    Default: null

    Example:

    ''
    $conf['title'] = 'My Wiki';
    $conf['userewrite'] = 1;
    ''

    Declared by:

    [5104]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5105]services.dokuwiki.<name>.hostName

    FQDN for the instance.

    Type: string

    Default: "localhost"

    Declared by:

    [5106]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5107]services.dokuwiki.<name>.nginx

    With this option, you can customize the nginx virtualHost settings.

    Type: submodule

    Default: { }

    Example: { enableACME = true; forceSSL = true; serverAliases = [ "wiki.\$
    {config.networking.domain}" ] ; }

    Declared by:

    [5108]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5109]services.dokuwiki.<name>.nginx.enableACME

    Whether to ask Let's Encrypt to sign a certificate for this vhost. Alternately, you can use
    an existing certificate through useACMEHost.

    Type: boolean

    Default: false

    Declared by:

    [5110]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5111]services.dokuwiki.<name>.nginx.acmeFallbackHost

    Host which to proxy requests to if acme challenge is not found. Useful if you want multiple
    hosts to be able to verify the same domain name.

    Type: null or string

    Default: null

    Declared by:

    [5112]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5113]services.dokuwiki.<name>.nginx.acmeRoot

    Directory for the acme challenge which is PUBLIC, don't put certs or keys in here

    Type: string

    Default: "/var/lib/acme/acme-challenge"

    Declared by:

    [5114]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5115]services.dokuwiki.<name>.nginx.addSSL

    Whether to enable HTTPS in addition to plain HTTP. This will set defaults for listen to
    listen on all interfaces on the respective default ports (80, 443).

    Type: boolean

    Default: false

    Declared by:

    [5116]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5117]services.dokuwiki.<name>.nginx.basicAuth

    Basic Auth protection for a vhost.

    WARNING: This is implemented to store the password in plain text in the Nix store.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      user = "password";
    };

    Declared by:

    [5118]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5119]services.dokuwiki.<name>.nginx.basicAuthFile

    Basic Auth password file for a vhost. Can be created via: htpasswd -c <filename> <username>.

    WARNING: The generate file contains the users' passwords in a non-cryptographically-securely
    hashed way.

    Type: null or path

    Default: null

    Declared by:

    [5120]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5121]services.dokuwiki.<name>.nginx.default

    Makes this vhost the default.

    Type: boolean

    Default: false

    Declared by:

    [5122]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5123]services.dokuwiki.<name>.nginx.extraConfig

    These lines go to the end of the vhost verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [5124]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5125]services.dokuwiki.<name>.nginx.forceSSL

    Whether to add a separate nginx server block that permanently redirects (301) all plain HTTP
    traffic to HTTPS. This will set defaults for listen to listen on all interfaces on the
    respective default ports (80, 443), where the non-SSL listens are used for the redirect
    vhosts.

    Type: boolean

    Default: false

    Declared by:

    [5126]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5127]services.dokuwiki.<name>.nginx.globalRedirect

    If set, all requests for this host are redirected permanently to the given hostname.

    Type: null or string

    Default: null

    Example: "newserver.example.org"

    Declared by:

    [5128]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5129]services.dokuwiki.<name>.nginx.http2

    Whether to enable HTTP 2. Note that (as of writing) due to nginx's implementation, to disable
    HTTP 2 you have to disable it on all vhosts that use a given IP address / port. If there is
    one server block configured to enable http2,then it is enabled for all server blocks on this
    IP. See https://stackoverflow.com/a/39466948/263061.

    Type: boolean

    Default: true

    Declared by:

    [5130]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5131]services.dokuwiki.<name>.nginx.http3

    Whether to enable HTTP 3. This requires using pkgs.nginxQuic package which can be achived by
    setting services.nginx.package = pkgs.nginxQuic;. Note that HTTP 3 support is experimental
    and *not* yet recommended for production. Read more at https://quic.nginx.org/

    Type: boolean

    Default: false

    Declared by:

    [5132]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5133]services.dokuwiki.<name>.nginx.listen

    Listen addresses and ports for this virtual host. IPv6 addresses must be enclosed in square
    brackets. Note: this option overrides addSSL and onlySSL.

    Type: list of submodules

    Default: [ ]

    Example: [ { addr = "195.154.1.1"; port = 443; ssl = true; } { addr = "192.154.1.1"; port =
    80; } ]

    Declared by:

    [5134]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5135]services.dokuwiki.<name>.nginx.listen.*.addr

    IP address.

    Type: string

    Declared by:

    [5136]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5137]services.dokuwiki.<name>.nginx.listen.*.extraParameters

    Extra parameters of this listen directive.

    Type: list of strings

    Default: [ ]

    Example: [ "reuseport" "deferred" ]

    Declared by:

    [5138]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5139]services.dokuwiki.<name>.nginx.listen.*.port

    Port number.

    Type: signed integer

    Default: 80

    Declared by:

    [5140]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5141]services.dokuwiki.<name>.nginx.listen.*.ssl

    Enable SSL.

    Type: boolean

    Default: false

    Declared by:

    [5142]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5143]services.dokuwiki.<name>.nginx.locations

    Declarative location config

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "/" = {
        proxyPass = "http://localhost:3000";
      };
    };

    Declared by:

    [5144]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5145]services.dokuwiki.<name>.nginx.locations.<name>.alias

    Alias directory for requests.

    Type: null or path

    Default: null

    Example: "/your/alias/directory"

    Declared by:

    [5146]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5147]services.dokuwiki.<name>.nginx.locations.<name>.basicAuth

    Basic Auth protection for a vhost.

    WARNING: This is implemented to store the password in plain text in the Nix store.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      user = "password";
    };

    Declared by:

    [5148]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5149]services.dokuwiki.<name>.nginx.locations.<name>.basicAuthFile

    Basic Auth password file for a vhost. Can be created via: htpasswd -c <filename> <username>.

    WARNING: The generate file contains the users' passwords in a non-cryptographically-securely
    hashed way.

    Type: null or path

    Default: null

    Declared by:

    [5150]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5151]services.dokuwiki.<name>.nginx.locations.<name>.extraConfig

    These lines go to the end of the location verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [5152]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5153]services.dokuwiki.<name>.nginx.locations.<name>.fastcgiParams

    FastCGI parameters to override. Unlike in the Nginx configuration file, overriding only some
    default parameters won't unset the default values for other parameters.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [5154]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5155]services.dokuwiki.<name>.nginx.locations.<name>.index

    Adds index directive.

    Type: null or string

    Default: null

    Example: "index.php index.html"

    Declared by:

    [5156]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5157]services.dokuwiki.<name>.nginx.locations.<name>.priority

    Order of this location block in relation to the others in the vhost. The semantics are the
    same as with `lib.mkOrder`. Smaller values have a greater priority.

    Type: signed integer

    Default: 1000

    Declared by:

    [5158]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5159]services.dokuwiki.<name>.nginx.locations.<name>.proxyPass

    Adds proxy_pass directive and sets recommended proxy headers if recommendedProxySettings is
    enabled.

    Type: null or string

    Default: null

    Example: "http://www.example.org/"

    Declared by:

    [5160]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5161]services.dokuwiki.<name>.nginx.locations.<name>.proxyWebsockets

    Whether to support proxying websocket connections with HTTP/1.1.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5162]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5163]services.dokuwiki.<name>.nginx.locations.<name>.return

    Adds a return directive, for e.g. redirections.

    Type: null or string

    Default: null

    Example: "301 http://example.com\$request_uri"

    Declared by:

    [5164]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5165]services.dokuwiki.<name>.nginx.locations.<name>.root

    Root directory for requests.

    Type: null or path

    Default: null

    Example: "/your/root/directory"

    Declared by:

    [5166]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5167]services.dokuwiki.<name>.nginx.locations.<name>.tryFiles

    Adds try_files directive.

    Type: null or string

    Default: null

    Example: "\$uri =404"

    Declared by:

    [5168]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5169]services.dokuwiki.<name>.nginx.onlySSL

    Whether to enable HTTPS and reject plain HTTP connections. This will set defaults for listen
    to listen on all interfaces on port 443.

    Type: boolean

    Default: false

    Declared by:

    [5170]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5171]services.dokuwiki.<name>.nginx.root

    The path of the web root directory.

    Type: null or path

    Default: null

    Example: "/data/webserver/docs"

    Declared by:

    [5172]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5173]services.dokuwiki.<name>.nginx.serverAliases

    Additional names of virtual hosts served by this virtual host configuration.

    Type: list of strings

    Default: [ ]

    Example: [ "www.example.org" "example.org" ]

    Declared by:

    [5174]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5175]services.dokuwiki.<name>.nginx.serverName

    Name of this virtual host. Defaults to attribute name in virtualHosts.

    Type: null or string

    Default: null

    Example: "example.org"

    Declared by:

    [5176]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5177]services.dokuwiki.<name>.nginx.sslCertificate

    Path to server SSL certificate.

    Type: path

    Example: "/var/host.cert"

    Declared by:

    [5178]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5179]services.dokuwiki.<name>.nginx.sslCertificateKey

    Path to server SSL certificate key.

    Type: path

    Example: "/var/host.key"

    Declared by:

    [5180]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5181]services.dokuwiki.<name>.nginx.sslTrustedCertificate

    Path to root SSL certificate for stapling and client certificates.

    Type: null or path

    Default: null

    Example: "/var/root.cert"

    Declared by:

    [5182]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5183]services.dokuwiki.<name>.nginx.useACMEHost

    A host of an existing Let's Encrypt certificate to use. This is useful if you have many
    subdomains and want to avoid hitting the [5184]rate limit. Alternately, you can generate a
    certificate through enableACME. Note that this option does not create any certificates, nor
    it does add subdomains to existing ones – you will need to create them manually using [5185]
    security.acme.certs.

    Type: null or string

    Default: null

    Declared by:

    [5186]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5187]services.dokuwiki.<name>.plugins

    List of path(s) to respective plugin(s) which are copied from the 'plugin' directory.

    Note: These plugins need to be packaged before use, see example.

    Type: list of paths

    Default: [ ]

    Example:

    ''
    # Let's package the icalevents plugin
    plugin-icalevents = pkgs.stdenv.mkDerivation {
      name = "icalevents";
      # Download the plugin from the dokuwiki site
      src = pkgs.fetchurl {
        url = "https://github.com/real-or-random/dokuwiki-plugin-icalevents/releases/download/2017-06-16/dokuwiki-plugin-icalevents-2017-06-16.zip";
        sha256 = "e40ed7dd6bbe7fe3363bbbecb4de481d5e42385b5a0f62f6a6ce6bf3a1f9dfa8";
      };
      sourceRoot = ".";
      # We need unzip to build this package
      nativeBuildInputs = [ pkgs.unzip ];
      # Installing simply means copying all files to the output directory
      installPhase = "mkdir -p $out; cp -R * $out/";
    };

    # And then pass this theme to the plugin list like this:
    plugins = [ plugin-icalevents ];
    ''

    Declared by:

    [5188]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5189]services.dokuwiki.<name>.pluginsConfig

    List of the dokuwiki (un)loaded plugins.

    Type: strings concatenated with "\n"

    Default:

    ''
    $plugins['authad'] = 0;
    $plugins['authldap'] = 0;
    $plugins['authmysql'] = 0;
    $plugins['authpgsql'] = 0;
    ''

    Declared by:

    [5190]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5191]services.dokuwiki.<name>.poolConfig

    Options for the dokuwiki PHP pool. See the documentation on php-fpm.conf for details on
    configuration directives.

    Type: attribute set of string or signed integer or booleans

    Default: { pm = "dynamic"; pm.max_children = 32; pm.max_requests = 500; pm.max_spare_servers
    = 4; pm.min_spare_servers = 2; pm.start_servers = 2; }

    Declared by:

    [5192]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5193]services.dokuwiki.<name>.stateDir

    Location of the dokuwiki state directory.

    Type: path

    Default: "/var/lib/dokuwiki/‹name›/data"

    Declared by:

    [5194]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5195]services.dokuwiki.<name>.superUser

    You can set either a username, a list of usernames (“admin1,admin2”), or the name of a group
    by prepending an @ char to the groupname Consult documentation [5196]https://www.dokuwiki.org
    /config:superuser for further instructions.

    Type: null or string

    Default: "@admin"

    Declared by:

    [5197]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5198]services.dokuwiki.<name>.templates

    List of path(s) to respective template(s) which are copied from the 'tpl' directory.

    Note: These templates need to be packaged before use, see example.

    Type: list of paths

    Default: [ ]

    Example:

    ''
    # Let's package the bootstrap3 theme
    template-bootstrap3 = pkgs.stdenv.mkDerivation {
      name = "bootstrap3";
      # Download the theme from the dokuwiki site
      src = pkgs.fetchurl {
        url = "https://github.com/giterlizzi/dokuwiki-template-bootstrap3/archive/v2019-05-22.zip";
        sha256 = "4de5ff31d54dd61bbccaf092c9e74c1af3a4c53e07aa59f60457a8f00cfb23a6";
      };
      # We need unzip to build this package
      nativeBuildInputs = [ pkgs.unzip ];
      # Installing simply means copying all files to the output directory
      installPhase = "mkdir -p $out; cp -R * $out/";
    };

    # And then pass this theme to the template list like this:
    templates = [ template-bootstrap3 ];
    ''

    Declared by:

    [5199]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5200]services.dokuwiki.<name>.usersFile

    Location of the dokuwiki users file. List of users. Format: login:passwordhash:Real
    Name:email:groups,comma,separated Create passwordHash easily by using:$ mkpasswd -5 password
    `pwgen 8 1` Example: [5201]https://github.com/splitbrain/dokuwiki/blob/master/conf/
    users.auth.php.dist

    Type: null or string

    Default: "/var/lib/dokuwiki/‹name›/users.auth.php"

    Example: "/var/lib/dokuwiki/‹name›/users.auth.php"

    Declared by:

    [5202]<nixpkgs/nixos/modules/services/web-apps/dokuwiki.nix>

[5203]services.domoticz.enable

    Whether to enable Domoticz home automation.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5204]<nixpkgs/nixos/modules/services/misc/domoticz.nix>

[5205]services.domoticz.bind

    IP address to bind to.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [5206]<nixpkgs/nixos/modules/services/misc/domoticz.nix>

[5207]services.domoticz.port

    Port to bind to for HTTP, set to 0 to disable HTTP.

    Type: signed integer

    Default: 8080

    Declared by:

    [5208]<nixpkgs/nixos/modules/services/misc/domoticz.nix>

[5209]services.dovecot2.enable

    Whether to enable Dovecot 2.x POP3/IMAP server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5210]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5211]services.dovecot2.enableImap

    Start the IMAP listener (when Dovecot is enabled).

    Type: boolean

    Default: true

    Declared by:

    [5212]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5213]services.dovecot2.enableLmtp

    Start the LMTP listener (when Dovecot is enabled).

    Type: boolean

    Default: false

    Declared by:

    [5214]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5215]services.dovecot2.enablePAM

    Whether to create a own Dovecot PAM service and configure PAM user logins.

    Type: boolean

    Default: true

    Declared by:

    [5216]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5217]services.dovecot2.enablePop3

    Start the POP3 listener (when Dovecot is enabled).

    Type: boolean

    Default: false

    Declared by:

    [5218]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5219]services.dovecot2.enableQuota

    Whether to enable the dovecot quota service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5220]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5221]services.dovecot2.configFile

    Config file used for the whole dovecot configuration.

    Type: null or path

    Default: null

    Declared by:

    [5222]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5223]services.dovecot2.createMailUser

    Whether to automatically create the user given in services.dovecot.user and the group given
    in services.dovecot.group.

    Type: boolean

    Default: true

    Declared by:

    [5224]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5225]services.dovecot2.extraConfig

    Additional entries to put verbatim into Dovecot's config file.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "mail_debug = yes"

    Declared by:

    [5226]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5227]services.dovecot2.group

    Dovecot group name.

    Type: string

    Default: "dovecot2"

    Declared by:

    [5228]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5229]services.dovecot2.mailGroup

    Default group to store mail for virtual users.

    Type: null or string

    Default: null

    Declared by:

    [5230]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5231]services.dovecot2.mailLocation

    Location that dovecot will use for mail folders. Dovecot mail_location option.

    Type: string

    Default: "maildir:/var/spool/mail/%u"

    Example: "maildir:~/mail:INBOX=/var/spool/mail/%u"

    Declared by:

    [5232]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5233]services.dovecot2.mailPlugins

    Additional entries to add to the mail_plugins variable, globally and per protocol

    Type: submodule

    Default: { globally = { enable = [ ] ; } ; perProtocol = { } ; }

    Example: { globally = { enable = [ "acl" ] ; } ; perProtocol = { imap = { enable = [
    "imap_acl" ] ; } ; } ; }

    Declared by:

    [5234]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5235]services.dovecot2.mailPlugins.globally

    Additional entries to add to the mail_plugins variable for all protocols

    Type: submodule

    Default: { enable = [ ] ; }

    Example: { enable = [ "virtual" ] ; }

    Declared by:

    [5236]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5237]services.dovecot2.mailPlugins.globally.enable

    mail plugins to enable as a list of strings to append to the top-level $mail_plugins
    configuration variable

    Type: list of strings

    Default: [ ]

    Declared by:

    [5238]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5239]services.dovecot2.mailPlugins.perProtocol

    Additional entries to add to the mail_plugins variable, per protocol

    Type: attribute set of submodules

    Default: { }

    Example: { imap = [ "imap_acl" ] ; }

    Declared by:

    [5240]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5241]services.dovecot2.mailPlugins.perProtocol.<name>.enable

    mail plugins to enable as a list of strings to append to the corresponding per-protocol
    $mail_plugins configuration variable

    Type: list of strings

    Default: [ ]

    Declared by:

    [5242]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5243]services.dovecot2.mailUser

    Default user to store mail for virtual users.

    Type: null or string

    Default: null

    Declared by:

    [5244]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5245]services.dovecot2.mailboxes

    Configure mailboxes and auto create or subscribe them.

    Type: attribute set of submodules or list of unspecifieds convertible to it

    Default: { }

    Example:

    {
      Spam = { specialUse = "Junk"; auto = "create"; };
    }

    Declared by:

    [5246]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5247]services.dovecot2.mailboxes.<name>.auto

    Whether to automatically create or create and subscribe to the mailbox or not.

    Type: one of "no", "create", "subscribe"

    Default: "no"

    Example: "subscribe"

    Declared by:

    [5248]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5249]services.dovecot2.mailboxes.<name>.autoexpunge

    To automatically remove all email from the mailbox which is older than the specified time.

    Type: null or string

    Default: null

    Example: "60d"

    Declared by:

    [5250]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5251]services.dovecot2.mailboxes.<name>.name

    The name of the mailbox.

    Type: string matching the pattern [^"]+ (read only)

    Default: "‹name›"

    Example: "Spam"

    Declared by:

    [5252]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5253]services.dovecot2.mailboxes.<name>.specialUse

    Null if no special use flag is set. Other than that every use flag mentioned in the RFC is
    valid.

    Type: null or one of "All", "Archive", "Drafts", "Flagged", "Junk", "Sent", "Trash"

    Default: null

    Example: "Junk"

    Declared by:

    [5254]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5255]services.dovecot2.modules

    Symlinks the contents of lib/dovecot of every given package into /etc/dovecot/modules. This
    will make the given modules available if a dovecot package with the module_dir patch applied
    is being used.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.dovecot_pigeonhole ]

    Declared by:

    [5256]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5257]services.dovecot2.protocols

    Additional listeners to start when Dovecot is enabled.

    Type: list of strings

    Default: [ ]

    Declared by:

    [5258]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5259]services.dovecot2.quotaGlobalPerUser

    Quota limit for the user in bytes. Supports suffixes b, k, M, G, T and %.

    Type: string

    Default: "100G"

    Example: "10G"

    Declared by:

    [5260]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5261]services.dovecot2.quotaPort

    The Port the dovecot quota service binds to. If using postfix, add check_policy_service
    inet:localhost:12340 to your smtpd_recipient_restrictions in your postfix config.

    Type: string

    Default: "12340"

    Declared by:

    [5262]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5263]services.dovecot2.showPAMFailure

    Show the PAM failure message on authentication error (useful for OTPW).

    Type: boolean

    Default: false

    Declared by:

    [5264]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5265]services.dovecot2.sieveScripts

    Sieve scripts to be executed. Key is a sequence, e.g. 'before2', 'after' etc.

    Type: attribute set of paths

    Default: { }

    Declared by:

    [5266]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5267]services.dovecot2.sslCACert

    Path to the server's CA certificate key.

    Type: null or string

    Default: null

    Declared by:

    [5268]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5269]services.dovecot2.sslServerCert

    Path to the server's public key.

    Type: null or string

    Default: null

    Declared by:

    [5270]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5271]services.dovecot2.sslServerKey

    Path to the server's private key.

    Type: null or string

    Default: null

    Declared by:

    [5272]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5273]services.dovecot2.user

    Dovecot user name.

    Type: string

    Default: "dovecot2"

    Declared by:

    [5274]<nixpkgs/nixos/modules/services/mail/dovecot.nix>

[5275]services.drbd.enable

    Whether to enable support for DRBD, the Distributed Replicated Block Device.

    Type: boolean

    Default: false

    Declared by:

    [5276]<nixpkgs/nixos/modules/services/network-filesystems/drbd.nix>

[5277]services.drbd.config

    Contents of the drbd.conf configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [5278]<nixpkgs/nixos/modules/services/network-filesystems/drbd.nix>

[5279]services.dspam.enable

    Whether to enable the dspam spam filter.

    Type: boolean

    Default: false

    Declared by:

    [5280]<nixpkgs/nixos/modules/services/mail/dspam.nix>

[5281]services.dspam.domainSocket

    Path to local domain socket which is used for communication with the daemon. Set to null to
    disable UNIX socket.

    Type: null or path

    Default: "/run/dspam/dspam.sock"

    Declared by:

    [5282]<nixpkgs/nixos/modules/services/mail/dspam.nix>

[5283]services.dspam.extraConfig

    Additional dspam configuration.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [5284]<nixpkgs/nixos/modules/services/mail/dspam.nix>

[5285]services.dspam.group

    Group for the dspam daemon.

    Type: string

    Default: "dspam"

    Declared by:

    [5286]<nixpkgs/nixos/modules/services/mail/dspam.nix>

[5287]services.dspam.maintenanceInterval

    If set, maintenance script will be run at specified (in systemd.timer format) interval

    Type: null or string

    Default: null

    Declared by:

    [5288]<nixpkgs/nixos/modules/services/mail/dspam.nix>

[5289]services.dspam.storageDriver

    Storage driver backend to use for dspam.

    Type: string

    Default: "hash"

    Declared by:

    [5290]<nixpkgs/nixos/modules/services/mail/dspam.nix>

[5291]services.dspam.user

    User for the dspam daemon.

    Type: string

    Default: "dspam"

    Declared by:

    [5292]<nixpkgs/nixos/modules/services/mail/dspam.nix>

[5293]services.duckling.enable

    Whether to enable duckling.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5294]<nixpkgs/nixos/modules/services/misc/duckling.nix>

[5295]services.duckling.port

    Port on which duckling will run.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8080

    Declared by:

    [5296]<nixpkgs/nixos/modules/services/misc/duckling.nix>

[5297]services.duplicati.enable

    Whether to enable Duplicati.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5298]<nixpkgs/nixos/modules/services/backup/duplicati.nix>

[5299]services.duplicati.interface

    Listening interface for the web UI Set it to "any" to listen on all available interfaces

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [5300]<nixpkgs/nixos/modules/services/backup/duplicati.nix>

[5301]services.duplicati.port

    Port serving the web interface

    Type: signed integer

    Default: 8200

    Declared by:

    [5302]<nixpkgs/nixos/modules/services/backup/duplicati.nix>

[5303]services.duplicati.user

    Duplicati runs as it's own user. It will only be able to backup world-readable files. Run as
    root with special care.

    Type: string

    Default: "duplicati"

    Declared by:

    [5304]<nixpkgs/nixos/modules/services/backup/duplicati.nix>

[5305]services.duplicity.enable

    Whether to enable backups with duplicity.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5306]<nixpkgs/nixos/modules/services/backup/duplicity.nix>

[5307]services.duplicity.cleanup.maxAge

    If non-null, delete all backup sets older than the given time. Old backup sets will not be
    deleted if backup sets newer than time depend on them.

    Type: null or string

    Default: null

    Example: "6M"

    Declared by:

    [5308]<nixpkgs/nixos/modules/services/backup/duplicity.nix>

[5309]services.duplicity.cleanup.maxFull

    If non-null, delete all backups sets that are older than the count:th last full backup (in
    other words, keep the last count full backups and associated incremental sets).

    Type: null or signed integer

    Default: null

    Example: 2

    Declared by:

    [5310]<nixpkgs/nixos/modules/services/backup/duplicity.nix>

[5311]services.duplicity.cleanup.maxIncr

    If non-null, delete incremental sets of all backups sets that are older than the count:th
    last full backup (in other words, keep only old full backups and not their increments).

    Type: null or signed integer

    Default: null

    Example: 1

    Declared by:

    [5312]<nixpkgs/nixos/modules/services/backup/duplicity.nix>

[5313]services.duplicity.exclude

    List of paths to exclude from backups. See the FILE SELECTION section in duplicity(1) for
    details on the syntax.

    Type: list of strings

    Default: [ ]

    Declared by:

    [5314]<nixpkgs/nixos/modules/services/backup/duplicity.nix>

[5315]services.duplicity.extraFlags

    Extra command-line flags passed to duplicity. See duplicity(1).

    Type: list of strings

    Default: [ ]

    Example: [ "--backend-retry-delay" "100" ]

    Declared by:

    [5316]<nixpkgs/nixos/modules/services/backup/duplicity.nix>

[5317]services.duplicity.frequency

    Run duplicity with the given frequency (see systemd.time(7) for the format). If null, do not
    run automatically.

    Type: null or string

    Default: "daily"

    Declared by:

    [5318]<nixpkgs/nixos/modules/services/backup/duplicity.nix>

[5319]services.duplicity.fullIfOlderThan

    If "never" (the default) always do incremental backups (the first backup will be a full
    backup, of course). If "always" always do full backups. Otherwise, this must be a string
    representing a duration. Full backups will be made when the latest full backup is older than
    this duration. If this is not the case, an incremental backup is performed.

    Type: string

    Default: "never"

    Example: "1M"

    Declared by:

    [5320]<nixpkgs/nixos/modules/services/backup/duplicity.nix>

[5321]services.duplicity.include

    List of paths to include into the backups. See the FILE SELECTION section in duplicity(1) for
    details on the syntax.

    Type: list of strings

    Default: [ ]

    Example: [ "/home" ]

    Declared by:

    [5322]<nixpkgs/nixos/modules/services/backup/duplicity.nix>

[5323]services.duplicity.root

    Root directory to backup.

    Type: path

    Default: "/"

    Declared by:

    [5324]<nixpkgs/nixos/modules/services/backup/duplicity.nix>

[5325]services.duplicity.secretFile

    Path of a file containing secrets (gpg passphrase, access key...) in the format of
    EnvironmentFile as described by systemd.exec(5). For example:

    PASSPHRASE=...
    AWS_ACCESS_KEY_ID=...
    AWS_SECRET_ACCESS_KEY=...

    Type: null or path

    Default: null

    Declared by:

    [5326]<nixpkgs/nixos/modules/services/backup/duplicity.nix>

[5327]services.duplicity.targetUrl

    Target url to backup to. See the URL FORMAT section in duplicity(1) for supported urls.

    Type: string

    Example: "s3://host:port/prefix"

    Declared by:

    [5328]<nixpkgs/nixos/modules/services/backup/duplicity.nix>

[5329]services.dwm-status.enable

    Whether to enable dwm-status user service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5330]<nixpkgs/nixos/modules/services/misc/dwm-status.nix>

[5331]services.dwm-status.package

    Which dwm-status package to use.

    Type: package

    Default: "pkgs.dwm-status"

    Example: "pkgs.dwm-status.override { enableAlsaUtils = false; }"

    Declared by:

    [5332]<nixpkgs/nixos/modules/services/misc/dwm-status.nix>

[5333]services.dwm-status.extraConfig

    Extra config in TOML format.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [5334]<nixpkgs/nixos/modules/services/misc/dwm-status.nix>

[5335]services.dwm-status.order

    List of enabled features in order.

    Type: list of one of "audio", "backlight", "battery", "cpu_load", "network", "time"s

    Declared by:

    [5336]<nixpkgs/nixos/modules/services/misc/dwm-status.nix>

[5337]services.earlyoom.enable

    Enable early out of memory killing.

    Type: boolean

    Default: false

    Declared by:

    [5338]<nixpkgs/nixos/modules/services/system/earlyoom.nix>

[5339]services.earlyoom.enableDebugInfo

    Enable debugging messages.

    Type: boolean

    Default: false

    Declared by:

    [5340]<nixpkgs/nixos/modules/services/system/earlyoom.nix>

[5341]services.earlyoom.enableNotifications

    Send notifications about killed processes via the system d-bus. To actually see the
    notifications in your GUI session, you need to have systembus-notify running as your user.

    See [5342]README for details.

    Type: boolean

    Default: false

    Declared by:

    [5343]<nixpkgs/nixos/modules/services/system/earlyoom.nix>

[5344]services.earlyoom.freeMemThreshold

    Minimum of availabe memory (in percent). If the free memory falls below this threshold and
    the analog is true for services.earlyoom.freeSwapThreshold the killing begins.

    Type: signed integer

    Default: 10

    Declared by:

    [5345]<nixpkgs/nixos/modules/services/system/earlyoom.nix>

[5346]services.earlyoom.freeSwapThreshold

    Minimum of availabe swap space (in percent). If the available swap space falls below this
    threshold and the analog is true for services.earlyoom.freeMemThreshold the killing begins.

    Type: signed integer

    Default: 10

    Declared by:

    [5347]<nixpkgs/nixos/modules/services/system/earlyoom.nix>

[5348]services.earlyoom.ignoreOOMScoreAdjust

    Ignore oom_score_adjust values of processes. User-space implementation only.

    Type: boolean

    Default: false

    Declared by:

    [5349]<nixpkgs/nixos/modules/services/system/earlyoom.nix>

[5350]services.earlyoom.notificationsCommand

    This option is deprecated and ignored by earlyoom since 1.6. Use
    services.earlyoom.enableNotifications instead.

    Type: null or string

    Default: null

    Declared by:

    [5351]<nixpkgs/nixos/modules/services/system/earlyoom.nix>

[5352]services.earlyoom.useKernelOOMKiller

    Use kernel OOM killer instead of own user-space implementation.

    Type: boolean

    Default: false

    Declared by:

    [5353]<nixpkgs/nixos/modules/services/system/earlyoom.nix>

[5354]services.ecs-agent.enable

    Whether to enable Amazon ECS agent.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5355]<nixpkgs/nixos/modules/virtualisation/ecs-agent.nix>

[5356]services.ecs-agent.package

    The ECS agent package to use

    Type: path

    Default: "pkgs.ecs-agent"

    Declared by:

    [5357]<nixpkgs/nixos/modules/virtualisation/ecs-agent.nix>

[5358]services.ecs-agent.extra-environment

    The environment the ECS agent should run with. See the ECS agent documentation for keys that
    work here.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [5359]<nixpkgs/nixos/modules/virtualisation/ecs-agent.nix>

[5360]services.ejabberd.enable

    Whether to enable ejabberd server

    Type: boolean

    Default: false

    Declared by:

    [5361]<nixpkgs/nixos/modules/services/networking/ejabberd.nix>

[5362]services.ejabberd.package

    ejabberd server package to use

    Type: package

    Default: "pkgs.ejabberd"

    Declared by:

    [5363]<nixpkgs/nixos/modules/services/networking/ejabberd.nix>

[5364]services.ejabberd.configFile

    Configuration file for ejabberd in YAML format

    Type: null or path

    Default: null

    Declared by:

    [5365]<nixpkgs/nixos/modules/services/networking/ejabberd.nix>

[5366]services.ejabberd.ctlConfig

    Configuration of ejabberdctl

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [5367]<nixpkgs/nixos/modules/services/networking/ejabberd.nix>

[5368]services.ejabberd.group

    Group under which ejabberd is ran

    Type: string

    Default: "ejabberd"

    Declared by:

    [5369]<nixpkgs/nixos/modules/services/networking/ejabberd.nix>

[5370]services.ejabberd.imagemagick

    Add ImageMagick to server's path; allows for image thumbnailing

    Type: boolean

    Default: false

    Declared by:

    [5371]<nixpkgs/nixos/modules/services/networking/ejabberd.nix>

[5372]services.ejabberd.loadDumps

    Configuration dumps that should be loaded on the first startup

    Type: list of paths

    Default: [ ]

    Example:

    [ ./myejabberd.dump ]

    Declared by:

    [5373]<nixpkgs/nixos/modules/services/networking/ejabberd.nix>

[5374]services.ejabberd.logsDir

    Location of the logfile directory of ejabberd

    Type: path

    Default: "/var/log/ejabberd"

    Declared by:

    [5375]<nixpkgs/nixos/modules/services/networking/ejabberd.nix>

[5376]services.ejabberd.spoolDir

    Location of the spooldir of ejabberd

    Type: path

    Default: "/var/lib/ejabberd"

    Declared by:

    [5377]<nixpkgs/nixos/modules/services/networking/ejabberd.nix>

[5378]services.ejabberd.user

    User under which ejabberd is ran

    Type: string

    Default: "ejabberd"

    Declared by:

    [5379]<nixpkgs/nixos/modules/services/networking/ejabberd.nix>

[5380]services.elasticsearch.enable

    Whether to enable elasticsearch.

    Type: boolean

    Default: false

    Declared by:

    [5381]<nixpkgs/nixos/modules/services/search/elasticsearch.nix>

[5382]services.elasticsearch.package

    Elasticsearch package to use.

    Type: package

    Default: "pkgs.elasticsearch"

    Declared by:

    [5383]<nixpkgs/nixos/modules/services/search/elasticsearch.nix>

[5384]services.elasticsearch.cluster_name

    Elasticsearch name that identifies your cluster for auto-discovery.

    Type: string

    Default: "elasticsearch"

    Declared by:

    [5385]<nixpkgs/nixos/modules/services/search/elasticsearch.nix>

[5386]services.elasticsearch.dataDir

    Data directory for elasticsearch.

    Type: path

    Default: "/var/lib/elasticsearch"

    Declared by:

    [5387]<nixpkgs/nixos/modules/services/search/elasticsearch.nix>

[5388]services.elasticsearch.extraCmdLineOptions

    Extra command line options for the elasticsearch launcher.

    Type: list of strings

    Default: [ ]

    Declared by:

    [5389]<nixpkgs/nixos/modules/services/search/elasticsearch.nix>

[5390]services.elasticsearch.extraConf

    Extra configuration for elasticsearch.

    Type: string

    Default: ""

    Example:

    ''
    node.name: "elasticsearch"
    node.master: true
    node.data: false
    ''

    Declared by:

    [5391]<nixpkgs/nixos/modules/services/search/elasticsearch.nix>

[5392]services.elasticsearch.extraJavaOptions

    Extra command line options for Java.

    Type: list of strings

    Default: [ ]

    Example: [ "-Djava.net.preferIPv4Stack=true" ]

    Declared by:

    [5393]<nixpkgs/nixos/modules/services/search/elasticsearch.nix>

[5394]services.elasticsearch.listenAddress

    Elasticsearch listen address.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [5395]<nixpkgs/nixos/modules/services/search/elasticsearch.nix>

[5396]services.elasticsearch.logging

    Elasticsearch logging configuration.

    Type: string

    Default:

    ''
    logger.action.name = org.elasticsearch.action
    logger.action.level = info

    appender.console.type = Console
    appender.console.name = console
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c{1.}] %marker%m%n

    rootLogger.level = info
    rootLogger.appenderRef.console.ref = console
    ''

    Declared by:

    [5397]<nixpkgs/nixos/modules/services/search/elasticsearch.nix>

[5398]services.elasticsearch.plugins

    Extra elasticsearch plugins

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.elasticsearchPlugins.discovery-ec2 ]

    Declared by:

    [5399]<nixpkgs/nixos/modules/services/search/elasticsearch.nix>

[5400]services.elasticsearch.port

    Elasticsearch port to listen for HTTP traffic.

    Type: signed integer

    Default: 9200

    Declared by:

    [5401]<nixpkgs/nixos/modules/services/search/elasticsearch.nix>

[5402]services.elasticsearch.tcp_port

    Elasticsearch port for the node to node communication.

    Type: signed integer

    Default: 9300

    Declared by:

    [5403]<nixpkgs/nixos/modules/services/search/elasticsearch.nix>

[5404]services.elasticsearch-curator.enable

    Whether to enable elasticsearch curator.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5405]<nixpkgs/nixos/modules/services/search/elasticsearch-curator.nix>

[5406]services.elasticsearch-curator.actionYAML

    curator action.yaml file contents, alternatively use curator-cli which takes a simple action
    command

    Type: strings concatenated with "\n"

    Example:

    ''
    ---
    actions:
      1:
        action: delete_indices
        description: >-
          Delete indices older than 45 days (based on index name), for logstash-
          prefixed indices. Ignore the error if the filter does not result in an
          actionable list of indices (ignore_empty_list) and exit cleanly.
        options:
          ignore_empty_list: True
          disable_action: False
        filters:
        - filtertype: pattern
          kind: prefix
          value: logstash-
        - filtertype: age
          source: name
          direction: older
          timestring: '%Y.%m.%d'
          unit: days
          unit_count: 45
    ''

    Declared by:

    [5407]<nixpkgs/nixos/modules/services/search/elasticsearch-curator.nix>

[5408]services.elasticsearch-curator.hosts

    a list of elasticsearch hosts to connect to

    Type: list of strings

    Default: [ "localhost" ]

    Declared by:

    [5409]<nixpkgs/nixos/modules/services/search/elasticsearch-curator.nix>

[5410]services.elasticsearch-curator.interval

    The frequency to run curator, a systemd.time such as 'hourly'

    Type: string

    Default: "hourly"

    Declared by:

    [5411]<nixpkgs/nixos/modules/services/search/elasticsearch-curator.nix>

[5412]services.elasticsearch-curator.port

    the port that elasticsearch is listening on

    Type: signed integer

    Default: 9200

    Declared by:

    [5413]<nixpkgs/nixos/modules/services/search/elasticsearch-curator.nix>

[5414]services.emacs.enable

    Whether to enable a user service for the Emacs daemon. Use emacsclient to connect to the
    daemon. If true, services.emacs.install is considered true, whatever its value.

    Type: boolean

    Default: false

    Declared by:

    [5415]<nixpkgs/nixos/modules/services/editors/emacs.nix>

[5416]services.emacs.package

    emacs derivation to use.

    Type: package

    Default: "pkgs.emacs"

    Declared by:

    [5417]<nixpkgs/nixos/modules/services/editors/emacs.nix>

[5418]services.emacs.defaultEditor

    When enabled, configures emacsclient to be the default editor using the EDITOR environment
    variable.

    Type: boolean

    Default: false

    Declared by:

    [5419]<nixpkgs/nixos/modules/services/editors/emacs.nix>

[5420]services.emacs.install

    Whether to install a user service for the Emacs daemon. Once the service is started, use
    emacsclient to connect to the daemon.

    The service must be manually started for each user with "systemctl --user start emacs" or
    globally through services.emacs.enable.

    Type: boolean

    Default: false

    Declared by:

    [5421]<nixpkgs/nixos/modules/services/editors/emacs.nix>

[5422]services.engelsystem.enable

    Whether to enable engelsystem, an online tool for coordinating volunteers and shifts on large
    events.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5423]<nixpkgs/nixos/modules/services/web-apps/engelsystem.nix>

[5424]services.engelsystem.package

    Engelsystem package used for the service.

    Type: package

    Default: (build of engelsystem-3.1.0)

    Example:

    pkgs.engelsystem

    Declared by:

    [5425]<nixpkgs/nixos/modules/services/web-apps/engelsystem.nix>

[5426]services.engelsystem.config

    Options to be added to config.php, as a nix attribute set. Options containing secret data
    should be set to an attribute set containing the attribute _secret - a string pointing to a
    file containing the value the option should be set to. See the example to get a better
    picture of this: in the resulting config.php file, the email.password key will be set to the
    contents of the /var/keys/engelsystem/mail file.

    See https://engelsystem.de/doc/admin/configuration/ for available options.

    Note that the admin user login credentials cannot be set here - they always default to
    admin:asdfasdf. Log in and change them immediately.

    Type: attribute set

    Default: { database = { database = "engelsystem"; host = "localhost"; username =
    "engelsystem"; } ; }

    Example: { autoarrive = true; database = { database = "engelsystem"; host =
    "database.example.com"; password = { _secret = "/var/keys/engelsystem/database"; } ; username
    = "engelsystem"; } ; default_locale = "de_DE"; email = { driver = "smtp"; encryption = "tls";
    from = { address = "engelsystem@example.com"; name = "example engelsystem"; } ; host =
    "smtp.example.com"; password = { _secret = "/var/keys/engelsystem/mail"; } ; port = 587;
    username = "engelsystem@example.com"; } ; maintenance = false; min_password_length = 6; }

    Declared by:

    [5427]<nixpkgs/nixos/modules/services/web-apps/engelsystem.nix>

[5428]services.engelsystem.createDatabase

    Whether to create a local database automatically. This will override every database setting
    in services.engelsystem.config.

    Type: boolean

    Default: true

    Declared by:

    [5429]<nixpkgs/nixos/modules/services/web-apps/engelsystem.nix>

[5430]services.engelsystem.domain

    Domain to serve on.

    Type: string

    Example: "engelsystem.example.com"

    Declared by:

    [5431]<nixpkgs/nixos/modules/services/web-apps/engelsystem.nix>

[5432]services.epgstation.enable

    Whether to enable DTV Software in Japan..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5433]<nixpkgs/nixos/modules/services/video/epgstation/default.nix>

[5434]services.epgstation.basicAuth.passwordFile

    A file containing the password for basicAuth.user.

    Type: path

    Default: (build of epgstation-password)

    Example: "/run/keys/epgstation-password"

    Declared by:

    [5435]<nixpkgs/nixos/modules/services/video/epgstation/default.nix>

[5436]services.epgstation.basicAuth.user

    Basic auth username for EPGStation. If null, basic auth will be disabled.

    Warning: Basic authentication has known weaknesses, the most critical being that it sends
    passwords over the network in clear text. Use this feature to control access to EPGStation
    within your family and friends, but don't rely on it for security.

    Type: null or string

    Default: null

    Example: "epgstation"

    Declared by:

    [5437]<nixpkgs/nixos/modules/services/video/epgstation/default.nix>

[5438]services.epgstation.clientSocketioPort

    Socket.io port that the web client is going to connect to. This may be different from
    socketioPort if EPGStation is hidden behind a reverse proxy.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 20773

    Declared by:

    [5439]<nixpkgs/nixos/modules/services/video/epgstation/default.nix>

[5440]services.epgstation.database.name

    Name of the MySQL database that holds EPGStation's data.

    Type: string

    Default: "epgstation"

    Declared by:

    [5441]<nixpkgs/nixos/modules/services/video/epgstation/default.nix>

[5442]services.epgstation.database.passwordFile

    A file containing the password for the database named database.name.

    Type: path

    Default: (build of epgstation-db-password)

    Example: "/run/keys/epgstation-db-password"

    Declared by:

    [5443]<nixpkgs/nixos/modules/services/video/epgstation/default.nix>

[5444]services.epgstation.openFirewall

    Open ports in the firewall for the EPGStation web interface.

    Warning: Exposing EPGStation to the open internet is generally advised against. Only use it
    inside a trusted local network, or consider putting it behind a VPN if you want remote
    access.

    Type: boolean

    Default: false

    Declared by:

    [5445]<nixpkgs/nixos/modules/services/video/epgstation/default.nix>

[5446]services.epgstation.port

    HTTP port for EPGStation to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 20772

    Declared by:

    [5447]<nixpkgs/nixos/modules/services/video/epgstation/default.nix>

[5448]services.epgstation.settings

    Options to add to config.json.

    Documentation: [5449]https://github.com/l3tnun/EPGStation/blob/master/doc/conf-manual.md

    Type: JSON value

    Default: { }

    Example: { conflictPriority = 10; recPriority = 20; }

    Declared by:

    [5450]<nixpkgs/nixos/modules/services/video/epgstation/default.nix>

[5451]services.epgstation.settings.encode

    Encoding presets for recorded videos.

    Type: list of attribute sets

    Default: [ { cmd = "\${pkgs.epgstation}/libexec/enc.sh main"; default = true; name = "H264";
    suffix = ".mp4"; } { cmd = "\${pkgs.epgstation}/libexec/enc.sh sub"; name = "H264-sub";
    suffix = "-sub.mp4"; } ]

    Declared by:

    [5452]<nixpkgs/nixos/modules/services/video/epgstation/default.nix>

[5453]services.epgstation.settings.mirakurunPath

    URL to connect to Mirakurun.

    Type: string

    Default: "http+unix://%2Fvar%2Frun%2Fmirakurun%2Fmirakurun.sock"

    Example: "http://localhost:40772"

    Declared by:

    [5454]<nixpkgs/nixos/modules/services/video/epgstation/default.nix>

[5455]services.epgstation.settings.readOnlyOnce

    Don't reload configuration files at runtime.

    Type: boolean

    Default: false

    Declared by:

    [5456]<nixpkgs/nixos/modules/services/video/epgstation/default.nix>

[5457]services.epgstation.socketioPort

    Socket.io port for EPGStation to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 20773

    Declared by:

    [5458]<nixpkgs/nixos/modules/services/video/epgstation/default.nix>

[5459]services.epgstation.usePreconfiguredStreaming

    Use preconfigured default streaming options.

    Upstream defaults: [5460]https://github.com/l3tnun/EPGStation/blob/master/config/
    config.sample.json

    Type: boolean

    Default: true

    Declared by:

    [5461]<nixpkgs/nixos/modules/services/video/epgstation/default.nix>

[5462]services.epmd.enable

    Whether to enable socket activation for Erlang Port Mapper Daemon (epmd), which acts as a
    name server on all hosts involved in distributed Erlang computations.

    Type: boolean

    Default: false

    Declared by:

    [5463]<nixpkgs/nixos/modules/services/networking/epmd.nix>

[5464]services.epmd.package

    The Erlang package to use to get epmd binary. That way you can re-use an Erlang runtime that
    is already installed for other purposes.

    Type: package

    Default: (build of erlang-23.3.4)

    Declared by:

    [5465]<nixpkgs/nixos/modules/services/networking/epmd.nix>

[5466]services.ergo.enable

    Whether to enable Ergo service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5467]<nixpkgs/nixos/modules/services/networking/ergo.nix>

[5468]services.ergo.api.keyHash

    Hex-encoded Blake2b256 hash of an API key as a 64-chars long Base16 string.

    Type: null or string

    Default: null

    Example: "324dcf027dd4a30a932c441f365a25e86b173defa4b8e58948253471b81b72cf"

    Declared by:

    [5469]<nixpkgs/nixos/modules/services/networking/ergo.nix>

[5470]services.ergo.api.listen.ip

    IP address that the Ergo node API should listen on if api.keyHash is defined.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [5471]<nixpkgs/nixos/modules/services/networking/ergo.nix>

[5472]services.ergo.api.listen.port

    Listen port for the API endpoint if api.keyHash is defined.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9052

    Declared by:

    [5473]<nixpkgs/nixos/modules/services/networking/ergo.nix>

[5474]services.ergo.dataDir

    The data directory for the Ergo node.

    Type: path

    Default: "/var/lib/ergo"

    Declared by:

    [5475]<nixpkgs/nixos/modules/services/networking/ergo.nix>

[5476]services.ergo.group

    The group as which to run the Ergo node.

    Type: string

    Default: "ergo"

    Declared by:

    [5477]<nixpkgs/nixos/modules/services/networking/ergo.nix>

[5478]services.ergo.listen.ip

    IP address on which the Ergo node should listen.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [5479]<nixpkgs/nixos/modules/services/networking/ergo.nix>

[5480]services.ergo.listen.port

    Listen port for the Ergo node.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9006

    Declared by:

    [5481]<nixpkgs/nixos/modules/services/networking/ergo.nix>

[5482]services.ergo.openFirewall

    Open ports in the firewall for the Ergo node as well as the API.

    Type: boolean

    Default: false

    Declared by:

    [5483]<nixpkgs/nixos/modules/services/networking/ergo.nix>

[5484]services.ergo.testnet

    Connect to testnet network instead of the default mainnet.

    Type: boolean

    Default: false

    Declared by:

    [5485]<nixpkgs/nixos/modules/services/networking/ergo.nix>

[5486]services.ergo.user

    The user as which to run the Ergo node.

    Type: string

    Default: "ergo"

    Declared by:

    [5487]<nixpkgs/nixos/modules/services/networking/ergo.nix>

[5488]services.errbot.instances

    Errbot instance configs

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [5489]<nixpkgs/nixos/modules/services/misc/errbot.nix>

[5490]services.errbot.instances.<name>.admins

    List of identifiers of errbot admins.

    Type: list of strings

    Default: [ ]

    Declared by:

    [5491]<nixpkgs/nixos/modules/services/misc/errbot.nix>

[5492]services.errbot.instances.<name>.backend

    Errbot backend name.

    Type: string

    Default: "XMPP"

    Declared by:

    [5493]<nixpkgs/nixos/modules/services/misc/errbot.nix>

[5494]services.errbot.instances.<name>.dataDir

    Data directory for errbot instance.

    Type: null or path

    Default: null

    Declared by:

    [5495]<nixpkgs/nixos/modules/services/misc/errbot.nix>

[5496]services.errbot.instances.<name>.extraConfig

    String to be appended to the config verbatim

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [5497]<nixpkgs/nixos/modules/services/misc/errbot.nix>

[5498]services.errbot.instances.<name>.identity

    Errbot identity configuration

    Type: attribute set

    Declared by:

    [5499]<nixpkgs/nixos/modules/services/misc/errbot.nix>

[5500]services.errbot.instances.<name>.logLevel

    Errbot log level

    Type: string

    Default: "INFO"

    Declared by:

    [5501]<nixpkgs/nixos/modules/services/misc/errbot.nix>

[5502]services.errbot.instances.<name>.plugins

    List of errbot plugin derivations.

    Type: list of packages

    Default: [ ]

    Declared by:

    [5503]<nixpkgs/nixos/modules/services/misc/errbot.nix>

[5504]services.espanso.enable

    Whether to enable Espanso.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5505]<nixpkgs/nixos/modules/services/desktops/espanso.nix>

[5506]services.etcd.enable

    Whether to enable etcd.

    Type: boolean

    Default: false

    Declared by:

    [5507]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5508]services.etcd.advertiseClientUrls

    Etcd list of this member's client URLs to advertise to the rest of the cluster.

    Type: list of strings

    Default: [ "http://127.0.0.1:2379" ]

    Declared by:

    [5509]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5510]services.etcd.certFile

    Cert file to use for clients

    Type: null or path

    Default: null

    Declared by:

    [5511]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5512]services.etcd.clientCertAuth

    Whether to use certs for client authentication

    Type: boolean

    Default: false

    Declared by:

    [5513]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5514]services.etcd.dataDir

    Etcd data directory.

    Type: path

    Default: "/var/lib/etcd"

    Declared by:

    [5515]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5516]services.etcd.discovery

    Etcd discovery url

    Type: string

    Default: ""

    Declared by:

    [5517]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5518]services.etcd.extraConf

    Etcd extra configuration. See [5519]https://github.com/coreos/etcd/blob/master/Documentation/
    op-guide/configuration.md#configuration-flags

    Type: attribute set of strings

    Default: { }

    Example:

    {
      "CORS" = "*";
      "NAME" = "default-name";
      "MAX_RESULT_BUFFER" = "1024";
      "MAX_CLUSTER_SIZE" = "9";
      "MAX_RETRY_ATTEMPTS" = "3";
    }

    Declared by:

    [5520]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5521]services.etcd.initialAdvertisePeerUrls

    Etcd list of this member's peer URLs to advertise to rest of the cluster.

    Type: list of strings

    Default: [ "http://127.0.0.1:2380" ]

    Declared by:

    [5522]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5523]services.etcd.initialCluster

    Etcd initial cluster configuration for bootstrapping.

    Type: list of strings

    Default: [ "nixos=http://127.0.0.1:2380" ]

    Declared by:

    [5524]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5525]services.etcd.initialClusterState

    Etcd initial cluster configuration for bootstrapping.

    Type: one of "new", "existing"

    Default: "new"

    Declared by:

    [5526]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5527]services.etcd.initialClusterToken

    Etcd initial cluster token for etcd cluster during bootstrap.

    Type: string

    Default: "etcd-cluster"

    Declared by:

    [5528]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5529]services.etcd.keyFile

    Key file to use for clients

    Type: null or path

    Default: null

    Declared by:

    [5530]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5531]services.etcd.listenClientUrls

    Etcd list of URLs to listen on for client traffic.

    Type: list of strings

    Default: [ "http://127.0.0.1:2379" ]

    Declared by:

    [5532]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5533]services.etcd.listenPeerUrls

    Etcd list of URLs to listen on for peer traffic.

    Type: list of strings

    Default: [ "http://127.0.0.1:2380" ]

    Declared by:

    [5534]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5535]services.etcd.name

    Etcd unique node name.

    Type: string

    Default: "nixos"

    Declared by:

    [5536]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5537]services.etcd.peerCertFile

    Cert file to use for peer to peer communication

    Type: null or path

    Default: null

    Declared by:

    [5538]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5539]services.etcd.peerClientCertAuth

    Whether to check all incoming peer requests from the cluster for valid client certificates
    signed by the supplied CA

    Type: boolean

    Default: false

    Declared by:

    [5540]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5541]services.etcd.peerKeyFile

    Key file to use for peer to peer communication

    Type: null or path

    Default: null

    Declared by:

    [5542]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5543]services.etcd.peerTrustedCaFile

    Certificate authority file to use for peer to peer communication

    Type: null or path

    Default: null

    Declared by:

    [5544]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5545]services.etcd.trustedCaFile

    Certificate authority file to use for clients

    Type: null or path

    Default: null

    Declared by:

    [5546]<nixpkgs/nixos/modules/services/misc/etcd.nix>

[5547]services.etebase-server.enable

    Whether to enable the Etebase server.

    Once enabled you need to create an admin user by invoking the shell command etebase-server
    createsuperuser with the user specified by the user option or a superuser. Then you can login
    and create accounts on your-etebase-server.com/admin

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5548]<nixpkgs/nixos/modules/services/misc/etebase-server.nix>

[5549]services.etebase-server.dataDir

    Directory to store the Etebase server data.

    Type: string

    Default: "/var/lib/etebase-server"

    Declared by:

    [5550]<nixpkgs/nixos/modules/services/misc/etebase-server.nix>

[5551]services.etebase-server.openFirewall

    Whether to open ports in the firewall for the server.

    Type: boolean

    Default: false

    Declared by:

    [5552]<nixpkgs/nixos/modules/services/misc/etebase-server.nix>

[5553]services.etebase-server.port

    Port to listen on.

    Type: null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8001

    Declared by:

    [5554]<nixpkgs/nixos/modules/services/misc/etebase-server.nix>

[5555]services.etebase-server.settings

    Configuration for etebase-server. Refer to [5556]https://github.com/etesync/server/blob/
    master/etebase-server.ini.example and [5557]https://github.com/etesync/server/wiki for
    details on supported values.

    Type: attribute set of attribute set of INI atom (null, bool, int, float or string)ss

    Default: { }

    Example: { allowed_hosts = { allowed_host2 = "localhost"; } ; global = { debug = true;
    media_root = "/path/to/media"; } ; }

    Declared by:

    [5558]<nixpkgs/nixos/modules/services/misc/etebase-server.nix>

[5559]services.etebase-server.settings.allowed_hosts.allowed_host1

    The main host that is allowed access.

    Type: string

    Default: "0.0.0.0"

    Example: "localhost"

    Declared by:

    [5560]<nixpkgs/nixos/modules/services/misc/etebase-server.nix>

[5561]services.etebase-server.settings.database.engine

    The database engine to use.

    Type: one of "django.db.backends.sqlite3", "django.db.backends.postgresql"

    Default: "django.db.backends.sqlite3"

    Declared by:

    [5562]<nixpkgs/nixos/modules/services/misc/etebase-server.nix>

[5563]services.etebase-server.settings.database.name

    The database name.

    Type: string

    Default: "\${config.services.etebase-server.dataDir}/db.sqlite3"

    Declared by:

    [5564]<nixpkgs/nixos/modules/services/misc/etebase-server.nix>

[5565]services.etebase-server.settings.global.debug

    Whether to set django's DEBUG flag.

    Type: boolean

    Default: false

    Declared by:

    [5566]<nixpkgs/nixos/modules/services/misc/etebase-server.nix>

[5567]services.etebase-server.settings.global.media_root

    The media directory.

    Type: string

    Default: "\${config.services.etebase-server.dataDir}/media"

    Declared by:

    [5568]<nixpkgs/nixos/modules/services/misc/etebase-server.nix>

[5569]services.etebase-server.settings.global.secret_file

    The path to a file containing the secret used as django's SECRET_KEY.

    Type: null or string

    Default: null

    Declared by:

    [5570]<nixpkgs/nixos/modules/services/misc/etebase-server.nix>

[5571]services.etebase-server.settings.global.static_root

    The directory for static files.

    Type: string

    Default: "\${config.services.etebase-server.dataDir}/static"

    Declared by:

    [5572]<nixpkgs/nixos/modules/services/misc/etebase-server.nix>

[5573]services.etebase-server.unixSocket

    The path to the socket to bind to.

    Type: null or string

    Default: null

    Example: "/run/etebase-server/etebase-server.sock"

    Declared by:

    [5574]<nixpkgs/nixos/modules/services/misc/etebase-server.nix>

[5575]services.etebase-server.user

    User under which Etebase server runs.

    Type: string

    Default: "etebase-server"

    Declared by:

    [5576]<nixpkgs/nixos/modules/services/misc/etebase-server.nix>

[5577]services.eternal-terminal.enable

    Whether to enable Eternal Terminal server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5578]<nixpkgs/nixos/modules/services/networking/eternal-terminal.nix>

[5579]services.eternal-terminal.logSize

    The maximum log size.

    Type: signed integer

    Default: 20971520

    Declared by:

    [5580]<nixpkgs/nixos/modules/services/networking/eternal-terminal.nix>

[5581]services.eternal-terminal.port

    The port the server should listen on. Will use the server's default (2022) if not specified.

    Make sure to open this port in the firewall if necessary.

    Type: signed integer

    Default: 2022

    Declared by:

    [5582]<nixpkgs/nixos/modules/services/networking/eternal-terminal.nix>

[5583]services.eternal-terminal.silent

    If enabled, disables all logging.

    Type: boolean

    Default: false

    Declared by:

    [5584]<nixpkgs/nixos/modules/services/networking/eternal-terminal.nix>

[5585]services.eternal-terminal.verbosity

    The verbosity level (0-9).

    Type: one of 0, 1, 2, 3, 4, 5, 6, 7, 8, 9

    Default: 0

    Declared by:

    [5586]<nixpkgs/nixos/modules/services/networking/eternal-terminal.nix>

[5587]services.etesync-dav.enable

    Whether to enable etesync-dav.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5588]<nixpkgs/nixos/modules/services/misc/etesync-dav.nix>

[5589]services.etesync-dav.apiUrl

    The url to the etesync API.

    Type: string

    Default: "https://api.etesync.com/"

    Declared by:

    [5590]<nixpkgs/nixos/modules/services/misc/etesync-dav.nix>

[5591]services.etesync-dav.host

    The server host address.

    Type: string

    Default: "localhost"

    Declared by:

    [5592]<nixpkgs/nixos/modules/services/misc/etesync-dav.nix>

[5593]services.etesync-dav.openFirewall

    Whether to open the firewall for the specified port.

    Type: boolean

    Default: false

    Declared by:

    [5594]<nixpkgs/nixos/modules/services/misc/etesync-dav.nix>

[5595]services.etesync-dav.port

    The server host port.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 37358

    Declared by:

    [5596]<nixpkgs/nixos/modules/services/misc/etesync-dav.nix>

[5597]services.etesync-dav.sslCertificate

    Path to server SSL certificate. It will be copied into etesync-dav's data directory.

    Type: null or path

    Default: null

    Example: "/var/etesync.crt"

    Declared by:

    [5598]<nixpkgs/nixos/modules/services/misc/etesync-dav.nix>

[5599]services.etesync-dav.sslCertificateKey

    Path to server SSL certificate key. It will be copied into etesync-dav's data directory.

    Type: null or path

    Default: null

    Example: "/var/etesync.key"

    Declared by:

    [5600]<nixpkgs/nixos/modules/services/misc/etesync-dav.nix>

[5601]services.ethminer.enable

    Enable ethminer ether mining.

    Type: boolean

    Default: false

    Declared by:

    [5602]<nixpkgs/nixos/modules/services/misc/ethminer.nix>

[5603]services.ethminer.apiPort

    Ethminer api port. minus sign puts api in read-only mode.

    Type: signed integer

    Default: -3333

    Declared by:

    [5604]<nixpkgs/nixos/modules/services/misc/ethminer.nix>

[5605]services.ethminer.maxPower

    Miner max watt usage.

    Type: signed integer

    Default: 113

    Declared by:

    [5606]<nixpkgs/nixos/modules/services/misc/ethminer.nix>

[5607]services.ethminer.pool

    Mining pool address.

    Type: string

    Example: "eth-us-east1.nanopool.org"

    Declared by:

    [5608]<nixpkgs/nixos/modules/services/misc/ethminer.nix>

[5609]services.ethminer.recheckInterval

    Interval in milliseconds between farm rechecks.

    Type: signed integer

    Default: 2000

    Declared by:

    [5610]<nixpkgs/nixos/modules/services/misc/ethminer.nix>

[5611]services.ethminer.registerMail

    Url encoded email address to register with pool.

    Type: string

    Example: "email%40example.org"

    Declared by:

    [5612]<nixpkgs/nixos/modules/services/misc/ethminer.nix>

[5613]services.ethminer.rig

    Mining rig name.

    Type: string

    Default: "mining-rig-name"

    Declared by:

    [5614]<nixpkgs/nixos/modules/services/misc/ethminer.nix>

[5615]services.ethminer.stratumPort

    Stratum protocol tcp port.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9999

    Declared by:

    [5616]<nixpkgs/nixos/modules/services/misc/ethminer.nix>

[5617]services.ethminer.toolkit

    Cuda or opencl toolkit.

    Type: one of "cuda", "opencl"

    Default: "cuda"

    Declared by:

    [5618]<nixpkgs/nixos/modules/services/misc/ethminer.nix>

[5619]services.ethminer.wallet

    Ethereum wallet address.

    Type: string

    Example: "0x0123456789abcdef0123456789abcdef01234567"

    Declared by:

    [5620]<nixpkgs/nixos/modules/services/misc/ethminer.nix>

[5621]services.exhibitor.enable

    Whether to enable the exhibitor server.

    Type: boolean

    Default: false

    Declared by:

    [5622]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5623]services.exhibitor.autoManageInstances

    Automatically manage ZooKeeper instances in the ensemble

    Type: boolean

    Default: false

    Declared by:

    [5624]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5625]services.exhibitor.baseDir

    Baseline directory for exhibitor runtime config.

    Type: string

    Default: "/var/exhibitor"

    Declared by:

    [5626]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5627]services.exhibitor.configCheckMs

    Period (ms) to check for shared config updates.

    Type: signed integer

    Default: 30000

    Declared by:

    [5628]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5629]services.exhibitor.configType

    Which configuration type you want to use. Additional config will be required depending on
    which type you are using.

    Type: one of "file", "s3", "zookeeper", "none"

    Declared by:

    [5630]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5631]services.exhibitor.extraConf

    Extra Exhibitor configuration to put in the ZooKeeper config file.

    Type: string

    Default: ""

    Declared by:

    [5632]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5633]services.exhibitor.fileSystemBackup

    Enables file system backup of ZooKeeper log files

    Type: boolean

    Default: false

    Declared by:

    [5634]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5635]services.exhibitor.fsConfigDir

    Directory to store Exhibitor properties (cannot be used with s3config). Exhibitor uses file
    system locks so you can specify a shared location so as to enable complete ensemble
    management.

    Type: path

    Declared by:

    [5636]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5637]services.exhibitor.fsConfigLockPrefix

    A prefix for a locking mechanism used in conjunction with fsconfigdir

    Type: string

    Default: "exhibitor-lock-"

    Declared by:

    [5638]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5639]services.exhibitor.fsConfigName

    The name of the file to store config in

    Type: string

    Default: "exhibitor.properties"

    Declared by:

    [5640]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5641]services.exhibitor.headingText

    Extra text to display in UI header

    Type: null or string

    Default: null

    Declared by:

    [5642]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5643]services.exhibitor.hostname

    Hostname to use and advertise

    Type: null or string

    Default: null

    Declared by:

    [5644]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5645]services.exhibitor.jqueryStyle

    Styling used for the JQuery-based UI.

    Type: one of "red", "black", "custom"

    Default: "red"

    Declared by:

    [5646]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5647]services.exhibitor.logLines

    Max lines of logging to keep in memory for display.

    Type: signed integer

    Default: 1000

    Declared by:

    [5648]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5649]services.exhibitor.nodeModification

    Whether the Explorer UI will allow nodes to be modified (use with caution).

    Type: boolean

    Default: true

    Declared by:

    [5650]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5651]services.exhibitor.port

    The port for exhibitor to listen on and communicate with other exhibitors.

    Type: signed integer

    Default: 8080

    Declared by:

    [5652]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5653]services.exhibitor.s3Backup

    Whether to enable backups to S3

    Type: boolean

    Default: false

    Declared by:

    [5654]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5655]services.exhibitor.s3Config.bucketName

    Bucket name to store config

    Type: string

    Declared by:

    [5656]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5657]services.exhibitor.s3Config.configPrefix

    When using AWS S3 shared config files, the prefix to use for values such as locks

    Type: string

    Default: "exhibitor-"

    Declared by:

    [5658]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5659]services.exhibitor.s3Config.objectKey

    S3 key name to store the config

    Type: string

    Declared by:

    [5660]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5661]services.exhibitor.s3Credentials

    Optional credentials to use for s3backup or s3config. Argument is the path to an AWS
    credential properties file with two properties: com.netflix.exhibitor.s3.access-key-id and
    com.netflix.exhibitor.s3.access-secret-key

    Type: null or path

    Default: null

    Declared by:

    [5662]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5663]services.exhibitor.s3Region

    Optional region for S3 calls

    Type: null or string

    Default: null

    Declared by:

    [5664]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5665]services.exhibitor.servo

    ZooKeeper will be queried once a minute for its state via the 'mntr' four letter word (this
    requires ZooKeeper 3.4.x+). Servo will be used to publish this data via JMX.

    Type: boolean

    Default: false

    Declared by:

    [5666]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5667]services.exhibitor.timeout

    Connection timeout (ms) for ZK connections.

    Type: signed integer

    Default: 30000

    Declared by:

    [5668]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5669]services.exhibitor.zkCleanupPeriod

    How often (in milliseconds) to run the Zookeeper log cleanup task.

    Type: signed integer

    Default: 0

    Declared by:

    [5670]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5671]services.exhibitor.zkClientPort

    Zookeeper client port

    Type: signed integer

    Default: 2181

    Declared by:

    [5672]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5673]services.exhibitor.zkConfigConnect

    The initial connection string for ZooKeeper shared config storage

    Type: list of strings

    Example: [ "host1:2181" "host2:2181" ]

    Declared by:

    [5674]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5675]services.exhibitor.zkConfigExhibitorPath

    If the ZooKeeper shared config is also running Exhibitor, the URI path for the REST call

    Type: string

    Default: "/"

    Declared by:

    [5676]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5677]services.exhibitor.zkConfigExhibitorPort

    If the ZooKeeper shared config is also running Exhibitor, the port that Exhibitor is
    listening on. IMPORTANT: if this value is not set it implies that Exhibitor is not being used
    on the ZooKeeper shared config.

    Type: null or signed integer

    Declared by:

    [5678]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5679]services.exhibitor.zkConfigPollMs

    The period in ms to check for changes in the config ensemble

    Type: signed integer

    Default: 10000

    Declared by:

    [5680]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5681]services.exhibitor.zkConfigRetry.retryQuantity

    Retries connecting to the ZooKeeper config

    Type: signed integer

    Default: 3

    Declared by:

    [5682]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5683]services.exhibitor.zkConfigRetry.sleepMs

    Retry sleep time connecting to the ZooKeeper config

    Type: signed integer

    Default: 1000

    Declared by:

    [5684]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5685]services.exhibitor.zkConfigZPath

    The base ZPath that Exhibitor should use

    Type: string

    Example: "/exhibitor/config"

    Declared by:

    [5686]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5687]services.exhibitor.zkConnectPort

    The port to use for followers to talk to each other.

    Type: signed integer

    Default: 2888

    Declared by:

    [5688]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5689]services.exhibitor.zkDataDir

    The Zookeeper data directory

    Type: string

    Default: "/var/exhibitor/zkData"

    Declared by:

    [5690]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5691]services.exhibitor.zkElectionPort

    The port for Zookeepers to use for leader election.

    Type: signed integer

    Default: 3888

    Declared by:

    [5692]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5693]services.exhibitor.zkExtraCfg

    Extra options to pass into Zookeeper

    Type: string

    Default: "initLimit=5&syncLimit=2&tickTime=2000"

    Declared by:

    [5694]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5695]services.exhibitor.zkLogDir

    The Zookeeper logs directory

    Type: path

    Default: "/var/exhibitor/zkLogs"

    Declared by:

    [5696]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5697]services.exhibitor.zkServersSpec

    Zookeeper server spec for all servers in the ensemble.

    Type: list of strings

    Default: [ ]

    Example: [ "S:1:zk1.example.com" "S:2:zk2.example.com" "S:3:zk3.example.com"
    "O:4:zk-observer.example.com" ]

    Declared by:

    [5698]<nixpkgs/nixos/modules/services/misc/exhibitor.nix>

[5699]services.exim.enable

    Whether to enable the Exim mail transfer agent.

    Type: boolean

    Default: false

    Declared by:

    [5700]<nixpkgs/nixos/modules/services/mail/exim.nix>

[5701]services.exim.package

    The Exim derivation to use. This can be used to enable features such as LDAP or PAM support.

    Type: package

    Default: "pkgs.exim"

    Declared by:

    [5702]<nixpkgs/nixos/modules/services/mail/exim.nix>

[5703]services.exim.config

    Verbatim Exim configuration. This should not contain exim_user, exim_group, exim_path, or
    spool_directory.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [5704]<nixpkgs/nixos/modules/services/mail/exim.nix>

[5705]services.exim.group

    Group to use when no root privileges are required.

    Type: string

    Default: "exim"

    Declared by:

    [5706]<nixpkgs/nixos/modules/services/mail/exim.nix>

[5707]services.exim.queueRunnerInterval

    How often to spawn a new queue runner.

    Type: string

    Default: "5m"

    Declared by:

    [5708]<nixpkgs/nixos/modules/services/mail/exim.nix>

[5709]services.exim.spoolDir

    Location of the spool directory of exim.

    Type: path

    Default: "/var/spool/exim"

    Declared by:

    [5710]<nixpkgs/nixos/modules/services/mail/exim.nix>

[5711]services.exim.user

    User to use when no root privileges are required. In particular, this applies when receiving
    messages and when doing remote deliveries. (Local deliveries run as various non-root users,
    typically as the owner of a local mailbox.) Specifying this value as root is not supported.

    Type: string

    Default: "exim"

    Declared by:

    [5712]<nixpkgs/nixos/modules/services/mail/exim.nix>

[5713]services.factorio.enable

    Whether to enable Factorio.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5714]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5715]services.factorio.package

    Factorio version to use. This defaults to the stable channel.

    Type: package

    Default: "pkgs.factorio-headless"

    Example: "pkgs.factorio-headless-experimental"

    Declared by:

    [5716]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5717]services.factorio.admins

    List of player names which will be admin.

    Type: list of strings

    Default: [ ]

    Example: [ "username" ]

    Declared by:

    [5718]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5719]services.factorio.autosave-interval

    Autosave interval in minutes.

    Type: null or signed integer

    Default: null

    Example: 10

    Declared by:

    [5720]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5721]services.factorio.configFile

    The server's configuration file.

    The default file generated by this module contains lines essential to the server's operation.
    Use its contents as a basis for any customizations.

    Type: path

    Default: "configFile"

    Declared by:

    [5722]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5723]services.factorio.description

    Description of the game that will appear in the listing.

    Type: null or string

    Default: ""

    Declared by:

    [5724]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5725]services.factorio.extraSettings

    Extra game configuration that will go into server-settings.json

    Type: attribute set

    Default: { }

    Example: { admins = [ "username" ] ; }

    Declared by:

    [5726]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5727]services.factorio.game-name

    Name of the game as it will appear in the game listing.

    Type: null or string

    Default: "Factorio Game"

    Declared by:

    [5728]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5729]services.factorio.game-password

    Game password.

    Type: null or string

    Default: null

    Declared by:

    [5730]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5731]services.factorio.lan

    Game will be broadcast on LAN.

    Type: boolean

    Default: false

    Declared by:

    [5732]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5733]services.factorio.mods

    Mods the server should install and activate.

    The derivations in this list must "build" the mod by simply copying the .zip, named
    correctly, into the output directory. Eventually, there will be a way to pull in the most
    up-to-date list of derivations via nixos-channel. Until then, this is for experts only.

    Type: list of packages

    Default: [ ]

    Declared by:

    [5734]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5735]services.factorio.nonBlockingSaving

    Highly experimental feature, enable only at your own risk of losing your saves. On UNIX
    systems, server will fork itself to create an autosave. Autosaving on connected Windows
    clients will be disabled regardless of autosave_only_on_server option.

    Type: boolean

    Default: false

    Declared by:

    [5736]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5737]services.factorio.openFirewall

    Whether to automatically open the specified UDP port in the firewall.

    Type: boolean

    Default: false

    Declared by:

    [5738]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5739]services.factorio.password

    Your factorio.com login credentials. Required for games with visibility public.

    Type: null or string

    Default: null

    Declared by:

    [5740]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5741]services.factorio.port

    The port to which the service should bind.

    Type: signed integer

    Default: 34197

    Declared by:

    [5742]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5743]services.factorio.public

    Game will be published on the official Factorio matching server.

    Type: boolean

    Default: false

    Declared by:

    [5744]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5745]services.factorio.requireUserVerification

    When set to true, the server will only allow clients that have a valid factorio.com account.

    Type: boolean

    Default: true

    Declared by:

    [5746]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5747]services.factorio.saveName

    The name of the savegame that will be used by the server.

    When not present in /var/lib/factorio/saves, a new map with default settings will be
    generated before starting the service.

    Type: string

    Default: "default"

    Declared by:

    [5748]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5749]services.factorio.stateDirName

    Name of the directory under /var/lib holding the server's data.

    The configuration and map will be stored here.

    Type: string

    Default: "factorio"

    Declared by:

    [5750]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5751]services.factorio.token

    Authentication token. May be used instead of 'password' above.

    Type: null or string

    Default: null

    Declared by:

    [5752]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5753]services.factorio.username

    Your factorio.com login credentials. Required for games with visibility public.

    Type: null or string

    Default: null

    Declared by:

    [5754]<nixpkgs/nixos/modules/services/games/factorio.nix>

[5755]services.fail2ban.enable

    Whether to enable the fail2ban service.

    Type: boolean

    Default: false

    Declared by:

    [5756]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5757]services.fail2ban.package

    The fail2ban package to use for running the fail2ban service.

    Type: package

    Default: (build of fail2ban-0.11.1)

    Example: "pkgs.fail2ban_0_11"

    Declared by:

    [5758]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5759]services.fail2ban.packageFirewall

    The firewall package used by fail2ban service.

    Type: package

    Default: (build of iptables-1.8.7)

    Example: "pkgs.nftables"

    Declared by:

    [5760]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5761]services.fail2ban.banaction

    Default banning action (e.g. iptables, iptables-new, iptables-multiport, shorewall, etc) It
    is used to define action_* variables. Can be overridden globally or per section within
    jail.local file

    Type: string

    Default: "iptables-multiport"

    Example: "nftables-multiport"

    Declared by:

    [5762]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5763]services.fail2ban.banaction-allports

    Default banning action (e.g. iptables, iptables-new, iptables-multiport, shorewall, etc) It
    is used to define action_* variables. Can be overridden globally or per section within
    jail.local file

    Type: string

    Default: "iptables-allport"

    Example: "nftables-allport"

    Declared by:

    [5764]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5765]services.fail2ban.bantime-increment.enable

    Allows to use database for searching of previously banned ip's to increase a default ban time
    using special formula, default it is banTime * 1, 2, 4, 8, 16, 32...

    Type: boolean

    Default: false

    Declared by:

    [5766]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5767]services.fail2ban.bantime-increment.factor

    "bantime-increment.factor" is a coefficient to calculate exponent growing of the formula or
    common multiplier, default value of factor is 1 and with default value of formula, the ban
    time grows by 1, 2, 4, 8, 16 ...

    Type: string

    Default: "1"

    Example: "4"

    Declared by:

    [5768]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5769]services.fail2ban.bantime-increment.formula

    "bantime-increment.formula" used by default to calculate next value of ban time, default
    value bellow, the same ban time growing will be reached by multipliers 1, 2, 4, 8, 16, 32...

    Type: string

    Default: "ban.Time * (1<<(ban.Count if ban.Count<20 else 20)) * banFactor"

    Example: "ban.Time * math.exp(float(ban.Count+1)*banFactor)/math.exp(1*banFactor)"

    Declared by:

    [5770]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5771]services.fail2ban.bantime-increment.maxtime

    "bantime-increment.maxtime" is the max number of seconds using the ban time can reach (don't
    grows further)

    Type: string

    Default: "10h"

    Example: "48h"

    Declared by:

    [5772]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5773]services.fail2ban.bantime-increment.multipliers

    "bantime-increment.multipliers" used to calculate next value of ban time instead of formula,
    coresponding previously ban count and given "bantime.factor" (for multipliers default is 1);
    following example grows ban time by 1, 2, 4, 8, 16 ... and if last ban count greater as
    multipliers count, always used last multiplier (64 in example), for factor '1' and original
    ban time 600 - 10.6 hours

    Type: string

    Default: "1 2 4 8 16 32 64"

    Example: "2 4 16 128"

    Declared by:

    [5774]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5775]services.fail2ban.bantime-increment.overalljails

    "bantime-increment.overalljails" (if true) specifies the search of IP in the database will be
    executed cross over all jails, if false (dafault), only current jail of the ban IP will be
    searched

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5776]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5777]services.fail2ban.bantime-increment.rndtime

    "bantime-increment.rndtime" is the max number of seconds using for mixing with random time to
    prevent "clever" botnets calculate exact time IP can be unbanned again

    Type: string

    Default: "4m"

    Example: "8m"

    Declared by:

    [5778]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5779]services.fail2ban.daemonConfig

    The contents of Fail2ban's main configuration file. It's generally not necessary to change
    it.

    Type: strings concatenated with "\n"

    Default:

    ''
    [Definition]
    logtarget = SYSLOG
    socket    = /run/fail2ban/fail2ban.sock
    pidfile   = /run/fail2ban/fail2ban.pid
    dbfile    = /var/lib/fail2ban/fail2ban.sqlite3
    ''

    Declared by:

    [5780]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5781]services.fail2ban.extraPackages

    Extra packages to be made available to the fail2ban service. The example contains the
    packages needed by the `iptables-ipset-proto6` action.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.ipset ]

    Declared by:

    [5782]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5783]services.fail2ban.ignoreIP

    "ignoreIP" can be a list of IP addresses, CIDR masks or DNS hosts. Fail2ban will not ban a
    host which matches an address in this list. Several addresses can be defined using space (and
    /or comma) separator.

    Type: list of strings

    Default: [ ]

    Example: [ "192.168.0.0/16" "2001:DB8::42" ]

    Declared by:

    [5784]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5785]services.fail2ban.jails

    The configuration of each Fail2ban “jail”. A jail consists of an action (such as blocking a
    port using iptables) that is triggered when a filter applied to a log file triggers more than
    a certain number of times in a certain time period. Actions are defined in /etc/fail2ban/
    action.d, while filters are defined in /etc/fail2ban/filter.d.

    Type: attribute set of strings concatenated with "\n"s

    Default: { }

    Example:

    { apache-nohome-iptables = ''
        # Block an IP address if it accesses a non-existent
        # home directory more than 5 times in 10 minutes,
        # since that indicates that it's scanning.
        filter   = apache-nohome
        action   = iptables-multiport[name=HTTP, port="http,https"]
        logpath  = /var/log/httpd/error_log*
        findtime = 600
        bantime  = 600
        maxretry = 5
      '';
    }

    Declared by:

    [5786]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5787]services.fail2ban.maxretry

    Number of failures before a host gets banned.

    Type: unsigned integer, meaning >=0

    Default: 3

    Declared by:

    [5788]<nixpkgs/nixos/modules/services/security/fail2ban.nix>

[5789]services.fakeroute.enable

    Whether to enable the fakeroute service.

    Type: boolean

    Default: false

    Declared by:

    [5790]<nixpkgs/nixos/modules/services/networking/fakeroute.nix>

[5791]services.fakeroute.route

    Fake route that will appear after the real one to any host running a traceroute.

    Type: list of strings

    Default: [ ]

    Example: [ "216.102.187.130" "4.0.1.122" "198.116.142.34" "63.199.8.242" ]

    Declared by:

    [5792]<nixpkgs/nixos/modules/services/networking/fakeroute.nix>

[5793]services.fcgiwrap.enable

    Whether to enable fcgiwrap, a server for running CGI applications over FastCGI.

    Type: boolean

    Default: false

    Declared by:

    [5794]<nixpkgs/nixos/modules/services/web-servers/fcgiwrap.nix>

[5795]services.fcgiwrap.group

    Group permissions for the socket.

    Type: null or string

    Default: null

    Declared by:

    [5796]<nixpkgs/nixos/modules/services/web-servers/fcgiwrap.nix>

[5797]services.fcgiwrap.preforkProcesses

    Number of processes to prefork.

    Type: signed integer

    Default: 1

    Declared by:

    [5798]<nixpkgs/nixos/modules/services/web-servers/fcgiwrap.nix>

[5799]services.fcgiwrap.socketAddress

    Socket address. In case of a UNIX socket, this should be its filesystem path.

    Type: string

    Default: "/run/fcgiwrap.sock"

    Example: "1.2.3.4:5678"

    Declared by:

    [5800]<nixpkgs/nixos/modules/services/web-servers/fcgiwrap.nix>

[5801]services.fcgiwrap.socketType

    Socket type: 'unix', 'tcp' or 'tcp6'.

    Type: one of "unix", "tcp", "tcp6"

    Default: "unix"

    Declared by:

    [5802]<nixpkgs/nixos/modules/services/web-servers/fcgiwrap.nix>

[5803]services.fcgiwrap.user

    User permissions for the socket.

    Type: null or string

    Default: null

    Declared by:

    [5804]<nixpkgs/nixos/modules/services/web-servers/fcgiwrap.nix>

[5805]services.fcron.enable

    Whether to enable the fcron daemon.

    Type: boolean

    Default: false

    Declared by:

    [5806]<nixpkgs/nixos/modules/services/scheduling/fcron.nix>

[5807]services.fcron.allow

    Users allowed to use fcrontab and fcrondyn (one name per line, all for everyone).

    Type: list of strings

    Default: [ "all" ]

    Declared by:

    [5808]<nixpkgs/nixos/modules/services/scheduling/fcron.nix>

[5809]services.fcron.deny

    Users forbidden from using fcron.

    Type: list of strings

    Default: [ ]

    Declared by:

    [5810]<nixpkgs/nixos/modules/services/scheduling/fcron.nix>

[5811]services.fcron.maxSerialJobs

    Maximum number of serial jobs which can run simultaneously.

    Type: signed integer

    Default: 1

    Declared by:

    [5812]<nixpkgs/nixos/modules/services/scheduling/fcron.nix>

[5813]services.fcron.queuelen

    Number of jobs the serial queue and the lavg queue can contain.

    Type: null or signed integer

    Default: null

    Declared by:

    [5814]<nixpkgs/nixos/modules/services/scheduling/fcron.nix>

[5815]services.fcron.systab

    The "system" crontab contents.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [5816]<nixpkgs/nixos/modules/services/scheduling/fcron.nix>

[5817]services.felix.enable

    Whether to enable the Apache Felix OSGi service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5818]<nixpkgs/nixos/modules/services/misc/felix.nix>

[5819]services.felix.bundles

    List of bundles that should be activated on startup

    Type: list of packages

    Default: "[ pkgs.felix_remoteshell ]"

    Declared by:

    [5820]<nixpkgs/nixos/modules/services/misc/felix.nix>

[5821]services.felix.group

    Group account under which Apache Felix runs.

    Type: string

    Default: "osgi"

    Declared by:

    [5822]<nixpkgs/nixos/modules/services/misc/felix.nix>

[5823]services.felix.user

    User account under which Apache Felix runs.

    Type: string

    Default: "osgi"

    Declared by:

    [5824]<nixpkgs/nixos/modules/services/misc/felix.nix>

[5825]services.ferm.enable

    Whether to enable Ferm Firewall. *Warning*: Enabling this service WILL disable the existing
    NixOS firewall! Default firewall rules provided by packages are not considered at the moment.

    Type: boolean

    Default: false

    Declared by:

    [5826]<nixpkgs/nixos/modules/services/networking/ferm.nix>

[5827]services.ferm.package

    The ferm package.

    Type: package

    Default: "pkgs.ferm"

    Declared by:

    [5828]<nixpkgs/nixos/modules/services/networking/ferm.nix>

[5829]services.ferm.config

    Verbatim ferm.conf configuration.

    Type: strings concatenated with "\n"

    Default: "empty firewall, allows any traffic"

    Declared by:

    [5830]<nixpkgs/nixos/modules/services/networking/ferm.nix>

[5831]services.firebird.enable

    Whether to enable the Firebird super server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5832]<nixpkgs/nixos/modules/services/databases/firebird.nix>

[5833]services.firebird.package

    Which firebird derivation to use.

    Type: package

    Default: "pkgs.firebirdSuper"

    Declared by:

    [5834]<nixpkgs/nixos/modules/services/databases/firebird.nix>

[5835]services.firebird.baseDir

    Location containing data/ and system/ directories. data/ stores the databases, system/ stores
    the password database security2.fdb.

    Type: string

    Default: "/var/db/firebird"

    Declared by:

    [5836]<nixpkgs/nixos/modules/services/databases/firebird.nix>

[5837]services.firebird.port

    Port Firebird uses.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: "3050"

    Declared by:

    [5838]<nixpkgs/nixos/modules/services/databases/firebird.nix>

[5839]services.firebird.user

    User account under which firebird runs.

    Type: string

    Default: "firebird"

    Declared by:

    [5840]<nixpkgs/nixos/modules/services/databases/firebird.nix>

[5841]services.firefox.syncserver.enable

    Whether to enable a Firefox Sync Server, this give the opportunity to Firefox users to store
    all synchronized data on their own server. To use this server, Firefox users should visit the
    about:config, and replicate the following change

    services.sync.tokenServerURI: http://localhost:5000/token/1.0/sync/1.5

    where http://localhost:5000/ corresponds to the public url of the server.

    Type: boolean

    Default: false

    Declared by:

    [5842]<nixpkgs/nixos/modules/services/networking/firefox/sync-server.nix>

[5843]services.firefox.syncserver.allowNewUsers

    Whether to allow new-user signups on the server. Only request by existing accounts will be
    honored.

    Type: boolean

    Default: true

    Declared by:

    [5844]<nixpkgs/nixos/modules/services/networking/firefox/sync-server.nix>

[5845]services.firefox.syncserver.listen.address

    Address on which the sync server listen to.

    Type: string

    Default: "127.0.0.1"

    Example: "0.0.0.0"

    Declared by:

    [5846]<nixpkgs/nixos/modules/services/networking/firefox/sync-server.nix>

[5847]services.firefox.syncserver.listen.port

    Port on which the sync server listen to.

    Type: signed integer

    Default: 5000

    Declared by:

    [5848]<nixpkgs/nixos/modules/services/networking/firefox/sync-server.nix>

[5849]services.firefox.syncserver.privateConfig

    The private config file is used to extend the generated config with confidential information,
    such as the syncserver.sqlUri setting if it contains a password, and the syncserver.secret
    setting is used by the server to generate cryptographically-signed authentication tokens.

    If this file does not exists, then it is created with a generated syncserver.secret settings.

    Type: string

    Default: "/etc/firefox/syncserver-secret.ini"

    Declared by:

    [5850]<nixpkgs/nixos/modules/services/networking/firefox/sync-server.nix>

[5851]services.firefox.syncserver.publicUrl

    Public URL with which firefox users can use to access the sync server.

    Type: string

    Default: "http://localhost:5000/"

    Example: "http://sync.example.com/"

    Declared by:

    [5852]<nixpkgs/nixos/modules/services/networking/firefox/sync-server.nix>

[5853]services.firefox.syncserver.sqlUri

    The location of the database. This URL is composed of dialect[+driver]://user:password@host/
    dbname[?key=value..], where dialect is a database name such as mysql, oracle, postgresql,
    etc., and driver the name of a DBAPI, such as psycopg2, pyodbc, cx_oracle, etc. The [5854]
    SQLAlchemy documentation provides more examples and describe the syntax of the expected URL.

    Type: string

    Default: "sqlite:////var/db/firefox-sync-server/firefox-sync-server.db"

    Example: "postgresql://scott:tiger@localhost/test"

    Declared by:

    [5855]<nixpkgs/nixos/modules/services/networking/firefox/sync-server.nix>

[5856]services.fireqos.enable

    If enabled, FireQOS will be launched with the specified configuration given in `config`.

    Type: boolean

    Default: false

    Declared by:

    [5857]<nixpkgs/nixos/modules/services/networking/fireqos.nix>

[5858]services.fireqos.config

    The FireQOS configuration goes here.

    Type: string

    Default: ""

    Example:

    ''
    interface wlp3s0 world-in input rate 10mbit ethernet
      class web commit 50kbit
        match tcp ports 80,443

    interface wlp3s0 world-out input rate 10mbit ethernet
      class web commit 50kbit
        match tcp ports 80,443
    ''

    Declared by:

    [5859]<nixpkgs/nixos/modules/services/networking/fireqos.nix>

[5860]services.flannel.enable

    Whether to enable flannel.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5861]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5862]services.flannel.package

    Package to use for flannel

    Type: package

    Default: "pkgs.flannel"

    Declared by:

    [5863]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5864]services.flannel.backend

    Type of backend to use and specific configurations for that backend.

    Type: attribute set

    Default: { Type = "vxlan"; }

    Declared by:

    [5865]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5866]services.flannel.etcd.caFile

    Etcd certificate authority file

    Type: null or path

    Default: null

    Declared by:

    [5867]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5868]services.flannel.etcd.certFile

    Etcd cert file

    Type: null or path

    Default: null

    Declared by:

    [5869]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5870]services.flannel.etcd.endpoints

    Etcd endpoints

    Type: list of strings

    Default: [ "http://127.0.0.1:2379" ]

    Declared by:

    [5871]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5872]services.flannel.etcd.keyFile

    Etcd key file

    Type: null or path

    Default: null

    Declared by:

    [5873]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5874]services.flannel.etcd.prefix

    Etcd key prefix

    Type: string

    Default: "/coreos.com/network"

    Declared by:

    [5875]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5876]services.flannel.iface

    Interface to use (IP or name) for inter-host communication. Defaults to the interface for the
    default route on the machine.

    Type: null or string

    Default: null

    Declared by:

    [5877]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5878]services.flannel.kubeconfig

    Path to kubeconfig to use for storing flannel config using the Kubernetes API

    Type: null or path

    Default: null

    Declared by:

    [5879]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5880]services.flannel.network

    IPv4 network in CIDR format to use for the entire flannel network.

    Type: string

    Declared by:

    [5881]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5882]services.flannel.nodeName

    Needed when running with Kubernetes as backend as this cannot be auto-detected";

    Type: null or string

    Default: "nixos"

    Example: "node1.example.com"

    Declared by:

    [5883]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5884]services.flannel.publicIp

    IP accessible by other nodes for inter-host communication. Defaults to the IP of the
    interface being used for communication.

    Type: null or string

    Default: null

    Declared by:

    [5885]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5886]services.flannel.storageBackend

    Determines where flannel stores its configuration at runtime

    Type: one of "etcd", "kubernetes"

    Default: "etcd"

    Declared by:

    [5887]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5888]services.flannel.subnetLen

    The size of the subnet allocated to each host. Defaults to 24 (i.e. /24) unless the Network
    was configured to be smaller than a /24 in which case it is one less than the network.

    Type: signed integer

    Default: 24

    Declared by:

    [5889]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5890]services.flannel.subnetMax

    The end of IP range which the subnet allocation should start with. Defaults to the last
    subnet of Network.

    Type: null or string

    Default: null

    Declared by:

    [5891]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5892]services.flannel.subnetMin

    The beginning of IP range which the subnet allocation should start with. Defaults to the
    first subnet of Network.

    Type: null or string

    Default: null

    Declared by:

    [5893]<nixpkgs/nixos/modules/services/networking/flannel.nix>

[5894]services.flatpak.enable

    Whether to enable flatpak.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5895]<nixpkgs/nixos/modules/services/desktops/flatpak.nix>

[5896]services.flexget.enable

    Whether to enable Run FlexGet Daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5897]<nixpkgs/nixos/modules/services/torrent/flexget.nix>

[5898]services.flexget.config

    The YAML configuration for FlexGet.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [5899]<nixpkgs/nixos/modules/services/torrent/flexget.nix>

[5900]services.flexget.homeDir

    Where files live.

    Type: path

    Default: "/var/lib/deluge"

    Example: "/home/flexget"

    Declared by:

    [5901]<nixpkgs/nixos/modules/services/torrent/flexget.nix>

[5902]services.flexget.interval

    When to perform a flexget run. See man 7 systemd.time for the format.

    Type: string

    Default: "10m"

    Example: "1h"

    Declared by:

    [5903]<nixpkgs/nixos/modules/services/torrent/flexget.nix>

[5904]services.flexget.systemScheduler

    When true, execute the runs via the flexget-runner.timer. If false, you have to specify the
    settings yourself in the YML file.

    Type: boolean

    Default: true

    Example: "false"

    Declared by:

    [5905]<nixpkgs/nixos/modules/services/torrent/flexget.nix>

[5906]services.flexget.user

    The user under which to run flexget.

    Type: string

    Default: "deluge"

    Example: "some_user"

    Declared by:

    [5907]<nixpkgs/nixos/modules/services/torrent/flexget.nix>

[5908]services.fluentd.enable

    Whether to enable fluentd.

    Type: boolean

    Default: false

    Declared by:

    [5909]<nixpkgs/nixos/modules/services/logging/fluentd.nix>

[5910]services.fluentd.package

    The fluentd package to use.

    Type: path

    Default: "pkgs.fluentd"

    Declared by:

    [5911]<nixpkgs/nixos/modules/services/logging/fluentd.nix>

[5912]services.fluentd.config

    Fluentd config.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [5913]<nixpkgs/nixos/modules/services/logging/fluentd.nix>

[5914]services.fluentd.plugins

    A list of plugin paths to pass into fluentd. It will make plugins defined in ruby files there
    available in your config.

    Type: list of paths

    Default: [ ]

    Declared by:

    [5915]<nixpkgs/nixos/modules/services/logging/fluentd.nix>

[5916]services.foldingathome.enable

    Whether to enable Enable the Folding@home client.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5917]<nixpkgs/nixos/modules/services/computing/foldingathome/client.nix>

[5918]services.foldingathome.package

    Which Folding@home client to use.

    Type: package

    Default: "pkgs.fahclient"

    Declared by:

    [5919]<nixpkgs/nixos/modules/services/computing/foldingathome/client.nix>

[5920]services.foldingathome.daemonNiceLevel

    Daemon process priority for FAHClient. 0 is the default Unix process priority, 19 is the
    lowest.

    Type: integer between -20 and 19 (both inclusive)

    Default: 0

    Declared by:

    [5921]<nixpkgs/nixos/modules/services/computing/foldingathome/client.nix>

[5922]services.foldingathome.extraArgs

    Extra startup options for the FAHClient. Run FAHClient --help to find all the available
    options.

    Type: list of strings

    Default: [ ]

    Declared by:

    [5923]<nixpkgs/nixos/modules/services/computing/foldingathome/client.nix>

[5924]services.foldingathome.team

    The team ID associated with the reported computation results. This will be used in the
    ranking statistics.

    By default, use the NixOS folding@home team ID is being used.

    Type: signed integer

    Default: 236565

    Declared by:

    [5925]<nixpkgs/nixos/modules/services/computing/foldingathome/client.nix>

[5926]services.foldingathome.user

    The user associated with the reported computation results. This will be used in the ranking
    statistics.

    Type: null or string

    Default: null

    Declared by:

    [5927]<nixpkgs/nixos/modules/services/computing/foldingathome/client.nix>

[5928]services.foundationdb.enable

    Whether to enable FoundationDB Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5929]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5930]services.foundationdb.package

    The FoundationDB package to use for this server. This must be specified by the user in order
    to ensure migrations and upgrades are controlled appropriately.

    Type: package

    Declared by:

    [5931]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5932]services.foundationdb.backupProcesses

    Number of backup_agent processes to run for snapshots.

    Type: signed integer

    Default: 1

    Declared by:

    [5933]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5934]services.foundationdb.class

    Process class

    Type: null or one of "storage", "transaction", "stateless"

    Default: null

    Declared by:

    [5935]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5936]services.foundationdb.dataDir

    Data directory. All cluster data will be put under here.

    Type: path

    Default: "/var/lib/foundationdb"

    Declared by:

    [5937]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5938]services.foundationdb.extraReadWritePaths

    An extra set of filesystem paths that FoundationDB can read to and write from. By default,
    FoundationDB runs under a heavily namespaced systemd environment without write access to most
    of the filesystem outside of its data and log directories. By adding paths to this list, the
    set of writeable paths will be expanded. This is useful for allowing e.g. backups to local
    files, which must be performed on behalf of the foundationdb service.

    Type: list of paths

    Default: [ ]

    Declared by:

    [5939]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5940]services.foundationdb.group

    Group account under which FoundationDB runs.

    Type: string

    Default: "foundationdb"

    Declared by:

    [5941]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5942]services.foundationdb.listenAddress

    Publicly visible IP address of the process. Port is determined by process ID

    Type: string

    Default: "public"

    Declared by:

    [5943]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5944]services.foundationdb.listenPortStart

    Starting port number for database listening sockets. Every FDB process binds to a subsequent
    port, to this number reflects the start of the overall range. e.g. having 8 server processes
    will use all ports between 4500 and 4507.

    Type: signed integer

    Default: 4500

    Declared by:

    [5945]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5946]services.foundationdb.locality

    FoundationDB locality settings.

    Type: submodule

    Default: { dataHall = null; datacenterId = null; machineId = null; zoneId = null; }

    Declared by:

    [5947]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5948]services.foundationdb.locality.dataHall

    Data hall identifier key. All processes physically located in a data hall should share the
    id. If you are depending on data hall based replication this must be set on all processes.

    Type: null or string

    Default: null

    Declared by:

    [5949]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5950]services.foundationdb.locality.datacenterId

    Data center identifier key. All processes physically located in a data center should share
    the id. If you are depending on data center based replication this must be set on all
    processes.

    Type: null or string

    Default: null

    Declared by:

    [5951]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5952]services.foundationdb.locality.machineId

    Machine identifier key. All processes on a machine should share a unique id. By default,
    processes on a machine determine a unique id to share. This does not generally need to be
    set.

    Type: null or string

    Default: null

    Declared by:

    [5953]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5954]services.foundationdb.locality.zoneId

    Zone identifier key. Processes that share a zone id are considered non-unique for the
    purposes of data replication. If unset, defaults to machine id.

    Type: null or string

    Default: null

    Declared by:

    [5955]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5956]services.foundationdb.logDir

    Log directory.

    Type: path

    Default: "/var/log/foundationdb"

    Declared by:

    [5957]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5958]services.foundationdb.logSize

    Roll over to a new log file after the current log file reaches the specified size.

    Type: string

    Default: "10MiB"

    Declared by:

    [5959]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5960]services.foundationdb.maxLogSize

    Delete the oldest log file when the total size of all log files exceeds the specified size.
    If set to 0, old log files will not be deleted.

    Type: string

    Default: "100MiB"

    Declared by:

    [5961]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5962]services.foundationdb.memory

    Maximum memory used by the process. The default value is 8GiB. When specified without a unit,
    MiB is assumed. This parameter does not change the memory allocation of the program. Rather,
    it sets a hard limit beyond which the process will kill itself and be restarted. The default
    value of 8GiB is double the intended memory usage in the default configuration (providing an
    emergency buffer to deal with memory leaks or similar problems). It is not recommended to
    decrease the value of this parameter below its default value. It may be increased if you wish
    to allocate a very large amount of storage engine memory or cache. In particular, when the
    storageMemory parameter is increased, the memory parameter should be increased by an equal
    amount.

    Type: string

    Default: "8GiB"

    Declared by:

    [5963]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5964]services.foundationdb.openFirewall

    Open the firewall ports corresponding to FoundationDB processes and coordinators using
    config.networking.firewall.*.

    Type: boolean

    Default: false

    Declared by:

    [5965]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5966]services.foundationdb.pidfile

    Path to pidfile for fdbmonitor.

    Type: path

    Default: "/run/foundationdb.pid"

    Declared by:

    [5967]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5968]services.foundationdb.publicAddress

    Publicly visible IP address of the process. Port is determined by process ID

    Type: string

    Default: "auto"

    Declared by:

    [5969]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5970]services.foundationdb.restartDelay

    Number of seconds to wait before restarting servers.

    Type: signed integer

    Default: 10

    Declared by:

    [5971]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5972]services.foundationdb.serverProcesses

    Number of fdbserver processes to run.

    Type: signed integer

    Default: 1

    Declared by:

    [5973]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5974]services.foundationdb.storageMemory

    Maximum memory used for data storage. The default value is 1GiB. When specified without a
    unit, MB is assumed. Clusters using the memory storage engine will be restricted to using
    this amount of memory per process for purposes of data storage. Memory overhead associated
    with storing the data is counted against this total. If you increase the storageMemory, you
    should also increase the memory parameter by the same amount.

    Type: string

    Default: "1GiB"

    Declared by:

    [5975]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5976]services.foundationdb.tls

    FoundationDB Transport Security Layer (TLS) settings.

    Type: null or submodule

    Default: null

    Declared by:

    [5977]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5978]services.foundationdb.tls.allowedPeers

    "Peer verification string". This may be used to adjust which TLS client certificates a server
    will accept, as a form of user authorization; for example, it may only accept TLS clients who
    offer a certificate abiding by some locality or organization name.

    For more information, please see the FoundationDB documentation.

    Type: string

    Default: "Check.Valid=1,Check.Unexpired=1"

    Declared by:

    [5979]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5980]services.foundationdb.tls.certificate

    Path to the TLS certificate file. This certificate will be offered to, and may be verified
    by, clients.

    Type: string

    Declared by:

    [5981]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5982]services.foundationdb.tls.key

    Private key file for the certificate.

    Type: string

    Declared by:

    [5983]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5984]services.foundationdb.traceFormat

    Trace logging format.

    Type: one of "xml", "json"

    Default: "xml"

    Declared by:

    [5985]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5986]services.foundationdb.user

    User account under which FoundationDB runs.

    Type: string

    Default: "foundationdb"

    Declared by:

    [5987]<nixpkgs/nixos/modules/services/databases/foundationdb.nix>

[5988]services.fprintd.enable

    Whether to enable fprintd daemon and PAM module for fingerprint readers handling.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5989]<nixpkgs/nixos/modules/services/security/fprintd.nix>

[5990]services.fprintd.package

    fprintd package to use.

    Type: package

    Default: "if cfg.tod.enable then pkgs.fprintd-tod else pkgs.fprintd"

    Declared by:

    [5991]<nixpkgs/nixos/modules/services/security/fprintd.nix>

[5992]services.fprintd.tod.enable

    Whether to enable Touch OEM Drivers library support.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5993]<nixpkgs/nixos/modules/services/security/fprintd.nix>

[5994]services.fprintd.tod.driver

    Touch OEM Drivers (TOD) package to use.

    Type: package

    Example:

    pkgs.libfprint-2-tod1-goodix

    Declared by:

    [5995]<nixpkgs/nixos/modules/services/security/fprintd.nix>

[5996]services.fprot.updater.enable

    Whether to enable automatic F-Prot virus definitions database updates.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [5997]<nixpkgs/nixos/modules/services/security/fprot.nix>

[5998]services.fprot.updater.frequency

    Update virus definitions every X minutes.

    Type: signed integer

    Default: 30

    Declared by:

    [5999]<nixpkgs/nixos/modules/services/security/fprot.nix>

[6000]services.fprot.updater.licenseKeyfile

    License keyfile. Defaults to the one supplied with installation package.

    Type: path

    Declared by:

    [6001]<nixpkgs/nixos/modules/services/security/fprot.nix>

[6002]services.fprot.updater.productData

    product.data file. Defaults to the one supplied with installation package.

    Type: path

    Declared by:

    [6003]<nixpkgs/nixos/modules/services/security/fprot.nix>

[6004]services.fractalart.enable

    Enable FractalArt for generating colorful wallpapers on login

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6005]<nixpkgs/nixos/modules/services/x11/fractalart.nix>

[6006]services.fractalart.height

    Screen height

    Type: null or signed integer

    Default: null

    Example: 1080

    Declared by:

    [6007]<nixpkgs/nixos/modules/services/x11/fractalart.nix>

[6008]services.fractalart.width

    Screen width

    Type: null or signed integer

    Default: null

    Example: 1920

    Declared by:

    [6009]<nixpkgs/nixos/modules/services/x11/fractalart.nix>

[6010]services.freeciv.enable

    Whether to enable freeciv.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6011]<nixpkgs/nixos/modules/services/games/freeciv.nix>

[6012]services.freeciv.openFirewall

    Whether to enable opening the firewall for the port listening for clients.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6013]<nixpkgs/nixos/modules/services/games/freeciv.nix>

[6014]services.freeciv.settings

    Parameters of freeciv-server.

    Type: freeciv-server params

    Default: { }

    Declared by:

    [6015]<nixpkgs/nixos/modules/services/games/freeciv.nix>

[6016]services.freeciv.settings.Announce

    Announce game in LAN using given protocol.

    Type: one of "IPv4", "IPv6", "none"

    Default: "none"

    Declared by:

    [6017]<nixpkgs/nixos/modules/services/games/freeciv.nix>

[6018]services.freeciv.settings.Database

    Enable database connection with given configuration.

    Type: null or string

    Default:

    ''
    [fcdb]
      backend="sqlite"
      database="/var/lib/freeciv/auth.sqlite"
    ''

    Declared by:

    [6019]<nixpkgs/nixos/modules/services/games/freeciv.nix>

[6020]services.freeciv.settings.Guests

    Whether to enable guests to login if auth is enabled.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6021]<nixpkgs/nixos/modules/services/games/freeciv.nix>

[6022]services.freeciv.settings.Newusers

    Whether to enable new users to login if auth is enabled.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6023]<nixpkgs/nixos/modules/services/games/freeciv.nix>

[6024]services.freeciv.settings.auth

    Whether to enable server authentication.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6025]<nixpkgs/nixos/modules/services/games/freeciv.nix>

[6026]services.freeciv.settings.debug

    Set debug log level.

    Type: integer between 0 and 3 (both inclusive)

    Default: 0

    Declared by:

    [6027]<nixpkgs/nixos/modules/services/games/freeciv.nix>

[6028]services.freeciv.settings.exit-on-end

    Whether to enable exit instead of restarting when a game ends..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6029]<nixpkgs/nixos/modules/services/games/freeciv.nix>

[6030]services.freeciv.settings.port

    Listen for clients on given port

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 5556

    Declared by:

    [6031]<nixpkgs/nixos/modules/services/games/freeciv.nix>

[6032]services.freeciv.settings.quitidle

    Quit if no players for given time in seconds.

    Type: null or signed integer

    Default: null

    Declared by:

    [6033]<nixpkgs/nixos/modules/services/games/freeciv.nix>

[6034]services.freeciv.settings.read

    Startup script.

    Type: strings concatenated with "\n"

    Default:

    ''
    /fcdb lua sqlite_createdb()
    ''

    Declared by:

    [6035]<nixpkgs/nixos/modules/services/games/freeciv.nix>

[6036]services.freeciv.settings.saves

    Save games to given directory, a sub-directory named after the starting date of the service
    will me inserted to preserve older saves.

    Type: null or string

    Default: "/var/lib/freeciv/saves/"

    Declared by:

    [6037]<nixpkgs/nixos/modules/services/games/freeciv.nix>

[6038]services.freefall.enable

    Whether to protect HP/Dell laptop hard drives (not SSDs) in free fall.

    Type: boolean

    Default: false

    Declared by:

    [6039]<nixpkgs/nixos/modules/services/hardware/freefall.nix>

[6040]services.freefall.package

    freefall derivation to use.

    Type: package

    Default: "pkgs.freefall"

    Declared by:

    [6041]<nixpkgs/nixos/modules/services/hardware/freefall.nix>

[6042]services.freefall.devices

    Device paths to all internal spinning hard drives.

    Type: list of strings

    Default: [ "/dev/sda" ]

    Declared by:

    [6043]<nixpkgs/nixos/modules/services/hardware/freefall.nix>

[6044]services.freenet.enable

    Enable the Freenet daemon

    Type: boolean

    Default: false

    Declared by:

    [6045]<nixpkgs/nixos/modules/services/networking/freenet.nix>

[6046]services.freenet.nice

    Set the nice level for the Freenet daemon

    Type: signed integer

    Default: 10

    Declared by:

    [6047]<nixpkgs/nixos/modules/services/networking/freenet.nix>

[6048]services.freeradius.enable

    Whether to enable the freeradius server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6049]<nixpkgs/nixos/modules/services/networking/freeradius.nix>

[6050]services.freeradius.configDir

    The path of the freeradius server configuration directory.

    Type: path

    Default: "/etc/raddb"

    Declared by:

    [6051]<nixpkgs/nixos/modules/services/networking/freeradius.nix>

[6052]services.freeradius.debug

    Whether to enable debug logging for freeradius (-xx option). This should not be left on,
    since it includes sensitive data such as passwords in the logs.

    Type: boolean

    Default: false

    Declared by:

    [6053]<nixpkgs/nixos/modules/services/networking/freeradius.nix>

[6054]services.freeswitch.enable

    Whether to enable FreeSWITCH.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6055]<nixpkgs/nixos/modules/services/misc/freeswitch.nix>

[6056]services.freeswitch.enableReload

    Issue the reloadxml command to FreeSWITCH when configuration directory changes (instead of
    restart). See [6057]FreeSWITCH documentation for more info. The configuration directory is
    exposed at /etc/freeswitch. See also systemd.services.*.restartIfChanged.

    Type: boolean

    Default: false

    Declared by:

    [6058]<nixpkgs/nixos/modules/services/misc/freeswitch.nix>

[6059]services.freeswitch.package

    FreeSWITCH package.

    Type: package

    Default: pkgs.freeswitch

    Example:

    pkgs.freeswitch

    Declared by:

    [6060]<nixpkgs/nixos/modules/services/misc/freeswitch.nix>

[6061]services.freeswitch.configDir

    Override file in FreeSWITCH config template directory. Each top-level attribute denotes a
    file path in the configuration directory, its value is the file path. See [6062]FreeSWITCH
    documentation for more info. Also check available templates in [6063]FreeSWITCH repository.

    Type: attribute set of paths

    Default: { }

    Example:

    {
      "freeswitch.xml" = ./freeswitch.xml;
      "dialplan/default.xml" = pkgs.writeText "dialplan-default.xml" ''
        [xml lines]
      '';
    }

    Declared by:

    [6064]<nixpkgs/nixos/modules/services/misc/freeswitch.nix>

[6065]services.freeswitch.configTemplate

    Configuration template to use. See available templates in [6066]FreeSWITCH repository. You
    can also set your own configuration directory.

    Type: path

    Default: ${config.services.freeswitch.package}/share/freeswitch/conf/vanilla

    Example:

    ${config.services.freeswitch.package}/share/freeswitch/conf/minimal

    Declared by:

    [6067]<nixpkgs/nixos/modules/services/misc/freeswitch.nix>

[6068]services.fstrim.enable

    Whether to enable periodic SSD TRIM of mounted partitions in background.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6069]<nixpkgs/nixos/modules/services/misc/fstrim.nix>

[6070]services.fstrim.interval

    How often we run fstrim. For most desktop and server systems a sufficient trimming frequency
    is once a week.

    The format is described in systemd.time(7).

    Type: string

    Default: "weekly"

    Declared by:

    [6071]<nixpkgs/nixos/modules/services/misc/fstrim.nix>

[6072]services.fusionInventory.enable

    Whether to enable Fusion Inventory Agent.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6073]<nixpkgs/nixos/modules/services/monitoring/fusion-inventory.nix>

[6074]services.fusionInventory.extraConfig

    Configuration that is injected verbatim into the configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [6075]<nixpkgs/nixos/modules/services/monitoring/fusion-inventory.nix>

[6076]services.fusionInventory.servers

    The urls of the OCS/GLPI servers to connect to.

    Type: list of strings

    Declared by:

    [6077]<nixpkgs/nixos/modules/services/monitoring/fusion-inventory.nix>

[6078]services.fwupd.enable

    Whether to enable fwupd, a DBus service that allows applications to update firmware.

    Type: boolean

    Default: false

    Declared by:

    [6079]<nixpkgs/nixos/modules/services/hardware/fwupd.nix>

[6080]services.fwupd.enableTestRemote

    Whether to enable test remote. This is used by [6081]installed tests.

    Type: boolean

    Default: false

    Declared by:

    [6082]<nixpkgs/nixos/modules/services/hardware/fwupd.nix>

[6083]services.fwupd.package

    Which fwupd package to use.

    Type: package

    Default: (build of fwupd-1.5.7)

    Declared by:

    [6084]<nixpkgs/nixos/modules/services/hardware/fwupd.nix>

[6085]services.fwupd.disabledDevices

    Allow disabling specific devices by their GUID

    Type: list of strings

    Default: [ ]

    Example: [ "2082b5e0-7a64-478a-b1b2-e3404fab6dad" ]

    Declared by:

    [6086]<nixpkgs/nixos/modules/services/hardware/fwupd.nix>

[6087]services.fwupd.disabledPlugins

    Allow disabling specific plugins

    Type: list of strings

    Default: [ ]

    Example: [ "udev" ]

    Declared by:

    [6088]<nixpkgs/nixos/modules/services/hardware/fwupd.nix>

[6089]services.fwupd.extraTrustedKeys

    Installing a public key allows firmware signed with a matching private key to be recognized
    as trusted, which may require less authentication to install than for untrusted files. By
    default trusted firmware can be upgraded (but not downgraded) without the user or
    administrator password. Only very few keys are installed by default.

    Type: list of paths

    Default: [ ]

    Example:

    [ /etc/nixos/fwupd/myfirmware.pem ]

    Declared by:

    [6090]<nixpkgs/nixos/modules/services/hardware/fwupd.nix>

[6091]services.gale.enable

    Whether to enable the Gale messaging daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6092]<nixpkgs/nixos/modules/services/networking/gale.nix>

[6093]services.gale.domain

    Domain name for the Gale system.

    Type: string

    Default: ""

    Declared by:

    [6094]<nixpkgs/nixos/modules/services/networking/gale.nix>

[6095]services.gale.extraConfig

    Additional text to be added to /etc/gale/conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [6096]<nixpkgs/nixos/modules/services/networking/gale.nix>

[6097]services.gale.group

    Group name for the Gale daemon.

    Type: string

    Default: "gale"

    Declared by:

    [6098]<nixpkgs/nixos/modules/services/networking/gale.nix>

[6099]services.gale.keyPath

    Directory containing the key pair for this Gale domain. The expected filename will be taken
    from the domain option with ".gpri" and ".gpub" appended.

    Type: null or path

    Default: null

    Declared by:

    [6100]<nixpkgs/nixos/modules/services/networking/gale.nix>

[6101]services.gale.setuidWrapper

    Configuration for the Gale gksign setuid wrapper.

    Type: unspecified

    Default: null

    Declared by:

    [6102]<nixpkgs/nixos/modules/services/networking/gale.nix>

[6103]services.gale.user

    Username for the Gale daemon.

    Type: string

    Default: "gale"

    Declared by:

    [6104]<nixpkgs/nixos/modules/services/networking/gale.nix>

[6105]services.galene.enable

    Whether to enable Galene Service..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6106]<nixpkgs/nixos/modules/services/web-apps/galene.nix>

[6107]services.galene.package

    Package for running Galene.

    Type: package

    Default: "pkgs.galene"

    Declared by:

    [6108]<nixpkgs/nixos/modules/services/web-apps/galene.nix>

[6109]services.galene.certFile

    Path to the server's certificate. The file is copied at runtime to Galene's data directory
    where it needs to reside.

    Type: null or string

    Default: null

    Example: "/path/to/your/cert.pem"

    Declared by:

    [6110]<nixpkgs/nixos/modules/services/web-apps/galene.nix>

[6111]services.galene.dataDir

    Data directory.

    Type: string

    Default: "/var/lib/galene/data"

    Example: "/var/lib/galene/data"

    Declared by:

    [6112]<nixpkgs/nixos/modules/services/web-apps/galene.nix>

[6113]services.galene.group

    Group under which galene runs.

    Type: string

    Default: "galene"

    Declared by:

    [6114]<nixpkgs/nixos/modules/services/web-apps/galene.nix>

[6115]services.galene.groupsDir

    Web server directory.

    Type: string

    Default: "/var/lib/galene/groups"

    Example: "/var/lib/galene/groups"

    Declared by:

    [6116]<nixpkgs/nixos/modules/services/web-apps/galene.nix>

[6117]services.galene.httpAddress

    HTTP listen address for galene.

    Type: string

    Default: ""

    Declared by:

    [6118]<nixpkgs/nixos/modules/services/web-apps/galene.nix>

[6119]services.galene.httpPort

    HTTP listen port.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8443

    Declared by:

    [6120]<nixpkgs/nixos/modules/services/web-apps/galene.nix>

[6121]services.galene.insecure

    Whether Galene should listen in http or in https. If left as the default value (false),
    Galene needs to be fed a private key and a certificate.

    Type: boolean

    Default: false

    Declared by:

    [6122]<nixpkgs/nixos/modules/services/web-apps/galene.nix>

[6123]services.galene.keyFile

    Path to the server's private key. The file is copied at runtime to Galene's data directory
    where it needs to reside.

    Type: null or string

    Default: null

    Example: "/path/to/your/key.pem"

    Declared by:

    [6124]<nixpkgs/nixos/modules/services/web-apps/galene.nix>

[6125]services.galene.recordingsDir

    Recordings directory.

    Type: string

    Default: "/var/lib/galene/recordings"

    Example: "/var/lib/galene/recordings"

    Declared by:

    [6126]<nixpkgs/nixos/modules/services/web-apps/galene.nix>

[6127]services.galene.stateDir

    The directory where Galene stores its internal state. If left as the default value this
    directory will automatically be created before the Galene server starts, otherwise the
    sysadmin is responsible for ensuring the directory exists with appropriate ownership and
    permissions.

    Type: string

    Default: "/var/lib/galene"

    Declared by:

    [6128]<nixpkgs/nixos/modules/services/web-apps/galene.nix>

[6129]services.galene.staticDir

    Web server directory.

    Type: string

    Default: "\${pkgs.galene.static}/static"

    Example: "/var/lib/galene/static"

    Declared by:

    [6130]<nixpkgs/nixos/modules/services/web-apps/galene.nix>

[6131]services.galene.user

    User account under which galene runs.

    Type: string

    Default: "galene"

    Declared by:

    [6132]<nixpkgs/nixos/modules/services/web-apps/galene.nix>

[6133]services.gammu-smsd.enable

    Whether to enable gammu-smsd daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6134]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6135]services.gammu-smsd.backend.files.errorSMSPath

    Where SMSes with error in transmission is placed

    Type: path

    Default: "/var/spool/sms/error/"

    Declared by:

    [6136]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6137]services.gammu-smsd.backend.files.inboxPath

    Where the received SMSes are stored

    Type: path

    Default: "/var/spool/sms/inbox/"

    Declared by:

    [6138]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6139]services.gammu-smsd.backend.files.outboxPath

    Where SMSes to be sent should be placed

    Type: path

    Default: "/var/spool/sms/outbox/"

    Declared by:

    [6140]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6141]services.gammu-smsd.backend.files.sentSMSPath

    Where the transmitted SMSes are placed

    Type: path

    Default: "/var/spool/sms/sent/"

    Declared by:

    [6142]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6143]services.gammu-smsd.backend.service

    Service to use to store sms data.

    Type: one of "null", "files", "sql"

    Default: "null"

    Declared by:

    [6144]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6145]services.gammu-smsd.backend.sql.database

    Database name to store sms data

    Type: null or string

    Default: null

    Declared by:

    [6146]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6147]services.gammu-smsd.backend.sql.driver

    DB driver to use

    Type: one of "native_mysql", "native_pgsql", "odbc", "dbi"

    Declared by:

    [6148]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6149]services.gammu-smsd.backend.sql.host

    Database server address

    Type: string

    Default: "localhost"

    Declared by:

    [6150]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6151]services.gammu-smsd.backend.sql.password

    User password used for connetion to the database

    Type: null or string

    Default: null

    Declared by:

    [6152]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6153]services.gammu-smsd.backend.sql.sqlDialect

    SQL dialect to use (odbc driver only)

    Type: null or string

    Default: null

    Declared by:

    [6154]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6155]services.gammu-smsd.backend.sql.user

    User name used for connection to the database

    Type: null or string

    Default: null

    Declared by:

    [6156]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6157]services.gammu-smsd.device.connection

    Protocol which will be used to talk to the phone

    Type: string

    Default: "at"

    Declared by:

    [6158]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6159]services.gammu-smsd.device.group

    Owner group of the device

    Type: string

    Default: "root"

    Example: "dialout"

    Declared by:

    [6160]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6161]services.gammu-smsd.device.path

    Device node or address of the phone

    Type: path

    Example: "/dev/ttyUSB2"

    Declared by:

    [6162]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6163]services.gammu-smsd.device.pin

    PIN code for the simcard

    Type: null or string

    Default: null

    Declared by:

    [6164]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6165]services.gammu-smsd.device.synchronizeTime

    Whether to set time from computer to the phone during starting connection

    Type: boolean

    Default: true

    Declared by:

    [6166]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6167]services.gammu-smsd.extraConfig.gammu

    Extra config lines to be added into [gammu] section

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [6168]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6169]services.gammu-smsd.extraConfig.smsd

    Extra config lines to be added into [smsd] section

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [6170]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6171]services.gammu-smsd.log.file

    Path to file where information about communication will be stored

    Type: string

    Default: "syslog"

    Declared by:

    [6172]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6173]services.gammu-smsd.log.format

    Determines what will be logged to the LogFile

    Type: one of "nothing", "text", "textall", "textalldate", "errors", "errorsdate", "binary"

    Default: "errors"

    Declared by:

    [6174]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6175]services.gammu-smsd.user

    User that has access to the device

    Type: string

    Default: "smsd"

    Declared by:

    [6176]<nixpkgs/nixos/modules/services/misc/gammu-smsd.nix>

[6177]services.gateone.enable

    Whether to enable GateOne server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6178]<nixpkgs/nixos/modules/services/networking/gateone.nix>

[6179]services.gateone.pidDir

    Path of pid files for GateOne.

    Type: path

    Default: "/run/gateone"

    Declared by:

    [6180]<nixpkgs/nixos/modules/services/networking/gateone.nix>

[6181]services.gateone.settingsDir

    Path of configuration files for GateOne.

    Type: path

    Default: "/var/lib/gateone"

    Declared by:

    [6182]<nixpkgs/nixos/modules/services/networking/gateone.nix>

[6183]services.gdomap.enable

    Whether to enable GNUstep Distributed Objects name server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6184]<nixpkgs/nixos/modules/services/networking/gdomap.nix>

[6185]services.geoclue2.enable

    Whether to enable GeoClue 2 daemon, a DBus service that provides location information for
    accessing.

    Type: boolean

    Default: false

    Declared by:

    [6186]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6187]services.geoclue2.enable3G

    Whether to enable 3G source.

    Type: boolean

    Default: true

    Declared by:

    [6188]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6189]services.geoclue2.enableCDMA

    Whether to enable CDMA source.

    Type: boolean

    Default: true

    Declared by:

    [6190]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6191]services.geoclue2.enableDemoAgent

    Whether to use the GeoClue demo agent. This should be overridden by desktop environments that
    provide their own agent.

    Type: boolean

    Default: true

    Declared by:

    [6192]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6193]services.geoclue2.enableModemGPS

    Whether to enable Modem-GPS source.

    Type: boolean

    Default: true

    Declared by:

    [6194]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6195]services.geoclue2.enableNmea

    Whether to fetch location from NMEA sources on local network.

    Type: boolean

    Default: true

    Declared by:

    [6196]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6197]services.geoclue2.enableWifi

    Whether to enable WiFi source.

    Type: boolean

    Default: true

    Declared by:

    [6198]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6199]services.geoclue2.appConfig

    Specify extra settings per application.

    Type: attribute set of submodules

    Default: { }

    Example:

    "com.github.app" = {
      isAllowed = true;
      isSystem = true;
      users = [ "300" ];
    };

    Declared by:

    [6200]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6201]services.geoclue2.appConfig.<name>.desktopID

    Desktop ID of the application.

    Type: string

    Declared by:

    [6202]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6203]services.geoclue2.appConfig.<name>.isAllowed

    Whether the application will be allowed access to location information.

    Type: boolean

    Default: null

    Declared by:

    [6204]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6205]services.geoclue2.appConfig.<name>.isSystem

    Whether the application is a system component or not.

    Type: boolean

    Default: null

    Declared by:

    [6206]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6207]services.geoclue2.appConfig.<name>.users

    List of UIDs of all users for which this application is allowed location info access,
    Defaults to an empty string to allow it for all users.

    Type: list of strings

    Default: [ ]

    Declared by:

    [6208]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6209]services.geoclue2.geoProviderUrl

    The url to the wifi GeoLocation Service.

    Type: string

    Default: "https://location.services.mozilla.com/v1/geolocate?key=geoclue"

    Example: "https://www.googleapis.com/geolocation/v1/geolocate?key=YOUR_KEY"

    Declared by:

    [6210]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6211]services.geoclue2.submissionNick

    A nickname to submit network data with. Must be 2-32 characters long.

    Type: string

    Default: "geoclue"

    Declared by:

    [6212]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6213]services.geoclue2.submissionUrl

    The url to submit data to a GeoLocation Service.

    Type: string

    Default: "https://location.services.mozilla.com/v1/submit?key=geoclue"

    Declared by:

    [6214]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6215]services.geoclue2.submitData

    Whether to submit data to a GeoLocation Service.

    Type: boolean

    Default: false

    Declared by:

    [6216]<nixpkgs/nixos/modules/services/desktops/geoclue2.nix>

[6217]services.geoip-updater.enable

    Whether to enable periodic downloading of GeoIP databases from maxmind.com. You might want to
    enable this if you, for instance, use ntopng or Wireshark.

    Type: boolean

    Default: false

    Declared by:

    [6218]<nixpkgs/nixos/modules/services/misc/geoip-updater.nix>

[6219]services.geoip-updater.databaseDir

    Directory that will contain GeoIP databases.

    Type: path

    Default: "/var/lib/geoip-databases"

    Declared by:

    [6220]<nixpkgs/nixos/modules/services/misc/geoip-updater.nix>

[6221]services.geoip-updater.databases

    Which GeoIP databases to update. The full URL is https://geolite.maxmind.com/download/geoip/
    database/ + the_database.

    Type: list of strings

    Default: [ "GeoLiteCountry/GeoIP.dat.gz" "GeoIPv6.dat.gz" "GeoLiteCity.dat.xz"
    "GeoLiteCityv6-beta/GeoLiteCityv6.dat.gz" "asnum/GeoIPASNum.dat.gz" "asnum/
    GeoIPASNumv6.dat.gz" "GeoLite2-Country.mmdb.gz" "GeoLite2-City.mmdb.gz" ]

    Declared by:

    [6222]<nixpkgs/nixos/modules/services/misc/geoip-updater.nix>

[6223]services.geoip-updater.interval

    Update the GeoIP databases at this time / interval. The format is described in systemd.time
    (7). To prevent load spikes on maxmind.com, the timer interval is randomized by an additional
    delay of 3600 seconds. Setting a shorter interval than this is not recommended.

    Type: string

    Default: "weekly"

    Declared by:

    [6224]<nixpkgs/nixos/modules/services/misc/geoip-updater.nix>

[6225]services.gerrit.enable

    Whether to enable Gerrit service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6226]<nixpkgs/nixos/modules/services/web-apps/gerrit.nix>

[6227]services.gerrit.package

    Gerrit package to use

    Type: package

    Default: (build of gerrit-3.3.2)

    Declared by:

    [6228]<nixpkgs/nixos/modules/services/web-apps/gerrit.nix>

[6229]services.gerrit.builtinPlugins

    List of builtins plugins to install. Those are shipped in the gerrit.war file.

    Type: list of one of "codemirror-editor", "commit-message-length-validator",
    "delete-project", "download-commands", "gitiles", "hooks", "plugin-manager", "replication",
    "reviewnotes", "singleusergroup", "webhooks"s

    Default: [ ]

    Declared by:

    [6230]<nixpkgs/nixos/modules/services/web-apps/gerrit.nix>

[6231]services.gerrit.jvmHeapLimit

    How much memory to allocate to the JVM heap

    Type: string

    Default: "1024m"

    Declared by:

    [6232]<nixpkgs/nixos/modules/services/web-apps/gerrit.nix>

[6233]services.gerrit.jvmOpts

    A list of JVM options to start gerrit with.

    Type: list of strings

    Default: [ "-Dflogger.backend_factory=
    com.google.common.flogger.backend.log4j.Log4jBackendFactory#getInstance"
    "-Dflogger.logging_context=com.google.gerrit.server.logging.LoggingContext#getInstance" ]

    Declared by:

    [6234]<nixpkgs/nixos/modules/services/web-apps/gerrit.nix>

[6235]services.gerrit.jvmPackage

    Java Runtime Environment package to use

    Type: package

    Default: "pkgs.jre_headless"

    Declared by:

    [6236]<nixpkgs/nixos/modules/services/web-apps/gerrit.nix>

[6237]services.gerrit.listenAddress

    hostname:port to listen for HTTP traffic.

    This is bound using the systemd socket activation.

    Type: string

    Default: "[::]:8080"

    Declared by:

    [6238]<nixpkgs/nixos/modules/services/web-apps/gerrit.nix>

[6239]services.gerrit.plugins

    List of plugins to add to Gerrit. Each derivation is a jar file itself where the name of the
    derivation is the name of plugin.

    Type: list of packages

    Default: [ ]

    Declared by:

    [6240]<nixpkgs/nixos/modules/services/web-apps/gerrit.nix>

[6241]services.gerrit.replicationSettings

    Replication configuration. This will be generated to the etc/replication.config file.

    Type: lazy attribute set of lazy attribute set of string or boolean or signed integer or list
    of string or boolean or signed integers or lazy attribute set of string or boolean or signed
    integer or list of string or boolean or signed integerssss

    Default: { }

    Declared by:

    [6242]<nixpkgs/nixos/modules/services/web-apps/gerrit.nix>

[6243]services.gerrit.serverId

    Set a UUID that uniquely identifies the server.

    This can be generated with nix-shell -p util-linux --run uuidgen.

    Type: string

    Declared by:

    [6244]<nixpkgs/nixos/modules/services/web-apps/gerrit.nix>

[6245]services.gerrit.settings

    Gerrit configuration. This will be generated to the etc/gerrit.config file.

    Type: lazy attribute set of lazy attribute set of string or boolean or signed integer or list
    of string or boolean or signed integers or lazy attribute set of string or boolean or signed
    integer or list of string or boolean or signed integerssss

    Default: { }

    Declared by:

    [6246]<nixpkgs/nixos/modules/services/web-apps/gerrit.nix>

[6247]services.geth

    Specification of one or more geth instances.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [6248]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6249]services.geth.<name>.enable

    Whether to enable Go Ethereum Node.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6250]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6251]services.geth.<name>.package

    Package to use as Go Ethereum node.

    Type: package

    Default: (build of go-ethereum-1.10.3)

    Declared by:

    [6252]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6253]services.geth.<name>.extraArgs

    Additional arguments passed to Go Ethereum.

    Type: list of strings

    Default: [ ]

    Declared by:

    [6254]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6255]services.geth.<name>.gcmode

    Blockchain garbage collection mode.

    Type: one of "full", "archive"

    Default: "full"

    Declared by:

    [6256]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6257]services.geth.<name>.http.enable

    Whether to enable Go Ethereum HTTP API.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6258]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6259]services.geth.<name>.http.address

    Listen address of Go Ethereum HTTP API.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [6260]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6261]services.geth.<name>.http.apis

    APIs to enable over WebSocket

    Type: null or list of strings

    Default: null

    Example: [ "net" "eth" ]

    Declared by:

    [6262]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6263]services.geth.<name>.http.port

    Port number of Go Ethereum HTTP API.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8545

    Declared by:

    [6264]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6265]services.geth.<name>.maxpeers

    Maximum peers to connect to.

    Type: signed integer

    Default: 50

    Declared by:

    [6266]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6267]services.geth.<name>.metrics.enable

    Whether to enable Go Ethereum prometheus metrics.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6268]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6269]services.geth.<name>.metrics.address

    Listen address of Go Ethereum metrics service.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [6270]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6271]services.geth.<name>.metrics.port

    Port number of Go Ethereum metrics service.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 6060

    Declared by:

    [6272]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6273]services.geth.<name>.network

    The network to connect to. Mainnet (null) is the default ethereum network.

    Type: null or one of "goerli", "rinkeby", "yolov2", "ropsten"

    Default: null

    Declared by:

    [6274]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6275]services.geth.<name>.port

    Port number Go Ethereum will be listening on, both TCP and UDP.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 30303

    Declared by:

    [6276]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6277]services.geth.<name>.syncmode

    Blockchain sync mode.

    Type: one of "fast", "full", "light"

    Default: "fast"

    Declared by:

    [6278]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6279]services.geth.<name>.websocket.enable

    Whether to enable Go Ethereum WebSocket API.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6280]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6281]services.geth.<name>.websocket.address

    Listen address of Go Ethereum WebSocket API.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [6282]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6283]services.geth.<name>.websocket.apis

    APIs to enable over WebSocket

    Type: null or list of strings

    Default: null

    Example: [ "net" "eth" ]

    Declared by:

    [6284]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6285]services.geth.<name>.websocket.port

    Port number of Go Ethereum WebSocket API.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8546

    Declared by:

    [6286]<nixpkgs/nixos/modules/services/blockchain/ethereum/geth.nix>

[6287]services.getty.autologinUser

    Username of the account that will be automatically logged in at the console. If unspecified,
    a login prompt is shown as usual.

    Type: null or string

    Default: null

    Declared by:

    [6288]<nixpkgs/nixos/modules/services/ttys/getty.nix>

[6289]services.getty.extraArgs

    Additional arguments passed to agetty.

    Type: list of strings

    Default: [ ]

    Example: [ "--nohostname" ]

    Declared by:

    [6290]<nixpkgs/nixos/modules/services/ttys/getty.nix>

[6291]services.getty.greetingLine

    Welcome line printed by agetty. The default shows current NixOS version label, machine type
    and tty.

    Type: string

    Declared by:

    [6292]<nixpkgs/nixos/modules/services/ttys/getty.nix>

[6293]services.getty.helpLine

    Help line printed by agetty below the welcome line. Used by the installation CD to give some
    hints on how to proceed.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [6294]<nixpkgs/nixos/modules/services/ttys/getty.nix>

[6295]services.getty.loginOptions

    Template for arguments to be passed to login(1).

    See agetty(1) for details, including security considerations. If unspecified, agetty will not
    be invoked with a --login-options option.

    Type: null or string

    Default: null

    Example: ''-h darkstar -- \u''

    Declared by:

    [6296]<nixpkgs/nixos/modules/services/ttys/getty.nix>

[6297]services.getty.serialSpeed

    Bitrates to allow for agetty's listening on serial ports. Listing more bitrates gives more
    interoperability but at the cost of long delays for getting a sync on the line.

    Type: list of signed integers

    Default: [ 115200 57600 38400 9600 ]

    Example: [ 38400 9600 ]

    Declared by:

    [6298]<nixpkgs/nixos/modules/services/ttys/getty.nix>

[6299]services.ghostunnel.enable

    Whether to enable ghostunnel.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6300]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6301]services.ghostunnel.package

    The ghostunnel package to use.

    Type: package

    Default: pkgs.ghostunnel

    Declared by:

    [6302]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6303]services.ghostunnel.servers

    Server mode ghostunnels (TLS listener -> plain TCP/UNIX target)

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [6304]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6305]services.ghostunnel.servers.<name>.allowAll

    If true, allow all clients, do not check client cert subject.

    Type: boolean

    Default: false

    Declared by:

    [6306]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6307]services.ghostunnel.servers.<name>.allowCN

    Allow client if common name appears in the list.

    Type: list of strings

    Default: [ ]

    Declared by:

    [6308]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6309]services.ghostunnel.servers.<name>.allowDNS

    Allow client if DNS subject alternative name appears in the list.

    Type: list of strings

    Default: [ ]

    Declared by:

    [6310]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6311]services.ghostunnel.servers.<name>.allowOU

    Allow client if organizational unit name appears in the list.

    Type: list of strings

    Default: [ ]

    Declared by:

    [6312]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6313]services.ghostunnel.servers.<name>.allowURI

    Allow client if URI subject alternative name appears in the list.

    Type: list of strings

    Default: [ ]

    Declared by:

    [6314]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6315]services.ghostunnel.servers.<name>.cacert

    Path to CA bundle file (PEM/X509). Uses system trust store if null.

    Type: null or string

    Declared by:

    [6316]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6317]services.ghostunnel.servers.<name>.cert

    Path to certificate (PEM with certificate chain).

    Not required if keystore is set.

    Type: null or string

    Default: null

    Declared by:

    [6318]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6319]services.ghostunnel.servers.<name>.disableAuthentication

    Disable client authentication, no client certificate will be required.

    Type: boolean

    Default: false

    Declared by:

    [6320]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6321]services.ghostunnel.servers.<name>.extraArguments

    Extra arguments to pass to ghostunnel server

    Type: strings concatenated with " "

    Default: ""

    Declared by:

    [6322]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6323]services.ghostunnel.servers.<name>.key

    Path to certificate private key (PEM with private key).

    Not required if keystore is set.

    Type: null or string

    Default: null

    Declared by:

    [6324]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6325]services.ghostunnel.servers.<name>.keystore

    Path to keystore (combined PEM with cert/key, or PKCS12 keystore).

    NB: storepass is not supported because it would expose credentials via /proc/*/cmdline.

    Specify this or cert and key.

    Type: null or string

    Default: null

    Declared by:

    [6326]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6327]services.ghostunnel.servers.<name>.listen

    Address and port to listen on (can be HOST:PORT, unix:PATH).

    Type: string

    Declared by:

    [6328]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6329]services.ghostunnel.servers.<name>.target

    Address to forward connections to (can be HOST:PORT or unix:PATH).

    Type: string

    Declared by:

    [6330]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6331]services.ghostunnel.servers.<name>.unsafeTarget

    If set, does not limit target to localhost, 127.0.0.1, [::1], or UNIX sockets.

    This is meant to protect against accidental unencrypted traffic on untrusted networks.

    Type: boolean

    Default: false

    Declared by:

    [6332]<nixpkgs/nixos/modules/services/networking/ghostunnel.nix>

[6333]services.gitDaemon.enable

    Enable Git daemon, which allows public hosting of git repositories without any access
    controls. This is mostly intended for read-only access.

    You can allow write access by setting daemon.receivepack configuration item of the repository
    to true. This is solely meant for a closed LAN setting where everybody is friendly.

    If you need any access controls, use something else.

    Type: boolean

    Default: false

    Declared by:

    [6334]<nixpkgs/nixos/modules/services/networking/git-daemon.nix>

[6335]services.gitDaemon.basePath

    Remap all the path requests as relative to the given path. For example, if you set base-path
    to /srv/git, then if you later try to pull git://example.com/hello.git, Git daemon will
    interpret the path as /srv/git/hello.git.

    Type: string

    Default: ""

    Example: "/srv/git/"

    Declared by:

    [6336]<nixpkgs/nixos/modules/services/networking/git-daemon.nix>

[6337]services.gitDaemon.exportAll

    Publish all directories that look like Git repositories (have the objects and refs
    subdirectories), even if they do not have the git-daemon-export-ok file.

    If disabled, you need to touch .git/git-daemon-export-ok in each repository you want the
    daemon to publish.

    Warning: enabling this without a repository whitelist or basePath publishes every git
    repository you have.

    Type: boolean

    Default: false

    Declared by:

    [6338]<nixpkgs/nixos/modules/services/networking/git-daemon.nix>

[6339]services.gitDaemon.group

    Group under which Git daemon would be running.

    Type: string

    Default: "git"

    Declared by:

    [6340]<nixpkgs/nixos/modules/services/networking/git-daemon.nix>

[6341]services.gitDaemon.listenAddress

    Listen on a specific IP address or hostname.

    Type: string

    Default: ""

    Example: "example.com"

    Declared by:

    [6342]<nixpkgs/nixos/modules/services/networking/git-daemon.nix>

[6343]services.gitDaemon.options

    Extra configuration options to be passed to Git daemon.

    Type: string

    Default: ""

    Declared by:

    [6344]<nixpkgs/nixos/modules/services/networking/git-daemon.nix>

[6345]services.gitDaemon.port

    Port to listen on.

    Type: signed integer

    Default: 9418

    Declared by:

    [6346]<nixpkgs/nixos/modules/services/networking/git-daemon.nix>

[6347]services.gitDaemon.repositories

    A whitelist of paths of git repositories, or directories containing repositories all of which
    would be published. Paths must not end in "/".

    Warning: leaving this empty and enabling exportAll publishes all repositories in your
    filesystem or basePath if specified.

    Type: list of strings

    Default: [ ]

    Example: [ "/srv/git" "/home/user/git/repo2" ]

    Declared by:

    [6348]<nixpkgs/nixos/modules/services/networking/git-daemon.nix>

[6349]services.gitDaemon.user

    User under which Git daemon would be running.

    Type: string

    Default: "git"

    Declared by:

    [6350]<nixpkgs/nixos/modules/services/networking/git-daemon.nix>

[6351]services.gitea.enable

    Enable Gitea Service.

    Type: boolean

    Default: false

    Declared by:

    [6352]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6353]services.gitea.enableUnixSocket

    Configure Gitea to listen on a unix socket instead of the default TCP port.

    Type: boolean

    Default: false

    Declared by:

    [6354]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6355]services.gitea.package

    gitea derivation to use

    Type: package

    Default: "pkgs.gitea"

    Declared by:

    [6356]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6357]services.gitea.appName

    Application name.

    Type: string

    Default: "gitea: Gitea Service"

    Declared by:

    [6358]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6359]services.gitea.cookieSecure

    Marks session cookies as "secure" as a hint for browsers to only send them via HTTPS. This
    option is recommend, if gitea is being served over HTTPS.

    Type: boolean

    Default: false

    Declared by:

    [6360]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6361]services.gitea.database.createDatabase

    Whether to create a local database automatically.

    Type: boolean

    Default: true

    Declared by:

    [6362]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6363]services.gitea.database.host

    Database host address.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [6364]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6365]services.gitea.database.name

    Database name.

    Type: string

    Default: "gitea"

    Declared by:

    [6366]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6367]services.gitea.database.password

    The password corresponding to database.user. Warning: this is stored in cleartext in the Nix
    store! Use database.passwordFile instead.

    Type: string

    Default: ""

    Declared by:

    [6368]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6369]services.gitea.database.passwordFile

    A file containing the password corresponding to database.user.

    Type: null or path

    Default: null

    Example: "/run/keys/gitea-dbpassword"

    Declared by:

    [6370]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6371]services.gitea.database.path

    Path to the sqlite3 database file.

    Type: string

    Default: "/var/lib/gitea/data/gitea.db"

    Declared by:

    [6372]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6373]services.gitea.database.port

    Database host port.

    Type: signed integer

    Default: 3306

    Declared by:

    [6374]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6375]services.gitea.database.socket

    Path to the unix socket file to use for authentication.

    Type: null or path

    Default: "null"

    Example: "/run/mysqld/mysqld.sock"

    Declared by:

    [6376]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6377]services.gitea.database.type

    Database engine to use.

    Type: one of "sqlite3", "mysql", "postgres"

    Default: "sqlite3"

    Example: "mysql"

    Declared by:

    [6378]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6379]services.gitea.database.user

    Database user.

    Type: string

    Default: "gitea"

    Declared by:

    [6380]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6381]services.gitea.disableRegistration

    By default any user can create an account on this gitea instance. This can be disabled by
    using this option.

    Note: please keep in mind that this should be added after the initial deploy unless [6382]
    services.gitea.useWizard is true as the first registered user will be the administrator if no
    install wizard is used.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6383]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6384]services.gitea.domain

    Domain name of your server.

    Type: string

    Default: "localhost"

    Declared by:

    [6385]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6386]services.gitea.dump.enable

    Enable a timer that runs gitea dump to generate backup-files of the current gitea database
    and repositories.

    Type: boolean

    Default: false

    Declared by:

    [6387]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6388]services.gitea.dump.backupDir

    Path to the dump files.

    Type: string

    Default: "/var/lib/gitea/dump"

    Declared by:

    [6389]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6390]services.gitea.dump.interval

    Run a gitea dump at this interval. Runs by default at 04:31 every day.

    The format is described in systemd.time(7).

    Type: string

    Default: "04:31"

    Example: "hourly"

    Declared by:

    [6391]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6392]services.gitea.extraConfig

    Configuration lines appended to the generated gitea configuration file.

    Type: null or string

    Default: null

    Declared by:

    [6393]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6394]services.gitea.httpAddress

    HTTP listen address.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [6395]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6396]services.gitea.httpPort

    HTTP listen port.

    Type: signed integer

    Default: 3000

    Declared by:

    [6397]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6398]services.gitea.lfs.enable

    Enables git-lfs support.

    Type: boolean

    Default: false

    Declared by:

    [6399]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6400]services.gitea.lfs.contentDir

    Where to store LFS files.

    Type: string

    Default: "/var/lib/gitea/data/lfs"

    Declared by:

    [6401]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6402]services.gitea.log.level

    General log level.

    Type: one of "Trace", "Debug", "Info", "Warn", "Error", "Critical"

    Default: "Trace"

    Declared by:

    [6403]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6404]services.gitea.log.rootPath

    Root path for log files.

    Type: string

    Default: "/var/lib/gitea/log"

    Declared by:

    [6405]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6406]services.gitea.mailerPasswordFile

    Path to a file containing the SMTP password.

    Type: null or string

    Default: null

    Example: "/var/lib/secrets/gitea/mailpw"

    Declared by:

    [6407]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6408]services.gitea.repositoryRoot

    Path to the git repositories.

    Type: string

    Default: "/var/lib/gitea/repositories"

    Declared by:

    [6409]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6410]services.gitea.rootUrl

    Full public URL of gitea server.

    Type: string

    Default: "http://localhost:3000/"

    Declared by:

    [6411]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6412]services.gitea.settings

    Gitea configuration. Refer to [6413]https://docs.gitea.io/en-us/config-cheat-sheet/ for
    details on supported values.

    Type: attribute set of attribute set of boolean or signed integer or stringss

    Default: { }

    Example:

    {
      "cron.sync_external_users" = {
        RUN_AT_START = true;
        SCHEDULE = "@every 24h";
        UPDATE_EXISTING = true;
      };
      mailer = {
        ENABLED = true;
        MAILER_TYPE = "sendmail";
        FROM = "do-not-reply@example.org";
        SENDMAIL_PATH = "${pkgs.system-sendmail}/bin/sendmail";
      };
      other = {
        SHOW_FOOTER_VERSION = false;
      };
    }

    Declared by:

    [6414]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6415]services.gitea.ssh.enable

    Enable external SSH feature.

    Type: boolean

    Default: true

    Declared by:

    [6416]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6417]services.gitea.ssh.clonePort

    SSH port displayed in clone URL. The option is required to configure a service when the
    external visible port differs from the local listening port i.e. if port forwarding is used.

    Type: signed integer

    Default: 22

    Example: 2222

    Declared by:

    [6418]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6419]services.gitea.stateDir

    gitea data directory.

    Type: string

    Default: "/var/lib/gitea"

    Declared by:

    [6420]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6421]services.gitea.staticRootPath

    Upper level of template and static files path.

    Type: string

    Default: "\${pkgs.gitea.data}"

    Example: "/var/lib/gitea/data"

    Declared by:

    [6422]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6423]services.gitea.useWizard

    Do not generate a configuration and use gitea' installation wizard instead. The first
    registered user will be administrator.

    Type: boolean

    Default: false

    Declared by:

    [6424]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6425]services.gitea.user

    User account under which gitea runs.

    Type: string

    Default: "gitea"

    Declared by:

    [6426]<nixpkgs/nixos/modules/services/misc/gitea.nix>

[6427]services.github-runner.enable

    Whether to enable GitHub Actions runner.

    Note: GitHub recommends using self-hosted runners with private repositories only. Learn more
    here: [6428]About self-hosted runners.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6429]<nixpkgs/nixos/modules/services/continuous-integration/github-runner.nix>

[6430]services.github-runner.extraLabels

    Extra labels in addition to the default (["self-hosted", "Linux", "X64"]).

    Changing this option triggers a new runner registration.

    Type: list of strings

    Default: [ ]

    Example:

    [ "nixos" ]

    Declared by:

    [6431]<nixpkgs/nixos/modules/services/continuous-integration/github-runner.nix>

[6432]services.github-runner.extraPackages

    Extra packages to add to PATH of the service to make them available to workflows.

    Type: list of packages

    Default: [ ]

    Declared by:

    [6433]<nixpkgs/nixos/modules/services/continuous-integration/github-runner.nix>

[6434]services.github-runner.name

    Name of the runner to configure. Defaults to the hostname.

    Changing this option triggers a new runner registration.

    Type: string matching the pattern ^$|^[[:alnum:]]([[:alnum:]_-]{0,61}[[:alnum:]])?$

    Default: "nixos"

    Example: "nixos"

    Declared by:

    [6435]<nixpkgs/nixos/modules/services/continuous-integration/github-runner.nix>

[6436]services.github-runner.replace

    Replace any existing runner with the same name.

    Without this flag, registering a new runner with the same name fails.

    Type: boolean

    Default: false

    Declared by:

    [6437]<nixpkgs/nixos/modules/services/continuous-integration/github-runner.nix>

[6438]services.github-runner.runnerGroup

    Name of the runner group to add this runner to (defaults to the default runner group).

    Changing this option triggers a new runner registration.

    Type: null or string

    Default: null

    Declared by:

    [6439]<nixpkgs/nixos/modules/services/continuous-integration/github-runner.nix>

[6440]services.github-runner.tokenFile

    The full path to a file which contains the runner registration token. The file should contain
    exactly one line with the token without any newline. The token can be used to re-register a
    runner of the same name but is time-limited.

    Changing this option or the file's content triggers a new runner registration.

    Type: path

    Example: "/run/secrets/github-runner/nixos.token"

    Declared by:

    [6441]<nixpkgs/nixos/modules/services/continuous-integration/github-runner.nix>

[6442]services.github-runner.url

    Repository to add the runner to.

    Changing this option triggers a new runner registration.

    Type: string

    Example: "https://github.com/nixos/nixpkgs"

    Declared by:

    [6443]<nixpkgs/nixos/modules/services/continuous-integration/github-runner.nix>

[6444]services.gitlab.enable

    Enable the gitlab service.

    Type: boolean

    Default: false

    Declared by:

    [6445]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6446]services.gitlab.packages.gitaly

    Reference to the gitaly package

    Type: package

    Default: "pkgs.gitaly"

    Declared by:

    [6447]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6448]services.gitlab.packages.gitlab

    Reference to the gitlab package

    Type: package

    Default: "pkgs.gitlab"

    Example: "pkgs.gitlab-ee"

    Declared by:

    [6449]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6450]services.gitlab.packages.gitlab-shell

    Reference to the gitlab-shell package

    Type: package

    Default: "pkgs.gitlab-shell"

    Declared by:

    [6451]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6452]services.gitlab.packages.gitlab-workhorse

    Reference to the gitlab-workhorse package

    Type: package

    Default: "pkgs.gitlab-workhorse"

    Declared by:

    [6453]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6454]services.gitlab.packages.pages

    Reference to the gitlab-pages package

    Type: package

    Default: "pkgs.gitlab-pages"

    Declared by:

    [6455]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6456]services.gitlab.backup.keepTime

    How long to keep the backups around, in hours. 0 means “keep forever”.

    Type: signed integer

    Default: 0

    Example: 48

    Declared by:

    [6457]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6458]services.gitlab.backup.path

    GitLab path for backups.

    Type: string

    Default: "/var/gitlab/state/backup"

    Declared by:

    [6459]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6460]services.gitlab.backup.skip

    Directories to exclude from the backup. The example excludes CI artifacts and LFS objects
    from the backups. The tar option skips the creation of a tar file.

    Refer to [6461]https://docs.gitlab.com/ee/raketasks/backup_restore.html#
    excluding-specific-directories-from-the-backup for more information.

    Type: one of "db", "uploads", "builds", "artifacts", "lfs", "registry", "pages",
    "repositories", "tar" or list of one of "db", "uploads", "builds", "artifacts", "lfs",
    "registry", "pages", "repositories", "tar"s

    Default: [ ]

    Example: [ "artifacts" "lfs" ]

    Declared by:

    [6462]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6463]services.gitlab.backup.startAt

    The time(s) to run automatic backup of GitLab state. Specified in systemd's time format; see 
    systemd.time(7).

    Type: string or list of strings

    Default: [ ]

    Example: "03:00"

    Declared by:

    [6464]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6465]services.gitlab.backup.uploadOptions

    GitLab automatic upload specification. Tells GitLab to upload the backup to a remote location
    when done.

    Attributes specified here are added under production -> backup -> upload in config/
    gitlab.yml.

    Type: attribute set

    Default: { }

    Example:

    {
      # Fog storage connection settings, see http://fog.io/storage/
      connection = {
        provider = "AWS";
        region = "eu-north-1";
        aws_access_key_id = "AKIAXXXXXXXXXXXXXXXX";
        aws_secret_access_key = { _secret = config.deployment.keys.aws_access_key.path; };
      };

      # The remote 'directory' to store your backups in.
      # For S3, this would be the bucket name.
      remote_directory = "my-gitlab-backups";

      # Use multipart uploads when file size reaches 100MB, see
      # http://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html
      multipart_chunk_size = 104857600;

      # Turns on AWS Server-Side Encryption with Amazon S3-Managed Keys for backups, this is optional
      encryption = "AES256";

      # Specifies Amazon S3 storage class to use for backups, this is optional
      storage_class = "STANDARD";
    };

    Declared by:

    [6466]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6467]services.gitlab.databaseCreateLocally

    Whether a database should be automatically created on the local host. Set this to false if
    you plan on provisioning a local database yourself. This has no effect if
    services.gitlab.databaseHost is customized.

    Type: boolean

    Default: true

    Declared by:

    [6468]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6469]services.gitlab.databaseHost

    GitLab database hostname. An empty string means “use local unix socket connection”.

    Type: string

    Default: ""

    Declared by:

    [6470]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6471]services.gitlab.databaseName

    GitLab database name.

    Type: string

    Default: "gitlab"

    Declared by:

    [6472]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6473]services.gitlab.databasePasswordFile

    File containing the GitLab database user password.

    This should be a string, not a nix path, since nix paths are copied into the world-readable
    nix store.

    Type: null or path

    Default: null

    Declared by:

    [6474]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6475]services.gitlab.databasePool

    Database connection pool size.

    Type: signed integer

    Default: 5

    Declared by:

    [6476]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6477]services.gitlab.databaseUsername

    GitLab database user.

    Type: string

    Default: "gitlab"

    Declared by:

    [6478]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6479]services.gitlab.extraConfig

    Extra options to be added under production in config/gitlab.yml, as a nix attribute set.

    Options containing secret data should be set to an attribute set containing the attribute
    _secret - a string pointing to a file containing the value the option should be set to. See
    the example to get a better picture of this: in the resulting config/gitlab.yml file, the
    production.omniauth.providers[0].args.client_options.secret key will be set to the contents
    of the /var/keys/gitlab_oidc_secret file.

    Type: attribute set

    Default: { }

    Example:

    {
      gitlab = {
        default_projects_features = {
          builds = false;
        };
      };
      omniauth = {
        enabled = true;
        auto_sign_in_with_provider = "openid_connect";
        allow_single_sign_on = ["openid_connect"];
        block_auto_created_users = false;
        providers = [
          {
            name = "openid_connect";
            label = "OpenID Connect";
            args = {
              name = "openid_connect";
              scope = ["openid" "profile"];
              response_type = "code";
              issuer = "https://keycloak.example.com/auth/realms/My%20Realm";
              discovery = true;
              client_auth_method = "query";
              uid_field = "preferred_username";
              client_options = {
                identifier = "gitlab";
                secret = { _secret = "/var/keys/gitlab_oidc_secret"; };
                redirect_uri = "https://git.example.com/users/auth/openid_connect/callback";
              };
            };
          }
        ];
      };
    };

    Declared by:

    [6480]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6481]services.gitlab.extraDatabaseConfig

    Extra configuration in config/database.yml.

    Type: attribute set

    Default: { }

    Declared by:

    [6482]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6483]services.gitlab.extraGitlabRb

    Extra configuration to be placed in config/extra-gitlab.rb. This can be used to add
    configuration not otherwise exposed through this module's options.

    Type: string

    Default: ""

    Example:

    ''
    if Rails.env.production?
      Rails.application.config.action_mailer.delivery_method = :sendmail
      ActionMailer::Base.delivery_method = :sendmail
      ActionMailer::Base.sendmail_settings = {
        location: "/run/wrappers/bin/sendmail",
        arguments: "-i -t"
      }
    end
    ''

    Declared by:

    [6484]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6485]services.gitlab.extraShellConfig

    Extra configuration to merge into shell-config.yml

    Type: attribute set

    Default: { }

    Declared by:

    [6486]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6487]services.gitlab.group

    Group to run gitlab and all related services.

    Type: string

    Default: "gitlab"

    Declared by:

    [6488]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6489]services.gitlab.host

    GitLab host name. Used e.g. for copy-paste URLs.

    Type: string

    Default: "nixos"

    Declared by:

    [6490]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6491]services.gitlab.https

    Whether gitlab prints URLs with https as scheme.

    Type: boolean

    Default: false

    Declared by:

    [6492]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6493]services.gitlab.initialRootEmail

    Initial email address of the root account if this is a new install.

    Type: string

    Default: "admin@local.host"

    Declared by:

    [6494]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6495]services.gitlab.initialRootPasswordFile

    File containing the initial password of the root account if this is a new install.

    This should be a string, not a nix path, since nix paths are copied into the world-readable
    nix store.

    Type: null or path

    Default: null

    Declared by:

    [6496]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6497]services.gitlab.pagesExtraArgs

    Arguments to pass to the gitlab-pages daemon

    Type: list of strings

    Default: [ "-listen-proxy" "127.0.0.1:8090" ]

    Declared by:

    [6498]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6499]services.gitlab.port

    GitLab server port for copy-paste URLs, e.g. 80 or 443 if you're service over https.

    Type: signed integer

    Default: 8080

    Declared by:

    [6500]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6501]services.gitlab.puma.threadsMax

    The maximum number of threads Puma should use per worker. This limits how many threads Puma
    will automatically spawn in response to requests. In contrast to workers, threads will never
    be able to run Ruby code in parallel, but give higher IO parallelism.

    Note: Each thread consumes memory and contributes to Global VM Lock contention, so be careful
    when increasing this.

    Type: signed integer

    Default: 4

    Declared by:

    [6502]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6503]services.gitlab.puma.threadsMin

    The minimum number of threads Puma should use per worker.

    Note: Each thread consumes memory and contributes to Global VM Lock contention, so be careful
    when increasing this.

    Type: signed integer

    Default: 0

    Declared by:

    [6504]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6505]services.gitlab.puma.workers

    The number of worker processes Puma should spawn. This controls the amount of parallel Ruby
    code can be executed. GitLab recommends “Number of CPU cores - 1”, but at least two.

    Note: Each worker consumes quite a bit of memory, so be careful when increasing this.

    Type: signed integer

    Default: 2

    Declared by:

    [6506]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6507]services.gitlab.redisUrl

    Redis URL for all GitLab services except gitlab-shell

    Type: string

    Default: "redis://localhost:6379/"

    Declared by:

    [6508]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6509]services.gitlab.secrets.dbFile

    A file containing the secret used to encrypt variables in the DB. If you change or lose this
    key you will be unable to access variables stored in database.

    Make sure the secret is at least 32 characters and all random, no regular words or you'll be
    exposed to dictionary attacks.

    This should be a string, not a nix path, since nix paths are copied into the world-readable
    nix store.

    Type: null or path

    Default: null

    Declared by:

    [6510]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6511]services.gitlab.secrets.jwsFile

    A file containing the secret used to encrypt session keys. If you change or lose this key,
    users will be disconnected.

    Make sure the secret is an RSA private key in PEM format. You can generate one with

    openssl genrsa 2048

    This should be a string, not a nix path, since nix paths are copied into the world-readable
    nix store.

    Type: null or path

    Default: null

    Declared by:

    [6512]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6513]services.gitlab.secrets.otpFile

    A file containing the secret used to encrypt secrets for OTP tokens. If you change or lose
    this key, users which have 2FA enabled for login won't be able to login anymore.

    Make sure the secret is at least 32 characters and all random, no regular words or you'll be
    exposed to dictionary attacks.

    This should be a string, not a nix path, since nix paths are copied into the world-readable
    nix store.

    Type: null or path

    Default: null

    Declared by:

    [6514]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6515]services.gitlab.secrets.secretFile

    A file containing the secret used to encrypt variables in the DB. If you change or lose this
    key you will be unable to access variables stored in database.

    Make sure the secret is at least 32 characters and all random, no regular words or you'll be
    exposed to dictionary attacks.

    This should be a string, not a nix path, since nix paths are copied into the world-readable
    nix store.

    Type: null or path

    Default: null

    Declared by:

    [6516]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6517]services.gitlab.sidekiq.memoryKiller.enable

    Whether the Sidekiq MemoryKiller should be turned on. MemoryKiller kills Sidekiq when its
    memory consumption exceeds a certain limit.

    See [6518]https://docs.gitlab.com/ee/administration/operations/sidekiq_memory_killer.html for
    details.

    Type: boolean

    Default: true

    Declared by:

    [6519]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6520]services.gitlab.sidekiq.memoryKiller.graceTime

    The time MemoryKiller waits after noticing excessive memory consumption before killing
    Sidekiq.

    Type: signed integer

    Default: 900

    Declared by:

    [6521]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6522]services.gitlab.sidekiq.memoryKiller.maxMemory

    The maximum amount of memory, in MiB, a Sidekiq worker is allowed to consume before being
    killed.

    Type: signed integer

    Default: 2000

    Declared by:

    [6523]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6524]services.gitlab.sidekiq.memoryKiller.shutdownWait

    The time allowed for all jobs to finish before Sidekiq is killed forcefully.

    Type: signed integer

    Default: 30

    Declared by:

    [6525]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6526]services.gitlab.smtp.enable

    Enable gitlab mail delivery over SMTP.

    Type: boolean

    Default: false

    Declared by:

    [6527]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6528]services.gitlab.smtp.enableStartTLSAuto

    Whether to try to use StartTLS.

    Type: boolean

    Default: true

    Declared by:

    [6529]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6530]services.gitlab.smtp.address

    Address of the SMTP server for GitLab.

    Type: string

    Default: "localhost"

    Declared by:

    [6531]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6532]services.gitlab.smtp.authentication

    Authentication type to use, see http://api.rubyonrails.org/classes/ActionMailer/Base.html

    Type: null or string

    Default: null

    Declared by:

    [6533]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6534]services.gitlab.smtp.domain

    HELO domain to use for outgoing mail.

    Type: string

    Default: "localhost"

    Declared by:

    [6535]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6536]services.gitlab.smtp.opensslVerifyMode

    How OpenSSL checks the certificate, see http://api.rubyonrails.org/classes/ActionMailer/
    Base.html

    Type: string

    Default: "peer"

    Declared by:

    [6537]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6538]services.gitlab.smtp.passwordFile

    File containing the password of the SMTP server for GitLab.

    This should be a string, not a nix path, since nix paths are copied into the world-readable
    nix store.

    Type: null or path

    Default: null

    Declared by:

    [6539]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6540]services.gitlab.smtp.port

    Port of the SMTP server for GitLab.

    Type: signed integer

    Default: 25

    Declared by:

    [6541]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6542]services.gitlab.smtp.tls

    Whether to use TLS wrapper-mode.

    Type: boolean

    Default: false

    Declared by:

    [6543]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6544]services.gitlab.smtp.username

    Username of the SMTP server for GitLab.

    Type: null or string

    Default: null

    Declared by:

    [6545]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6546]services.gitlab.statePath

    GitLab state directory. Configuration, repositories and logs, among other things, are stored
    here.

    The directory will be created automatically if it doesn't exist already. Its parent
    directories must be owned by either root or the user set in services.gitlab.user.

    Type: string

    Default: "/var/gitlab/state"

    Declared by:

    [6547]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6548]services.gitlab.user

    User to run gitlab and all related services.

    Type: string

    Default: "gitlab"

    Declared by:

    [6549]<nixpkgs/nixos/modules/services/misc/gitlab.nix>

[6550]services.gitlab-runner.enable

    Whether to enable Gitlab Runner.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6551]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6552]services.gitlab-runner.package

    Gitlab Runner package to use.

    Type: package

    Default: "pkgs.gitlab-runner"

    Example:

    pkgs.gitlab-runner_1_11

    Declared by:

    [6553]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6554]services.gitlab-runner.checkInterval

    Defines the interval length, in seconds, between new jobs check. The default value is 3; if
    set to 0 or lower, the default value will be used. See [6555]runner documentation for more
    information.

    Type: signed integer

    Default: 0

    Example:

    with lib; (length (attrNames config.services.gitlab-runner.services)) * 3

    Declared by:

    [6556]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6557]services.gitlab-runner.concurrent

    Limits how many jobs globally can be run concurrently. The most upper limit of jobs using all
    defined runners. 0 does not mean unlimited.

    Type: signed integer

    Default: 1

    Example:

    config.nix.maxJobs

    Declared by:

    [6558]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6559]services.gitlab-runner.configFile

    Configuration file for gitlab-runner.

    configFile takes precedence over services. checkInterval and concurrent will be ignored too.

    This option is deprecated, please use services instead. You can use registrationConfigFile
    and registrationFlags for settings not covered by this module.

    Type: null or path

    Default: null

    Declared by:

    [6560]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6561]services.gitlab-runner.extraPackages

    Extra packages to add to PATH for the gitlab-runner process.

    Type: list of packages

    Default: [ ]

    Declared by:

    [6562]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6563]services.gitlab-runner.gracefulTermination

    Finish all remaining jobs before stopping. If not set gitlab-runner will stop immediatly
    without waiting for jobs to finish, which will lead to failed builds.

    Type: boolean

    Default: false

    Declared by:

    [6564]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6565]services.gitlab-runner.gracefulTimeout

    Time to wait until a graceful shutdown is turned into a forceful one.

    Type: string

    Default: "infinity"

    Example: "5min 20s"

    Declared by:

    [6566]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6567]services.gitlab-runner.prometheusListenAddress

    Address (<host>:<port>) on which the Prometheus metrics HTTP server should be listening.

    Type: null or string

    Default: null

    Example: "localhost:8080"

    Declared by:

    [6568]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6569]services.gitlab-runner.sentryDSN

    Data Source Name for tracking of all system level errors to Sentry.

    Type: null or string

    Default: null

    Example: "https://public:private@host:port/1"

    Declared by:

    [6570]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6571]services.gitlab-runner.services

    GitLab Runner services.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      # runner for building in docker via host's nix-daemon
      # nix store will be readable in runner, might be insecure
      nix = {
        # File should contain at least these two variables:
        # `CI_SERVER_URL`
        # `REGISTRATION_TOKEN`
        registrationConfigFile = "/run/secrets/gitlab-runner-registration";
        dockerImage = "alpine";
        dockerVolumes = [
          "/nix/store:/nix/store:ro"
          "/nix/var/nix/db:/nix/var/nix/db:ro"
          "/nix/var/nix/daemon-socket:/nix/var/nix/daemon-socket:ro"
        ];
        dockerDisableCache = true;
        preBuildScript = pkgs.writeScript "setup-container" ''
          mkdir -p -m 0755 /nix/var/log/nix/drvs
          mkdir -p -m 0755 /nix/var/nix/gcroots
          mkdir -p -m 0755 /nix/var/nix/profiles
          mkdir -p -m 0755 /nix/var/nix/temproots
          mkdir -p -m 0755 /nix/var/nix/userpool
          mkdir -p -m 1777 /nix/var/nix/gcroots/per-user
          mkdir -p -m 1777 /nix/var/nix/profiles/per-user
          mkdir -p -m 0755 /nix/var/nix/profiles/per-user/root
          mkdir -p -m 0700 "$HOME/.nix-defexpr"

          . ${pkgs.nix}/etc/profile.d/nix.sh

          ${pkgs.nix}/bin/nix-env -i ${concatStringsSep " " (with pkgs; [ nix cacert git openssh ])}

          ${pkgs.nix}/bin/nix-channel --add https://nixos.org/channels/nixpkgs-unstable
          ${pkgs.nix}/bin/nix-channel --update nixpkgs
        '';
        environmentVariables = {
          ENV = "/etc/profile";
          USER = "root";
          NIX_REMOTE = "daemon";
          PATH = "/nix/var/nix/profiles/default/bin:/nix/var/nix/profiles/default/sbin:/bin:/sbin:/usr/bin:/usr/sbin";
          NIX_SSL_CERT_FILE = "/nix/var/nix/profiles/default/etc/ssl/certs/ca-bundle.crt";
        };
        tagList = [ "nix" ];
      };
      # runner for building docker images
      docker-images = {
        # File should contain at least these two variables:
        # `CI_SERVER_URL`
        # `REGISTRATION_TOKEN`
        registrationConfigFile = "/run/secrets/gitlab-runner-registration";
        dockerImage = "docker:stable";
        dockerVolumes = [
          "/var/run/docker.sock:/var/run/docker.sock"
        ];
        tagList = [ "docker-images" ];
      };
      # runner for executing stuff on host system (very insecure!)
      # make sure to add required packages (including git!)
      # to `environment.systemPackages`
      shell = {
        # File should contain at least these two variables:
        # `CI_SERVER_URL`
        # `REGISTRATION_TOKEN`
        registrationConfigFile = "/run/secrets/gitlab-runner-registration";
        executor = "shell";
        tagList = [ "shell" ];
      };
      # runner for everything else
      default = {
        # File should contain at least these two variables:
        # `CI_SERVER_URL`
        # `REGISTRATION_TOKEN`
        registrationConfigFile = "/run/secrets/gitlab-runner-registration";
        dockerImage = "debian:stable";
      };
    }

    Declared by:

    [6572]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6573]services.gitlab-runner.services.<name>.buildsDir

    Absolute path to a directory where builds will be stored in context of selected executor
    (Locally, Docker, SSH).

    Type: null or path

    Default: null

    Example: "/var/lib/gitlab-runner/builds"

    Declared by:

    [6574]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6575]services.gitlab-runner.services.<name>.cloneUrl

    Overwrite the URL for the GitLab instance. Used if the Runner can’t connect to GitLab on the
    URL GitLab exposes itself.

    Type: null or string

    Default: null

    Example: "http://gitlab.example.local"

    Declared by:

    [6576]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6577]services.gitlab-runner.services.<name>.debugTraceDisabled

    When set to true Runner will disable the possibility of using the CI_DEBUG_TRACE feature.

    Type: boolean

    Default: false

    Declared by:

    [6578]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6579]services.gitlab-runner.services.<name>.dockerAllowedImages

    Whitelist allowed images.

    Type: list of strings

    Default: [ ]

    Example: [ "ruby:*" "python:*" "php:*" "my.registry.tld:5000/*:*" ]

    Declared by:

    [6580]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6581]services.gitlab-runner.services.<name>.dockerAllowedServices

    Whitelist allowed services.

    Type: list of strings

    Default: [ ]

    Example: [ "postgres:9" "redis:*" "mysql:*" ]

    Declared by:

    [6582]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6583]services.gitlab-runner.services.<name>.dockerDisableCache

    Disable all container caching.

    Type: boolean

    Default: false

    Declared by:

    [6584]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6585]services.gitlab-runner.services.<name>.dockerExtraHosts

    Add a custom host-to-IP mapping.

    Type: list of strings

    Default: [ ]

    Example: [ "other-host:127.0.0.1" ]

    Declared by:

    [6586]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6587]services.gitlab-runner.services.<name>.dockerImage

    Docker image to be used.

    Type: null or string

    Default: null

    Declared by:

    [6588]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6589]services.gitlab-runner.services.<name>.dockerPrivileged

    Give extended privileges to container.

    Type: boolean

    Default: false

    Declared by:

    [6590]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6591]services.gitlab-runner.services.<name>.dockerVolumes

    Bind-mount a volume and create it if it doesn't exist prior to mounting.

    Type: list of strings

    Default: [ ]

    Example: [ "/var/run/docker.sock:/var/run/docker.sock" ]

    Declared by:

    [6592]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6593]services.gitlab-runner.services.<name>.environmentVariables

    Custom environment variables injected to build environment. For secrets you can use
    registrationConfigFile with RUNNER_ENV variable set.

    Type: attribute set of strings

    Default: { }

    Example: { NAME = "value"; }

    Declared by:

    [6594]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6595]services.gitlab-runner.services.<name>.executor

    Select executor, eg. shell, docker, etc. See [6596]runner documentation for more information.

    Type: string

    Default: "docker"

    Declared by:

    [6597]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6598]services.gitlab-runner.services.<name>.limit

    Limit how many jobs can be handled concurrently by this service. 0 (default) simply means
    don't limit.

    Type: signed integer

    Default: 0

    Declared by:

    [6599]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6600]services.gitlab-runner.services.<name>.maximumTimeout

    What is the maximum timeout (in seconds) that will be set for job when using this Runner. 0
    (default) simply means don't limit.

    Type: signed integer

    Default: 0

    Declared by:

    [6601]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6602]services.gitlab-runner.services.<name>.postBuildScript

    Runner-specific command script executed after code is pulled and just after build executes.

    Type: null or path

    Default: null

    Declared by:

    [6603]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6604]services.gitlab-runner.services.<name>.preBuildScript

    Runner-specific command script executed after code is pulled, just before build executes.

    Type: null or path

    Default: null

    Declared by:

    [6605]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6606]services.gitlab-runner.services.<name>.preCloneScript

    Runner-specific command script executed before code is pulled.

    Type: null or path

    Default: null

    Declared by:

    [6607]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6608]services.gitlab-runner.services.<name>.protected

    When set to true Runner will only run on pipelines triggered on protected branches.

    Type: boolean

    Default: false

    Declared by:

    [6609]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6610]services.gitlab-runner.services.<name>.registrationConfigFile

    Absolute path to a file with environment variables used for gitlab-runner registration. A
    list of all supported environment variables can be found in gitlab-runner register --help.

    Ones that you probably want to set is

    CI_SERVER_URL=<CI server URL>

    REGISTRATION_TOKEN=<registration secret>

    Type: path

    Declared by:

    [6611]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6612]services.gitlab-runner.services.<name>.registrationFlags

    Extra command-line flags passed to gitlab-runner register. Execute gitlab-runner register
    --help for a list of supported flags.

    Type: list of strings

    Default: [ ]

    Example: [ "--docker-helper-image my/gitlab-runner-helper" ]

    Declared by:

    [6613]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6614]services.gitlab-runner.services.<name>.requestConcurrency

    Limit number of concurrent requests for new jobs from GitLab.

    Type: signed integer

    Default: 0

    Declared by:

    [6615]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6616]services.gitlab-runner.services.<name>.runUntagged

    Register to run untagged builds; defaults to true when tagList is empty.

    Type: boolean

    Default: false

    Declared by:

    [6617]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6618]services.gitlab-runner.services.<name>.tagList

    Tag list.

    Type: list of strings

    Default: [ ]

    Declared by:

    [6619]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6620]services.gitlab-runner.sessionServer

    The session server allows the user to interact with jobs that the Runner is responsible for.
    A good example of this is the [6621]interactive web terminal.

    Type: submodule

    Default: { }

    Example:

    {
      listenAddress = "0.0.0.0:8093";
    }

    Declared by:

    [6622]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6623]services.gitlab-runner.sessionServer.advertiseAddress

    The URL that the Runner will expose to GitLab to be used to access the session server.
    Fallbacks to listenAddress if not defined.

    Type: null or string

    Default: null

    Example: "runner-host-name.tld:8093"

    Declared by:

    [6624]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6625]services.gitlab-runner.sessionServer.listenAddress

    An internal URL to be used for the session server.

    Type: null or string

    Default: null

    Example: "0.0.0.0:8093"

    Declared by:

    [6626]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6627]services.gitlab-runner.sessionServer.sessionTimeout

    How long in seconds the session can stay active after the job completes (which will block the
    job from finishing).

    Type: signed integer

    Default: 1800

    Declared by:

    [6628]<nixpkgs/nixos/modules/services/continuous-integration/gitlab-runner.nix>

[6629]services.gitolite.enable

    Enable gitolite management under the gitolite user. After switching to a configuration with
    Gitolite enabled, you can then run git clone gitolite@host:gitolite-admin.git to manage it
    further.

    Type: boolean

    Default: false

    Declared by:

    [6630]<nixpkgs/nixos/modules/services/misc/gitolite.nix>

[6631]services.gitolite.enableGitAnnex

    Enable git-annex support. Uses the extraGitoliteRc option to apply the necessary
    configuration.

    Type: boolean

    Default: false

    Declared by:

    [6632]<nixpkgs/nixos/modules/services/misc/gitolite.nix>

[6633]services.gitolite.adminPubkey

    Initial administrative public key for Gitolite. This should be an SSH Public Key. Note that
    this key will only be used once, upon the first initialization of the Gitolite user. The key
    string cannot have any line breaks in it.

    Type: string

    Declared by:

    [6634]<nixpkgs/nixos/modules/services/misc/gitolite.nix>

[6635]services.gitolite.commonHooks

    A list of custom git hooks that get copied to ~/.gitolite/hooks/common.

    Type: list of paths

    Default: [ ]

    Declared by:

    [6636]<nixpkgs/nixos/modules/services/misc/gitolite.nix>

[6637]services.gitolite.dataDir

    The gitolite home directory used to store all repositories. If left as the default value this
    directory will automatically be created before the gitolite server starts, otherwise the
    sysadmin is responsible for ensuring the directory exists with appropriate ownership and
    permissions.

    Type: string

    Default: "/var/lib/gitolite"

    Declared by:

    [6638]<nixpkgs/nixos/modules/services/misc/gitolite.nix>

[6639]services.gitolite.extraGitoliteRc

    Extra configuration to append to the default ~/.gitolite.rc.

    This should be Perl code that modifies the %RC configuration variable. The default ~
    /.gitolite.rc content is generated by invoking gitolite print-default-rc, and extra
    configuration from this option is appended to it. The result is placed to Nix store, and the
    ~/.gitolite.rc file becomes a symlink to it.

    If you already have a customized (or otherwise changed) ~/.gitolite.rc file, NixOS will
    refuse to replace it with a symlink, and the `gitolite-init` initialization service will
    fail. In this situation, in order to use this option, you will need to take any
    customizations you may have in ~/.gitolite.rc, convert them to appropriate Perl statements,
    add them to this option, and remove the file.

    See also the enableGitAnnex option.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    $RC{UMASK} = 0027;
    $RC{SITE_INFO} = 'This is our private repository host';
    push( @{$RC{ENABLE}}, 'Kindergarten' ); # enable the command/feature
    @{$RC{ENABLE}} = grep { $_ ne 'desc' } @{$RC{ENABLE}}; # disable the command/feature

    Declared by:

    [6640]<nixpkgs/nixos/modules/services/misc/gitolite.nix>

[6641]services.gitolite.group

    Primary group of the Gitolite user account.

    Type: string

    Default: "gitolite"

    Declared by:

    [6642]<nixpkgs/nixos/modules/services/misc/gitolite.nix>

[6643]services.gitolite.user

    Gitolite user account. This is the username of the gitolite endpoint.

    Type: string

    Default: "gitolite"

    Declared by:

    [6644]<nixpkgs/nixos/modules/services/misc/gitolite.nix>

[6645]services.gitweb.extraConfig

    Verbatim configuration text appended to the generated gitweb.conf file.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    $feature{'highlight'}{'default'} = [1];
    $feature{'ctags'}{'default'} = [1];
    $feature{'avatar'}{'default'} = ['gravatar'];
    ''

    Declared by:

    [6646]<nixpkgs/nixos/modules/services/misc/gitweb.nix>

[6647]services.gitweb.gitwebTheme

    Use an alternative theme for gitweb, strongly inspired by GitHub.

    Type: boolean

    Default: false

    Declared by:

    [6648]<nixpkgs/nixos/modules/services/misc/gitweb.nix>

[6649]services.gitweb.projectroot

    Path to git projects (bare repositories) that should be served by gitweb. Must not end with a
    slash.

    Type: path

    Default: "/srv/git"

    Declared by:

    [6650]<nixpkgs/nixos/modules/services/misc/gitweb.nix>

[6651]services.glusterfs.enable

    Whether to enable GlusterFS Daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6652]<nixpkgs/nixos/modules/services/network-filesystems/glusterfs.nix>

[6653]services.glusterfs.enableGlustereventsd

    Whether to enable the GlusterFS Events Daemon

    Type: boolean

    Default: true

    Declared by:

    [6654]<nixpkgs/nixos/modules/services/network-filesystems/glusterfs.nix>

[6655]services.glusterfs.extraFlags

    Extra flags passed to the GlusterFS daemon

    Type: list of strings

    Default: [ ]

    Declared by:

    [6656]<nixpkgs/nixos/modules/services/network-filesystems/glusterfs.nix>

[6657]services.glusterfs.killMode

    The systemd KillMode to use for glusterd.

    glusterd spawns other daemons like gsyncd. If you want these to stop when glusterd is stopped
    (e.g. to ensure that NixOS config changes are reflected even for these sub-daemons), set this
    to 'control-group'. If however you want running volume processes (glusterfsd) and thus
    gluster mounts not be interrupted when glusterd is restarted (for example, when you want to
    restart them manually at a later time), set this to 'process'.

    Type: one of "control-group", "process", "mixed", "none"

    Default: "control-group"

    Declared by:

    [6658]<nixpkgs/nixos/modules/services/network-filesystems/glusterfs.nix>

[6659]services.glusterfs.logLevel

    Log level used by the GlusterFS daemon

    Type: one of "DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL", "TRACE", "NONE"

    Default: "INFO"

    Declared by:

    [6660]<nixpkgs/nixos/modules/services/network-filesystems/glusterfs.nix>

[6661]services.glusterfs.stopKillTimeout

    The systemd TimeoutStopSec to use.

    After this time after having been asked to shut down, glusterd (and depending on the killMode
    setting also its child processes) are killed by systemd.

    The default is set low because GlusterFS (as of 3.10) is known to not tell its children (like
    gsyncd) to terminate at all.

    Type: string

    Default: "5s"

    Declared by:

    [6662]<nixpkgs/nixos/modules/services/network-filesystems/glusterfs.nix>

[6663]services.glusterfs.tlsSettings

    Make the server communicate via TLS. This means it will only connect to other gluster servers
    having certificates signed by the same CA.

    Enabling this will create a file /var/lib/glusterd/secure-access. Disabling will delete this
    file again.

    See also: https://gluster.readthedocs.io/en/latest/Administrator%20Guide/SSL/

    Type: null or submodule

    Default: null

    Declared by:

    [6664]<nixpkgs/nixos/modules/services/network-filesystems/glusterfs.nix>

[6665]services.glusterfs.tlsSettings.caCert

    Path certificate authority used to sign the cluster certificates.

    Type: path

    Default: null

    Declared by:

    [6666]<nixpkgs/nixos/modules/services/network-filesystems/glusterfs.nix>

[6667]services.glusterfs.tlsSettings.tlsKeyPath

    Path to the private key used for TLS.

    Type: string

    Default: null

    Declared by:

    [6668]<nixpkgs/nixos/modules/services/network-filesystems/glusterfs.nix>

[6669]services.glusterfs.tlsSettings.tlsPem

    Path to the certificate used for TLS.

    Type: path

    Default: null

    Declared by:

    [6670]<nixpkgs/nixos/modules/services/network-filesystems/glusterfs.nix>

[6671]services.glusterfs.useRpcbind

    Enable use of rpcbind. This is required for Gluster's NFS functionality.

    You may want to turn it off to reduce the attack surface for DDoS reflection attacks.

    See https://davelozier.com/glusterfs-and-rpcbind-portmap-ddos-reflection-attacks/ and https:/
    /bugzilla.redhat.com/show_bug.cgi?id=1426842 for details.

    Type: boolean

    Default: true

    Declared by:

    [6672]<nixpkgs/nixos/modules/services/network-filesystems/glusterfs.nix>

[6673]services.gnome.at-spi2-core.enable

    Whether to enable at-spi2-core, a service for the Assistive Technologies available on the
    GNOME platform.

    Enable this if you get the error or warning The name org.a11y.Bus was not provided by any
    .service files.

    Type: boolean

    Default: false

    Declared by:

    [6674]<nixpkgs/nixos/modules/services/desktops/gnome/at-spi2-core.nix>

[6675]services.gnome.chrome-gnome-shell.enable

    Whether to enable Chrome GNOME Shell native host connector, a DBus service allowing to
    install GNOME Shell extensions from a web browser. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6676]<nixpkgs/nixos/modules/services/desktops/gnome/chrome-gnome-shell.nix>

[6677]services.gnome.core-developer-tools.enable

    Whether to enable GNOME core developer tools.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6678]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[6679]services.gnome.core-os-services.enable

    Whether to enable essential services for GNOME3.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6680]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[6681]services.gnome.core-shell.enable

    Whether to enable GNOME Shell services.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6682]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[6683]services.gnome.core-utilities.enable

    Whether to enable GNOME core utilities.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6684]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[6685]services.gnome.evolution-data-server.enable

    Whether to enable Evolution Data Server, a collection of services for storing addressbooks
    and calendars..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6686]<nixpkgs/nixos/modules/services/desktops/gnome/evolution-data-server.nix>

[6687]services.gnome.evolution-data-server.plugins

    Plugins for Evolution Data Server.

    Type: list of packages

    Default: [ ]

    Declared by:

    [6688]<nixpkgs/nixos/modules/services/desktops/gnome/evolution-data-server.nix>

[6689]services.gnome.experimental-features.realtime-scheduling

    Makes mutter (which propagates to gnome-shell) request a low priority real-time scheduling
    which is only available on the wayland session. To enable this experimental feature it
    requires a restart of the compositor. Note that enabling this option only enables the 
    capability for realtime-scheduling to be used. It doesn't automatically set the gsetting so
    that mutter actually uses realtime-scheduling. This would require adding rt-scheduler to /org
    /gnome/mutter/experimental-features with dconf-editor. You cannot use extraGSettingsOverrides
    because that will only change the default value of the setting.

    Please be aware of these known issues with the feature in nixos:

      □ [6690]NixOS/nixpkgs#90201

      □ [6691]NixOS/nixpkgs#86730

    Type: boolean

    Default: false

    Declared by:

    [6692]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[6693]services.gnome.games.enable

    Whether to enable GNOME games.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6694]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[6695]services.gnome.glib-networking.enable

    Whether to enable network extensions for GLib.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6696]<nixpkgs/nixos/modules/services/desktops/gnome/glib-networking.nix>

[6697]services.gnome.gnome-initial-setup.enable

    Whether to enable GNOME Initial Setup, a Simple, easy, and safe way to prepare a new system.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6698]<nixpkgs/nixos/modules/services/desktops/gnome/gnome-initial-setup.nix>

[6699]services.gnome.gnome-keyring.enable

    Whether to enable GNOME Keyring daemon, a service designed to take care of the user's
    security credentials, such as user names and passwords.

    Type: boolean

    Default: false

    Declared by:

    [6700]<nixpkgs/nixos/modules/services/desktops/gnome/gnome-keyring.nix>

[6701]services.gnome.gnome-online-accounts.enable

    Whether to enable GNOME Online Accounts daemon, a service that provides a single sign-on
    framework for the GNOME desktop.

    Type: boolean

    Default: false

    Declared by:

    [6702]<nixpkgs/nixos/modules/services/desktops/gnome/gnome-online-accounts.nix>

[6703]services.gnome.gnome-online-miners.enable

    Whether to enable GNOME Online Miners, a service that crawls through your online content.

    Type: boolean

    Default: false

    Declared by:

    [6704]<nixpkgs/nixos/modules/services/desktops/gnome/gnome-online-miners.nix>

[6705]services.gnome.gnome-remote-desktop.enable

    Whether to enable Remote Desktop support using Pipewire.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6706]<nixpkgs/nixos/modules/services/desktops/gnome/gnome-remote-desktop.nix>

[6707]services.gnome.gnome-settings-daemon.enable

    Whether to enable GNOME Settings Daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6708]<nixpkgs/nixos/modules/services/desktops/gnome/gnome-settings-daemon.nix>

[6709]services.gnome.gnome-user-share.enable

    Whether to enable GNOME User Share, a user-level file sharing service for GNOME.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6710]<nixpkgs/nixos/modules/services/desktops/gnome/gnome-user-share.nix>

[6711]services.gnome.rygel.enable

    Whether to enable Rygel UPnP Mediaserver.

    You will need to also allow UPnP connections in firewall, see the following [6712]comment.

    Type: boolean

    Default: false

    Declared by:

    [6713]<nixpkgs/nixos/modules/services/desktops/gnome/rygel.nix>

[6714]services.gnome.sushi.enable

    Whether to enable Sushi, a quick previewer for nautilus.

    Type: boolean

    Default: false

    Declared by:

    [6715]<nixpkgs/nixos/modules/services/desktops/gnome/sushi.nix>

[6716]services.gnome.tracker.enable

    Whether to enable Tracker services, a search engine, search tool and metadata storage system.

    Type: boolean

    Default: false

    Declared by:

    [6717]<nixpkgs/nixos/modules/services/desktops/gnome/tracker.nix>

[6718]services.gnome.tracker-miners.enable

    Whether to enable Tracker miners, indexing services for Tracker search engine and metadata
    storage system.

    Type: boolean

    Default: false

    Declared by:

    [6719]<nixpkgs/nixos/modules/services/desktops/gnome/tracker-miners.nix>

[6720]services.gnunet.enable

    Whether to run the GNUnet daemon. GNUnet is GNU's anonymous peer-to-peer communication and
    file sharing framework.

    Type: boolean

    Default: false

    Declared by:

    [6721]<nixpkgs/nixos/modules/services/networking/gnunet.nix>

[6722]services.gnunet.package

    Overridable attribute of the gnunet package to use.

    Type: package

    Default: "pkgs.gnunet"

    Example:

    pkgs.gnunet_git

    Declared by:

    [6723]<nixpkgs/nixos/modules/services/networking/gnunet.nix>

[6724]services.gnunet.extraOptions

    Additional options that will be copied verbatim in `gnunet.conf'. See `gnunet.conf(5)' for
    details.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [6725]<nixpkgs/nixos/modules/services/networking/gnunet.nix>

[6726]services.gnunet.fileSharing.quota

    Maximum file system usage (in MiB) for file sharing.

    Type: signed integer

    Default: 1024

    Declared by:

    [6727]<nixpkgs/nixos/modules/services/networking/gnunet.nix>

[6728]services.gnunet.load.hardNetUpBandwidth

    Hard bandwidth limit (in bits per second) when uploading data.

    Type: signed integer

    Default: 0

    Declared by:

    [6729]<nixpkgs/nixos/modules/services/networking/gnunet.nix>

[6730]services.gnunet.load.maxNetDownBandwidth

    Maximum bandwidth usage (in bits per second) for GNUnet when downloading data.

    Type: signed integer

    Default: 50000

    Declared by:

    [6731]<nixpkgs/nixos/modules/services/networking/gnunet.nix>

[6732]services.gnunet.load.maxNetUpBandwidth

    Maximum bandwidth usage (in bits per second) for GNUnet when downloading data.

    Type: signed integer

    Default: 50000

    Declared by:

    [6733]<nixpkgs/nixos/modules/services/networking/gnunet.nix>

[6734]services.gnunet.tcp.port

    The TCP port for use by GNUnet.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 2086

    Declared by:

    [6735]<nixpkgs/nixos/modules/services/networking/gnunet.nix>

[6736]services.gnunet.udp.port

    The UDP port for use by GNUnet.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 2086

    Declared by:

    [6737]<nixpkgs/nixos/modules/services/networking/gnunet.nix>

[6738]services.go-neb.enable

    Whether to enable Extensible matrix bot written in Go.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6739]<nixpkgs/nixos/modules/services/networking/go-neb.nix>

[6740]services.go-neb.baseUrl

    Public-facing endpoint that can receive webhooks.

    Type: string

    Declared by:

    [6741]<nixpkgs/nixos/modules/services/networking/go-neb.nix>

[6742]services.go-neb.bindAddress

    Port (and optionally address) to listen on.

    Type: string

    Default: ":4050"

    Declared by:

    [6743]<nixpkgs/nixos/modules/services/networking/go-neb.nix>

[6744]services.go-neb.config

    Your config.yaml as a Nix attribute set. See [6745]config.sample.yaml for possible options.

    Type: attribute set

    Declared by:

    [6746]<nixpkgs/nixos/modules/services/networking/go-neb.nix>

[6747]services.go-shadowsocks2.server.enable

    Whether to enable go-shadowsocks2 server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6748]<nixpkgs/nixos/modules/services/networking/go-shadowsocks2.nix>

[6749]services.go-shadowsocks2.server.listenAddress

    Server listen address or URL

    Type: string

    Example: "ss://AEAD_CHACHA20_POLY1305:your-password@:8488"

    Declared by:

    [6750]<nixpkgs/nixos/modules/services/networking/go-shadowsocks2.nix>

[6751]services.gobgpd.enable

    Whether to enable GoBGP Routing Daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6752]<nixpkgs/nixos/modules/services/networking/gobgpd.nix>

[6753]services.gobgpd.settings

    GoBGP configuration. Refer to [6754]https://github.com/osrg/gobgp#documentation for details
    on supported values.

    Type: TOML value

    Default: { }

    Example:

    {
      global = {
        config = {
          as = 64512;
          router-id = "192.168.255.1";
        };
      };
      neighbors = [
        {
          config = {
            neighbor-address = "10.0.255.1";
            peer-as = 65001;
          };
        }
        {
          config = {
            neighbor-address = "10.0.255.2";
            peer-as = 65002;
          };
        }
      ];
    }

    Declared by:

    [6755]<nixpkgs/nixos/modules/services/networking/gobgpd.nix>

[6756]services.gocd-agent.enable

    Whether to enable gocd-agent.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6757]<nixpkgs/nixos/modules/services/continuous-integration/gocd-agent/default.nix>

[6758]services.gocd-agent.packages

    Packages to add to PATH for the Go.CD agent process.

    Type: list of packages

    Default: "[ pkgs.stdenv pkgs.jre pkgs.git config.programs.ssh.package pkgs.nix ]"

    Declared by:

    [6759]<nixpkgs/nixos/modules/services/continuous-integration/gocd-agent/default.nix>

[6760]services.gocd-agent.agentConfig

    Agent registration configuration.

    Type: string

    Default: ""

    Example:

    ''
    agent.auto.register.resources=ant,java
    agent.auto.register.environments=QA,Performance
    agent.auto.register.hostname=Agent01
    ''

    Declared by:

    [6761]<nixpkgs/nixos/modules/services/continuous-integration/gocd-agent/default.nix>

[6762]services.gocd-agent.environment

    Additional environment variables to be passed to the Go.CD agent process. As a base
    environment, Go.CD agent receives NIX_PATH from environment.sessionVariables, NIX_REMOTE is
    set to "daemon".

    Type: attribute set of strings

    Default: { }

    Declared by:

    [6763]<nixpkgs/nixos/modules/services/continuous-integration/gocd-agent/default.nix>

[6764]services.gocd-agent.extraGroups

    List of extra groups that the "gocd-agent" user should be a part of.

    Type: list of strings

    Default: [ ]

    Example: [ "wheel" "docker" ]

    Declared by:

    [6765]<nixpkgs/nixos/modules/services/continuous-integration/gocd-agent/default.nix>

[6766]services.gocd-agent.extraOptions

    Specifies additional command line arguments to pass to Go.CD agent java process. Example
    contains debug and gcLog arguments.

    Type: list of strings

    Default: [ ]

    Example: [ "-X debug" "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006"
    "-verbose:gc" "-Xloggc:go-agent-gc.log" "-XX:+PrintGCTimeStamps"
    "-XX:+PrintTenuringDistribution" "-XX:+PrintGCDetails" "-XX:+PrintGC" ]

    Declared by:

    [6767]<nixpkgs/nixos/modules/services/continuous-integration/gocd-agent/default.nix>

[6768]services.gocd-agent.goServer

    URL of the GoCD Server to attach the Go.CD Agent to.

    Type: string

    Default: "https://127.0.0.1:8154/go"

    Declared by:

    [6769]<nixpkgs/nixos/modules/services/continuous-integration/gocd-agent/default.nix>

[6770]services.gocd-agent.group

    If the default user "gocd-agent" is configured then this is the primary group of that user.

    Type: string

    Default: "gocd-agent"

    Declared by:

    [6771]<nixpkgs/nixos/modules/services/continuous-integration/gocd-agent/default.nix>

[6772]services.gocd-agent.initialJavaHeapSize

    Specifies the initial java heap memory size for the Go.CD agent java process.

    Type: string

    Default: "128m"

    Declared by:

    [6773]<nixpkgs/nixos/modules/services/continuous-integration/gocd-agent/default.nix>

[6774]services.gocd-agent.maxJavaHeapMemory

    Specifies the java maximum heap memory size for the Go.CD agent java process.

    Type: string

    Default: "256m"

    Declared by:

    [6775]<nixpkgs/nixos/modules/services/continuous-integration/gocd-agent/default.nix>

[6776]services.gocd-agent.startupOptions

    Specifies startup command line arguments to pass to Go.CD agent java process.

    Type: list of strings

    Default: [ "-Xms128m" "-Xmx256m" "-Djava.io.tmpdir=/tmp" "-Dcruise.console.publish.interval=
    10" "-Djava.security.egd=file:/dev/./urandom" ]

    Declared by:

    [6777]<nixpkgs/nixos/modules/services/continuous-integration/gocd-agent/default.nix>

[6778]services.gocd-agent.user

    User the Go.CD agent should execute under.

    Type: string

    Default: "gocd-agent"

    Declared by:

    [6779]<nixpkgs/nixos/modules/services/continuous-integration/gocd-agent/default.nix>

[6780]services.gocd-agent.workDir

    Specifies the working directory in which the Go.CD agent java archive resides.

    Type: string

    Default: "/var/lib/go-agent"

    Declared by:

    [6781]<nixpkgs/nixos/modules/services/continuous-integration/gocd-agent/default.nix>

[6782]services.gocd-server.enable

    Whether to enable gocd-server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6783]<nixpkgs/nixos/modules/services/continuous-integration/gocd-server/default.nix>

[6784]services.gocd-server.packages

    Packages to add to PATH for the Go.CD server's process.

    Type: list of packages

    Default: "[ pkgs.stdenv pkgs.jre pkgs.git config.programs.ssh.package pkgs.nix ]"

    Declared by:

    [6785]<nixpkgs/nixos/modules/services/continuous-integration/gocd-server/default.nix>

[6786]services.gocd-server.environment

    Additional environment variables to be passed to the gocd-server process. As a base
    environment, gocd-server receives NIX_PATH from environment.sessionVariables, NIX_REMOTE is
    set to "daemon".

    Type: attribute set of strings

    Default: { }

    Declared by:

    [6787]<nixpkgs/nixos/modules/services/continuous-integration/gocd-server/default.nix>

[6788]services.gocd-server.extraGroups

    List of extra groups that the "gocd-server" user should be a part of.

    Type: list of strings

    Default: [ ]

    Example: [ "wheel" "docker" ]

    Declared by:

    [6789]<nixpkgs/nixos/modules/services/continuous-integration/gocd-server/default.nix>

[6790]services.gocd-server.extraOptions

    Specifies additional command line arguments to pass to Go.CD server's java process. Example
    contains debug and gcLog arguments.

    Type: list of strings

    Default: [ ]

    Example: [ "-X debug" "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"
    "-verbose:gc" "-Xloggc:go-server-gc.log" "-XX:+PrintGCTimeStamps"
    "-XX:+PrintTenuringDistribution" "-XX:+PrintGCDetails" "-XX:+PrintGC" ]

    Declared by:

    [6791]<nixpkgs/nixos/modules/services/continuous-integration/gocd-server/default.nix>

[6792]services.gocd-server.group

    If the default user "gocd-server" is configured then this is the primary group of that user.

    Type: string

    Default: "gocd-server"

    Declared by:

    [6793]<nixpkgs/nixos/modules/services/continuous-integration/gocd-server/default.nix>

[6794]services.gocd-server.initialJavaHeapSize

    Specifies the initial java heap memory size for the Go.CD server's java process.

    Type: string

    Default: "512m"

    Declared by:

    [6795]<nixpkgs/nixos/modules/services/continuous-integration/gocd-server/default.nix>

[6796]services.gocd-server.listenAddress

    Specifies the bind address on which the Go.CD server HTTP interface listens.

    Type: string

    Default: "0.0.0.0"

    Example: "localhost"

    Declared by:

    [6797]<nixpkgs/nixos/modules/services/continuous-integration/gocd-server/default.nix>

[6798]services.gocd-server.maxJavaHeapMemory

    Specifies the java maximum heap memory size for the Go.CD server's java process.

    Type: string

    Default: "1024m"

    Declared by:

    [6799]<nixpkgs/nixos/modules/services/continuous-integration/gocd-server/default.nix>

[6800]services.gocd-server.port

    Specifies port number on which the Go.CD server HTTP interface listens.

    Type: signed integer

    Default: 8153

    Declared by:

    [6801]<nixpkgs/nixos/modules/services/continuous-integration/gocd-server/default.nix>

[6802]services.gocd-server.sslPort

    Specifies port number on which the Go.CD server HTTPS interface listens.

    Type: signed integer

    Default: 8154

    Declared by:

    [6803]<nixpkgs/nixos/modules/services/continuous-integration/gocd-server/default.nix>

[6804]services.gocd-server.startupOptions

    Specifies startup command line arguments to pass to Go.CD server java process.

    Type: list of strings

    Default: [ "-Xms512m" "-Xmx1024m" "-Dcruise.listen.host=0.0.0.0" "-Duser.language=en"
    "-Djruby.rack.request.size.threshold.bytes=30000000" "-Duser.country=US" "-Dcruise.config.dir
    =/var/lib/go-server/conf" "-Dcruise.config.file=/var/lib/go-server/conf/cruise-config.xml"
    "-Dcruise.server.port=8153" "-Dcruise.server.ssl.port=8154" ]

    Declared by:

    [6805]<nixpkgs/nixos/modules/services/continuous-integration/gocd-server/default.nix>

[6806]services.gocd-server.user

    User the Go.CD server should execute under.

    Type: string

    Default: "gocd-server"

    Declared by:

    [6807]<nixpkgs/nixos/modules/services/continuous-integration/gocd-server/default.nix>

[6808]services.gocd-server.workDir

    Specifies the working directory in which the Go.CD server java archive resides.

    Type: string

    Default: "/var/lib/go-server"

    Declared by:

    [6809]<nixpkgs/nixos/modules/services/continuous-integration/gocd-server/default.nix>

[6810]services.gogoclient.enable

    Enable the gogoCLIENT IPv6 tunnel.

    Type: boolean

    Default: false

    Declared by:

    [6811]<nixpkgs/nixos/modules/services/networking/gogoclient.nix>

[6812]services.gogoclient.autorun

    Whether to automatically start the tunnel.

    Type: boolean

    Default: true

    Declared by:

    [6813]<nixpkgs/nixos/modules/services/networking/gogoclient.nix>

[6814]services.gogoclient.password

    Path to a file (as a string), containing your gogoNET password, if any.

    Type: string

    Default: ""

    Declared by:

    [6815]<nixpkgs/nixos/modules/services/networking/gogoclient.nix>

[6816]services.gogoclient.server

    The Gateway6 server to be used.

    Type: string

    Default: "anonymous.freenet6.net"

    Example: "broker.freenet6.net"

    Declared by:

    [6817]<nixpkgs/nixos/modules/services/networking/gogoclient.nix>

[6818]services.gogoclient.username

    Your Gateway6 login name, if any.

    Type: string

    Default: ""

    Declared by:

    [6819]<nixpkgs/nixos/modules/services/networking/gogoclient.nix>

[6820]services.gogs.enable

    Enable Go Git Service.

    Type: boolean

    Default: false

    Declared by:

    [6821]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6822]services.gogs.appName

    Application name.

    Type: string

    Default: "Gogs: Go Git Service"

    Declared by:

    [6823]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6824]services.gogs.cookieSecure

    Marks session cookies as "secure" as a hint for browsers to only send them via HTTPS. This
    option is recommend, if Gogs is being served over HTTPS.

    Type: boolean

    Default: false

    Declared by:

    [6825]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6826]services.gogs.database.host

    Database host address.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [6827]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6828]services.gogs.database.name

    Database name.

    Type: string

    Default: "gogs"

    Declared by:

    [6829]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6830]services.gogs.database.password

    The password corresponding to database.user. Warning: this is stored in cleartext in the Nix
    store! Use database.passwordFile instead.

    Type: string

    Default: ""

    Declared by:

    [6831]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6832]services.gogs.database.passwordFile

    A file containing the password corresponding to database.user.

    Type: null or path

    Default: null

    Example: "/run/keys/gogs-dbpassword"

    Declared by:

    [6833]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6834]services.gogs.database.path

    Path to the sqlite3 database file.

    Type: string

    Default: "/var/lib/gogs/data/gogs.db"

    Declared by:

    [6835]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6836]services.gogs.database.port

    Database host port.

    Type: signed integer

    Default: 3306

    Declared by:

    [6837]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6838]services.gogs.database.type

    Database engine to use.

    Type: one of "sqlite3", "mysql", "postgres"

    Default: "sqlite3"

    Example: "mysql"

    Declared by:

    [6839]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6840]services.gogs.database.user

    Database user.

    Type: string

    Default: "gogs"

    Declared by:

    [6841]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6842]services.gogs.domain

    Domain name of your server.

    Type: string

    Default: "localhost"

    Declared by:

    [6843]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6844]services.gogs.extraConfig

    Configuration lines appended to the generated Gogs configuration file.

    Type: string

    Default: ""

    Declared by:

    [6845]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6846]services.gogs.group

    Group account under which Gogs runs.

    Type: string

    Default: "gogs"

    Declared by:

    [6847]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6848]services.gogs.httpAddress

    HTTP listen address.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [6849]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6850]services.gogs.httpPort

    HTTP listen port.

    Type: signed integer

    Default: 3000

    Declared by:

    [6851]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6852]services.gogs.repositoryRoot

    Path to the git repositories.

    Type: string

    Default: "/var/lib/gogs/repositories"

    Declared by:

    [6853]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6854]services.gogs.rootUrl

    Full public URL of Gogs server.

    Type: string

    Default: "http://localhost:3000/"

    Declared by:

    [6855]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6856]services.gogs.stateDir

    Gogs data directory.

    Type: string

    Default: "/var/lib/gogs"

    Declared by:

    [6857]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6858]services.gogs.useWizard

    Do not generate a configuration and use Gogs' installation wizard instead. The first
    registered user will be administrator.

    Type: boolean

    Default: false

    Declared by:

    [6859]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6860]services.gogs.user

    User account under which Gogs runs.

    Type: string

    Default: "gogs"

    Declared by:

    [6861]<nixpkgs/nixos/modules/services/misc/gogs.nix>

[6862]services.gollum.enable

    Enable the Gollum service.

    Type: boolean

    Default: false

    Declared by:

    [6863]<nixpkgs/nixos/modules/services/misc/gollum.nix>

[6864]services.gollum.address

    IP address on which the web server will listen.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [6865]<nixpkgs/nixos/modules/services/misc/gollum.nix>

[6866]services.gollum.allowUploads

    Enable uploads of external files

    Type: null or one of "dir", "page"

    Default: null

    Declared by:

    [6867]<nixpkgs/nixos/modules/services/misc/gollum.nix>

[6868]services.gollum.branch

    Git branch to serve

    Type: string

    Default: "master"

    Example: "develop"

    Declared by:

    [6869]<nixpkgs/nixos/modules/services/misc/gollum.nix>

[6870]services.gollum.emoji

    Parse and interpret emoji tags

    Type: boolean

    Default: false

    Declared by:

    [6871]<nixpkgs/nixos/modules/services/misc/gollum.nix>

[6872]services.gollum.extraConfig

    Content of the configuration file

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [6873]<nixpkgs/nixos/modules/services/misc/gollum.nix>

[6874]services.gollum.h1-title

    Use the first h1 as page title

    Type: boolean

    Default: false

    Declared by:

    [6875]<nixpkgs/nixos/modules/services/misc/gollum.nix>

[6876]services.gollum.mathjax

    Enable support for math rendering using MathJax

    Type: boolean

    Default: false

    Declared by:

    [6877]<nixpkgs/nixos/modules/services/misc/gollum.nix>

[6878]services.gollum.port

    Port on which the web server will run.

    Type: signed integer

    Default: 4567

    Declared by:

    [6879]<nixpkgs/nixos/modules/services/misc/gollum.nix>

[6880]services.gollum.stateDir

    Specifies the path of the repository directory. If it does not exist, Gollum will create it
    on startup.

    Type: path

    Default: "/var/lib/gollum"

    Declared by:

    [6881]<nixpkgs/nixos/modules/services/misc/gollum.nix>

[6882]services.gotify.enable

    Whether to enable Gotify webserver.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6883]<nixpkgs/nixos/modules/services/web-apps/gotify-server.nix>

[6884]services.gotify.port

    Port the server listens to.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Declared by:

    [6885]<nixpkgs/nixos/modules/services/web-apps/gotify-server.nix>

[6886]services.gotify.stateDirectoryName

    The name of the directory below /var/lib where gotify stores its runtime data.

    Type: string

    Default: "gotify-server"

    Declared by:

    [6887]<nixpkgs/nixos/modules/services/web-apps/gotify-server.nix>

[6888]services.gpm.enable

    Whether to enable GPM, the General Purpose Mouse daemon, which enables mouse support in
    virtual consoles.

    Type: boolean

    Default: false

    Declared by:

    [6889]<nixpkgs/nixos/modules/services/ttys/gpm.nix>

[6890]services.gpm.protocol

    Mouse protocol to use.

    Type: string

    Default: "ps/2"

    Declared by:

    [6891]<nixpkgs/nixos/modules/services/ttys/gpm.nix>

[6892]services.gpsd.enable

    Whether to enable `gpsd', a GPS service daemon.

    Type: boolean

    Default: false

    Declared by:

    [6893]<nixpkgs/nixos/modules/services/misc/gpsd.nix>

[6894]services.gpsd.debugLevel

    The debugging level.

    Type: signed integer

    Default: 0

    Declared by:

    [6895]<nixpkgs/nixos/modules/services/misc/gpsd.nix>

[6896]services.gpsd.device

    A device may be a local serial device for GPS input, or a URL of the form: [{dgpsip|ntrip}:/
    /][user:passwd@]host[:port][/stream] in which case it specifies an input source for DGPS or
    ntrip data.

    Type: string

    Default: "/dev/ttyUSB0"

    Declared by:

    [6897]<nixpkgs/nixos/modules/services/misc/gpsd.nix>

[6898]services.gpsd.nowait

    don't wait for client connects to poll GPS

    Type: boolean

    Default: false

    Declared by:

    [6899]<nixpkgs/nixos/modules/services/misc/gpsd.nix>

[6900]services.gpsd.port

    The port where to listen for TCP connections.

    Type: signed integer

    Default: 2947

    Declared by:

    [6901]<nixpkgs/nixos/modules/services/misc/gpsd.nix>

[6902]services.gpsd.readonly

    Whether to enable the broken-device-safety, otherwise known as read-only mode. Some popular
    bluetooth and USB receivers lock up or become totally inaccessible when probed or
    reconfigured. This switch prevents gpsd from writing to a receiver. This means that gpsd
    cannot configure the receiver for optimal performance, but it also means that gpsd cannot
    break the receiver. A better solution would be for Bluetooth to not be so fragile. A platform
    independent method to identify serial-over-Bluetooth devices would also be nice.

    Type: boolean

    Default: true

    Declared by:

    [6903]<nixpkgs/nixos/modules/services/misc/gpsd.nix>

[6904]services.grafana.enable

    Whether to enable grafana.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6905]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6906]services.grafana.package

    Package to use.

    Type: package

    Default: "pkgs.grafana"

    Declared by:

    [6907]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6908]services.grafana.addr

    Listening address.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [6909]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6910]services.grafana.analytics.reporting.enable

    Whether to allow anonymous usage reporting to stats.grafana.net.

    Type: boolean

    Default: true

    Declared by:

    [6911]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6912]services.grafana.auth.anonymous.enable

    Whether to allow anonymous access.

    Type: boolean

    Default: false

    Declared by:

    [6913]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6914]services.grafana.auth.anonymous.org_name

    Which organization to allow anonymous access to.

    Type: string

    Default: "Main Org."

    Declared by:

    [6915]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6916]services.grafana.auth.anonymous.org_role

    Which role anonymous users have in the organization.

    Type: string

    Default: "Viewer"

    Declared by:

    [6917]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6918]services.grafana.auth.google.enable

    Whether to allow Google OAuth2.

    Type: boolean

    Default: false

    Declared by:

    [6919]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6920]services.grafana.auth.google.allowSignUp

    Whether to allow sign up with Google OAuth2.

    Type: boolean

    Default: false

    Declared by:

    [6921]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6922]services.grafana.auth.google.clientId

    Google OAuth2 client ID.

    Type: string

    Default: ""

    Declared by:

    [6923]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6924]services.grafana.auth.google.clientSecretFile

    Google OAuth2 client secret.

    Type: null or path

    Default: null

    Declared by:

    [6925]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6926]services.grafana.certFile

    Cert file for ssl.

    Type: string

    Default: ""

    Declared by:

    [6927]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6928]services.grafana.certKey

    Cert key for ssl.

    Type: string

    Default: ""

    Declared by:

    [6929]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6930]services.grafana.dataDir

    Data directory.

    Type: path

    Default: "/var/lib/grafana"

    Declared by:

    [6931]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6932]services.grafana.database.connMaxLifetime

    Sets the maximum amount of time (in seconds) a connection may be reused. For MySQL this
    setting should be shorter than the `wait_timeout' variable.

    Type: signed integer or one of "unlimited"

    Default: "unlimited"

    Example: 14400

    Declared by:

    [6933]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6934]services.grafana.database.host

    Database host.

    Type: string

    Default: "127.0.0.1:3306"

    Declared by:

    [6935]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6936]services.grafana.database.name

    Database name.

    Type: string

    Default: "grafana"

    Declared by:

    [6937]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6938]services.grafana.database.password

    Database password. This option is mutual exclusive with the passwordFile option.

    Type: string

    Default: ""

    Declared by:

    [6939]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6940]services.grafana.database.passwordFile

    File that containts the database password. This option is mutual exclusive with the password
    option.

    Type: null or path

    Default: null

    Declared by:

    [6941]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6942]services.grafana.database.path

    Database path.

    Type: path

    Default: "/var/lib/grafana/data/grafana.db"

    Declared by:

    [6943]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6944]services.grafana.database.type

    Database type.

    Type: one of "mysql", "sqlite3", "postgres"

    Default: "sqlite3"

    Declared by:

    [6945]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6946]services.grafana.database.user

    Database user.

    Type: string

    Default: "root"

    Declared by:

    [6947]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6948]services.grafana.declarativePlugins

    If non-null, then a list of packages containing Grafana plugins to install. If set, plugins
    cannot be manually installed.

    Type: null or list of paths

    Default: null

    Example:

    with pkgs.grafanaPlugins; [ grafana-piechart-panel ]

    Declared by:

    [6949]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6950]services.grafana.domain

    The public facing domain name used to access grafana from a browser.

    Type: string

    Default: "localhost"

    Declared by:

    [6951]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6952]services.grafana.extraOptions

    Extra configuration options passed as env variables as specified in [6953]documentation, but
    without GF_ prefix

    Type: attribute set of string or paths

    Default: { }

    Declared by:

    [6954]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6955]services.grafana.port

    Listening port.

    Type: signed integer

    Default: 3000

    Declared by:

    [6956]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6957]services.grafana.protocol

    Which protocol to listen.

    Type: one of "http", "https", "socket"

    Default: "http"

    Declared by:

    [6958]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6959]services.grafana.provision.enable

    Whether to enable provision.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [6960]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6961]services.grafana.provision.dashboards

    Grafana dashboard configuration.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [6962]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6963]services.grafana.provision.dashboards.*.disableDeletion

    Disable deletion when JSON file is removed.

    Type: boolean

    Default: false

    Declared by:

    [6964]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6965]services.grafana.provision.dashboards.*.folder

    Add dashboards to the specified folder.

    Type: string

    Default: ""

    Declared by:

    [6966]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6967]services.grafana.provision.dashboards.*.name

    Provider name.

    Type: string

    Default: "default"

    Declared by:

    [6968]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6969]services.grafana.provision.dashboards.*.options.path

    Path grafana will watch for dashboards.

    Type: path

    Declared by:

    [6970]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6971]services.grafana.provision.dashboards.*.orgId

    Organization ID.

    Type: signed integer

    Default: 1

    Declared by:

    [6972]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6973]services.grafana.provision.dashboards.*.type

    Dashboard provider type.

    Type: string

    Default: "file"

    Declared by:

    [6974]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6975]services.grafana.provision.dashboards.*.updateIntervalSeconds

    How often Grafana will scan for changed dashboards.

    Type: signed integer

    Default: 10

    Declared by:

    [6976]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6977]services.grafana.provision.datasources

    Grafana datasources configuration.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [6978]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6979]services.grafana.provision.datasources.*.access

    Access mode. proxy or direct (Server or Browser in the UI). Required.

    Type: one of "proxy", "direct"

    Default: "proxy"

    Declared by:

    [6980]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6981]services.grafana.provision.datasources.*.basicAuth

    Enable/disable basic auth.

    Type: null or boolean

    Default: null

    Declared by:

    [6982]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6983]services.grafana.provision.datasources.*.basicAuthPassword

    Basic auth password.

    Type: null or string

    Default: null

    Declared by:

    [6984]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6985]services.grafana.provision.datasources.*.basicAuthUser

    Basic auth username.

    Type: null or string

    Default: null

    Declared by:

    [6986]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6987]services.grafana.provision.datasources.*.database

    Database name, if used.

    Type: null or string

    Default: null

    Declared by:

    [6988]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6989]services.grafana.provision.datasources.*.editable

    Allow users to edit datasources from the UI.

    Type: boolean

    Default: false

    Declared by:

    [6990]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6991]services.grafana.provision.datasources.*.isDefault

    Mark as default datasource. Max one per org.

    Type: boolean

    Default: false

    Declared by:

    [6992]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6993]services.grafana.provision.datasources.*.jsonData

    Datasource specific configuration.

    Type: null or attribute set

    Default: null

    Declared by:

    [6994]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6995]services.grafana.provision.datasources.*.name

    Name of the datasource. Required.

    Type: string

    Declared by:

    [6996]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6997]services.grafana.provision.datasources.*.orgId

    Org id. will default to orgId 1 if not specified.

    Type: signed integer

    Default: 1

    Declared by:

    [6998]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[6999]services.grafana.provision.datasources.*.password

    Database password, if used.

    Type: null or string

    Default: null

    Declared by:

    [7000]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7001]services.grafana.provision.datasources.*.secureJsonData

    Datasource specific secure configuration.

    Type: null or attribute set

    Default: null

    Declared by:

    [7002]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7003]services.grafana.provision.datasources.*.type

    Datasource type. Required.

    Type: one of "graphite", "prometheus", "cloudwatch", "elasticsearch", "influxdb", "opentsdb",
    "mysql", "mssql", "postgres", "loki"

    Declared by:

    [7004]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7005]services.grafana.provision.datasources.*.url

    Url of the datasource.

    Type: string

    Declared by:

    [7006]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7007]services.grafana.provision.datasources.*.user

    Database user, if used.

    Type: null or string

    Default: null

    Declared by:

    [7008]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7009]services.grafana.provision.datasources.*.version

    Version.

    Type: signed integer

    Default: 1

    Declared by:

    [7010]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7011]services.grafana.provision.datasources.*.withCredentials

    Enable/disable with credentials headers.

    Type: boolean

    Default: false

    Declared by:

    [7012]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7013]services.grafana.provision.notifiers

    Grafana notifier configuration.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [7014]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7015]services.grafana.provision.notifiers.*.disable_resolve_message

    Turn off the message that sends when an alert returns to OK.

    Type: boolean

    Default: false

    Declared by:

    [7016]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7017]services.grafana.provision.notifiers.*.frequency

    How frequently should the notifier be sent reminders.

    Type: string

    Default: "5m"

    Declared by:

    [7018]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7019]services.grafana.provision.notifiers.*.is_default

    Is the default notifier.

    Type: boolean

    Default: false

    Declared by:

    [7020]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7021]services.grafana.provision.notifiers.*.name

    Notifier name.

    Type: string

    Default: "default"

    Declared by:

    [7022]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7023]services.grafana.provision.notifiers.*.org_id

    Organization ID.

    Type: signed integer

    Default: 1

    Declared by:

    [7024]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7025]services.grafana.provision.notifiers.*.org_name

    Organization name.

    Type: string

    Default: "Main Org."

    Declared by:

    [7026]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7027]services.grafana.provision.notifiers.*.secure_settings

    Secure settings for the notifier type.

    Type: null or attribute set

    Default: null

    Declared by:

    [7028]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7029]services.grafana.provision.notifiers.*.send_reminder

    Should the notifier be sent reminder notifications while alerts continue to fire.

    Type: boolean

    Default: true

    Declared by:

    [7030]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7031]services.grafana.provision.notifiers.*.settings

    Settings for the notifier type.

    Type: null or attribute set

    Default: null

    Declared by:

    [7032]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7033]services.grafana.provision.notifiers.*.type

    Notifier type.

    Type: one of "dingding", "discord", "email", "googlechat", "hipchat", "kafka", "line",
    "teams", "opsgenie", "pagerduty", "prometheus-alertmanager", "pushover", "sensu", "sensugo",
    "slack", "telegram", "threema", "victorops", "webhook"

    Declared by:

    [7034]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7035]services.grafana.provision.notifiers.*.uid

    Unique notifier identifier.

    Type: string

    Declared by:

    [7036]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7037]services.grafana.rootUrl

    Full public facing url.

    Type: string

    Default: "%(protocol)s://%(domain)s:%(http_port)s/"

    Declared by:

    [7038]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7039]services.grafana.security.adminPassword

    Default admin password. This option is mutual exclusive with the adminPasswordFile option.

    Type: string

    Default: "admin"

    Declared by:

    [7040]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7041]services.grafana.security.adminPasswordFile

    Default admin password. This option is mutual exclusive with the adminPassword option.

    Type: null or path

    Default: null

    Declared by:

    [7042]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7043]services.grafana.security.adminUser

    Default admin username.

    Type: string

    Default: "admin"

    Declared by:

    [7044]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7045]services.grafana.security.secretKey

    Secret key used for signing.

    Type: string

    Default: "SW2YcwTIb9zpOOhoPsMm"

    Declared by:

    [7046]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7047]services.grafana.security.secretKeyFile

    Secret key used for signing.

    Type: null or path

    Default: null

    Declared by:

    [7048]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7049]services.grafana.smtp.enable

    Whether to enable smtp.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7050]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7051]services.grafana.smtp.fromAddress

    Email address used for sending.

    Type: string

    Default: "admin@grafana.localhost"

    Declared by:

    [7052]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7053]services.grafana.smtp.host

    Host to connect to.

    Type: string

    Default: "localhost:25"

    Declared by:

    [7054]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7055]services.grafana.smtp.password

    Password used for authentication. This option is mutual exclusive with the passwordFile
    option.

    Type: string

    Default: ""

    Declared by:

    [7056]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7057]services.grafana.smtp.passwordFile

    Password used for authentication. This option is mutual exclusive with the password option.

    Type: null or path

    Default: null

    Declared by:

    [7058]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7059]services.grafana.smtp.user

    User used for authentication.

    Type: string

    Default: ""

    Declared by:

    [7060]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7061]services.grafana.socket

    Listening socket.

    Type: string

    Default: "/run/grafana/grafana.sock"

    Declared by:

    [7062]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7063]services.grafana.staticRootPath

    Root path for static assets.

    Type: string

    Default: "\${pkgs.grafana}/share/grafana/public"

    Declared by:

    [7064]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7065]services.grafana.users.allowOrgCreate

    Whether user is allowed to create organizations.

    Type: boolean

    Default: false

    Declared by:

    [7066]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7067]services.grafana.users.allowSignUp

    Disable user signup / registration.

    Type: boolean

    Default: false

    Declared by:

    [7068]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7069]services.grafana.users.autoAssignOrg

    Whether to automatically assign new users to default org.

    Type: boolean

    Default: true

    Declared by:

    [7070]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7071]services.grafana.users.autoAssignOrgRole

    Default role new users will be auto assigned.

    Type: one of "Viewer", "Editor"

    Default: "Viewer"

    Declared by:

    [7072]<nixpkgs/nixos/modules/services/monitoring/grafana.nix>

[7073]services.grafana-image-renderer.enable

    Whether to enable grafana-image-renderer.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7074]<nixpkgs/nixos/modules/services/monitoring/grafana-image-renderer.nix>

[7075]services.grafana-image-renderer.chromium

    The chromium to use for image rendering.

    Type: package

    Declared by:

    [7076]<nixpkgs/nixos/modules/services/monitoring/grafana-image-renderer.nix>

[7077]services.grafana-image-renderer.provisionGrafana

    Whether to enable Grafana configuration for grafana-image-renderer.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7078]<nixpkgs/nixos/modules/services/monitoring/grafana-image-renderer.nix>

[7079]services.grafana-image-renderer.settings

    Configuration attributes for grafana-image-renderer.

    See [7080]https://github.com/grafana/grafana-image-renderer/blob/
    ce1f81438e5f69c7fd7c73ce08bab624c4c92e25/default.json for supported values.

    Type: JSON value

    Default: { }

    Declared by:

    [7081]<nixpkgs/nixos/modules/services/monitoring/grafana-image-renderer.nix>

[7082]services.grafana-image-renderer.settings.rendering.args

    List of CLI flags passed to chromium.

    Type: list of strings

    Default: [ "--no-sandbox" ]

    Declared by:

    [7083]<nixpkgs/nixos/modules/services/monitoring/grafana-image-renderer.nix>

[7084]services.grafana-image-renderer.settings.rendering.height

    Height of the PNG used to display the alerting graph.

    Type: positive integer, meaning >0

    Default: 500

    Declared by:

    [7085]<nixpkgs/nixos/modules/services/monitoring/grafana-image-renderer.nix>

[7086]services.grafana-image-renderer.settings.rendering.mode

    Rendering mode of grafana-image-renderer:

      □ default: Creates on browser-instance per rendering request.

      □ reusable: One browser instance will be started and reused for each rendering request.

      □ clustered: allows to precisely configure how many browser-instances are supposed to be
        used. The values for that mode can be declared in rendering.clustering.

    Type: one of "default", "reusable", "clustered"

    Default: "default"

    Declared by:

    [7087]<nixpkgs/nixos/modules/services/monitoring/grafana-image-renderer.nix>

[7088]services.grafana-image-renderer.settings.rendering.width

    Width of the PNG used to display the alerting graph.

    Type: positive integer, meaning >0

    Default: 1000

    Declared by:

    [7089]<nixpkgs/nixos/modules/services/monitoring/grafana-image-renderer.nix>

[7090]services.grafana-image-renderer.settings.service.logging.level

    The log-level of the grafana-image-renderer.service-unit.

    Type: one of "error", "warning", "info", "debug"

    Default: "info"

    Declared by:

    [7091]<nixpkgs/nixos/modules/services/monitoring/grafana-image-renderer.nix>

[7092]services.grafana-image-renderer.settings.service.port

    The TCP port to use for the rendering server.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8081

    Declared by:

    [7093]<nixpkgs/nixos/modules/services/monitoring/grafana-image-renderer.nix>

[7094]services.grafana-image-renderer.verbose

    Whether to enable verbosity for the service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7095]<nixpkgs/nixos/modules/services/monitoring/grafana-image-renderer.nix>

[7096]services.grafana_reporter.enable

    Whether to enable grafana_reporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7097]<nixpkgs/nixos/modules/services/monitoring/grafana-reporter.nix>

[7098]services.grafana_reporter.addr

    Listening address.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [7099]<nixpkgs/nixos/modules/services/monitoring/grafana-reporter.nix>

[7100]services.grafana_reporter.grafana.addr

    Grafana address.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [7101]<nixpkgs/nixos/modules/services/monitoring/grafana-reporter.nix>

[7102]services.grafana_reporter.grafana.port

    Grafana port.

    Type: signed integer

    Default: 3000

    Declared by:

    [7103]<nixpkgs/nixos/modules/services/monitoring/grafana-reporter.nix>

[7104]services.grafana_reporter.grafana.protocol

    Grafana protocol.

    Type: one of "http", "https"

    Default: "http"

    Declared by:

    [7105]<nixpkgs/nixos/modules/services/monitoring/grafana-reporter.nix>

[7106]services.grafana_reporter.port

    Listening port.

    Type: signed integer

    Default: 8686

    Declared by:

    [7107]<nixpkgs/nixos/modules/services/monitoring/grafana-reporter.nix>

[7108]services.grafana_reporter.templateDir

    Optional template directory to use custom tex templates

    Type: string

    Default: "\${pkgs.grafana_reporter}"

    Declared by:

    [7109]<nixpkgs/nixos/modules/services/monitoring/grafana-reporter.nix>

[7110]services.graphite.api.enable

    Whether to enable graphite api. Graphite api is lightweight alternative to graphite web, with
    api and without dashboard. It's advised to use grafana as alternative dashboard and influxdb
    as alternative to graphite carbon.

    For more information visit [7111]https://graphite-api.readthedocs.org/en/latest/

    Type: boolean

    Default: false

    Declared by:

    [7112]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7113]services.graphite.api.package

    Package to use for graphite api.

    Type: package

    Default: "pkgs.python3Packages.graphite_api"

    Declared by:

    [7114]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7115]services.graphite.api.extraConfig

    Extra configuration for graphite api.

    Type: strings concatenated with "\n"

    Default:

    ''
    whisper:
      directories:
          - /var/db/graphite/whisper
    ''

    Example:

    ''
    allowed_origins:
      - dashboard.example.com
    cheat_times: true
    influxdb:
      host: localhost
      port: 8086
      user: influxdb
      pass: influxdb
      db: metrics
    cache:
      CACHE_TYPE: 'filesystem'
      CACHE_DIR: '/tmp/graphite-api-cache'
    ''

    Declared by:

    [7116]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7117]services.graphite.api.finders

    List of finder plugins to load.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.python3Packages.influxgraph ]

    Declared by:

    [7118]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7119]services.graphite.api.functions

    List of functions to load.

    Type: list of strings

    Default: [ "graphite_api.functions.SeriesFunctions" "graphite_api.functions.PieFunctions" ]

    Declared by:

    [7120]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7121]services.graphite.api.listenAddress

    Graphite web service listen address.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [7122]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7123]services.graphite.api.port

    Graphite api service port.

    Type: signed integer

    Default: 8080

    Declared by:

    [7124]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7125]services.graphite.beacon.enable

    Whether to enable graphite beacon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7126]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7127]services.graphite.beacon.config

    Graphite beacon configuration.

    Type: attribute set

    Default: { }

    Declared by:

    [7128]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7129]services.graphite.carbon.enableAggregator

    Whether to enable carbon aggregator, the carbon buffering service.

    Type: boolean

    Default: false

    Declared by:

    [7130]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7131]services.graphite.carbon.enableCache

    Whether to enable carbon cache, the graphite storage daemon.

    Type: boolean

    Default: false

    Declared by:

    [7132]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7133]services.graphite.carbon.enableRelay

    Whether to enable carbon relay, the carbon replication and sharding service.

    Type: boolean

    Default: false

    Declared by:

    [7134]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7135]services.graphite.carbon.aggregationRules

    Defines if and how received metrics will be aggregated.

    Type: null or string

    Default: null

    Example:

    ''
    <env>.applications.<app>.all.requests (60) = sum <env>.applications.<app>.*.requests
    <env>.applications.<app>.all.latency (60) = avg <env>.applications.<app>.*.latency
    ''

    Declared by:

    [7136]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7137]services.graphite.carbon.blacklist

    Any metrics received which match one of the experssions will be dropped.

    Type: null or string

    Default: null

    Example: ''^some\.noisy\.metric\.prefix\..*''

    Declared by:

    [7138]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7139]services.graphite.carbon.config

    Content of carbon configuration file.

    Type: string

    Default:

    ''
    [cache]
    # Listen on localhost by default for security reasons
    UDP_RECEIVER_INTERFACE = 127.0.0.1
    PICKLE_RECEIVER_INTERFACE = 127.0.0.1
    LINE_RECEIVER_INTERFACE = 127.0.0.1
    CACHE_QUERY_INTERFACE = 127.0.0.1
    # Do not log every update
    LOG_UPDATES = False
    LOG_CACHE_HITS = False
    ''

    Declared by:

    [7140]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7141]services.graphite.carbon.relayRules

    Relay rules are used to send certain metrics to a certain backend.

    Type: null or string

    Default: null

    Example:

    ''
    [example]
    pattern = ^mydata\.foo\..+
    servers = 10.1.2.3, 10.1.2.4:2004, myserver.mydomain.com
    ''

    Declared by:

    [7142]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7143]services.graphite.carbon.rewriteRules

    Regular expression patterns that can be used to rewrite metric names in a search and replace
    fashion.

    Type: null or string

    Default: null

    Example:

    ''
    [post]
    _sum$ =
    _avg$ =
    ''

    Declared by:

    [7144]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7145]services.graphite.carbon.storageAggregation

    Defines how to aggregate data to lower-precision retentions.

    Type: null or string

    Default: null

    Example:

    ''
    [all_min]
    pattern = \.min$
    xFilesFactor = 0.1
    aggregationMethod = min
    ''

    Declared by:

    [7146]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7147]services.graphite.carbon.storageSchemas

    Defines retention rates for storing metrics.

    Type: null or string

    Default: ""

    Example:

    ''
    [apache_busyWorkers]
    pattern = ^servers\.www.*\.workers\.busyWorkers$
    retentions = 15s:7d,1m:21d,15m:5y
    ''

    Declared by:

    [7148]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7149]services.graphite.carbon.whitelist

    Only metrics received which match one of the experssions will be persisted.

    Type: null or string

    Default: null

    Example: ".*"

    Declared by:

    [7150]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7151]services.graphite.dataDir

    Data directory for graphite.

    Type: path

    Default: "/var/db/graphite"

    Declared by:

    [7152]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7153]services.graphite.seyren.enable

    Whether to enable seyren service.

    Type: boolean

    Default: false

    Declared by:

    [7154]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7155]services.graphite.seyren.extraConfig

    Extra seyren configuration. See [7156]https://github.com/scobal/seyren#config

    Type: attribute set of strings

    Default: { }

    Example:

    {
      GRAPHITE_USERNAME = "user";
      GRAPHITE_PASSWORD = "pass";
    }

    Declared by:

    [7157]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7158]services.graphite.seyren.graphiteUrl

    Host where graphite service runs.

    Type: string

    Default: "http://127.0.0.1:8080"

    Declared by:

    [7159]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7160]services.graphite.seyren.mongoUrl

    Mongodb connection string.

    Type: string

    Default: "mongodb://127.0.0.1:27017/seyren"

    Declared by:

    [7161]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7162]services.graphite.seyren.port

    Seyren listening port.

    Type: signed integer

    Default: 8081

    Declared by:

    [7163]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7164]services.graphite.seyren.seyrenUrl

    Host where seyren is accessible.

    Type: string

    Default: "http://localhost:8081/"

    Declared by:

    [7165]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7166]services.graphite.web.enable

    Whether to enable graphite web frontend.

    Type: boolean

    Default: false

    Declared by:

    [7167]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7168]services.graphite.web.extraConfig

    Graphite webapp settings. See: [7169]http://graphite.readthedocs.io/en/latest/
    config-local-settings.html

    Type: string

    Default: ""

    Declared by:

    [7170]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7171]services.graphite.web.listenAddress

    Graphite web frontend listen address.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [7172]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7173]services.graphite.web.port

    Graphite web frontend port.

    Type: signed integer

    Default: 8080

    Declared by:

    [7174]<nixpkgs/nixos/modules/services/monitoring/graphite.nix>

[7175]services.graylog.enable

    Whether to enable Graylog.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7176]<nixpkgs/nixos/modules/services/logging/graylog.nix>

[7177]services.graylog.package

    Graylog package to use.

    Type: package

    Default: "pkgs.graylog"

    Declared by:

    [7178]<nixpkgs/nixos/modules/services/logging/graylog.nix>

[7179]services.graylog.elasticsearchHosts

    List of valid URIs of the http ports of your elastic nodes. If one or more of your
    elasticsearch hosts require authentication, include the credentials in each node URI that
    requires authentication

    Type: list of strings

    Example:

    [ "http://node1:9200" "http://user:password@node2:19200" ]

    Declared by:

    [7180]<nixpkgs/nixos/modules/services/logging/graylog.nix>

[7181]services.graylog.extraConfig

    Any other configuration options you might want to add

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [7182]<nixpkgs/nixos/modules/services/logging/graylog.nix>

[7183]services.graylog.isMaster

    Whether this is the master instance of your Graylog cluster

    Type: boolean

    Default: true

    Declared by:

    [7184]<nixpkgs/nixos/modules/services/logging/graylog.nix>

[7185]services.graylog.messageJournalDir

    The directory which will be used to store the message journal. The directory must be
    exclusively used by Graylog and must not contain any other files than the ones created by
    Graylog itself

    Type: string

    Default: "/var/lib/graylog/data/journal"

    Declared by:

    [7186]<nixpkgs/nixos/modules/services/logging/graylog.nix>

[7187]services.graylog.mongodbUri

    MongoDB connection string. See http://docs.mongodb.org/manual/reference/connection-string/
    for details

    Type: string

    Default: "mongodb://localhost/graylog"

    Declared by:

    [7188]<nixpkgs/nixos/modules/services/logging/graylog.nix>

[7189]services.graylog.nodeIdFile

    Path of the file containing the graylog node-id

    Type: string

    Default: "/var/lib/graylog/server/node-id"

    Declared by:

    [7190]<nixpkgs/nixos/modules/services/logging/graylog.nix>

[7191]services.graylog.passwordSecret

    You MUST set a secret to secure/pepper the stored user passwords here. Use at least 64
    characters. Generate one by using for example: pwgen -N 1 -s 96

    Type: string

    Declared by:

    [7192]<nixpkgs/nixos/modules/services/logging/graylog.nix>

[7193]services.graylog.plugins

    Extra graylog plugins

    Type: list of packages

    Default: [ ]

    Declared by:

    [7194]<nixpkgs/nixos/modules/services/logging/graylog.nix>

[7195]services.graylog.rootPasswordSha2

    You MUST specify a hash password for the root user (which you only need to initially set up
    the system and in case you lose connectivity to your authentication backend) This password
    cannot be changed using the API or via the web interface. If you need to change it, modify it
    here. Create one by using for example: echo -n yourpassword | shasum -a 256 and use the
    resulting hash value as string for the option

    Type: string

    Example: "e3c652f0ba0b4801205814f8b6bc49672c4c74e25b497770bb89b22cdeb4e952"

    Declared by:

    [7196]<nixpkgs/nixos/modules/services/logging/graylog.nix>

[7197]services.graylog.rootUsername

    Name of the default administrator user

    Type: string

    Default: "admin"

    Declared by:

    [7198]<nixpkgs/nixos/modules/services/logging/graylog.nix>

[7199]services.graylog.user

    User account under which graylog runs

    Type: string

    Default: "graylog"

    Example:

    graylog

    Declared by:

    [7200]<nixpkgs/nixos/modules/services/logging/graylog.nix>

[7201]services.greenclip.enable

    Whether to enable Greenclip daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7202]<nixpkgs/nixos/modules/services/misc/greenclip.nix>

[7203]services.greenclip.package

    greenclip derivation to use.

    Type: package

    Default: "pkgs.haskellPackages.greenclip"

    Declared by:

    [7204]<nixpkgs/nixos/modules/services/misc/greenclip.nix>

[7205]services.greetd.enable

    Whether to enable greetd.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7206]<nixpkgs/nixos/modules/services/display-managers/greetd.nix>

[7207]services.greetd.package

    The greetd package that should be used.

    Type: package

    Default: "pkgs.greetd.greetd"

    Declared by:

    [7208]<nixpkgs/nixos/modules/services/display-managers/greetd.nix>

[7209]services.greetd.restart

    Wether to restart greetd when it terminates (e.g. on failure). This is usually desirable so a
    user can always log in, but should be disabled when using 'settings.initial_session'
    (autologin), because every greetd restart will trigger the autologin again.

    Type: boolean

    Default: "!(config.services.greetd.settings ? initial_session)"

    Declared by:

    [7210]<nixpkgs/nixos/modules/services/display-managers/greetd.nix>

[7211]services.greetd.settings

    greetd configuration ([7212]documentation) as a Nix attribute set.

    Type: TOML value

    Example:

    {
      default_session = {
        command = "${pkgs.greetd.greetd}/bin/agreety --cmd sway";
      };
    }

    Declared by:

    [7213]<nixpkgs/nixos/modules/services/display-managers/greetd.nix>

[7214]services.greetd.vt

    The virtual console (tty) that greetd should use. This option also disables getty on that
    tty.

    Type: signed integer

    Default: 1

    Declared by:

    [7215]<nixpkgs/nixos/modules/services/display-managers/greetd.nix>

[7216]services.grocy.enable

    Whether to enable grocy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7217]<nixpkgs/nixos/modules/services/web-apps/grocy.nix>

[7218]services.grocy.dataDir

    Home directory of the grocy user which contains the application's state.

    Type: string

    Default: "/var/lib/grocy"

    Declared by:

    [7219]<nixpkgs/nixos/modules/services/web-apps/grocy.nix>

[7220]services.grocy.hostName

    FQDN for the grocy instance.

    Type: string

    Declared by:

    [7221]<nixpkgs/nixos/modules/services/web-apps/grocy.nix>

[7222]services.grocy.nginx.enableSSL

    Whether or not to enable SSL (with ACME and let's encrypt) for the grocy vhost.

    Type: boolean

    Default: true

    Declared by:

    [7223]<nixpkgs/nixos/modules/services/web-apps/grocy.nix>

[7224]services.grocy.phpfpm.settings

    Options for grocy's PHPFPM pool.

    Type: attribute set of signed integer or string or booleans

    Default: { catch_workers_output = true; listen.owner = "nginx"; php_admin_flag[log_errors] =
    true; php_admin_value[error_log] = "stderr"; pm = "dynamic"; pm.max_children = "32";
    pm.max_requests = "500"; pm.max_spare_servers = "4"; pm.min_spare_servers = "2";
    pm.start_servers = "2"; }

    Declared by:

    [7225]<nixpkgs/nixos/modules/services/web-apps/grocy.nix>

[7226]services.grocy.settings.calendar.firstDayOfWeek

    Which day of the week (0=Sunday, 1=Monday etc.) should be the first day.

    Type: null or one of 0, 1, 2, 3, 4, 5, 6

    Default: null

    Declared by:

    [7227]<nixpkgs/nixos/modules/services/web-apps/grocy.nix>

[7228]services.grocy.settings.calendar.showWeekNumber

    Show the number of the weeks in the calendar views.

    Type: boolean

    Default: true

    Declared by:

    [7229]<nixpkgs/nixos/modules/services/web-apps/grocy.nix>

[7230]services.grocy.settings.culture

    Display language of the frontend.

    Type: one of "de", "en", "da", "en_GB", "es", "fr", "hu", "it", "nl", "no", "pl", "pt_BR",
    "ru", "sk_SK", "sv_SE", "tr"

    Default: "en"

    Declared by:

    [7231]<nixpkgs/nixos/modules/services/web-apps/grocy.nix>

[7232]services.grocy.settings.currency

    ISO 4217 code for the currency to display.

    Type: string

    Default: "USD"

    Example: "EUR"

    Declared by:

    [7233]<nixpkgs/nixos/modules/services/web-apps/grocy.nix>

[7234]services.gsignond.enable

    Whether to enable gSignOn daemon, a DBus service which performs user authentication on behalf
    of its clients.

    Type: boolean

    Default: false

    Declared by:

    [7235]<nixpkgs/nixos/modules/services/desktops/gsignond.nix>

[7236]services.gsignond.plugins

    What plugins to use with the gSignOn daemon.

    Type: list of packages

    Default: [ ]

    Declared by:

    [7237]<nixpkgs/nixos/modules/services/desktops/gsignond.nix>

[7238]services.gvfs.enable

    Whether to enable GVfs, a userspace virtual filesystem.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7239]<nixpkgs/nixos/modules/services/desktops/gvfs.nix>

[7240]services.gvfs.package

    Which GVfs package to use.

    Type: package

    Default: (build of gvfs-1.48.1)

    Declared by:

    [7241]<nixpkgs/nixos/modules/services/desktops/gvfs.nix>

[7242]services.gvpe.enable

    Whether to enable gvpe.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7243]<nixpkgs/nixos/modules/services/networking/gvpe.nix>

[7244]services.gvpe.configFile

    GVPE config file, if already present

    Type: null or path

    Default: null

    Example: "/root/my-gvpe-conf"

    Declared by:

    [7245]<nixpkgs/nixos/modules/services/networking/gvpe.nix>

[7246]services.gvpe.configText

    GVPE config contents

    Type: null or strings concatenated with "\n"

    Default: null

    Example:

    ''
    tcp-port = 655
    udp-port = 655
    mtu = 1480
    ifname = vpn0

    node = alpha
    hostname = alpha.example.org
    connect = always
    enable-udp = true
    enable-tcp = true
    on alpha if-up = if-up-0
    on alpha pid-file = /var/gvpe/gvpe.pid
    ''

    Declared by:

    [7247]<nixpkgs/nixos/modules/services/networking/gvpe.nix>

[7248]services.gvpe.customIFSetup

    Additional commands to apply in ifup script

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [7249]<nixpkgs/nixos/modules/services/networking/gvpe.nix>

[7250]services.gvpe.ipAddress

    IP address to assign to GVPE interface

    Type: null or string

    Default: null

    Declared by:

    [7251]<nixpkgs/nixos/modules/services/networking/gvpe.nix>

[7252]services.gvpe.nodename

    GVPE node name

    Type: null or string

    Default: null

    Declared by:

    [7253]<nixpkgs/nixos/modules/services/networking/gvpe.nix>

[7254]services.gvpe.subnet

    IP subnet assigned to GVPE network

    Type: null or string

    Default: null

    Example: "10.0.0.0/8"

    Declared by:

    [7255]<nixpkgs/nixos/modules/services/networking/gvpe.nix>

[7256]services.hadoop.package

    Type: package

    Default: "pkgs.hadoop"

    Example:

    pkgs.hadoop

    Declared by:

    [7257]<nixpkgs/nixos/modules/services/cluster/hadoop/default.nix>

[7258]services.hadoop.coreSite

    Hadoop core-site.xml definition

    Type: attribute set of anythings

    Default: { }

    Example:

    {
      "fs.defaultFS" = "hdfs://localhost";
    }

    Declared by:

    [7259]<nixpkgs/nixos/modules/services/cluster/hadoop/default.nix>

[7260]services.hadoop.hdfs.datanode.enabled

    Whether to run the Hadoop YARN DataNode

    Type: boolean

    Default: false

    Declared by:

    [7261]<nixpkgs/nixos/modules/services/cluster/hadoop/hdfs.nix>

[7262]services.hadoop.hdfs.namenode.enabled

    Whether to run the Hadoop YARN NameNode

    Type: boolean

    Default: false

    Declared by:

    [7263]<nixpkgs/nixos/modules/services/cluster/hadoop/hdfs.nix>

[7264]services.hadoop.hdfsSite

    Hadoop hdfs-site.xml definition

    Type: attribute set of anythings

    Default: { }

    Example:

    {
      "dfs.nameservices" = "namenode1";
    }

    Declared by:

    [7265]<nixpkgs/nixos/modules/services/cluster/hadoop/default.nix>

[7266]services.hadoop.mapredSite

    Hadoop mapred-site.xml definition

    Type: attribute set of anythings

    Default: { }

    Example:

    {
      "mapreduce.map.cpu.vcores" = "1";
    }

    Declared by:

    [7267]<nixpkgs/nixos/modules/services/cluster/hadoop/default.nix>

[7268]services.hadoop.yarn.nodemanager.enabled

    Whether to run the Hadoop YARN NodeManager

    Type: boolean

    Default: false

    Declared by:

    [7269]<nixpkgs/nixos/modules/services/cluster/hadoop/yarn.nix>

[7270]services.hadoop.yarn.resourcemanager.enabled

    Whether to run the Hadoop YARN ResourceManager

    Type: boolean

    Default: false

    Declared by:

    [7271]<nixpkgs/nixos/modules/services/cluster/hadoop/yarn.nix>

[7272]services.hadoop.yarnSite

    Hadoop yarn-site.xml definition

    Type: attribute set of anythings

    Default: { }

    Example:

    {
      "yarn.resourcemanager.ha.id" = "resourcemanager1";
    }

    Declared by:

    [7273]<nixpkgs/nixos/modules/services/cluster/hadoop/default.nix>

[7274]services.hail.enable

    Enables the Hail Auto Update Service. Hail can automatically deploy artifacts built by a
    Hydra Continous Integration server. A common use case is to provide continous deployment for
    single services or a full NixOS configuration.

    Type: boolean

    Default: false

    Declared by:

    [7275]<nixpkgs/nixos/modules/services/continuous-integration/hail.nix>

[7276]services.hail.package

    Hail package to use.

    Type: package

    Default: "pkgs.haskellPackages.hail"

    Declared by:

    [7277]<nixpkgs/nixos/modules/services/continuous-integration/hail.nix>

[7278]services.hail.hydraJobUri

    The URI of the Hydra Job.

    Type: string

    Declared by:

    [7279]<nixpkgs/nixos/modules/services/continuous-integration/hail.nix>

[7280]services.hail.netrc

    The netrc file to use when fetching data from Hydra.

    Type: null or path

    Default: null

    Declared by:

    [7281]<nixpkgs/nixos/modules/services/continuous-integration/hail.nix>

[7282]services.hail.profile

    The name of the Nix profile used by Hail.

    Type: string

    Default: "hail-profile"

    Declared by:

    [7283]<nixpkgs/nixos/modules/services/continuous-integration/hail.nix>

[7284]services.haka.enable

    Whether to enable Haka.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7285]<nixpkgs/nixos/modules/services/security/haka.nix>

[7286]services.haka.package

    Which Haka derivation to use.

    Type: package

    Default: "pkgs.haka"

    Declared by:

    [7287]<nixpkgs/nixos/modules/services/security/haka.nix>

[7288]services.haka.configFile

    Specify which configuration file Haka uses. It can be absolute path or a path relative to the
    sample directory of the haka git repo.

    Type: string

    Default: "empty.lua"

    Example: "/srv/haka/myfilter.lua"

    Declared by:

    [7289]<nixpkgs/nixos/modules/services/security/haka.nix>

[7290]services.haka.dump.enable

    Whether to enable dump.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7291]<nixpkgs/nixos/modules/services/security/haka.nix>

[7292]services.haka.dump.input

    Path to file where incoming packets are dumped

    Type: path

    Default: "/tmp/input.pcap"

    Example: "/path/to/file.pcap"

    Declared by:

    [7293]<nixpkgs/nixos/modules/services/security/haka.nix>

[7294]services.haka.dump.output

    Path to file where outgoing packets are dumped

    Type: path

    Default: "/tmp/output.pcap"

    Example: "/path/to/file.pcap"

    Declared by:

    [7295]<nixpkgs/nixos/modules/services/security/haka.nix>

[7296]services.haka.interfaces

    Specify which interface(s) Haka listens to. Use 'any' to listen to all interfaces.

    Type: list of strings

    Default: [ "eth0" ]

    Example: [ "any" ]

    Declared by:

    [7297]<nixpkgs/nixos/modules/services/security/haka.nix>

[7298]services.haka.nfqueue

    Whether to enable nfqueue.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7299]<nixpkgs/nixos/modules/services/security/haka.nix>

[7300]services.haka.pcap

    Whether to enable pcap

    Type: boolean

    Default: true

    Declared by:

    [7301]<nixpkgs/nixos/modules/services/security/haka.nix>

[7302]services.haka.threads

    The number of threads that will be used. All system threads are used by default.

    Type: signed integer

    Default: 0

    Example: 4

    Declared by:

    [7303]<nixpkgs/nixos/modules/services/security/haka.nix>

[7304]services.hans.clients

    Each attribute of this option defines a systemd service that runs hans. Many or none may be
    defined. The name of each service is hans-name where name is the name of the corresponding
    attribute name.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      foo = {
        server = "192.0.2.1";
        extraConfig = "-v";
      }
    }

    Declared by:

    [7305]<nixpkgs/nixos/modules/services/networking/hans.nix>

[7306]services.hans.clients.<name>.extraConfig

    Additional command line parameters

    Type: string

    Default: ""

    Example: "-v"

    Declared by:

    [7307]<nixpkgs/nixos/modules/services/networking/hans.nix>

[7308]services.hans.clients.<name>.passwordFile

    File that containts password

    Type: string

    Default: ""

    Declared by:

    [7309]<nixpkgs/nixos/modules/services/networking/hans.nix>

[7310]services.hans.clients.<name>.server

    IP address of server running hans

    Type: string

    Default: ""

    Example: "192.0.2.1"

    Declared by:

    [7311]<nixpkgs/nixos/modules/services/networking/hans.nix>

[7312]services.hans.server.enable

    enable hans server

    Type: boolean

    Default: false

    Declared by:

    [7313]<nixpkgs/nixos/modules/services/networking/hans.nix>

[7314]services.hans.server.extraConfig

    Additional command line parameters

    Type: string

    Default: ""

    Example: "-v"

    Declared by:

    [7315]<nixpkgs/nixos/modules/services/networking/hans.nix>

[7316]services.hans.server.ip

    The assigned ip range

    Type: string

    Default: ""

    Example: "198.51.100.0"

    Declared by:

    [7317]<nixpkgs/nixos/modules/services/networking/hans.nix>

[7318]services.hans.server.passwordFile

    File that containts password

    Type: string

    Default: ""

    Declared by:

    [7319]<nixpkgs/nixos/modules/services/networking/hans.nix>

[7320]services.hans.server.respondToSystemPings

    Force hans respond to ordinary pings

    Type: boolean

    Default: false

    Declared by:

    [7321]<nixpkgs/nixos/modules/services/networking/hans.nix>

[7322]services.haproxy.enable

    Whether to enable HAProxy, the reliable, high performance TCP/HTTP load balancer.

    Type: boolean

    Default: false

    Declared by:

    [7323]<nixpkgs/nixos/modules/services/networking/haproxy.nix>

[7324]services.haproxy.config

    Contents of the HAProxy configuration file, haproxy.conf.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [7325]<nixpkgs/nixos/modules/services/networking/haproxy.nix>

[7326]services.haproxy.group

    Group account under which haproxy runs.

    Type: string

    Default: "haproxy"

    Declared by:

    [7327]<nixpkgs/nixos/modules/services/networking/haproxy.nix>

[7328]services.haproxy.user

    User account under which haproxy runs.

    Type: string

    Default: "haproxy"

    Declared by:

    [7329]<nixpkgs/nixos/modules/services/networking/haproxy.nix>

[7330]services.hardware.bolt.enable

    Whether to enable Bolt, a userspace daemon to enable security levels for Thunderbolt 3 on GNU
    /Linux.

    Bolt is used by GNOME 3 to handle Thunderbolt settings.

    Type: boolean

    Default: false

    Declared by:

    [7331]<nixpkgs/nixos/modules/services/hardware/bolt.nix>

[7332]services.hardware.lcd.client.enable

    Enable the LCD panel client (LCDproc)

    Type: boolean

    Default: false

    Declared by:

    [7333]<nixpkgs/nixos/modules/services/hardware/lcd.nix>

[7334]services.hardware.lcd.client.extraConfig

    Additional configuration added verbatim to the client config.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [7335]<nixpkgs/nixos/modules/services/hardware/lcd.nix>

[7336]services.hardware.lcd.client.restartForever

    Try restarting the client forever.

    Type: boolean

    Default: true

    Declared by:

    [7337]<nixpkgs/nixos/modules/services/hardware/lcd.nix>

[7338]services.hardware.lcd.server.enable

    Enable the LCD panel server (LCDd)

    Type: boolean

    Default: false

    Declared by:

    [7339]<nixpkgs/nixos/modules/services/hardware/lcd.nix>

[7340]services.hardware.lcd.server.extraConfig

    Additional configuration added verbatim to the server config.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [7341]<nixpkgs/nixos/modules/services/hardware/lcd.nix>

[7342]services.hardware.lcd.server.openPorts

    Open the ports in the firewall

    Type: boolean

    Default: false

    Declared by:

    [7343]<nixpkgs/nixos/modules/services/hardware/lcd.nix>

[7344]services.hardware.lcd.server.usbGroup

    The group to use for settings permissions. This group must exist or you will have to create
    it.

    Type: string

    Default: "dialout"

    Declared by:

    [7345]<nixpkgs/nixos/modules/services/hardware/lcd.nix>

[7346]services.hardware.lcd.server.usbPermissions

    Set group-write permissions on a USB device.

    A USB connected LCD panel will most likely require having its permissions modified for lcdd
    to write to it. Enabling this option sets group-write permissions on the device identified by
    services.hardware.lcd.usbVid and services.hardware.lcd.usbPid. In order to find the values,
    you can run the lsusb command. Example output:

    Bus 005 Device 002: ID 0403:c630 Future Technology Devices International, Ltd lcd2usb
    interface

    In this case the vendor id is 0403 and the product id is c630.

    Type: boolean

    Default: false

    Declared by:

    [7347]<nixpkgs/nixos/modules/services/hardware/lcd.nix>

[7348]services.hardware.lcd.server.usbPid

    The product ID of the USB device to claim.

    Type: string

    Default: ""

    Declared by:

    [7349]<nixpkgs/nixos/modules/services/hardware/lcd.nix>

[7350]services.hardware.lcd.server.usbVid

    The vendor ID of the USB device to claim.

    Type: string

    Default: ""

    Declared by:

    [7351]<nixpkgs/nixos/modules/services/hardware/lcd.nix>

[7352]services.hardware.lcd.serverHost

    Host on which LCDd is listening.

    Type: string

    Default: "localhost"

    Declared by:

    [7353]<nixpkgs/nixos/modules/services/hardware/lcd.nix>

[7354]services.hardware.lcd.serverPort

    Port on which LCDd is listening.

    Type: signed integer

    Default: 13666

    Declared by:

    [7355]<nixpkgs/nixos/modules/services/hardware/lcd.nix>

[7356]services.hardware.pommed.enable

    Whether to use the pommed tool to handle Apple laptop keyboard hotkeys.

    Type: boolean

    Default: false

    Declared by:

    [7357]<nixpkgs/nixos/modules/services/hardware/pommed.nix>

[7358]services.hardware.pommed.configFile

    The path to the pommed.conf file. Leave to null to use the default config file (/etc/
    pommed.conf.mactel). See the files /etc/pommed.conf.mactel and /etc/pommed.conf.pmac for
    examples to build on.

    Type: null or path

    Default: null

    Declared by:

    [7359]<nixpkgs/nixos/modules/services/hardware/pommed.nix>

[7360]services.hardware.xow.enable

    Whether to enable xow as a systemd service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7361]<nixpkgs/nixos/modules/services/hardware/xow.nix>

[7362]services.haveged.enable

    Whether to enable to haveged entropy daemon, which refills /dev/random when low.

    Type: boolean

    Default: false

    Declared by:

    [7363]<nixpkgs/nixos/modules/services/security/haveged.nix>

[7364]services.haveged.refill_threshold

    The number of bits of available entropy beneath which haveged should refill the entropy pool.

    Type: signed integer

    Default: 1024

    Declared by:

    [7365]<nixpkgs/nixos/modules/services/security/haveged.nix>

[7366]services.hbase.enable

    Whether to run HBase.

    Type: boolean

    Default: false

    Declared by:

    [7367]<nixpkgs/nixos/modules/services/databases/hbase.nix>

[7368]services.hbase.package

    HBase package to use.

    Type: package

    Default: "pkgs.hbase"

    Example:

    pkgs.hbase

    Declared by:

    [7369]<nixpkgs/nixos/modules/services/databases/hbase.nix>

[7370]services.hbase.dataDir

    Specifies location of HBase database files. This location should be writable and readable for
    the user the HBase service runs as (hbase by default).

    Type: path

    Default: "/var/lib/hbase"

    Declared by:

    [7371]<nixpkgs/nixos/modules/services/databases/hbase.nix>

[7372]services.hbase.group

    Group account under which HBase runs.

    Type: string

    Default: "hbase"

    Declared by:

    [7373]<nixpkgs/nixos/modules/services/databases/hbase.nix>

[7374]services.hbase.logDir

    Specifies the location of HBase log files.

    Type: path

    Default: "/var/log/hbase"

    Declared by:

    [7375]<nixpkgs/nixos/modules/services/databases/hbase.nix>

[7376]services.hbase.user

    User account under which HBase runs.

    Type: string

    Default: "hbase"

    Declared by:

    [7377]<nixpkgs/nixos/modules/services/databases/hbase.nix>

[7378]services.hdapsd.enable

    Whether to enable Hard Drive Active Protection System Daemon, devices are detected and
    managed automatically by udev and systemd .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7379]<nixpkgs/nixos/modules/services/monitoring/hdaps.nix>

[7380]services.headphones.enable

    Whether to enable the headphones server.

    Type: boolean

    Default: false

    Declared by:

    [7381]<nixpkgs/nixos/modules/services/misc/headphones.nix>

[7382]services.headphones.configFile

    Path to config file.

    Type: path

    Default: "/var/lib/headphones/config.ini"

    Declared by:

    [7383]<nixpkgs/nixos/modules/services/misc/headphones.nix>

[7384]services.headphones.dataDir

    Path where to store data files.

    Type: path

    Default: "/var/lib/headphones"

    Declared by:

    [7385]<nixpkgs/nixos/modules/services/misc/headphones.nix>

[7386]services.headphones.group

    Group to run the service as

    Type: string

    Default: "headphones"

    Declared by:

    [7387]<nixpkgs/nixos/modules/services/misc/headphones.nix>

[7388]services.headphones.host

    Host to listen on.

    Type: string

    Default: "localhost"

    Declared by:

    [7389]<nixpkgs/nixos/modules/services/misc/headphones.nix>

[7390]services.headphones.port

    Port to bind to.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8181

    Declared by:

    [7391]<nixpkgs/nixos/modules/services/misc/headphones.nix>

[7392]services.headphones.user

    User to run the service as

    Type: string

    Default: "headphones"

    Declared by:

    [7393]<nixpkgs/nixos/modules/services/misc/headphones.nix>

[7394]services.heapster.enable

    Whether to enable heapster monitoring

    Type: boolean

    Default: false

    Declared by:

    [7395]<nixpkgs/nixos/modules/services/monitoring/heapster.nix>

[7396]services.heapster.package

    Package to use by heapster

    Type: package

    Default: "pkgs.heapster"

    Declared by:

    [7397]<nixpkgs/nixos/modules/services/monitoring/heapster.nix>

[7398]services.heapster.extraOpts

    Heapster extra options

    Type: strings concatenated with " "

    Default: ""

    Declared by:

    [7399]<nixpkgs/nixos/modules/services/monitoring/heapster.nix>

[7400]services.heapster.sink

    Heapster metic sink

    Type: string

    Example: "influxdb:http://localhost:8086"

    Declared by:

    [7401]<nixpkgs/nixos/modules/services/monitoring/heapster.nix>

[7402]services.heapster.source

    Heapster metric source

    Type: string

    Example: "kubernetes:https://kubernetes.default"

    Declared by:

    [7403]<nixpkgs/nixos/modules/services/monitoring/heapster.nix>

[7404]services.heartbeat.enable

    Whether to enable heartbeat.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7405]<nixpkgs/nixos/modules/services/logging/heartbeat.nix>

[7406]services.heartbeat.extraConfig

    Any other configuration options you want to add

    Type: strings concatenated with "\n"

    Default:

    ''
    heartbeat.monitors:
    - type: http
      urls: ["http://localhost:9200"]
      schedule: '@every 10s'
    ''

    Declared by:

    [7407]<nixpkgs/nixos/modules/services/logging/heartbeat.nix>

[7408]services.heartbeat.name

    Name of the beat

    Type: string

    Default: "heartbeat"

    Declared by:

    [7409]<nixpkgs/nixos/modules/services/logging/heartbeat.nix>

[7410]services.heartbeat.stateDir

    The state directory. heartbeat's own logs and other data are stored here.

    Type: string

    Default: "/var/lib/heartbeat"

    Declared by:

    [7411]<nixpkgs/nixos/modules/services/logging/heartbeat.nix>

[7412]services.heartbeat.tags

    Tags to place on the shipped log messages

    Type: list of strings

    Default: [ ]

    Declared by:

    [7413]<nixpkgs/nixos/modules/services/logging/heartbeat.nix>

[7414]services.hedgedoc.enable

    Whether to enable the HedgeDoc Markdown Editor.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7415]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7416]services.hedgedoc.package

    Package that provides HedgeDoc.

    Type: package

    Default: (build of hedgedoc)

    Declared by:

    [7417]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7418]services.hedgedoc.configuration.allowAnonymous

    Whether to allow anonymous usage.

    Type: boolean

    Default: true

    Declared by:

    [7419]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7420]services.hedgedoc.configuration.allowAnonymousEdits

    Whether to allow guests to edit existing notes with the `freely' permission, when
    allowAnonymous is enabled.

    Type: boolean

    Default: false

    Declared by:

    [7421]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7422]services.hedgedoc.configuration.allowEmailRegister

    Whether to enable email registration.

    Type: boolean

    Default: true

    Declared by:

    [7423]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7424]services.hedgedoc.configuration.allowFreeURL

    Whether to allow note creation by accessing a nonexistent note URL.

    Type: boolean

    Default: false

    Declared by:

    [7425]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7426]services.hedgedoc.configuration.allowGravatar

    Whether to use gravatar as profile picture source.

    Type: boolean

    Default: true

    Declared by:

    [7427]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7428]services.hedgedoc.configuration.allowOrigin

    List of domains to whitelist.

    Type: list of strings

    Default: [ ]

    Example: [ "localhost" "hedgedoc.org" ]

    Declared by:

    [7429]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7430]services.hedgedoc.configuration.allowPDFExport

    Whether to enable PDF exports.

    Type: boolean

    Default: true

    Declared by:

    [7431]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7432]services.hedgedoc.configuration.azure

    Configure the azure third-party integration.

    Type: null or submodule

    Default: null

    Declared by:

    [7433]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7434]services.hedgedoc.configuration.azure.connectionString

    Azure Blob Storage connection string.

    Type: string

    Declared by:

    [7435]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7436]services.hedgedoc.configuration.azure.container

    Azure Blob Storage container name. It will be created if non-existent.

    Type: string

    Declared by:

    [7437]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7438]services.hedgedoc.configuration.csp

    Specify the Content Security Policy which is passed to Helmet. For configuration details see 
    [7439]https://helmetjs.github.io/docs/csp/.

    Type: null or attribute set

    Default: null

    Example:

    {
      enable = true;
      directives = {
        scriptSrc = "trustworthy.scripts.example.com";
      };
      upgradeInsecureRequest = "auto";
      addDefaults = true;
    }

    Declared by:

    [7440]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7441]services.hedgedoc.configuration.db

    Specify the configuration for sequelize. HedgeDoc supports mysql, postgres, sqlite and mssql.
    See [7442] https://sequelize.readthedocs.io/en/v3/ for more information. Note: This option
    overrides db.

    Type: attribute set

    Default: { }

    Example:

    {
      dialect = "sqlite";
      storage = "/var/lib/hedgedoc/db.hedgedoc.sqlite";
    }

    Declared by:

    [7443]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7444]services.hedgedoc.configuration.dbURL

    Specify which database to use. HedgeDoc supports mysql, postgres, sqlite and mssql. See 
    [7445] https://sequelize.readthedocs.io/en/v3/ for more information. Note: This option
    overrides db.

    Type: null or string

    Default: null

    Example:

    ''
    postgres://user:pass@host:5432/dbname
    ''

    Declared by:

    [7446]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7447]services.hedgedoc.configuration.debug

    Whether to enable debug mode.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7448]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7449]services.hedgedoc.configuration.defaultNotePath

    Path to the default Note file. (Non-canonical paths are relative to HedgeDoc's base
    directory)

    Type: null or string

    Default: "./public/default.md"

    Declared by:

    [7450]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7451]services.hedgedoc.configuration.defaultPermission

    Default permissions for notes. This only applies for signed-in users.

    Type: one of "freely", "editable", "limited", "locked", "private"

    Default: "editable"

    Declared by:

    [7452]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7453]services.hedgedoc.configuration.dhParamPath

    Path to the SSL dh params. Needed when useSSL is enabled.

    Type: null or string

    Default: null

    Example: "/var/lib/hedgedoc/dhparam.pem"

    Declared by:

    [7454]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7455]services.hedgedoc.configuration.docsPath

    Path to the docs directory. (Non-canonical paths are relative to HedgeDoc's base directory)

    Type: null or string

    Default: "./public/docs"

    Declared by:

    [7456]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7457]services.hedgedoc.configuration.documentMaxLength

    Specify the maximum document length.

    Type: signed integer

    Default: 100000

    Declared by:

    [7458]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7459]services.hedgedoc.configuration.domain

    Domain name for the HedgeDoc instance.

    Type: null or string

    Default: null

    Example: "hedgedoc.org"

    Declared by:

    [7460]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7461]services.hedgedoc.configuration.dropbox

    Configure the Dropbox third-party integration.

    Type: null or submodule

    Default: null

    Declared by:

    [7462]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7463]services.hedgedoc.configuration.dropbox.appKey

    Dropbox app key.

    Type: string

    Declared by:

    [7464]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7465]services.hedgedoc.configuration.dropbox.clientID

    Dropbox API client ID.

    Type: string

    Declared by:

    [7466]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7467]services.hedgedoc.configuration.dropbox.clientSecret

    Dropbox API client secret.

    Type: string

    Declared by:

    [7468]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7469]services.hedgedoc.configuration.email

    Whether to enable email sign-in.

    Type: boolean

    Default: true

    Declared by:

    [7470]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7471]services.hedgedoc.configuration.errorPath

    Path to the error template file. (Non-canonical paths are relative to HedgeDoc's base
    directory)

    Type: null or string

    Default: "./public/views/error.ejs"

    Declared by:

    [7472]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7473]services.hedgedoc.configuration.facebook

    Configure the facebook third-party integration

    Type: null or submodule

    Default: null

    Declared by:

    [7474]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7475]services.hedgedoc.configuration.facebook.clientID

    Facebook API client ID.

    Type: string

    Declared by:

    [7476]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7477]services.hedgedoc.configuration.facebook.clientSecret

    Facebook API client secret.

    Type: string

    Declared by:

    [7478]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7479]services.hedgedoc.configuration.github

    Configure the GitHub third-party integration.

    Type: null or submodule

    Default: null

    Declared by:

    [7480]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7481]services.hedgedoc.configuration.github.clientID

    GitHub API client ID.

    Type: string

    Declared by:

    [7482]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7483]services.hedgedoc.configuration.github.clientSecret

    Github API client secret.

    Type: string

    Declared by:

    [7484]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7485]services.hedgedoc.configuration.gitlab

    Configure the GitLab third-party integration.

    Type: null or submodule

    Default: null

    Declared by:

    [7486]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7487]services.hedgedoc.configuration.gitlab.baseURL

    GitLab API authentication endpoint. Only needed for other endpoints than gitlab.com.

    Type: string

    Default: ""

    Declared by:

    [7488]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7489]services.hedgedoc.configuration.gitlab.clientID

    GitLab API client ID.

    Type: string

    Declared by:

    [7490]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7491]services.hedgedoc.configuration.gitlab.clientSecret

    GitLab API client secret.

    Type: string

    Declared by:

    [7492]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7493]services.hedgedoc.configuration.gitlab.scope

    GitLab API requested scope. GitLab snippet import/export requires api scope.

    Type: one of "api", "read_user"

    Default: "api"

    Declared by:

    [7494]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7495]services.hedgedoc.configuration.google

    Configure the Google third-party integration.

    Type: null or submodule

    Default: null

    Declared by:

    [7496]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7497]services.hedgedoc.configuration.google.clientID

    Google API client ID.

    Type: string

    Declared by:

    [7498]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7499]services.hedgedoc.configuration.google.clientSecret

    Google API client secret.

    Type: string

    Declared by:

    [7500]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7501]services.hedgedoc.configuration.hackmdPath

    Path to the hackmd template file. (Non-canonical paths are relative to HedgeDoc's base
    directory)

    Type: null or string

    Default: "./public/views/hackmd.ejs"

    Declared by:

    [7502]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7503]services.hedgedoc.configuration.heartbeatInterval

    Specify the socket.io heartbeat interval.

    Type: signed integer

    Default: 5000

    Declared by:

    [7504]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7505]services.hedgedoc.configuration.heartbeatTimeout

    Specify the socket.io heartbeat timeout.

    Type: signed integer

    Default: 10000

    Declared by:

    [7506]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7507]services.hedgedoc.configuration.host

    Address to listen on.

    Type: string

    Default: "localhost"

    Declared by:

    [7508]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7509]services.hedgedoc.configuration.hsts.enable

    Whether to enable HSTS if HTTPS is also enabled.

    Type: boolean

    Default: true

    Declared by:

    [7510]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7511]services.hedgedoc.configuration.hsts.includeSubdomains

    Whether to include subdomains in HSTS.

    Type: boolean

    Default: true

    Declared by:

    [7512]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7513]services.hedgedoc.configuration.hsts.maxAgeSeconds

    Max duration for clients to keep the HSTS status.

    Type: signed integer

    Default: 31536000

    Declared by:

    [7514]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7515]services.hedgedoc.configuration.hsts.preload

    Whether to allow preloading of the site's HSTS status.

    Type: boolean

    Default: true

    Declared by:

    [7516]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7517]services.hedgedoc.configuration.imageUploadType

    Specify where to upload images.

    Type: one of "imgur", "s3", "minio", "filesystem"

    Default: "filesystem"

    Declared by:

    [7518]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7519]services.hedgedoc.configuration.imgur.clientId

    Imgur API client ID.

    Type: null or string

    Default: null

    Declared by:

    [7520]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7521]services.hedgedoc.configuration.indexPath

    Path to the index template file. (Non-canonical paths are relative to HedgeDoc's base
    directory)

    Type: null or string

    Default: "./public/views/index.ejs"

    Declared by:

    [7522]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7523]services.hedgedoc.configuration.ldap

    Configure the LDAP integration.

    Type: null or submodule

    Default: null

    Declared by:

    [7524]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7525]services.hedgedoc.configuration.ldap.bindCredentials

    Bind credentials for LDAP access.

    Type: string

    Declared by:

    [7526]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7527]services.hedgedoc.configuration.ldap.bindDn

    Bind DN for LDAP access.

    Type: string

    Declared by:

    [7528]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7529]services.hedgedoc.configuration.ldap.providerName

    Optional name to be displayed at login form, indicating the LDAP provider.

    Type: string

    Default: ""

    Declared by:

    [7530]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7531]services.hedgedoc.configuration.ldap.searchAttributes

    LDAP attributes to search with.

    Type: list of strings

    Example: [ "displayName" "mail" ]

    Declared by:

    [7532]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7533]services.hedgedoc.configuration.ldap.searchBase

    LDAP directory to begin search from.

    Type: string

    Example: "o=users,dc=example,dc=com"

    Declared by:

    [7534]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7535]services.hedgedoc.configuration.ldap.searchFilter

    LDAP filter to search with.

    Type: string

    Example: "(uid={{username}})"

    Declared by:

    [7536]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7537]services.hedgedoc.configuration.ldap.tlsca

    Root CA for LDAP TLS in PEM format.

    Type: string

    Example: "server-cert.pem,root.pem"

    Declared by:

    [7538]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7539]services.hedgedoc.configuration.ldap.url

    URL of LDAP server.

    Type: string

    Example: "ldap://localhost"

    Declared by:

    [7540]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7541]services.hedgedoc.configuration.ldap.userNameField

    LDAP field which is used as the username on HedgeDoc. By default useridField is used.

    Type: string

    Default: ""

    Declared by:

    [7542]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7543]services.hedgedoc.configuration.ldap.useridField

    LDAP field which is a unique identifier for users on HedgeDoc.

    Type: string

    Example: "uid"

    Declared by:

    [7544]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7545]services.hedgedoc.configuration.mattermost

    Configure the Mattermost third-party integration.

    Type: null or submodule

    Default: null

    Declared by:

    [7546]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7547]services.hedgedoc.configuration.mattermost.baseURL

    Mattermost authentication endpoint.

    Type: string

    Declared by:

    [7548]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7549]services.hedgedoc.configuration.mattermost.clientID

    Mattermost API client ID.

    Type: string

    Declared by:

    [7550]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7551]services.hedgedoc.configuration.mattermost.clientSecret

    Mattermost API client secret.

    Type: string

    Declared by:

    [7552]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7553]services.hedgedoc.configuration.minio

    Configure the minio third-party integration.

    Type: null or submodule

    Default: null

    Declared by:

    [7554]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7555]services.hedgedoc.configuration.minio.accessKey

    Minio access key.

    Type: string

    Declared by:

    [7556]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7557]services.hedgedoc.configuration.minio.endpoint

    Minio endpoint.

    Type: string

    Declared by:

    [7558]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7559]services.hedgedoc.configuration.minio.port

    Minio listen port.

    Type: signed integer

    Default: 9000

    Declared by:

    [7560]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7561]services.hedgedoc.configuration.minio.secretKey

    Minio secret key.

    Type: string

    Declared by:

    [7562]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7563]services.hedgedoc.configuration.minio.secure

    Whether to use HTTPS for Minio.

    Type: boolean

    Default: true

    Declared by:

    [7564]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7565]services.hedgedoc.configuration.oauth2

    Configure the OAuth integration.

    Type: null or submodule

    Default: null

    Declared by:

    [7566]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7567]services.hedgedoc.configuration.oauth2.authorizationURL

    Specify the OAuth authorization URL.

    Type: string

    Declared by:

    [7568]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7569]services.hedgedoc.configuration.oauth2.clientID

    Specify the OAuth client ID.

    Type: string

    Declared by:

    [7570]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7571]services.hedgedoc.configuration.oauth2.clientSecret

    Specify the OAuth client secret.

    Type: string

    Declared by:

    [7572]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7573]services.hedgedoc.configuration.oauth2.tokenURL

    Specify the OAuth token URL.

    Type: string

    Declared by:

    [7574]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7575]services.hedgedoc.configuration.path

    Specify where a UNIX domain socket should be placed.

    Type: null or string

    Default: null

    Example: "/run/hedgedoc.sock"

    Declared by:

    [7576]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7577]services.hedgedoc.configuration.port

    Port to listen on.

    Type: signed integer

    Default: 3000

    Example: "80"

    Declared by:

    [7578]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7579]services.hedgedoc.configuration.prettyPath

    Path to the pretty template file. (Non-canonical paths are relative to HedgeDoc's base
    directory)

    Type: null or string

    Default: "./public/views/pretty.ejs"

    Declared by:

    [7580]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7581]services.hedgedoc.configuration.protocolUseSSL

    Enable to use TLS for resource paths. This only applies when domain is set.

    Type: boolean

    Default: false

    Declared by:

    [7582]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7583]services.hedgedoc.configuration.s3

    Configure the s3 third-party integration.

    Type: null or submodule

    Default: null

    Declared by:

    [7584]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7585]services.hedgedoc.configuration.s3.accessKeyId

    AWS access key id.

    Type: string

    Declared by:

    [7586]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7587]services.hedgedoc.configuration.s3.region

    AWS S3 region.

    Type: string

    Declared by:

    [7588]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7589]services.hedgedoc.configuration.s3.secretAccessKey

    AWS access key.

    Type: string

    Declared by:

    [7590]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7591]services.hedgedoc.configuration.s3bucket

    Specify the bucket name for upload types s3 and minio.

    Type: null or string

    Default: null

    Declared by:

    [7592]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7593]services.hedgedoc.configuration.saml

    Configure the SAML integration.

    Type: null or submodule

    Default: null

    Declared by:

    [7594]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7595]services.hedgedoc.configuration.saml.attribute.email

    Attribute map for `email'. Defaults to `NameID' of SAML response if identifierFormat has the
    default value.

    Type: string

    Default: ""

    Declared by:

    [7596]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7597]services.hedgedoc.configuration.saml.attribute.id

    Attribute map for `id'. Defaults to `NameID' of SAML response.

    Type: string

    Default: ""

    Declared by:

    [7598]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7599]services.hedgedoc.configuration.saml.attribute.username

    Attribute map for `username'. Defaults to `NameID' of SAML response.

    Type: string

    Default: ""

    Declared by:

    [7600]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7601]services.hedgedoc.configuration.saml.externalGroups

    Excluded group names.

    Type: list of strings

    Default: [ ]

    Example: [ "Temporary-staff" "External-users" ]

    Declared by:

    [7602]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7603]services.hedgedoc.configuration.saml.groupAttribute

    Optional attribute name for group list.

    Type: string

    Default: ""

    Example: "memberOf"

    Declared by:

    [7604]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7605]services.hedgedoc.configuration.saml.identifierFormat

    Optional name identifier format.

    Type: string

    Default: "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"

    Declared by:

    [7606]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7607]services.hedgedoc.configuration.saml.idpCert

    Path to IdP certificate file in PEM format.

    Type: path

    Example: "/path/to/cert.pem"

    Declared by:

    [7608]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7609]services.hedgedoc.configuration.saml.idpSsoUrl

    IdP authentication endpoint.

    Type: string

    Example: "https://idp.example.com/sso"

    Declared by:

    [7610]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7611]services.hedgedoc.configuration.saml.issuer

    Optional identity of the service provider. This defaults to the server URL.

    Type: string

    Default: ""

    Declared by:

    [7612]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7613]services.hedgedoc.configuration.saml.requiredGroups

    Required group names.

    Type: list of strings

    Default: [ ]

    Example: [ "Hedgedoc-Users" ]

    Declared by:

    [7614]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7615]services.hedgedoc.configuration.sessionLife

    Session life time in milliseconds.

    Type: signed integer

    Default: 1209600000

    Declared by:

    [7616]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7617]services.hedgedoc.configuration.sessionName

    Specify the name of the session cookie.

    Type: string

    Default: "connect.sid"

    Declared by:

    [7618]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7619]services.hedgedoc.configuration.sessionSecret

    Specify the secret used to sign the session cookie. If unset, one will be generated on
    startup.

    Type: null or string

    Default: null

    Declared by:

    [7620]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7621]services.hedgedoc.configuration.slidePath

    Path to the slide template file. (Non-canonical paths are relative to HedgeDoc's base
    directory)

    Type: null or string

    Default: "./public/views/slide.hbs"

    Declared by:

    [7622]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7623]services.hedgedoc.configuration.sslCAPath

    SSL ca chain. Needed when useSSL is enabled.

    Type: list of strings

    Default: [ ]

    Example: [ "/var/lib/hedgedoc/ca.crt" ]

    Declared by:

    [7624]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7625]services.hedgedoc.configuration.sslCertPath

    Path to the SSL cert. Needed when useSSL is enabled.

    Type: null or string

    Default: null

    Example: "/var/lib/hedgedoc/hedgedoc.crt"

    Declared by:

    [7626]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7627]services.hedgedoc.configuration.sslKeyPath

    Path to the SSL key. Needed when useSSL is enabled.

    Type: null or string

    Default: null

    Example: "/var/lib/hedgedoc/hedgedoc.key"

    Declared by:

    [7628]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7629]services.hedgedoc.configuration.tmpPath

    Path to the temp directory HedgeDoc should use. Note that serviceConfig.PrivateTmp is enabled
    for the HedgeDoc systemd service by default. (Non-canonical paths are relative to HedgeDoc's
    base directory)

    Type: string

    Default: "/tmp"

    Declared by:

    [7630]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7631]services.hedgedoc.configuration.twitter

    Configure the Twitter third-party integration.

    Type: null or submodule

    Default: null

    Declared by:

    [7632]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7633]services.hedgedoc.configuration.twitter.consumerKey

    Twitter API consumer key.

    Type: string

    Declared by:

    [7634]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7635]services.hedgedoc.configuration.twitter.consumerSecret

    Twitter API consumer secret.

    Type: string

    Declared by:

    [7636]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7637]services.hedgedoc.configuration.uploadsPath

    Path under which uploaded files are saved.

    Type: string

    Default: "/var/lib/hedgedoc/uploads"

    Declared by:

    [7638]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7639]services.hedgedoc.configuration.urlAddPort

    Enable to add the port to callback URLs. This only applies when domain is set and only for
    ports other than 80 and 443.

    Type: boolean

    Default: false

    Declared by:

    [7640]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7641]services.hedgedoc.configuration.urlPath

    Path under which HedgeDoc is accessible.

    Type: null or string

    Default: null

    Example: "/url/path/to/hedgedoc"

    Declared by:

    [7642]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7643]services.hedgedoc.configuration.useCDN

    Whether to use CDN resources or not.

    Type: boolean

    Default: false

    Declared by:

    [7644]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7645]services.hedgedoc.configuration.useSSL

    Enable to use SSL server. This will also enable protocolUseSSL.

    Type: boolean

    Default: false

    Declared by:

    [7646]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7647]services.hedgedoc.environmentFile

    Environment file as defined in systemd.exec(5).

    Secrets may be passed to the service without adding them to the world-readable Nix store, by
    specifying placeholder variables as the option value in Nix and setting these variables
    accordingly in the environment file.

      # snippet of HedgeDoc-related config
      services.hedgedoc.configuration.dbURL = "postgres://hedgedoc:\${DB_PASSWORD}@db-host:5432/hedgedocdb";
      services.hedgedoc.configuration.minio.secretKey = "$MINIO_SECRET_KEY";

      # content of the environment file
      DB_PASSWORD=verysecretdbpassword
      MINIO_SECRET_KEY=verysecretminiokey

    Note that this file needs to be available on the host on which HedgeDoc is running.

    Type: null or path

    Default: null

    Example: "/var/lib/hedgedoc/hedgedoc.env"

    Declared by:

    [7648]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7649]services.hedgedoc.groups

    Groups to which the user hedgedoc should be added.

    Type: list of strings

    Default: [ ]

    Declared by:

    [7650]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7651]services.hedgedoc.workDir

    Working directory for the HedgeDoc service.

    Type: path

    Default: "/var/lib/hedgedoc"

    Declared by:

    [7652]<nixpkgs/nixos/modules/services/web-apps/hedgedoc.nix>

[7653]services.hercules-ci-agent.enable

    Enable to run Hercules CI Agent as a system service.

    [7654]Hercules CI is a continuous integation service that is centered around Nix.

    Support is available at [7655]help@hercules-ci.com.

    Type: boolean

    Default: false

    Declared by:

    [7656]<nixpkgs/nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix>

[7657]services.hercules-ci-agent.package

    Package containing the bin/hercules-ci-agent executable.

    Type: package

    Default: pkgs.hercules-ci-agent

    Declared by:

    [7658]<nixpkgs/nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix>

[7659]services.hercules-ci-agent.checkNix

    Whether to make sure that the system's Nix (nix-daemon) is compatible.

    If you set this to false, please keep up with the change log.

    Type: boolean

    Default: true

    Declared by:

    [7660]<nixpkgs/nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix>

[7661]services.hercules-ci-agent.settings

    These settings are written to the agent.toml file.

    Not all settings are listed as options, can be set nonetheless.

    For the exhaustive list of settings, see [7662]https://docs.hercules-ci.com/hercules-ci/
    reference/agent-config/.

    Type: TOML value

    Declared by:

    [7663]<nixpkgs/nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix>

[7664]services.hercules-ci-agent.settings.baseDirectory

    State directory (secrets, work directory, etc) for agent

    Type: path

    Default: "/var/lib/hercules-ci-agent"

    Declared by:

    [7665]<nixpkgs/nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix>

[7666]services.hercules-ci-agent.settings.concurrentTasks

    Number of tasks to perform simultaneously.

    A task is a single derivation build, an evaluation or an effect run. At minimum, you need 2
    concurrent tasks for x86_64-linux in your cluster, to allow for import from derivation.

    concurrentTasks can be around the CPU core count or lower if memory is the bottleneck.

    The optimal value depends on the resource consumption characteristics of your workload,
    including memory usage and in-task parallelism. This is typically determined empirically.

    When scaling, it is generally better to have a double-size machine than two machines, because
    each split of resources causes inefficiencies; particularly with regards to build latency
    because of extra downloads.

    Type: positive integer, meaning >0 or one of "auto"

    Default: "auto"

    Declared by:

    [7667]<nixpkgs/nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix>

[7668]services.hercules-ci-agent.settings.staticSecretsDirectory

    This is the default directory to look for statically configured secrets like
    cluster-join-token.key.

    Type: path

    Default: baseDirectory + "/secrets"

    Declared by:

    [7669]<nixpkgs/nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix>

[7670]services.hercules-ci-agent.settings.workDirectory

    The directory in which temporary subdirectories are created for task state. This includes
    sources for Nix evaluation.

    Type: path

    Default: baseDirectory + "/work"

    Declared by:

    [7671]<nixpkgs/nixos/modules/services/continuous-integration/hercules-ci-agent/common.nix>

[7672]services.hitch.enable

    Whether to enable Hitch Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7673]<nixpkgs/nixos/modules/services/web-servers/hitch/default.nix>

[7674]services.hitch.backend

    The host and port Hitch connects to when receiving a connection in the form [HOST]:PORT

    Type: string

    Declared by:

    [7675]<nixpkgs/nixos/modules/services/web-servers/hitch/default.nix>

[7676]services.hitch.ciphers

    The list of ciphers to use

    Type: string

    Default: "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH"

    Declared by:

    [7677]<nixpkgs/nixos/modules/services/web-servers/hitch/default.nix>

[7678]services.hitch.extraConfig

    Additional configuration lines

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [7679]<nixpkgs/nixos/modules/services/web-servers/hitch/default.nix>

[7680]services.hitch.frontend

    The port and interface of the listen endpoint in the + form [HOST]:PORT[+CERT].

    Type: string or list of strings

    Default: "[127.0.0.1]:443"

    Declared by:

    [7681]<nixpkgs/nixos/modules/services/web-servers/hitch/default.nix>

[7682]services.hitch.group

    The group to run as

    Type: string

    Default: "hitch"

    Declared by:

    [7683]<nixpkgs/nixos/modules/services/web-servers/hitch/default.nix>

[7684]services.hitch.ocsp-stapling.enabled

    Whether to enable OCSP Stapling

    Type: boolean

    Default: true

    Declared by:

    [7685]<nixpkgs/nixos/modules/services/web-servers/hitch/default.nix>

[7686]services.hitch.pem-files

    PEM files to use

    Type: list of paths

    Default: [ ]

    Declared by:

    [7687]<nixpkgs/nixos/modules/services/web-servers/hitch/default.nix>

[7688]services.hitch.user

    The user to run as

    Type: string

    Default: "hitch"

    Declared by:

    [7689]<nixpkgs/nixos/modules/services/web-servers/hitch/default.nix>

[7690]services.hledger-web.enable

    Whether to enable hledger-web service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7691]<nixpkgs/nixos/modules/services/web-apps/hledger-web.nix>

[7692]services.hledger-web.baseUrl

    Base URL, when sharing over a network.

    Type: null or string

    Default: null

    Example: "https://example.org"

    Declared by:

    [7693]<nixpkgs/nixos/modules/services/web-apps/hledger-web.nix>

[7694]services.hledger-web.capabilities.add

    Enable the add capability.

    Type: boolean

    Default: false

    Declared by:

    [7695]<nixpkgs/nixos/modules/services/web-apps/hledger-web.nix>

[7696]services.hledger-web.capabilities.manage

    Enable the manage capability.

    Type: boolean

    Default: false

    Declared by:

    [7697]<nixpkgs/nixos/modules/services/web-apps/hledger-web.nix>

[7698]services.hledger-web.capabilities.view

    Enable the view capability.

    Type: boolean

    Default: true

    Declared by:

    [7699]<nixpkgs/nixos/modules/services/web-apps/hledger-web.nix>

[7700]services.hledger-web.extraOptions

    Extra command line arguments to pass to hledger-web.

    Type: list of strings

    Default: [ ]

    Example: [ "--forecast" ]

    Declared by:

    [7701]<nixpkgs/nixos/modules/services/web-apps/hledger-web.nix>

[7702]services.hledger-web.host

    Address to listen on.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [7703]<nixpkgs/nixos/modules/services/web-apps/hledger-web.nix>

[7704]services.hledger-web.journalFiles

    Paths to journal files relative to services.hledger-web.stateDir.

    Type: list of strings

    Default: [ ".hledger.journal" ]

    Declared by:

    [7705]<nixpkgs/nixos/modules/services/web-apps/hledger-web.nix>

[7706]services.hledger-web.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 5000

    Example: "80"

    Declared by:

    [7707]<nixpkgs/nixos/modules/services/web-apps/hledger-web.nix>

[7708]services.hledger-web.serveApi

    Whether to enable Serve only the JSON web API, without the web UI..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7709]<nixpkgs/nixos/modules/services/web-apps/hledger-web.nix>

[7710]services.hledger-web.stateDir

    Path the service has access to. If left as the default value this directory will
    automatically be created before the hledger-web server starts, otherwise the sysadmin is
    responsible for ensuring the directory exists with appropriate ownership and permissions.

    Type: path

    Default: "/var/lib/hledger-web"

    Declared by:

    [7711]<nixpkgs/nixos/modules/services/web-apps/hledger-web.nix>

[7712]services.hologram-agent.enable

    Whether to enable the Hologram agent for AWS instance credentials

    Type: boolean

    Default: false

    Declared by:

    [7713]<nixpkgs/nixos/modules/services/security/hologram-agent.nix>

[7714]services.hologram-agent.dialAddress

    Hologram server and port.

    Type: string

    Default: "localhost:3100"

    Declared by:

    [7715]<nixpkgs/nixos/modules/services/security/hologram-agent.nix>

[7716]services.hologram-agent.httpPort

    Port for metadata service to listen on.

    Type: string

    Default: "80"

    Declared by:

    [7717]<nixpkgs/nixos/modules/services/security/hologram-agent.nix>

[7718]services.hologram-server.enable

    Whether to enable the Hologram server for AWS instance credentials

    Type: boolean

    Default: false

    Declared by:

    [7719]<nixpkgs/nixos/modules/services/security/hologram-server.nix>

[7720]services.hologram-server.enableLdapRoles

    Whether to assign user roles based on the user's LDAP group memberships

    Type: boolean

    Default: false

    Declared by:

    [7721]<nixpkgs/nixos/modules/services/security/hologram-server.nix>

[7722]services.hologram-server.awsAccount

    AWS account number

    Type: string

    Declared by:

    [7723]<nixpkgs/nixos/modules/services/security/hologram-server.nix>

[7724]services.hologram-server.awsDefaultRole

    AWS default role

    Type: string

    Declared by:

    [7725]<nixpkgs/nixos/modules/services/security/hologram-server.nix>

[7726]services.hologram-server.cacheTimeoutSeconds

    How often (in seconds) to refresh the LDAP cache

    Type: signed integer

    Default: 3600

    Declared by:

    [7727]<nixpkgs/nixos/modules/services/security/hologram-server.nix>

[7728]services.hologram-server.groupClassAttr

    The objectclass attribute to search for groups when enableLdapRoles is true

    Type: string

    Default: "groupOfNames"

    Declared by:

    [7729]<nixpkgs/nixos/modules/services/security/hologram-server.nix>

[7730]services.hologram-server.ldapBaseDN

    The base DN for your Hologram users

    Type: string

    Declared by:

    [7731]<nixpkgs/nixos/modules/services/security/hologram-server.nix>

[7732]services.hologram-server.ldapBindDN

    DN of account to use to query the LDAP server

    Type: string

    Declared by:

    [7733]<nixpkgs/nixos/modules/services/security/hologram-server.nix>

[7734]services.hologram-server.ldapBindPassword

    Password of account to use to query the LDAP server

    Type: string

    Declared by:

    [7735]<nixpkgs/nixos/modules/services/security/hologram-server.nix>

[7736]services.hologram-server.ldapHost

    Address of the LDAP server to use

    Type: string

    Declared by:

    [7737]<nixpkgs/nixos/modules/services/security/hologram-server.nix>

[7738]services.hologram-server.ldapInsecure

    Whether to connect to LDAP over SSL or not

    Type: boolean

    Default: false

    Declared by:

    [7739]<nixpkgs/nixos/modules/services/security/hologram-server.nix>

[7740]services.hologram-server.ldapUserAttr

    The LDAP attribute for usernames

    Type: string

    Default: "cn"

    Declared by:

    [7741]<nixpkgs/nixos/modules/services/security/hologram-server.nix>

[7742]services.hologram-server.listenAddress

    Address and port to listen on

    Type: string

    Default: "0.0.0.0:3100"

    Declared by:

    [7743]<nixpkgs/nixos/modules/services/security/hologram-server.nix>

[7744]services.hologram-server.roleAttr

    Which LDAP group attribute to search for authorized role ARNs

    Type: string

    Default: "businessCategory"

    Declared by:

    [7745]<nixpkgs/nixos/modules/services/security/hologram-server.nix>

[7746]services.hologram-server.statsAddress

    Address of statsd server

    Type: string

    Default: ""

    Declared by:

    [7747]<nixpkgs/nixos/modules/services/security/hologram-server.nix>

[7748]services.home-assistant.enable

    Whether to enable Home Assistant.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7749]<nixpkgs/nixos/modules/services/misc/home-assistant.nix>

[7750]services.home-assistant.package

    Home Assistant package to use. By default the tests are disabled, as they take a considerable
    amout of time to complete. Override extraPackages or extraComponents in order to add
    additional dependencies. If you specify config and do not set autoExtraComponents to false,
    overriding extraComponents will have no effect. Avoid home-assistant.overridePythonAttrs if
    you use autoExtraComponents.

    Type: package

    Default: pkgs.home-assistant.overrideAttrs (oldAttrs: { doInstallCheck = false; })

    Example:

    pkgs.home-assistant.override {
      extraPackages = ps: with ps; [ colorlog ];
    }

    Declared by:

    [7751]<nixpkgs/nixos/modules/services/misc/home-assistant.nix>

[7752]services.home-assistant.applyDefaultConfig

    Setting this option enables a few configuration options for HA based on NixOS configuration
    (such as time zone) to avoid having to manually specify configuration we already have.

    Currently one side effect of enabling this is that the http component will be enabled.

    This only takes effect if config != null in order to ensure that a manually managed
    configuration.yaml is not overwritten.

    Type: boolean

    Default: true

    Declared by:

    [7753]<nixpkgs/nixos/modules/services/misc/home-assistant.nix>

[7754]services.home-assistant.autoExtraComponents

    If set to true, the components used in config are set as the specified package's
    extraComponents. This in turn adds all packaged dependencies to the derivation. You might
    still see import errors in your log. In this case, you will need to package the necessary
    dependencies yourself or ask for someone else to package them. If a dependency is packaged
    but not automatically added to this list, you might need to specify it in extraPackages.

    Type: boolean

    Default: true

    Declared by:

    [7755]<nixpkgs/nixos/modules/services/misc/home-assistant.nix>

[7756]services.home-assistant.config

    Your configuration.yaml as a Nix attribute set. Beware that setting this option will delete
    your previous configuration.yaml. [7757]Secrets are encoded as strings as shown in the
    example.

    Type: Yaml value

    Default: null

    Example:

    {
      homeassistant = {
        name = "Home";
        latitude = "!secret latitude";
        longitude = "!secret longitude";
        elevation = "!secret elevation";
        unit_system = "metric";
        time_zone = "UTC";
      };
      frontend = {
        themes = "!include_dir_merge_named themes";
      };
      http = { };
      feedreader.urls = [ "https://nixos.org/blogs.xml" ];
    }

    Declared by:

    [7758]<nixpkgs/nixos/modules/services/misc/home-assistant.nix>

[7759]services.home-assistant.configDir

    The config directory, where your configuration.yaml is located.

    Type: path

    Default: "/var/lib/hass"

    Declared by:

    [7760]<nixpkgs/nixos/modules/services/misc/home-assistant.nix>

[7761]services.home-assistant.configWritable

    Whether to make configuration.yaml writable. This only has an effect if config is set. This
    will allow you to edit it from Home Assistant's web interface. However, bear in mind that it
    will be overwritten at every start of the service.

    Type: boolean

    Default: false

    Declared by:

    [7762]<nixpkgs/nixos/modules/services/misc/home-assistant.nix>

[7763]services.home-assistant.lovelaceConfig

    Your ui-lovelace.yaml as a Nix attribute set. Setting this option will automatically add
    lovelace.mode = "yaml"; to your config. Beware that setting this option will delete your
    previous ui-lovelace.yaml

    Type: null or attribute set

    Default: null

    Example:

    {
      title = "My Awesome Home";
      views = [ {
        title = "Example";
        cards = [ {
          type = "markdown";
          title = "Lovelace";
          content = "Welcome to your **Lovelace UI**.";
        } ];
      } ];
    }

    Declared by:

    [7764]<nixpkgs/nixos/modules/services/misc/home-assistant.nix>

[7765]services.home-assistant.lovelaceConfigWritable

    Whether to make ui-lovelace.yaml writable. This only has an effect if lovelaceConfig is set.
    This will allow you to edit it from Home Assistant's web interface. However, bear in mind
    that it will be overwritten at every start of the service.

    Type: boolean

    Default: false

    Declared by:

    [7766]<nixpkgs/nixos/modules/services/misc/home-assistant.nix>

[7767]services.home-assistant.openFirewall

    Whether to open the firewall for the specified port.

    Type: boolean

    Default: false

    Declared by:

    [7768]<nixpkgs/nixos/modules/services/misc/home-assistant.nix>

[7769]services.home-assistant.port

    The port on which to listen.

    Type: signed integer

    Default: 8123

    Declared by:

    [7770]<nixpkgs/nixos/modules/services/misc/home-assistant.nix>

[7771]services.hoogle.enable

    Whether to enable Haskell documentation server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7772]<nixpkgs/nixos/modules/services/development/hoogle.nix>

[7773]services.hoogle.packages

    The Haskell packages to generate documentation for.

    The option value is a function that takes the package set specified in the haskellPackages
    option as its sole parameter and returns a list of packages.

    Type: function that evaluates to a(n) listOf

    Default: "hp: []"

    Example: "hp: with hp; [ text lens ]"

    Declared by:

    [7774]<nixpkgs/nixos/modules/services/development/hoogle.nix>

[7775]services.hoogle.haskellPackages

    Which haskell package set to use.

    Type: unspecified

    Default: "pkgs.haskellPackages"

    Declared by:

    [7776]<nixpkgs/nixos/modules/services/development/hoogle.nix>

[7777]services.hoogle.home

    Url for hoogle logo

    Type: string

    Default: "https://hoogle.haskell.org"

    Declared by:

    [7778]<nixpkgs/nixos/modules/services/development/hoogle.nix>

[7779]services.hoogle.host

    Set the host to bind on.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [7780]<nixpkgs/nixos/modules/services/development/hoogle.nix>

[7781]services.hoogle.port

    Port number Hoogle will be listening to.

    Type: signed integer

    Default: 8080

    Declared by:

    [7782]<nixpkgs/nixos/modules/services/development/hoogle.nix>

[7783]services.hostapd.enable

    Enable putting a wireless interface into infrastructure mode, allowing other wireless devices
    to associate with the wireless interface and do wireless networking. A simple access point
    will enable hostapd.wpa, hostapd.wpaPassphrase, and hostapd.ssid, as well as DHCP on the
    wireless interface to provide IP addresses to the associated stations, and NAT (from the
    wireless interface to an upstream interface).

    Type: boolean

    Default: false

    Declared by:

    [7784]<nixpkgs/nixos/modules/services/networking/hostapd.nix>

[7785]services.hostapd.channel

    Channel number (IEEE 802.11) Please note that some drivers do not use this value from hostapd
    and the channel will need to be configured separately with iwconfig.

    Type: signed integer

    Default: 7

    Example: 11

    Declared by:

    [7786]<nixpkgs/nixos/modules/services/networking/hostapd.nix>

[7787]services.hostapd.countryCode

    Country code (ISO/IEC 3166-1). Used to set regulatory domain. Set as needed to indicate
    country in which device is operating. This can limit available channels and transmit power.
    These two octets are used as the first two octets of the Country String (dot11CountryString).
    If set this enables IEEE 802.11d. This advertises the countryCode and the set of allowed
    channels and transmit power levels based on the regulatory limits.

    Type: null or string

    Default: null

    Example: "US"

    Declared by:

    [7788]<nixpkgs/nixos/modules/services/networking/hostapd.nix>

[7789]services.hostapd.driver

    Which driver hostapd will use. Most applications will probably use the default.

    Type: string

    Default: "nl80211"

    Example: "hostapd"

    Declared by:

    [7790]<nixpkgs/nixos/modules/services/networking/hostapd.nix>

[7791]services.hostapd.extraConfig

    Extra configuration options to put in hostapd.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    auth_algo=0
    ieee80211n=1
    ht_capab=[HT40-][SHORT-GI-40][DSSS_CCK-40]
    ''

    Declared by:

    [7792]<nixpkgs/nixos/modules/services/networking/hostapd.nix>

[7793]services.hostapd.group

    Members of this group can control hostapd.

    Type: string

    Default: "wheel"

    Example: "network"

    Declared by:

    [7794]<nixpkgs/nixos/modules/services/networking/hostapd.nix>

[7795]services.hostapd.hwMode

    Operation mode. (a = IEEE 802.11a, b = IEEE 802.11b, g = IEEE 802.11g).

    Type: one of "a", "b", "g"

    Default: "g"

    Declared by:

    [7796]<nixpkgs/nixos/modules/services/networking/hostapd.nix>

[7797]services.hostapd.interface

    The interfaces hostapd will use.

    Type: string

    Default: ""

    Example: "wlp2s0"

    Declared by:

    [7798]<nixpkgs/nixos/modules/services/networking/hostapd.nix>

[7799]services.hostapd.logLevel

    Levels (minimum value for logged events): 0 = verbose debugging 1 = debugging 2 =
    informational messages 3 = notification 4 = warning

    Type: signed integer

    Default: 2

    Declared by:

    [7800]<nixpkgs/nixos/modules/services/networking/hostapd.nix>

[7801]services.hostapd.noScan

    Do not scan for overlapping BSSs in HT40+/- mode. Caution: turning this on will violate
    regulatory requirements!

    Type: boolean

    Default: false

    Declared by:

    [7802]<nixpkgs/nixos/modules/services/networking/hostapd.nix>

[7803]services.hostapd.ssid

    SSID to be used in IEEE 802.11 management frames.

    Type: string

    Default: "nixos"

    Example: "mySpecialSSID"

    Declared by:

    [7804]<nixpkgs/nixos/modules/services/networking/hostapd.nix>

[7805]services.hostapd.wpa

    Enable WPA (IEEE 802.11i/D3.0) to authenticate with the access point.

    Type: boolean

    Default: true

    Declared by:

    [7806]<nixpkgs/nixos/modules/services/networking/hostapd.nix>

[7807]services.hostapd.wpaPassphrase

    WPA-PSK (pre-shared-key) passphrase. Clients will need this passphrase to associate with this
    access point. Warning: This passphrase will get put into a world-readable file in the Nix
    store!

    Type: string

    Default: "my_sekret"

    Example: "any_64_char_string"

    Declared by:

    [7808]<nixpkgs/nixos/modules/services/networking/hostapd.nix>

[7809]services.hound.enable

    Whether to enable the hound code search daemon.

    Type: boolean

    Default: false

    Declared by:

    [7810]<nixpkgs/nixos/modules/services/search/hound.nix>

[7811]services.hound.package

    Package for running hound.

    Type: package

    Default: "pkgs.hound"

    Declared by:

    [7812]<nixpkgs/nixos/modules/services/search/hound.nix>

[7813]services.hound.config

    The full configuration of the Hound daemon. Note the dbpath should be an absolute path to a
    writable location on disk.

    Type: string

    Example:

    ''
    {
       "max-concurrent-indexers" : 2,
       "dbpath" : "''${services.hound.home}/data",
       "repos" : {
          "nixpkgs": {
             "url" : "https://www.github.com/NixOS/nixpkgs.git"
          }
       }
    }
    ''

    Declared by:

    [7814]<nixpkgs/nixos/modules/services/search/hound.nix>

[7815]services.hound.extraGroups

    List of extra groups that the "hound" user should be a part of.

    Type: list of strings

    Default: [ ]

    Example: [ "dialout" ]

    Declared by:

    [7816]<nixpkgs/nixos/modules/services/search/hound.nix>

[7817]services.hound.group

    Group the hound daemon should execute under.

    Type: string

    Default: "hound"

    Declared by:

    [7818]<nixpkgs/nixos/modules/services/search/hound.nix>

[7819]services.hound.home

    The path to use as hound's $HOME. If the default user "hound" is configured then this is the
    home of the "hound" user.

    Type: path

    Default: "/var/lib/hound"

    Declared by:

    [7820]<nixpkgs/nixos/modules/services/search/hound.nix>

[7821]services.hound.listen

    Listen on this IP:port / :port

    Type: string

    Default: "0.0.0.0:6080"

    Example: "127.0.0.1:6080 or just :6080"

    Declared by:

    [7822]<nixpkgs/nixos/modules/services/search/hound.nix>

[7823]services.hound.user

    User the hound daemon should execute under.

    Type: string

    Default: "hound"

    Declared by:

    [7824]<nixpkgs/nixos/modules/services/search/hound.nix>

[7825]services.htpdate.enable

    Enable htpdate daemon.

    Type: boolean

    Default: false

    Declared by:

    [7826]<nixpkgs/nixos/modules/services/networking/htpdate.nix>

[7827]services.htpdate.extraOptions

    Additional command line arguments to pass to htpdate.

    Type: string

    Default: ""

    Declared by:

    [7828]<nixpkgs/nixos/modules/services/networking/htpdate.nix>

[7829]services.htpdate.proxy

    HTTP proxy used for requests.

    Type: string

    Default: ""

    Example: "127.0.0.1:8118"

    Declared by:

    [7830]<nixpkgs/nixos/modules/services/networking/htpdate.nix>

[7831]services.htpdate.servers

    HTTP servers to use for time synchronization.

    Type: list of strings

    Default: [ "www.google.com" ]

    Declared by:

    [7832]<nixpkgs/nixos/modules/services/networking/htpdate.nix>

[7833]services.httpd.enable

    Whether to enable the Apache HTTP Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7834]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7835]services.httpd.enableMellon

    Whether to enable the mod_auth_mellon module.

    Type: boolean

    Default: false

    Declared by:

    [7836]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7837]services.httpd.enablePHP

    Whether to enable the PHP module.

    Type: boolean

    Default: false

    Declared by:

    [7838]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7839]services.httpd.enablePerl

    Whether to enable the Perl module (mod_perl).

    Type: boolean

    Default: false

    Declared by:

    [7840]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7841]services.httpd.package

    Overridable attribute of the Apache HTTP Server package to use.

    Type: package

    Default: "pkgs.apacheHttpd"

    Declared by:

    [7842]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7843]services.httpd.adminAddr

    E-mail address of the server administrator.

    Type: string

    Example: "admin@example.org"

    Declared by:

    [7844]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7845]services.httpd.configFile

    Override the configuration file used by Apache. By default, NixOS generates one
    automatically.

    Type: path

    Default: "confFile"

    Example:

    pkgs.writeText "httpd.conf" "# my custom config file ..."

    Declared by:

    [7846]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7847]services.httpd.extraConfig

    Configuration lines appended to the generated Apache configuration file. Note that this
    mechanism will not work when configFile is overridden.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [7848]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7849]services.httpd.extraModules

    Additional Apache modules to be used. These can be specified as a string in the case of
    modules distributed with Apache, or as an attribute set specifying the name and path of the
    module.

    Type: list of unspecifieds

    Default: [ ]

    Example:

    [
      "proxy_connect"
      { name = "jk"; path = "${pkgs.tomcat_connectors}/modules/mod_jk.so"; }
    ]

    Declared by:

    [7850]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7851]services.httpd.group

    Group under which httpd children processes run.

    Type: string

    Default: "wwwrun"

    Declared by:

    [7852]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7853]services.httpd.logDir

    Directory for Apache's log files. It is created automatically.

    Type: path

    Default: "/var/log/httpd"

    Declared by:

    [7854]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7855]services.httpd.logFormat

    Log format for log files. Possible values are: combined, common, referer, agent. See [7856]
    https://httpd.apache.org/docs/2.4/logs.html for more details.

    Type: string

    Default: "common"

    Example: "combined"

    Declared by:

    [7857]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7858]services.httpd.logPerVirtualHost

    If enabled, each virtual host gets its own access.log and error.log, namely suffixed by the
    hostName of the virtual host.

    Type: boolean

    Default: true

    Declared by:

    [7859]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7860]services.httpd.maxClients

    Maximum number of httpd processes (prefork)

    Type: signed integer

    Default: 150

    Example: 8

    Declared by:

    [7861]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7862]services.httpd.maxRequestsPerChild

    Maximum number of httpd requests answered per httpd child (prefork), 0 means unlimited.

    Type: signed integer

    Default: 0

    Example: 500

    Declared by:

    [7863]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7864]services.httpd.mpm

    Multi-processing module to be used by Apache. Available modules are prefork (handles each
    request in a separate child process), worker (hybrid approach that starts a number of child
    processes each running a number of threads) and event (the default; a recent variant of
    worker that handles persistent connections more efficiently).

    Type: one of "event", "prefork", "worker"

    Default: "event"

    Example: "worker"

    Declared by:

    [7865]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7866]services.httpd.phpOptions

    Options appended to the PHP configuration file php.ini.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    date.timezone = "CET"
    ''

    Declared by:

    [7867]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7868]services.httpd.phpPackage

    Overridable attribute of the PHP package to use.

    Type: package

    Default: "pkgs.php"

    Declared by:

    [7869]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7870]services.httpd.sslCiphers

    Cipher Suite available for negotiation in SSL proxy handshake.

    Type: string

    Default: "HIGH:!aNULL:!MD5:!EXP"

    Declared by:

    [7871]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7872]services.httpd.sslProtocols

    Allowed SSL/TLS protocol versions.

    Type: string

    Default: "All -SSLv2 -SSLv3 -TLSv1 -TLSv1.1"

    Example: "All -SSLv2 -SSLv3"

    Declared by:

    [7873]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7874]services.httpd.user

    User account under which httpd children processes run.

    If you require the main httpd process to run as root add the following configuration:

    systemd.services.httpd.serviceConfig.User = lib.mkForce "root";

    Type: string

    Default: "wwwrun"

    Declared by:

    [7875]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7876]services.httpd.virtualHosts

    Specification of the virtual hosts served by Apache. Each element should be an attribute set
    specifying the configuration of the virtual host.

    Type: attribute set of submodules

    Default: { localhost = { documentRoot = "\${pkgs.apacheHttpd.out}/htdocs"; } ; }

    Example:

    {
      "foo.example.com" = {
        forceSSL = true;
        documentRoot = "/var/www/foo.example.com"
      };
      "bar.example.com" = {
        addSSL = true;
        documentRoot = "/var/www/bar.example.com";
      };
    }

    Declared by:

    [7877]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7878]services.httpd.virtualHosts.<name>.enableACME

    Whether to ask Let's Encrypt to sign a certificate for this vhost. Alternately, you can use
    an existing certificate through useACMEHost.

    Type: boolean

    Default: false

    Declared by:

    [7879]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7880]services.httpd.virtualHosts.<name>.enableUserDir

    Whether to enable serving ~/public_html as /~username.

    Type: boolean

    Default: false

    Declared by:

    [7881]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7882]services.httpd.virtualHosts.<name>.acmeRoot

    Directory for the acme challenge which is PUBLIC, don't put certs or keys in here

    Type: string

    Default: "/var/lib/acme/acme-challenge"

    Declared by:

    [7883]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7884]services.httpd.virtualHosts.<name>.addSSL

    Whether to enable HTTPS in addition to plain HTTP. This will set defaults for listen to
    listen on all interfaces on the respective default ports (80, 443).

    Type: boolean

    Default: false

    Declared by:

    [7885]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7886]services.httpd.virtualHosts.<name>.adminAddr

    E-mail address of the server administrator.

    Type: null or string

    Default: null

    Example: "admin@example.org"

    Declared by:

    [7887]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7888]services.httpd.virtualHosts.<name>.documentRoot

    The path of Apache's document root directory. If left undefined, an empty directory in the
    Nix store will be used as root.

    Type: null or path

    Default: null

    Example: "/data/webserver/docs"

    Declared by:

    [7889]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7890]services.httpd.virtualHosts.<name>.extraConfig

    These lines go to httpd.conf verbatim. They will go after directories and directory aliases
    defined by default.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    <Directory /home>
      Options FollowSymlinks
      AllowOverride All
    </Directory>
    ''

    Declared by:

    [7891]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7892]services.httpd.virtualHosts.<name>.forceSSL

    Whether to add a separate nginx server block that permanently redirects (301) all plain HTTP
    traffic to HTTPS. This will set defaults for listen to listen on all interfaces on the
    respective default ports (80, 443), where the non-SSL listens are used for the redirect
    vhosts.

    Type: boolean

    Default: false

    Declared by:

    [7893]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7894]services.httpd.virtualHosts.<name>.globalRedirect

    If set, all requests for this host are redirected permanently to the given URL.

    Type: null or string

    Default: null

    Example: "http://newserver.example.org/"

    Declared by:

    [7895]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7896]services.httpd.virtualHosts.<name>.hostName

    Canonical hostname for the server.

    Type: string

    Default: "‹name›"

    Declared by:

    [7897]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7898]services.httpd.virtualHosts.<name>.http2

    Whether to enable HTTP 2. HTTP/2 is supported in all multi-processing modules that come with
    httpd. However, if you use the prefork mpm, there will be severe restrictions. Refer to 
    [7899]https://httpd.apache.org/docs/2.4/howto/http2.html#mpm-config for details.

    Type: boolean

    Default: true

    Declared by:

    [7900]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7901]services.httpd.virtualHosts.<name>.listen

    Listen addresses and ports for this virtual host.

    Note: This option overrides addSSL, forceSSL and onlySSL.

    Type: list of submodules

    Default: [ ]

    Example: [ { ip = "195.154.1.1"; port = 443; ssl = true; } { ip = "192.154.1.1"; port = 80; }
    { ip = "*"; port = 8080; } ]

    Declared by:

    [7902]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7903]services.httpd.virtualHosts.<name>.listen.*.ip

    IP to listen on. 0.0.0.0 for IPv4 only, * for all.

    Type: string

    Default: "*"

    Declared by:

    [7904]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7905]services.httpd.virtualHosts.<name>.listen.*.port

    Port to listen on

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Declared by:

    [7906]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7907]services.httpd.virtualHosts.<name>.listen.*.ssl

    Whether to enable SSL (https) support.

    Type: boolean

    Default: false

    Declared by:

    [7908]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7909]services.httpd.virtualHosts.<name>.locations

    Declarative location config. See [7910]https://httpd.apache.org/docs/2.4/mod/core.html#
    location for details.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "/" = {
        proxyPass = "http://localhost:3000";
      };
      "/foo/bar.png" = {
        alias = "/home/eelco/some-file.png";
      };
    };

    Declared by:

    [7911]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7912]services.httpd.virtualHosts.<name>.locations.<name>.alias

    Alias directory for requests. See [7913]https://httpd.apache.org/docs/2.4/mod/mod_alias.html#
    alias.

    Type: null or path

    Default: null

    Example: "/your/alias/directory"

    Declared by:

    [7914]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7915]services.httpd.virtualHosts.<name>.locations.<name>.extraConfig

    These lines go to the end of the location verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [7916]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7917]services.httpd.virtualHosts.<name>.locations.<name>.index

    Adds DirectoryIndex directive. See [7918]https://httpd.apache.org/docs/2.4/mod/mod_dir.html#
    directoryindex.

    Type: null or string

    Default: null

    Example: "index.php index.html"

    Declared by:

    [7919]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7920]services.httpd.virtualHosts.<name>.locations.<name>.priority

    Order of this location block in relation to the others in the vhost. The semantics are the
    same as with `lib.mkOrder`. Smaller values have a greater priority.

    Type: signed integer

    Default: 1000

    Declared by:

    [7921]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7922]services.httpd.virtualHosts.<name>.locations.<name>.proxyPass

    Sets up a simple reverse proxy as described by [7923]https://httpd.apache.org/docs/2.4/howto/
    reverse_proxy.html#simple.

    Type: null or string

    Default: null

    Example: "http://www.example.org/"

    Declared by:

    [7924]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7925]services.httpd.virtualHosts.<name>.logFormat

    Log format for Apache's log files. Possible values are: combined, common, referer, agent.

    Type: string

    Default: "common"

    Example: "combined"

    Declared by:

    [7926]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7927]services.httpd.virtualHosts.<name>.onlySSL

    Whether to enable HTTPS and reject plain HTTP connections. This will set defaults for listen
    to listen on all interfaces on port 443.

    Type: boolean

    Default: false

    Declared by:

    [7928]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7929]services.httpd.virtualHosts.<name>.robotsEntries

    Specification of pages to be ignored by web crawlers. See [7930]http://www.robotstxt.org/ for
    details.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "Disallow: /foo/"

    Declared by:

    [7931]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7932]services.httpd.virtualHosts.<name>.servedDirs

    This option provides a simple way to serve static directories.

    Type: list of attribute sets

    Default: [ ]

    Example: [ { dir = "/home/eelco/Dev/nix-homepage"; urlPath = "/nix"; } ]

    Declared by:

    [7933]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7934]services.httpd.virtualHosts.<name>.servedFiles

    This option provides a simple way to serve individual, static files.

    Note: This option has been deprecated and will be removed in a future version of NixOS. You
    can achieve the same result by making use of the locations.<name>.alias option.

    Type: list of attribute sets

    Default: [ ]

    Example: [ { file = "/home/eelco/some-file.png"; urlPath = "/foo/bar.png"; } ]

    Declared by:

    [7935]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7936]services.httpd.virtualHosts.<name>.serverAliases

    Additional names of virtual hosts served by this virtual host configuration.

    Type: list of strings

    Default: [ ]

    Example: [ "www.example.org" "www.example.org:8080" "example.org" ]

    Declared by:

    [7937]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7938]services.httpd.virtualHosts.<name>.sslServerCert

    Path to server SSL certificate.

    Type: path

    Example: "/var/host.cert"

    Declared by:

    [7939]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7940]services.httpd.virtualHosts.<name>.sslServerChain

    Path to server SSL chain file.

    Type: null or path

    Default: null

    Example: "/var/ca.pem"

    Declared by:

    [7941]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7942]services.httpd.virtualHosts.<name>.sslServerKey

    Path to server SSL certificate key.

    Type: path

    Example: "/var/host.key"

    Declared by:

    [7943]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7944]services.httpd.virtualHosts.<name>.useACMEHost

    A host of an existing Let's Encrypt certificate to use. This is useful if you have many
    subdomains and want to avoid hitting the [7945]rate limit. Alternately, you can generate a
    certificate through enableACME. Note that this option does not create any certificates, nor
    it does add subdomains to existing ones – you will need to create them manually using [7946]
    security.acme.certs.

    Type: null or string

    Default: null

    Declared by:

    [7947]<nixpkgs/nixos/modules/services/web-servers/apache-httpd/default.nix>

[7948]services.hydra.enable

    Whether to run Hydra services.

    Type: boolean

    Default: false

    Declared by:

    [7949]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7950]services.hydra.package

    The Hydra package.

    Type: package

    Default: "pkgs.hydra-unstable"

    Declared by:

    [7951]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7952]services.hydra.buildMachinesFiles

    List of files containing build machines.

    Type: list of paths

    Default: [ ]

    Example: [ "/etc/nix/machines" "/var/lib/hydra/provisioner/machines" ]

    Declared by:

    [7953]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7954]services.hydra.dbi

    The DBI string for Hydra database connection.

    NOTE: Attempts to set `application_name` will be overridden by `hydra-TYPE` (where TYPE is
    e.g. `evaluator`, `queue-runner`, etc.) in all hydra services to more easily distinguish
    where queries are coming from.

    Type: string

    Default: "dbi:Pg:dbname=hydra;user=hydra;"

    Example: "dbi:Pg:dbname=hydra;host=postgres.example.org;user=foo;"

    Declared by:

    [7955]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7956]services.hydra.debugServer

    Whether to run the server in debug mode.

    Type: boolean

    Default: false

    Declared by:

    [7957]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7958]services.hydra.extraConfig

    Extra lines for the Hydra configuration.

    Type: strings concatenated with "\n"

    Declared by:

    [7959]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7960]services.hydra.extraEnv

    Extra environment variables for Hydra.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [7961]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7962]services.hydra.gcRootsDir

    Directory that holds Hydra garbage collector roots.

    Type: path

    Default: "/nix/var/nix/gcroots/hydra"

    Declared by:

    [7963]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7964]services.hydra.hydraURL

    The base URL for the Hydra webserver instance. Used for links in emails.

    Type: string

    Declared by:

    [7965]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7966]services.hydra.listenHost

    The hostname or address to listen on or * to listen on all interfaces.

    Type: string

    Default: "*"

    Example: "localhost"

    Declared by:

    [7967]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7968]services.hydra.logo

    Path to a file containing the logo of your Hydra instance.

    Type: null or path

    Default: null

    Declared by:

    [7969]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7970]services.hydra.minimumDiskFree

    Threshold of minimum disk space (GiB) to determine if the queue runner should run or not.

    Type: signed integer

    Default: 0

    Declared by:

    [7971]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7972]services.hydra.minimumDiskFreeEvaluator

    Threshold of minimum disk space (GiB) to determine if the evaluator should run or not.

    Type: signed integer

    Default: 0

    Declared by:

    [7973]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7974]services.hydra.notificationSender

    Sender email address used for email notifications.

    Type: string

    Declared by:

    [7975]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7976]services.hydra.port

    TCP port the web server should listen to.

    Type: signed integer

    Default: 3000

    Declared by:

    [7977]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7978]services.hydra.smtpHost

    Hostname of the SMTP server to use to send email.

    Type: null or string

    Default: null

    Example: [ "localhost" ]

    Declared by:

    [7979]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7980]services.hydra.tracker

    Piece of HTML that is included on all pages.

    Type: string

    Default: ""

    Declared by:

    [7981]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7982]services.hydra.useSubstitutes

    Whether to use binary caches for downloading store paths. Note that binary substitutions
    trigger (a potentially large number of) additional HTTP requests that slow down the queue
    monitor thread significantly. Also, this Hydra instance will serve those downloaded store
    paths to its users with its own signature attached as if it had built them itself, so don't
    enable this feature unless your active binary caches are absolute trustworthy.

    Type: boolean

    Default: false

    Declared by:

    [7983]<nixpkgs/nixos/modules/services/continuous-integration/hydra/default.nix>

[7984]services.hydron.enable

    Whether to enable hydron.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [7985]<nixpkgs/nixos/modules/services/web-servers/hydron.nix>

[7986]services.hydron.dataDir

    Location where hydron runs and stores data.

    Type: path

    Default: "/var/lib/hydron"

    Example: "/home/okina/hydron"

    Declared by:

    [7987]<nixpkgs/nixos/modules/services/web-servers/hydron.nix>

[7988]services.hydron.fetchTags

    Fetch tags for imported images and webm from gelbooru.

    Type: boolean

    Default: true

    Declared by:

    [7989]<nixpkgs/nixos/modules/services/web-servers/hydron.nix>

[7990]services.hydron.importPaths

    Paths that hydron will recursively import.

    Type: list of paths

    Default: [ ]

    Example: [ "/home/okina/Pictures" ]

    Declared by:

    [7991]<nixpkgs/nixos/modules/services/web-servers/hydron.nix>

[7992]services.hydron.interval

    How often we run hydron import and possibly fetch tags. Runs by default every week.

    The format is described in systemd.time(7).

    Type: string

    Default: "weekly"

    Example: "06:00"

    Declared by:

    [7993]<nixpkgs/nixos/modules/services/web-servers/hydron.nix>

[7994]services.hydron.listenAddress

    Listen on a specific IP address and port.

    Type: null or string

    Default: null

    Example: "127.0.0.1:8010"

    Declared by:

    [7995]<nixpkgs/nixos/modules/services/web-servers/hydron.nix>

[7996]services.hydron.password

    Password for the hydron database.

    Type: string

    Default: "hydron"

    Example: "dumbpass"

    Declared by:

    [7997]<nixpkgs/nixos/modules/services/web-servers/hydron.nix>

[7998]services.hydron.passwordFile

    Password file for the hydron database.

    Type: path

    Default: "/run/keys/hydron-password-file"

    Example: "/home/okina/hydron/keys/pass"

    Declared by:

    [7999]<nixpkgs/nixos/modules/services/web-servers/hydron.nix>

[8000]services.hydron.postgresArgs

    Postgresql connection arguments.

    Type: string

    Example:

    ''
    {
      "driver": "postgres",
      "connection": "user=hydron password=dumbpass dbname=hydron sslmode=disable"
    }
    ''

    Declared by:

    [8001]<nixpkgs/nixos/modules/services/web-servers/hydron.nix>

[8002]services.hydron.postgresArgsFile

    Postgresql connection arguments file.

    Type: path

    Default: "/run/keys/hydron-postgres-args"

    Example: "/home/okina/hydron/keys/postgres"

    Declared by:

    [8003]<nixpkgs/nixos/modules/services/web-servers/hydron.nix>

[8004]services.hylafax.enable

    Whether to enable HylaFAX server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8005]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8006]services.hylafax.areaCode

    Area code for server and all modems.

    Type: null or string

    Default: null

    Example: "30"

    Declared by:

    [8007]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8008]services.hylafax.autostart

    Autostart the HylaFAX queue manager at system start. If this is false, the queue manager will
    still be started if there are pending jobs or if a user tries to connect to it.

    Type: boolean

    Default: true

    Example: false

    Declared by:

    [8009]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8010]services.hylafax.commonModemConfig

    Attribute set of default values for modem config files etc/config.*. Values can be either
    strings or integers (which will be added to the config file verbatimly) or lists thereof
    (which will be translated to multiple lines with the same configuration key). Boolean values
    are translated to "Yes" or "No". The default contains some reasonable configuration to yield
    an operational system.

    Think twice before changing paths of fax-processing scripts.

    Type: attribute set of list of string or signed integer convertible to it or boolean
    convertible to its or string or signed integer convertible to it or boolean convertible to it
    convertible to its

    Example: { InternationalPrefix = "00"; LongDistancePrefix = "0"; }

    Declared by:

    [8011]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8012]services.hylafax.countryCode

    Country code for server and all modems.

    Type: null or string

    Default: null

    Example: "49"

    Declared by:

    [8013]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8014]services.hylafax.faxcron.enable.frequency

    Purge old files from the spooling area with faxcron with the given frequency (see
    systemd.time(7)).

    Type: null or string

    Default: null

    Example: "daily"

    Declared by:

    [8015]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8016]services.hylafax.faxcron.enable.spoolInit

    Whether to enable Purge old files from the spooling area with faxcron each time the spooling
    area is initialized. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8017]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8018]services.hylafax.faxcron.infoDays

    Set the expiration time for data in the remote machine information directory in days.

    Type: positive integer, meaning >0

    Default: 30

    Declared by:

    [8019]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8020]services.hylafax.faxcron.logDays

    Set the expiration time for session trace log files in days.

    Type: positive integer, meaning >0

    Default: 30

    Declared by:

    [8021]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8022]services.hylafax.faxcron.rcvDays

    Set the expiration time for files in the received facsimile queue in days.

    Type: positive integer, meaning >0

    Default: 7

    Declared by:

    [8023]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8024]services.hylafax.faxqConfig

    Attribute set of lines for the global faxq config file etc/config. Values can be either
    strings or integers (which will be added to the config file verbatimly) or lists thereof
    (which will be translated to multiple lines with the same configuration key). Boolean values
    are translated to "Yes" or "No". The default contains some reasonable configuration to yield
    an operational system.

    Type: attribute set of list of string or signed integer convertible to it or boolean
    convertible to its or string or signed integer convertible to it or boolean convertible to it
    convertible to its

    Example: { InternationalPrefix = "00"; LongDistancePrefix = "0"; }

    Declared by:

    [8025]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8026]services.hylafax.faxqclean.enable.frequency

    Purge old files from the spooling area with faxcron with the given frequency (see
    systemd.time(7)).

    Type: null or string

    Default: null

    Example: "daily"

    Declared by:

    [8027]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8028]services.hylafax.faxqclean.enable.spoolInit

    Whether to enable Purge old files from the spooling area with faxqclean each time the
    spooling area is initialized. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8029]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8030]services.hylafax.faxqclean.archiving

    Enable or suppress job archiving: never disables job archiving, as-flagged archives jobs that
    have been flagged for archiving by sendfax, always forces archiving of all jobs. See also
    sendfax(1) and faxqclean(8).

    Type: one of "never", "as-flagged", "always"

    Default: "as-flagged"

    Example: "always"

    Declared by:

    [8031]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8032]services.hylafax.faxqclean.docqMinutes

    Set the document age threshold (in minutes) that controls how long unreferenced files may
    reside in the docq directory.

    Type: positive integer, meaning >0

    Default: 60

    Example:

    24*60

    Declared by:

    [8033]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8034]services.hylafax.faxqclean.doneqMinutes

    Set the job age threshold (in minutes) that controls how long jobs may reside in the doneq
    directory.

    Type: positive integer, meaning >0

    Default: 15

    Example:

    24*60

    Declared by:

    [8035]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8036]services.hylafax.hfaxdConfig

    Attribute set of lines for the global hfaxd config file etc/hfaxd.conf. Values can be either
    strings or integers (which will be added to the config file verbatimly) or lists thereof
    (which will be translated to multiple lines with the same configuration key). Boolean values
    are translated to "Yes" or "No". The default contains some reasonable configuration to yield
    an operational system.

    Type: attribute set of list of string or signed integer convertible to it or boolean
    convertible to its or string or signed integer convertible to it or boolean convertible to it
    convertible to its

    Example: { RecvqProtection = "0400"; }

    Declared by:

    [8037]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8038]services.hylafax.internationalPrefix

    International prefix for server and all modems.

    Type: null or string

    Default: null

    Example: "00"

    Declared by:

    [8039]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8040]services.hylafax.longDistancePrefix

    Long distance prefix for server and all modems.

    Type: null or string

    Default: null

    Example: "0"

    Declared by:

    [8041]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8042]services.hylafax.modems

    Description of installed modems. At least on modem must be defined to enable the HylaFAX
    server.

    Type: attribute set of submodules

    Default: { }

    Example: { ttyS1 = { config = { FAXNumber = "123456"; LocalIdentifier = "Smith"; } ; type =
    "cirrus"; } ; }

    Declared by:

    [8043]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8044]services.hylafax.modems.<name>.config

    Attribute set of values for the given modem. Values can be either strings or integers (which
    will be added to the config file verbatimly) or lists thereof (which will be translated to
    multiple lines with the same configuration key). Boolean values are translated to "Yes" or
    "No". The default contains some reasonable configuration to yield an operational system.

    Options defined here override options in commonModemConfig for this modem.

    Type: attribute set of list of string or signed integer convertible to it or boolean
    convertible to its or string or signed integer convertible to it or boolean convertible to it
    convertible to its

    Example: { AreaCode = "49"; FAXNumber = "123456"; LocalCode = "30"; LocalIdentifier =
    "LostInBerlin"; }

    Declared by:

    [8045]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8046]services.hylafax.modems.<name>.name

    Name of modem device, will be searched for in /dev.

    Type: string

    Example: "ttyS1"

    Declared by:

    [8047]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8048]services.hylafax.modems.<name>.type

    Name of modem configuration file, will be searched for in config in the spooling area
    directory.

    Type: string

    Example: "cirrus"

    Declared by:

    [8049]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8050]services.hylafax.sendmailPath

    Path to sendmail program. The default uses the local sendmail wrapper (see
    config.services.mail.sendmailSetuidWrapper), otherwise the false binary to cause an error if
    used.

    Type: path

    Example:

    ''${pkgs.postfix}/bin/sendmail

    Declared by:

    [8051]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8052]services.hylafax.spoolAreaPath

    The spooling area will be created/maintained at the location given here.

    Type: path

    Default: "/var/spool/fax"

    Declared by:

    [8053]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8054]services.hylafax.spoolExtraInit

    Additional shell code that is executed within the spooling area directory right after its
    setup.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "chmod 0755 . # everyone may read my faxes"

    Declared by:

    [8055]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8056]services.hylafax.userAccessFile

    The hosts.hfaxd file entry in the spooling area will be symlinked to the location given here.
    This file must exist and be readable only by the uucp user. See hosts.hfaxd(5) for details.
    This configuration permits access for all users: environment.etc."hosts.hfaxd" = { mode =
    "0600"; user = "uucp"; text = ".*"; }; Note that host-based access can be controlled with
    config.systemd.sockets.hylafax-hfaxd.listenStreams; by default, only 127.0.0.1 is permitted
    to connect.

    Type: path

    Default: "/etc/hosts.hfaxd"

    Declared by:

    [8057]<nixpkgs/nixos/modules/services/networking/hylafax/options.nix>

[8058]services.i2p.enable

    Whether to enable I2P router.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8059]<nixpkgs/nixos/modules/services/networking/i2p.nix>

[8060]services.i2pd.enable

    Enables I2Pd as a running service upon activation. Please read http://i2pd.readthedocs.io/en/
    latest/ for further configuration help.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8061]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8062]services.i2pd.enableIPv4

    Whether to enable IPv4 connectivity.

    Type: boolean

    Default: true

    Example: true

    Declared by:

    [8063]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8064]services.i2pd.enableIPv6

    Whether to enable IPv6 connectivity.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8065]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8066]services.i2pd.address

    Your external IP or hostname.

    Type: null or string

    Default: null

    Declared by:

    [8067]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8068]services.i2pd.addressbook.defaulturl

    AddressBook subscription URL for initial setup

    Type: string

    Default: "http://joajgazyztfssty4w2on5oaqksz6tqoxbduy553y34mf4byv6gpq.b32.i2p/export/
    alive-hosts.txt"

    Declared by:

    [8069]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8070]services.i2pd.addressbook.subscriptions

    AddressBook subscription URLs

    Type: list of strings

    Default: [ "http://inr.i2p/export/alive-hosts.txt" "http://i2p-projekt.i2p/hosts.txt" "http:/
    /stats.i2p/cgi-bin/newhosts.txt" ]

    Declared by:

    [8071]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8072]services.i2pd.bandwidth

    Set a router bandwidth limit integer in KBps. If not set, i2pd defaults to 32KBps.

    Type: null or signed integer

    Default: null

    Declared by:

    [8073]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8074]services.i2pd.dataDir

    Alternative path to storage of i2pd data (RI, keys, peer profiles, ...)

    Type: null or string

    Default: null

    Declared by:

    [8075]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8076]services.i2pd.exploratory.inbound.length

    Guaranteed minimum hops for exploratory tunnels.

    Type: signed integer

    Default: 3

    Declared by:

    [8077]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8078]services.i2pd.exploratory.inbound.quantity

    Number of simultaneous exploratory tunnels.

    Type: signed integer

    Default: 5

    Declared by:

    [8079]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8080]services.i2pd.exploratory.outbound.length

    Guaranteed minimum hops for exploratory tunnels.

    Type: signed integer

    Default: 3

    Declared by:

    [8081]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8082]services.i2pd.exploratory.outbound.quantity

    Number of simultaneous exploratory tunnels.

    Type: signed integer

    Default: 5

    Declared by:

    [8083]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8084]services.i2pd.family

    Specify a family the router belongs to.

    Type: null or string

    Default: null

    Declared by:

    [8085]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8086]services.i2pd.floodfill

    If the router is declared to be unreachable and needs introduction nodes.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8087]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8088]services.i2pd.ifname

    Network interface to bind to.

    Type: null or string

    Default: null

    Declared by:

    [8089]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8090]services.i2pd.ifname4

    IPv4 interface to bind to.

    Type: null or string

    Default: null

    Declared by:

    [8091]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8092]services.i2pd.ifname6

    IPv6 interface to bind to.

    Type: null or string

    Default: null

    Declared by:

    [8093]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8094]services.i2pd.inTunnels

    Serve something on I2P network at port and delegate requests to address inPort.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [8095]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8096]services.i2pd.inTunnels.<name>.enable

    Whether to enable ‹name›.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8097]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8098]services.i2pd.inTunnels.<name>.accessList

    I2P nodes that are allowed to connect to this service.

    Type: list of strings

    Default: [ ]

    Declared by:

    [8099]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8100]services.i2pd.inTunnels.<name>.address

    Bind address for ‹name› endpoint.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [8101]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8102]services.i2pd.inTunnels.<name>.crypto.tagsToSend

    Number of ElGamal/AES tags to send.

    Type: signed integer

    Default: 40

    Declared by:

    [8103]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8104]services.i2pd.inTunnels.<name>.destination

    Remote endpoint, I2P hostname or b32.i2p address.

    Type: string

    Declared by:

    [8105]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8106]services.i2pd.inTunnels.<name>.inPort

    Service port. Default to the tunnel's listen port.

    Type: signed integer

    Default: 0

    Declared by:

    [8107]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8108]services.i2pd.inTunnels.<name>.inbound.length

    Guaranteed minimum hops for ‹name› tunnels.

    Type: signed integer

    Default: 3

    Declared by:

    [8109]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8110]services.i2pd.inTunnels.<name>.inbound.quantity

    Number of simultaneous ‹name› tunnels.

    Type: signed integer

    Default: 5

    Declared by:

    [8111]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8112]services.i2pd.inTunnels.<name>.keys

    Keyset used for tunnel identity.

    Type: string

    Default: "‹name›-keys.dat"

    Declared by:

    [8113]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8114]services.i2pd.inTunnels.<name>.name

    The endpoint name.

    Type: string

    Default: "‹name›"

    Declared by:

    [8115]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8116]services.i2pd.inTunnels.<name>.outbound.length

    Guaranteed minimum hops for ‹name› tunnels.

    Type: signed integer

    Default: 3

    Declared by:

    [8117]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8118]services.i2pd.inTunnels.<name>.outbound.quantity

    Number of simultaneous ‹name› tunnels.

    Type: signed integer

    Default: 5

    Declared by:

    [8119]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8120]services.i2pd.inTunnels.<name>.port

    Bind port for ‹name› endoint.

    Type: signed integer

    Default: 0

    Declared by:

    [8121]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8122]services.i2pd.limits.coreSize

    Maximum size of corefile in Kb (0 - use system limit).

    Type: signed integer

    Default: 0

    Declared by:

    [8123]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8124]services.i2pd.limits.ntcpHard

    Maximum number of active transit sessions.

    Type: signed integer

    Default: 0

    Declared by:

    [8125]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8126]services.i2pd.limits.ntcpSoft

    Threshold to start probabalistic backoff with ntcp sessions (default: use system limit).

    Type: signed integer

    Default: 0

    Declared by:

    [8127]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8128]services.i2pd.limits.ntcpThreads

    Maximum number of threads used by NTCP DH worker.

    Type: signed integer

    Default: 1

    Declared by:

    [8129]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8130]services.i2pd.limits.openFiles

    Maximum number of open files (0 - use system default).

    Type: signed integer

    Default: 0

    Declared by:

    [8131]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8132]services.i2pd.limits.transittunnels

    Maximum number of active transit sessions.

    Type: signed integer

    Default: 2500

    Declared by:

    [8133]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8134]services.i2pd.logCLFTime

    Whether to enable Full CLF-formatted date and time to log.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8135]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8136]services.i2pd.logLevel

    The log level. i2pd defaults to "info" but that generates copious amounts of log messages.

    We default to "error" which is similar to the default log level of tor.

    Type: one of "debug", "info", "warn", "error"

    Default: "error"

    Declared by:

    [8137]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8138]services.i2pd.nat

    Whether to enable NAT bypass.

    Type: boolean

    Default: true

    Example: true

    Declared by:

    [8139]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8140]services.i2pd.netid

    I2P overlay netid.

    Type: signed integer

    Default: 2

    Declared by:

    [8141]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8142]services.i2pd.notransit

    Tells the router to not accept transit tunnels during startup.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8143]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8144]services.i2pd.ntcp

    Whether to enable ntcp.

    Type: boolean

    Default: true

    Example: true

    Declared by:

    [8145]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8146]services.i2pd.ntcp2.enable

    Whether to enable NTCP2..

    Type: boolean

    Default: true

    Example: true

    Declared by:

    [8147]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8148]services.i2pd.ntcp2.port

    Port to listen for incoming NTCP2 connections (0=auto).

    Type: signed integer

    Default: 0

    Declared by:

    [8149]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8150]services.i2pd.ntcp2.published

    Whether to enable NTCP2 publication.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8151]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8152]services.i2pd.ntcpProxy

    Proxy URL for NTCP transport.

    Type: null or string

    Default: null

    Declared by:

    [8153]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8154]services.i2pd.outTunnels

    Connect to someone as a client and establish a local accept endpoint

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [8155]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8156]services.i2pd.outTunnels.<name>.enable

    Whether to enable ‹name›.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8157]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8158]services.i2pd.outTunnels.<name>.address

    Bind address for ‹name› endpoint.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [8159]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8160]services.i2pd.outTunnels.<name>.crypto.tagsToSend

    Number of ElGamal/AES tags to send.

    Type: signed integer

    Default: 40

    Declared by:

    [8161]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8162]services.i2pd.outTunnels.<name>.destination

    Remote endpoint, I2P hostname or b32.i2p address.

    Type: string

    Declared by:

    [8163]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8164]services.i2pd.outTunnels.<name>.destinationPort

    Connect to particular port at destination.

    Type: null or signed integer

    Default: null

    Declared by:

    [8165]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8166]services.i2pd.outTunnels.<name>.inbound.length

    Guaranteed minimum hops for ‹name› tunnels.

    Type: signed integer

    Default: 3

    Declared by:

    [8167]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8168]services.i2pd.outTunnels.<name>.inbound.quantity

    Number of simultaneous ‹name› tunnels.

    Type: signed integer

    Default: 5

    Declared by:

    [8169]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8170]services.i2pd.outTunnels.<name>.keys

    Keyset used for tunnel identity.

    Type: string

    Default: "‹name›-keys.dat"

    Declared by:

    [8171]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8172]services.i2pd.outTunnels.<name>.name

    The endpoint name.

    Type: string

    Default: "‹name›"

    Declared by:

    [8173]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8174]services.i2pd.outTunnels.<name>.outbound.length

    Guaranteed minimum hops for ‹name› tunnels.

    Type: signed integer

    Default: 3

    Declared by:

    [8175]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8176]services.i2pd.outTunnels.<name>.outbound.quantity

    Number of simultaneous ‹name› tunnels.

    Type: signed integer

    Default: 5

    Declared by:

    [8177]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8178]services.i2pd.outTunnels.<name>.port

    Bind port for ‹name› endoint.

    Type: signed integer

    Default: 0

    Declared by:

    [8179]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8180]services.i2pd.port

    I2P listen port. If no one is given the router will pick between 9111 and 30777.

    Type: null or signed integer

    Default: null

    Declared by:

    [8181]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8182]services.i2pd.precomputation.elgamal

    Whenever to use precomputated tables for ElGamal. i2pd defaults to false to save 64M of
    memory (and looses some performance).

    We default to true as that is what most users want anyway.

    Type: boolean

    Default: true

    Example: true

    Declared by:

    [8183]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8184]services.i2pd.proto.bob.enable

    Whether to enable bob.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8185]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8186]services.i2pd.proto.bob.address

    Bind address for bob endpoint.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [8187]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8188]services.i2pd.proto.bob.name

    The endpoint name.

    Type: string

    Default: "bob"

    Declared by:

    [8189]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8190]services.i2pd.proto.bob.port

    Bind port for bob endoint.

    Type: signed integer

    Default: 2827

    Declared by:

    [8191]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8192]services.i2pd.proto.http.enable

    Whether to enable http.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8193]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8194]services.i2pd.proto.http.address

    Bind address for http endpoint.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [8195]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8196]services.i2pd.proto.http.auth

    Whether to enable Webconsole authentication.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8197]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8198]services.i2pd.proto.http.hostname

    Expected hostname for WebUI.

    Type: null or string

    Default: null

    Declared by:

    [8199]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8200]services.i2pd.proto.http.name

    The endpoint name.

    Type: string

    Default: "http"

    Declared by:

    [8201]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8202]services.i2pd.proto.http.pass

    Password for webconsole access.

    Type: string

    Default: "i2pd"

    Declared by:

    [8203]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8204]services.i2pd.proto.http.port

    Bind port for http endoint.

    Type: signed integer

    Default: 7070

    Declared by:

    [8205]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8206]services.i2pd.proto.http.strictHeaders

    Enable strict host checking on WebUI.

    Type: null or boolean

    Default: null

    Declared by:

    [8207]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8208]services.i2pd.proto.http.user

    Username for webconsole access

    Type: string

    Default: "i2pd"

    Declared by:

    [8209]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8210]services.i2pd.proto.httpProxy.enable

    Whether to enable httpproxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8211]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8212]services.i2pd.proto.httpProxy.address

    Bind address for httpproxy endpoint.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [8213]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8214]services.i2pd.proto.httpProxy.inbound.length

    Guaranteed minimum hops for httpproxy tunnels.

    Type: signed integer

    Default: 3

    Declared by:

    [8215]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8216]services.i2pd.proto.httpProxy.inbound.quantity

    Number of simultaneous httpproxy tunnels.

    Type: signed integer

    Default: 5

    Declared by:

    [8217]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8218]services.i2pd.proto.httpProxy.keys

    File to persist HTTPPROXY keys.

    Type: null or string

    Default: "httpproxy-keys.dat"

    Declared by:

    [8219]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8220]services.i2pd.proto.httpProxy.latency.max

    Max latency for tunnels.

    Type: null or signed integer

    Default: null

    Declared by:

    [8221]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8222]services.i2pd.proto.httpProxy.latency.min

    Min latency for tunnels.

    Type: null or signed integer

    Default: null

    Declared by:

    [8223]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8224]services.i2pd.proto.httpProxy.name

    The endpoint name.

    Type: string

    Default: "httpproxy"

    Declared by:

    [8225]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8226]services.i2pd.proto.httpProxy.outbound.length

    Guaranteed minimum hops for httpproxy tunnels.

    Type: signed integer

    Default: 3

    Declared by:

    [8227]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8228]services.i2pd.proto.httpProxy.outbound.quantity

    Number of simultaneous httpproxy tunnels.

    Type: signed integer

    Default: 5

    Declared by:

    [8229]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8230]services.i2pd.proto.httpProxy.outproxy

    Upstream outproxy bind address.

    Type: null or string

    Default: null

    Declared by:

    [8231]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8232]services.i2pd.proto.httpProxy.port

    Bind port for httpproxy endoint.

    Type: signed integer

    Default: 4444

    Declared by:

    [8233]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8234]services.i2pd.proto.i2cp.enable

    Whether to enable i2cp.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8235]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8236]services.i2pd.proto.i2cp.address

    Bind address for i2cp endpoint.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [8237]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8238]services.i2pd.proto.i2cp.name

    The endpoint name.

    Type: string

    Default: "i2cp"

    Declared by:

    [8239]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8240]services.i2pd.proto.i2cp.port

    Bind port for i2cp endoint.

    Type: signed integer

    Default: 7654

    Declared by:

    [8241]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8242]services.i2pd.proto.i2pControl.enable

    Whether to enable i2pcontrol.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8243]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8244]services.i2pd.proto.i2pControl.address

    Bind address for i2pcontrol endpoint.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [8245]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8246]services.i2pd.proto.i2pControl.name

    The endpoint name.

    Type: string

    Default: "i2pcontrol"

    Declared by:

    [8247]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8248]services.i2pd.proto.i2pControl.port

    Bind port for i2pcontrol endoint.

    Type: signed integer

    Default: 7650

    Declared by:

    [8249]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8250]services.i2pd.proto.sam.enable

    Whether to enable sam.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8251]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8252]services.i2pd.proto.sam.address

    Bind address for sam endpoint.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [8253]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8254]services.i2pd.proto.sam.name

    The endpoint name.

    Type: string

    Default: "sam"

    Declared by:

    [8255]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8256]services.i2pd.proto.sam.port

    Bind port for sam endoint.

    Type: signed integer

    Default: 7656

    Declared by:

    [8257]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8258]services.i2pd.proto.socksProxy.enable

    Whether to enable socksproxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8259]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8260]services.i2pd.proto.socksProxy.address

    Bind address for socksproxy endpoint.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [8261]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8262]services.i2pd.proto.socksProxy.inbound.length

    Guaranteed minimum hops for socksproxy tunnels.

    Type: signed integer

    Default: 3

    Declared by:

    [8263]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8264]services.i2pd.proto.socksProxy.inbound.quantity

    Number of simultaneous socksproxy tunnels.

    Type: signed integer

    Default: 5

    Declared by:

    [8265]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8266]services.i2pd.proto.socksProxy.keys

    File to persist SOCKSPROXY keys.

    Type: null or string

    Default: "socksproxy-keys.dat"

    Declared by:

    [8267]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8268]services.i2pd.proto.socksProxy.latency.max

    Max latency for tunnels.

    Type: null or signed integer

    Default: null

    Declared by:

    [8269]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8270]services.i2pd.proto.socksProxy.latency.min

    Min latency for tunnels.

    Type: null or signed integer

    Default: null

    Declared by:

    [8271]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8272]services.i2pd.proto.socksProxy.name

    The endpoint name.

    Type: string

    Default: "socksproxy"

    Declared by:

    [8273]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8274]services.i2pd.proto.socksProxy.outbound.length

    Guaranteed minimum hops for socksproxy tunnels.

    Type: signed integer

    Default: 3

    Declared by:

    [8275]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8276]services.i2pd.proto.socksProxy.outbound.quantity

    Number of simultaneous socksproxy tunnels.

    Type: signed integer

    Default: 5

    Declared by:

    [8277]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8278]services.i2pd.proto.socksProxy.outproxy

    Upstream outproxy bind address.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [8279]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8280]services.i2pd.proto.socksProxy.outproxyEnable

    Whether to enable SOCKS outproxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8281]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8282]services.i2pd.proto.socksProxy.outproxyPort

    Upstream outproxy bind port.

    Type: signed integer

    Default: 4444

    Declared by:

    [8283]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8284]services.i2pd.proto.socksProxy.port

    Bind port for socksproxy endoint.

    Type: signed integer

    Default: 4447

    Declared by:

    [8285]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8286]services.i2pd.reseed.file

    Full path to SU3 file to reseed from.

    Type: null or string

    Default: null

    Declared by:

    [8287]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8288]services.i2pd.reseed.floodfill

    Path to router info of floodfill to reseed from.

    Type: null or string

    Default: null

    Declared by:

    [8289]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8290]services.i2pd.reseed.proxy

    URL for reseed proxy, supports http/socks.

    Type: null or string

    Default: null

    Declared by:

    [8291]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8292]services.i2pd.reseed.urls

    Reseed URLs.

    Type: list of strings

    Default: [ ]

    Declared by:

    [8293]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8294]services.i2pd.reseed.verify

    Whether to enable SU3 signature verification.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8295]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8296]services.i2pd.reseed.zipfile

    Path to local .zip file to reseed from.

    Type: null or string

    Default: null

    Declared by:

    [8297]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8298]services.i2pd.share

    Limit of transit traffic from max bandwidth in percents.

    Type: signed integer

    Default: 100

    Declared by:

    [8299]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8300]services.i2pd.ssu

    Whether to enable ssu.

    Type: boolean

    Default: true

    Example: true

    Declared by:

    [8301]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8302]services.i2pd.trust.enable

    Whether to enable Explicit trust options.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8303]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8304]services.i2pd.trust.family

    Router Familiy to trust for first hops.

    Type: null or string

    Default: null

    Declared by:

    [8305]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8306]services.i2pd.trust.hidden

    Whether to enable Router concealment.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8307]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8308]services.i2pd.trust.routers

    Only connect to the listed routers.

    Type: list of strings

    Default: [ ]

    Declared by:

    [8309]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8310]services.i2pd.upnp.enable

    Whether to enable UPnP service discovery.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8311]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8312]services.i2pd.upnp.name

    Name i2pd appears in UPnP forwardings list.

    Type: string

    Default: "I2Pd"

    Declared by:

    [8313]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8314]services.i2pd.websocket.enable

    Whether to enable websockets.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8315]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8316]services.i2pd.websocket.address

    Bind address for websockets endpoint.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [8317]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8318]services.i2pd.websocket.name

    The endpoint name.

    Type: string

    Default: "websockets"

    Declared by:

    [8319]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8320]services.i2pd.websocket.port

    Bind port for websockets endoint.

    Type: signed integer

    Default: 7666

    Declared by:

    [8321]<nixpkgs/nixos/modules/services/networking/i2pd.nix>

[8322]services.icecast.enable

    Whether to enable Icecast server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8323]<nixpkgs/nixos/modules/services/audio/icecast.nix>

[8324]services.icecast.admin.password

    Password used for all administration functions.

    Type: string

    Declared by:

    [8325]<nixpkgs/nixos/modules/services/audio/icecast.nix>

[8326]services.icecast.admin.user

    Username used for all administration functions.

    Type: string

    Default: "admin"

    Declared by:

    [8327]<nixpkgs/nixos/modules/services/audio/icecast.nix>

[8328]services.icecast.extraConf

    icecast.xml content.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [8329]<nixpkgs/nixos/modules/services/audio/icecast.nix>

[8330]services.icecast.group

    Group privileges for the server.

    Type: string

    Default: "nogroup"

    Declared by:

    [8331]<nixpkgs/nixos/modules/services/audio/icecast.nix>

[8332]services.icecast.hostname

    DNS name or IP address that will be used for the stream directory lookups or possibily the
    playlist generation if a Host header is not provided.

    Type: null or string

    Default: null

    Declared by:

    [8333]<nixpkgs/nixos/modules/services/audio/icecast.nix>

[8334]services.icecast.listen.address

    Address Icecast will listen on.

    Type: string

    Default: "::"

    Declared by:

    [8335]<nixpkgs/nixos/modules/services/audio/icecast.nix>

[8336]services.icecast.listen.port

    TCP port that will be used to accept client connections.

    Type: signed integer

    Default: 8000

    Declared by:

    [8337]<nixpkgs/nixos/modules/services/audio/icecast.nix>

[8338]services.icecast.logDir

    Base directory used for logging.

    Type: path

    Default: "/var/log/icecast"

    Declared by:

    [8339]<nixpkgs/nixos/modules/services/audio/icecast.nix>

[8340]services.icecast.user

    User privileges for the server.

    Type: string

    Default: "nobody"

    Declared by:

    [8341]<nixpkgs/nixos/modules/services/audio/icecast.nix>

[8342]services.icecream.daemon.enable

    Whether to enable Icecream Daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8343]<nixpkgs/nixos/modules/services/networking/icecream/daemon.nix>

[8344]services.icecream.daemon.package

    Icecream package to use.

    Type: package

    Default: "pkgs.icecream"

    Declared by:

    [8345]<nixpkgs/nixos/modules/services/networking/icecream/daemon.nix>

[8346]services.icecream.daemon.cacheLimit

    Maximum size in Megabytes of cache used to store compile environments of compile clients.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 256

    Declared by:

    [8347]<nixpkgs/nixos/modules/services/networking/icecream/daemon.nix>

[8348]services.icecream.daemon.extraArgs

    Additional command line parameters.

    Type: list of strings

    Default: [ ]

    Example: [ "-v" ]

    Declared by:

    [8349]<nixpkgs/nixos/modules/services/networking/icecream/daemon.nix>

[8350]services.icecream.daemon.hostname

    Hostname of the daemon in the icecream infrastructure.

    Uses the hostname retrieved via uname if set to null.

    Type: null or string

    Default: null

    Declared by:

    [8351]<nixpkgs/nixos/modules/services/networking/icecream/daemon.nix>

[8352]services.icecream.daemon.maxProcesses

    Maximum number of compile jobs started in parallel for this daemon.

    Uses the number of CPUs if set to null.

    Type: null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: null

    Declared by:

    [8353]<nixpkgs/nixos/modules/services/networking/icecream/daemon.nix>

[8354]services.icecream.daemon.netName

    Network name to connect to. A scheduler with the same name needs to be running.

    Type: string

    Default: "ICECREAM"

    Declared by:

    [8355]<nixpkgs/nixos/modules/services/networking/icecream/daemon.nix>

[8356]services.icecream.daemon.nice

    The level of niceness to use.

    Type: signed integer

    Default: 5

    Declared by:

    [8357]<nixpkgs/nixos/modules/services/networking/icecream/daemon.nix>

[8358]services.icecream.daemon.noRemote

    Prevent jobs from other nodes being scheduled on this daemon.

    Type: boolean

    Default: false

    Declared by:

    [8359]<nixpkgs/nixos/modules/services/networking/icecream/daemon.nix>

[8360]services.icecream.daemon.openBroadcast

    Whether to automatically open the firewall for scheduler discovery.

    Type: boolean

    Declared by:

    [8361]<nixpkgs/nixos/modules/services/networking/icecream/daemon.nix>

[8362]services.icecream.daemon.openFirewall

    Whether to automatically open receive port in the firewall.

    Type: boolean

    Declared by:

    [8363]<nixpkgs/nixos/modules/services/networking/icecream/daemon.nix>

[8364]services.icecream.daemon.schedulerHost

    Explicit scheduler hostname, useful in firewalled environments.

    Uses scheduler autodiscovery via broadcast if set to null.

    Type: null or string

    Default: null

    Declared by:

    [8365]<nixpkgs/nixos/modules/services/networking/icecream/daemon.nix>

[8366]services.icecream.daemon.user

    User to run the icecream daemon as. Set to root to enable receive of remote compile
    environments.

    Type: string

    Default: "icecc"

    Declared by:

    [8367]<nixpkgs/nixos/modules/services/networking/icecream/daemon.nix>

[8368]services.icecream.scheduler.enable

    Whether to enable Icecream Scheduler.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8369]<nixpkgs/nixos/modules/services/networking/icecream/scheduler.nix>

[8370]services.icecream.scheduler.package

    Icecream package to use.

    Type: package

    Default: "pkgs.icecream"

    Declared by:

    [8371]<nixpkgs/nixos/modules/services/networking/icecream/scheduler.nix>

[8372]services.icecream.scheduler.extraArgs

    Additional command line parameters

    Type: list of strings

    Default: [ ]

    Example: [ "-v" ]

    Declared by:

    [8373]<nixpkgs/nixos/modules/services/networking/icecream/scheduler.nix>

[8374]services.icecream.scheduler.netName

    Network name for the icecream scheduler.

    Uses the default ICECREAM if null.

    Type: null or string

    Default: null

    Declared by:

    [8375]<nixpkgs/nixos/modules/services/networking/icecream/scheduler.nix>

[8376]services.icecream.scheduler.openFirewall

    Whether to automatically open the daemon port in the firewall.

    Type: boolean

    Declared by:

    [8377]<nixpkgs/nixos/modules/services/networking/icecream/scheduler.nix>

[8378]services.icecream.scheduler.openTelnet

    Whether to open the telnet TCP port on 8766.

    Type: boolean

    Default: false

    Declared by:

    [8379]<nixpkgs/nixos/modules/services/networking/icecream/scheduler.nix>

[8380]services.icecream.scheduler.persistentClientConnection

    Whether to prevent clients from connecting to a better scheduler.

    Type: boolean

    Default: false

    Declared by:

    [8381]<nixpkgs/nixos/modules/services/networking/icecream/scheduler.nix>

[8382]services.icecream.scheduler.port

    Server port to listen for icecream daemon requests.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8765

    Declared by:

    [8383]<nixpkgs/nixos/modules/services/networking/icecream/scheduler.nix>

[8384]services.icingaweb2.enable

    Whether to enable the icingaweb2 web interface.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8385]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix>

[8386]services.icingaweb2.authentications

    authentication.ini contents. Will automatically be converted to a .ini file.

    If the value is null, no authentication.ini is created and you can modify it manually (e.g.
    via the web interface).

    Type: null or attribute set

    Default: null

    Example: { icingaweb = { backend = "db"; resource = "icingaweb_db"; } ; }

    Declared by:

    [8387]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix>

[8388]services.icingaweb2.generalConfig

    config.ini contents. Will automatically be converted to a .ini file. If you don't set
    global.module_path, the module will take care of it.

    If the value is null, no config.ini is created and you can modify it manually (e.g. via the
    web interface). Note that you need to update module_path manually.

    Type: null or attribute set

    Default: null

    Example: { general = { config_resource = "icingaweb_db"; showStacktraces = 1; } ; logging = {
    level = "CRITICAL"; log = "syslog"; } ; }

    Declared by:

    [8389]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix>

[8390]services.icingaweb2.groupBackends

    groups.ini contents. Will automatically be converted to a .ini file.

    If the value is null, no groups.ini is created and you can modify it manually (e.g. via the
    web interface).

    Type: null or attribute set

    Default: null

    Example: { icingaweb = { backend = "db"; resource = "icingaweb_db"; } ; }

    Declared by:

    [8391]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix>

[8392]services.icingaweb2.modulePackages

    Name-package attrset of Icingaweb 2 modules packages to enable.

    If you enable modules manually (e.g. via the web ui), they will not be touched.

    Type: attribute set of packages

    Default: { }

    Example:

    {
      "snow" = icingaweb2Modules.theme-snow;
    }

    Declared by:

    [8393]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix>

[8394]services.icingaweb2.modules.doc.enable

    Whether to enable the icingaweb2 doc module.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8395]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix>

[8396]services.icingaweb2.modules.migrate.enable

    Whether to enable the icingaweb2 migrate module.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8397]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix>

[8398]services.icingaweb2.modules.monitoring.enable

    Whether to enable the icingaweb2 monitoring module.

    Type: boolean

    Default: true

    Declared by:

    [8399]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8400]services.icingaweb2.modules.monitoring.backends

    Monitoring backends to define

    Type: attribute set of submodules

    Default: { icinga = { resource = "icinga_ido"; } ; }

    Declared by:

    [8401]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8402]services.icingaweb2.modules.monitoring.backends.<name>.disabled

    Disable this backend

    Type: boolean

    Default: false

    Declared by:

    [8403]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8404]services.icingaweb2.modules.monitoring.backends.<name>.resource

    Name of the IDO resource

    Type: string

    Declared by:

    [8405]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8406]services.icingaweb2.modules.monitoring.generalConfig.mutable

    Make config.ini of the monitoring module mutable (e.g. via the web interface).

    Type: boolean

    Default: false

    Declared by:

    [8407]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8408]services.icingaweb2.modules.monitoring.generalConfig.protectedVars

    List of string patterns for custom variables which should be excluded from user’s view.

    Type: list of strings

    Default: [ "*pw*" "*pass*" "community" ]

    Declared by:

    [8409]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8410]services.icingaweb2.modules.monitoring.mutableBackends

    Make backends.ini of the monitoring module mutable (e.g. via the web interface).

    Type: boolean

    Default: false

    Declared by:

    [8411]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8412]services.icingaweb2.modules.monitoring.mutableTransports

    Make commandtransports.ini of the monitoring module mutable (e.g. via the web interface).

    Type: boolean

    Default: true

    Declared by:

    [8413]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8414]services.icingaweb2.modules.monitoring.transports

    Command transports to define

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [8415]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8416]services.icingaweb2.modules.monitoring.transports.<name>.host

    Host for the api or remote transport

    Type: string

    Declared by:

    [8417]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8418]services.icingaweb2.modules.monitoring.transports.<name>.instance

    Assign a icinga instance to this transport

    Type: null or string

    Default: null

    Declared by:

    [8419]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8420]services.icingaweb2.modules.monitoring.transports.<name>.password

    Password for the api transport

    Type: string

    Declared by:

    [8421]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8422]services.icingaweb2.modules.monitoring.transports.<name>.path

    Path to the socket for local or remote transports

    Type: string

    Declared by:

    [8423]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8424]services.icingaweb2.modules.monitoring.transports.<name>.port

    Port to connect to for the api or remote transport

    Type: null or string

    Default: null

    Declared by:

    [8425]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8426]services.icingaweb2.modules.monitoring.transports.<name>.resource

    SSH identity resource for the remote transport

    Type: string

    Declared by:

    [8427]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8428]services.icingaweb2.modules.monitoring.transports.<name>.type

    Type of this transport

    Type: one of "api", "local", "remote"

    Default: "api"

    Declared by:

    [8429]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8430]services.icingaweb2.modules.monitoring.transports.<name>.username

    Username for the api or remote transport

    Type: string

    Declared by:

    [8431]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/module-monitoring.nix>

[8432]services.icingaweb2.modules.setup.enable

    Whether to enable the icingaweb2 setup module.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8433]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix>

[8434]services.icingaweb2.modules.test.enable

    Whether to enable the icingaweb2 test module.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8435]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix>

[8436]services.icingaweb2.modules.translation.enable

    Whether to enable the icingaweb2 translation module.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8437]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix>

[8438]services.icingaweb2.pool

    Name of existing PHP-FPM pool that is used to run Icingaweb2. If not specified, a pool will
    automatically created with default values.

    Type: string

    Default: "icingaweb2"

    Declared by:

    [8439]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix>

[8440]services.icingaweb2.resources

    resources.ini contents. Will automatically be converted to a .ini file.

    If the value is null, no resources.ini is created and you can modify it manually (e.g. via
    the web interface). Note that if you set passwords here, they will go into the nix store.

    Type: null or attribute set

    Default: null

    Example: { icingaweb_db = { db = "mysql"; dbname = "icingaweb2"; host = "localhost"; password
    = "icingaweb2"; type = "db"; username = "icingaweb2"; } ; }

    Declared by:

    [8441]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix>

[8442]services.icingaweb2.roles

    roles.ini contents. Will automatically be converted to a .ini file.

    If the value is null, no roles.ini is created and you can modify it manually (e.g. via the
    web interface).

    Type: null or attribute set

    Default: null

    Example: { Administrators = { permissions = "*"; users = "admin"; } ; }

    Declared by:

    [8443]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix>

[8444]services.icingaweb2.timezone

    PHP-compliant timezone specification

    Type: string

    Default: "UTC"

    Example: "Europe/Berlin"

    Declared by:

    [8445]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix>

[8446]services.icingaweb2.virtualHost

    Name of the nginx virtualhost to use and setup. If null, no virtualhost is set up.

    Type: null or string

    Default: "icingaweb2"

    Declared by:

    [8447]<nixpkgs/nixos/modules/services/web-apps/icingaweb2/icingaweb2.nix>

[8448]services.ihaskell.enable

    Autostart an IHaskell notebook service.

    Type: boolean

    Default: false

    Declared by:

    [8449]<nixpkgs/nixos/modules/services/misc/ihaskell.nix>

[8450]services.ihaskell.extraPackages

    Extra packages available to ghc when running ihaskell. The value must be a function which
    receives the attrset defined in haskellPackages as the sole argument.

    Type: function that evaluates to a(n) listOf

    Default: "<function>"

    Example:

    haskellPackages: [
      haskellPackages.wreq
      haskellPackages.lens
    ]

    Declared by:

    [8451]<nixpkgs/nixos/modules/services/misc/ihaskell.nix>

[8452]services.ihatemoney.enable

    Whether to enable ihatemoney webapp. Note that this will set uwsgi to emperor mode.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8453]<nixpkgs/nixos/modules/services/web-apps/ihatemoney>

[8454]services.ihatemoney.enableAdminDashboard

    Whether to enable ihatemoney admin dashboard.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8455]<nixpkgs/nixos/modules/services/web-apps/ihatemoney>

[8456]services.ihatemoney.enableDemoProject

    Whether to enable access to the demo project in ihatemoney.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8457]<nixpkgs/nixos/modules/services/web-apps/ihatemoney>

[8458]services.ihatemoney.enablePublicProjectCreation

    Whether to enable permission to create projects in ihatemoney by anyone.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8459]<nixpkgs/nixos/modules/services/web-apps/ihatemoney>

[8460]services.ihatemoney.adminHashedPassword

    The hashed password of the administrator. To obtain it, run ihatemoney generate_password_hash

    Type: null or string

    Default: null

    Declared by:

    [8461]<nixpkgs/nixos/modules/services/web-apps/ihatemoney>

[8462]services.ihatemoney.backend

    The database engine to use for ihatemoney. If postgresql is selected, then a database called
    ihatemoney will be created. If you disable this option, it will however not be removed.

    Type: one of "sqlite", "postgresql"

    Default: "sqlite"

    Declared by:

    [8463]<nixpkgs/nixos/modules/services/web-apps/ihatemoney>

[8464]services.ihatemoney.defaultSender.email

    The email of the sender of ihatemoney emails

    Type: string

    Default: "ihatemoney@nixos"

    Declared by:

    [8465]<nixpkgs/nixos/modules/services/web-apps/ihatemoney>

[8466]services.ihatemoney.defaultSender.name

    The display name of the sender of ihatemoney emails

    Type: string

    Default: "Budget manager"

    Declared by:

    [8467]<nixpkgs/nixos/modules/services/web-apps/ihatemoney>

[8468]services.ihatemoney.extraConfig

    Extra configuration appended to ihatemoney's configuration file. It is a python file, so pay
    attention to indentation.

    Type: string

    Default: ""

    Declared by:

    [8469]<nixpkgs/nixos/modules/services/web-apps/ihatemoney>

[8470]services.ihatemoney.uwsgiConfig

    Additionnal configuration of the UWSGI vassal running ihatemoney. It should notably specify
    on which interfaces and ports the vassal should listen.

    Type: attribute set

    Example: { http = ":8000"; }

    Declared by:

    [8471]<nixpkgs/nixos/modules/services/web-apps/ihatemoney>

[8472]services.illum.enable

    Enable illum, a daemon for controlling screen brightness with brightness buttons.

    Type: boolean

    Default: false

    Declared by:

    [8473]<nixpkgs/nixos/modules/services/hardware/illum.nix>

[8474]services.incron.enable

    Whether to enable the incron daemon.

    Note that commands run under incrontab only support common Nix profiles for the PATH provided
    variable.

    Type: boolean

    Default: false

    Declared by:

    [8475]<nixpkgs/nixos/modules/services/monitoring/incron.nix>

[8476]services.incron.allow

    Users allowed to use incrontab.

    If empty then no user will be allowed to have their own incrontab. If null then will defer to
    deny. If both allow and deny are null then all users will be allowed to have their own
    incrontab.

    Type: null or list of strings

    Default: null

    Declared by:

    [8477]<nixpkgs/nixos/modules/services/monitoring/incron.nix>

[8478]services.incron.deny

    Users forbidden from using incrontab.

    Type: null or list of strings

    Default: null

    Declared by:

    [8479]<nixpkgs/nixos/modules/services/monitoring/incron.nix>

[8480]services.incron.extraPackages

    Extra packages available to the system incrontab.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.rsync ]

    Declared by:

    [8481]<nixpkgs/nixos/modules/services/monitoring/incron.nix>

[8482]services.incron.systab

    The system incrontab contents.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    /var/mail IN_CLOSE_WRITE abc $@/$#
    /tmp IN_ALL_EVENTS efg $@/$# $&
    ''

    Declared by:

    [8483]<nixpkgs/nixos/modules/services/monitoring/incron.nix>

[8484]services.infinoted.enable

    Whether to enable infinoted.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8485]<nixpkgs/nixos/modules/services/editors/infinoted.nix>

[8486]services.infinoted.package

    Package providing infinoted

    Type: package

    Default: "pkgs.libinfinity"

    Declared by:

    [8487]<nixpkgs/nixos/modules/services/editors/infinoted.nix>

[8488]services.infinoted.certificateChain

    Chain of CA-certificates to which our `certificateFile` is relative. Optional for TLS.

    Type: null or path

    Default: null

    Declared by:

    [8489]<nixpkgs/nixos/modules/services/editors/infinoted.nix>

[8490]services.infinoted.certificateFile

    Server certificate to use for TLS

    Type: null or path

    Default: null

    Declared by:

    [8491]<nixpkgs/nixos/modules/services/editors/infinoted.nix>

[8492]services.infinoted.extraConfig

    Additional configuration to append to infinoted.conf

    Type: strings concatenated with "\n"

    Default:

    ''
    [autosave]
    interval=10
    ''

    Declared by:

    [8493]<nixpkgs/nixos/modules/services/editors/infinoted.nix>

[8494]services.infinoted.group

    What to call the primary group of the dedicated user under which infinoted is run

    Type: string

    Default: "infinoted"

    Declared by:

    [8495]<nixpkgs/nixos/modules/services/editors/infinoted.nix>

[8496]services.infinoted.keyFile

    Private key to use for TLS

    Type: null or path

    Default: null

    Declared by:

    [8497]<nixpkgs/nixos/modules/services/editors/infinoted.nix>

[8498]services.infinoted.passwordFile

    File to read server-wide password from

    Type: null or path

    Default: null

    Declared by:

    [8499]<nixpkgs/nixos/modules/services/editors/infinoted.nix>

[8500]services.infinoted.plugins

    Plugins to enable

    Type: list of strings

    Default: [ "note-text" "note-chat" "logging" "autosave" ]

    Declared by:

    [8501]<nixpkgs/nixos/modules/services/editors/infinoted.nix>

[8502]services.infinoted.port

    Port to listen on

    Type: signed integer

    Default: 6523

    Declared by:

    [8503]<nixpkgs/nixos/modules/services/editors/infinoted.nix>

[8504]services.infinoted.rootDirectory

    Root of the directory structure to serve

    Type: path

    Default: "/var/lib/infinoted/documents/"

    Declared by:

    [8505]<nixpkgs/nixos/modules/services/editors/infinoted.nix>

[8506]services.infinoted.securityPolicy

    How strictly to enforce clients connection with TLS.

    Type: one of "no-tls", "allow-tls", "require-tls"

    Default: "require-tls"

    Declared by:

    [8507]<nixpkgs/nixos/modules/services/editors/infinoted.nix>

[8508]services.infinoted.user

    What to call the dedicated user under which infinoted is run

    Type: string

    Default: "infinoted"

    Declared by:

    [8509]<nixpkgs/nixos/modules/services/editors/infinoted.nix>

[8510]services.influxdb.enable

    Whether to enable the influxdb server

    Type: boolean

    Default: false

    Declared by:

    [8511]<nixpkgs/nixos/modules/services/databases/influxdb.nix>

[8512]services.influxdb.package

    Which influxdb derivation to use

    Type: package

    Default: "pkgs.influxdb"

    Declared by:

    [8513]<nixpkgs/nixos/modules/services/databases/influxdb.nix>

[8514]services.influxdb.dataDir

    Data directory for influxd data files.

    Type: path

    Default: "/var/db/influxdb"

    Declared by:

    [8515]<nixpkgs/nixos/modules/services/databases/influxdb.nix>

[8516]services.influxdb.extraConfig

    Extra configuration options for influxdb

    Type: attribute set

    Default: { }

    Declared by:

    [8517]<nixpkgs/nixos/modules/services/databases/influxdb.nix>

[8518]services.influxdb.group

    Group under which influxdb runs

    Type: string

    Default: "influxdb"

    Declared by:

    [8519]<nixpkgs/nixos/modules/services/databases/influxdb.nix>

[8520]services.influxdb.user

    User account under which influxdb runs

    Type: string

    Default: "influxdb"

    Declared by:

    [8521]<nixpkgs/nixos/modules/services/databases/influxdb.nix>

[8522]services.inspircd.enable

    Whether to enable InspIRCd.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8523]<nixpkgs/nixos/modules/services/networking/inspircd.nix>

[8524]services.inspircd.package

    The InspIRCd package to use. This is mainly useful to specify an overridden version of the
    pkgs.inspircd dervivation, for example if you want to use a more minimal InspIRCd
    distribution with less modules enabled or with modules enabled which can't be distributed in
    binary form due to licensing issues.

    Type: package

    Default: pkgs.inspircd

    Example:

    pkgs.inspircdMinimal

    Declared by:

    [8525]<nixpkgs/nixos/modules/services/networking/inspircd.nix>

[8526]services.inspircd.config

    Verbatim inspircd.conf file. For a list of options, consult the [8527]InspIRCd documentation,
    the [8528]Module documentation and the example configuration files distributed with
    pkgs.inspircd.doc

    Type: strings concatenated with "\n"

    Declared by:

    [8529]<nixpkgs/nixos/modules/services/networking/inspircd.nix>

[8530]services.interception-tools.enable

    Whether to enable the interception tools service.

    Type: boolean

    Default: false

    Declared by:

    [8531]<nixpkgs/nixos/modules/services/hardware/interception-tools.nix>

[8532]services.interception-tools.plugins

    A list of interception tools plugins that will be made available to use inside the udevmon
    configuration.

    Type: list of packages

    Default: [ (build of caps2esc-0.1.3) ]

    Declared by:

    [8533]<nixpkgs/nixos/modules/services/hardware/interception-tools.nix>

[8534]services.interception-tools.udevmonConfig

    String of udevmon YAML configuration, or path to a udevmon YAML configuration file.

    Type: string or path

    Default:

    ''
    - JOB: "intercept -g $DEVNODE | caps2esc | uinput -d $DEVNODE"
      DEVICE:
        EVENTS:
          EV_KEY: [KEY_CAPSLOCK, KEY_ESC]
    ''

    Example:

    ''
    - JOB: "intercept -g $DEVNODE | y2z | x2y | uinput -d $DEVNODE"
      DEVICE:
        EVENTS:
          EV_KEY: [KEY_X, KEY_Y]
    ''

    Declared by:

    [8535]<nixpkgs/nixos/modules/services/hardware/interception-tools.nix>

[8536]services.iodine.clients

    Each attribute of this option defines a systemd service that runs iodine. Many or none may be
    defined. The name of each service is iodine-name where name is the name of the corresponding
    attribute name.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      foo = {
        server = "tunnel.mdomain.com";
        relay = "8.8.8.8";
        extraConfig = "-v";
      }
    }

    Declared by:

    [8537]<nixpkgs/nixos/modules/services/networking/iodine.nix>

[8538]services.iodine.clients.<name>.extraConfig

    Additional command line parameters

    Type: string

    Default: ""

    Example: "-l 192.168.1.10 -p 23"

    Declared by:

    [8539]<nixpkgs/nixos/modules/services/networking/iodine.nix>

[8540]services.iodine.clients.<name>.passwordFile

    Path to a file containing the password.

    Type: string

    Default: ""

    Declared by:

    [8541]<nixpkgs/nixos/modules/services/networking/iodine.nix>

[8542]services.iodine.clients.<name>.relay

    DNS server to use as an intermediate relay to the iodined server

    Type: string

    Default: ""

    Example: "8.8.8.8"

    Declared by:

    [8543]<nixpkgs/nixos/modules/services/networking/iodine.nix>

[8544]services.iodine.clients.<name>.server

    Hostname of server running iodined

    Type: string

    Default: ""

    Example: "tunnel.mydomain.com"

    Declared by:

    [8545]<nixpkgs/nixos/modules/services/networking/iodine.nix>

[8546]services.iodine.server.enable

    enable iodined server

    Type: boolean

    Default: false

    Declared by:

    [8547]<nixpkgs/nixos/modules/services/networking/iodine.nix>

[8548]services.iodine.server.domain

    Domain or subdomain of which nameservers point to us

    Type: string

    Default: ""

    Example: "tunnel.mydomain.com"

    Declared by:

    [8549]<nixpkgs/nixos/modules/services/networking/iodine.nix>

[8550]services.iodine.server.extraConfig

    Additional command line parameters

    Type: string

    Default: ""

    Example: "-l 192.168.1.10 -p 23"

    Declared by:

    [8551]<nixpkgs/nixos/modules/services/networking/iodine.nix>

[8552]services.iodine.server.ip

    The assigned ip address or ip range

    Type: string

    Default: ""

    Example: "172.16.10.1/24"

    Declared by:

    [8553]<nixpkgs/nixos/modules/services/networking/iodine.nix>

[8554]services.iodine.server.passwordFile

    File that contains password

    Type: string

    Default: ""

    Declared by:

    [8555]<nixpkgs/nixos/modules/services/networking/iodine.nix>

[8556]services.iperf3.enable

    Whether to enable iperf3 network throughput testing server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8557]<nixpkgs/nixos/modules/services/networking/iperf3.nix>

[8558]services.iperf3.affinity

    CPU affinity for the process.

    Type: null or unsigned integer, meaning >=0

    Default: null

    Declared by:

    [8559]<nixpkgs/nixos/modules/services/networking/iperf3.nix>

[8560]services.iperf3.authorizedUsersFile

    Path to the configuration file containing authorized users credentials to run iperf tests.

    Type: null or path

    Default: null

    Declared by:

    [8561]<nixpkgs/nixos/modules/services/networking/iperf3.nix>

[8562]services.iperf3.bind

    Bind to the specific interface associated with the given address.

    Type: null or string

    Default: null

    Declared by:

    [8563]<nixpkgs/nixos/modules/services/networking/iperf3.nix>

[8564]services.iperf3.debug

    Emit debugging output.

    Type: boolean

    Default: false

    Declared by:

    [8565]<nixpkgs/nixos/modules/services/networking/iperf3.nix>

[8566]services.iperf3.extraFlags

    Extra flags to pass to iperf3(1).

    Type: list of strings

    Default: [ ]

    Declared by:

    [8567]<nixpkgs/nixos/modules/services/networking/iperf3.nix>

[8568]services.iperf3.forceFlush

    Force flushing output at every interval.

    Type: boolean

    Default: false

    Declared by:

    [8569]<nixpkgs/nixos/modules/services/networking/iperf3.nix>

[8570]services.iperf3.openFirewall

    Open ports in the firewall for iperf3.

    Type: boolean

    Default: false

    Declared by:

    [8571]<nixpkgs/nixos/modules/services/networking/iperf3.nix>

[8572]services.iperf3.port

    Server port to listen on for iperf3 client requsts.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 5201

    Declared by:

    [8573]<nixpkgs/nixos/modules/services/networking/iperf3.nix>

[8574]services.iperf3.rsaPrivateKey

    Path to the RSA private key (not password-protected) used to decrypt authentication
    credentials from the client.

    Type: null or path

    Default: null

    Declared by:

    [8575]<nixpkgs/nixos/modules/services/networking/iperf3.nix>

[8576]services.iperf3.verbose

    Give more detailed output.

    Type: boolean

    Default: false

    Declared by:

    [8577]<nixpkgs/nixos/modules/services/networking/iperf3.nix>

[8578]services.ipfs.enable

    Whether to enable Interplanetary File System (WARNING: may cause severe network degredation).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8579]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8580]services.ipfs.enableGC

    Whether to enable automatic garbage collection

    Type: boolean

    Default: false

    Declared by:

    [8581]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8582]services.ipfs.package

    Which IPFS package to use.

    Type: package

    Default: "pkgs.ipfs"

    Declared by:

    [8583]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8584]services.ipfs.apiAddress

    Where IPFS exposes its API to

    Type: string

    Default: "/ip4/127.0.0.1/tcp/5001"

    Declared by:

    [8585]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8586]services.ipfs.autoMount

    Whether IPFS should try to mount /ipfs and /ipns at startup.

    Type: boolean

    Default: false

    Declared by:

    [8587]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8588]services.ipfs.dataDir

    The data dir for IPFS

    Type: string

    Default: "/var/lib/ipfs"

    Declared by:

    [8589]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8590]services.ipfs.defaultMode

    systemd service that is enabled by default

    Type: one of "online", "offline", "norouting"

    Default: "online"

    Declared by:

    [8591]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8592]services.ipfs.emptyRepo

    If set to true, the repo won't be initialized with help files

    Type: boolean

    Default: false

    Declared by:

    [8593]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8594]services.ipfs.extraConfig

    Attrset of daemon configuration to set using ipfs config, every time the daemon starts. These
    are applied last, so may override configuration set by other options in this module. Keep in
    mind that this configuration is stateful; i.e., unsetting anything in here does not reset the
    value to the default!

    Type: attribute set

    Default: { }

    Example: { Bootstrap = [ "/ip4/128.199.219.111/tcp/4001/ipfs/
    QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu" "/ip4/162.243.248.213/tcp/4001/ipfs/
    QmSoLueR4xBeUbY9WZ9xGUUxunbKWcrNFTDAadQJmocnWm" ] ; Datastore = { StorageMax = "100GB"; } ;
    Discovery = { MDNS = { Enabled = false; } ; } ; Swarm = { AddrFilters = null; } ; }

    Declared by:

    [8595]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8596]services.ipfs.extraFlags

    Extra flags passed to the IPFS daemon

    Type: list of strings

    Default: [ ]

    Declared by:

    [8597]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8598]services.ipfs.gatewayAddress

    Where the IPFS Gateway can be reached

    Type: string

    Default: "/ip4/127.0.0.1/tcp/8080"

    Declared by:

    [8599]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8600]services.ipfs.group

    Group under which the IPFS daemon runs

    Type: string

    Default: "ipfs"

    Declared by:

    [8601]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8602]services.ipfs.ipfsMountDir

    Where to mount the IPFS namespace to

    Type: string

    Default: "/ipfs"

    Declared by:

    [8603]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8604]services.ipfs.ipnsMountDir

    Where to mount the IPNS namespace to

    Type: string

    Default: "/ipns"

    Declared by:

    [8605]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8606]services.ipfs.localDiscovery

    Whether to enable local discovery for the ipfs daemon. This will allow ipfs to scan ports on
    your local network. Some hosting services will ban you if you do this.

    Type: boolean

    Default: true

    Declared by:

    [8607]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8608]services.ipfs.serviceFdlimit

    The fdlimit for the IPFS systemd unit or null to have the daemon attempt to manage it

    Type: null or signed integer

    Default: null

    Example: 65536

    Declared by:

    [8609]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8610]services.ipfs.startWhenNeeded

    Whether to use socket activation to start IPFS when needed.

    Type: boolean

    Default: false

    Declared by:

    [8611]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8612]services.ipfs.swarmAddress

    Where IPFS listens for incoming p2p connections

    Type: list of strings

    Default: [ "/ip4/0.0.0.0/tcp/4001" "/ip6/::/tcp/4001" "/ip4/0.0.0.0/udp/4001/quic" "/ip6/::/
    udp/4001/quic" ]

    Declared by:

    [8613]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8614]services.ipfs.user

    User under which the IPFS daemon runs

    Type: string

    Default: "ipfs"

    Declared by:

    [8615]<nixpkgs/nixos/modules/services/network-filesystems/ipfs.nix>

[8616]services.ircdHybrid.enable

    Whether to enable IRCD.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8617]<nixpkgs/nixos/modules/services/networking/ircd-hybrid/default.nix>

[8618]services.ircdHybrid.adminEmail

    IRCD server administrator e-mail.

    Type: string

    Default: "<bit-bucket@example.com>"

    Example: "<name@domain.tld>"

    Declared by:

    [8619]<nixpkgs/nixos/modules/services/networking/ircd-hybrid/default.nix>

[8620]services.ircdHybrid.certificate

    IRCD server SSL certificate. There are some limitations - read manual.

    Type: null or path

    Default: null

    Example:

    /root/certificates/irc.pem

    Declared by:

    [8621]<nixpkgs/nixos/modules/services/networking/ircd-hybrid/default.nix>

[8622]services.ircdHybrid.description

    IRCD server description.

    Type: string

    Default: "Hybrid-7 IRC server."

    Declared by:

    [8623]<nixpkgs/nixos/modules/services/networking/ircd-hybrid/default.nix>

[8624]services.ircdHybrid.extraIPs

    Extra IP's to bind.

    Type: list of strings

    Default: [ ]

    Example: [ "127.0.0.1" ]

    Declared by:

    [8625]<nixpkgs/nixos/modules/services/networking/ircd-hybrid/default.nix>

[8626]services.ircdHybrid.extraPort

    Extra port to avoid filtering.

    Type: string

    Default: "7117"

    Declared by:

    [8627]<nixpkgs/nixos/modules/services/networking/ircd-hybrid/default.nix>

[8628]services.ircdHybrid.rsaKey

    IRCD server RSA key.

    Type: null or path

    Default: null

    Example:

    /root/certificates/irc.key

    Declared by:

    [8629]<nixpkgs/nixos/modules/services/networking/ircd-hybrid/default.nix>

[8630]services.ircdHybrid.serverName

    IRCD server name.

    Type: string

    Default: "hades.arpa"

    Declared by:

    [8631]<nixpkgs/nixos/modules/services/networking/ircd-hybrid/default.nix>

[8632]services.ircdHybrid.sid

    IRCD server unique ID in a net of servers.

    Type: string

    Default: "0NL"

    Declared by:

    [8633]<nixpkgs/nixos/modules/services/networking/ircd-hybrid/default.nix>

[8634]services.irkerd.enable

    Whether to enable irker, an IRC notification daemon.

    Type: boolean

    Default: false

    Declared by:

    [8635]<nixpkgs/nixos/modules/services/misc/irkerd.nix>

[8636]services.irkerd.listenAddress

    Specifies the bind address on which the irker daemon listens. The default is localhost.

    Irker authors strongly warn about the risks of running this on a publicly accessible
    interface, so change this with caution.

    Type: string

    Default: "localhost"

    Example: "0.0.0.0"

    Declared by:

    [8637]<nixpkgs/nixos/modules/services/misc/irkerd.nix>

[8638]services.irkerd.nick

    Nick to use for irker

    Type: string

    Default: "irker"

    Declared by:

    [8639]<nixpkgs/nixos/modules/services/misc/irkerd.nix>

[8640]services.irkerd.openPorts

    Open ports in the firewall for irkerd

    Type: boolean

    Default: false

    Declared by:

    [8641]<nixpkgs/nixos/modules/services/misc/irkerd.nix>

[8642]services.irqbalance.enable

    Whether to enable irqbalance daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8643]<nixpkgs/nixos/modules/services/hardware/irqbalance.nix>

[8644]services.jack.alsa.enable

    Route audio to/from generic ALSA-using applications using ALSA JACK PCM plugin.

    Type: boolean

    Default: true

    Declared by:

    [8645]<nixpkgs/nixos/modules/services/audio/jack.nix>

[8646]services.jack.alsa.support32Bit

    Whether to support sound for 32-bit ALSA applications on 64-bit system.

    Type: boolean

    Default: false

    Declared by:

    [8647]<nixpkgs/nixos/modules/services/audio/jack.nix>

[8648]services.jack.jackd.enable

    Whether to enable JACK Audio Connection Kit. You need to add yourself to the "jackaudio"
    group .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8649]<nixpkgs/nixos/modules/services/audio/jack.nix>

[8650]services.jack.jackd.extraOptions

    Specifies startup command line arguments to pass to JACK server.

    Type: list of strings

    Default: [ "-dalsa" ]

    Example:

    [ "-dalsa" "--device" "hw:1" ];

    Declared by:

    [8651]<nixpkgs/nixos/modules/services/audio/jack.nix>

[8652]services.jack.jackd.session

    Commands to run after JACK is started.

    Type: strings concatenated with "\n"

    Declared by:

    [8653]<nixpkgs/nixos/modules/services/audio/jack.nix>

[8654]services.jack.loopback.enable

    Create ALSA loopback device, instead of using PCM plugin. Has broader application support
    (things like Steam will work), but may need fine-tuning for concrete hardware.

    Type: boolean

    Default: false

    Declared by:

    [8655]<nixpkgs/nixos/modules/services/audio/jack.nix>

[8656]services.jack.loopback.config

    ALSA config for loopback device.

    Type: strings concatenated with "\n"

    Declared by:

    [8657]<nixpkgs/nixos/modules/services/audio/jack.nix>

[8658]services.jack.loopback.dmixConfig

    For music production software that still doesn't support JACK natively you would like to put
    buffer/period adjustments here to decrease dmix device latency.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    period_size 2048
    periods 2
    ''

    Declared by:

    [8659]<nixpkgs/nixos/modules/services/audio/jack.nix>

[8660]services.jack.loopback.index

    Index of an ALSA loopback device.

    Type: signed integer

    Default: 10

    Declared by:

    [8661]<nixpkgs/nixos/modules/services/audio/jack.nix>

[8662]services.jack.loopback.session

    Additional commands to run to setup loopback device.

    Type: strings concatenated with "\n"

    Declared by:

    [8663]<nixpkgs/nixos/modules/services/audio/jack.nix>

[8664]services.jackett.enable

    Whether to enable Jackett.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8665]<nixpkgs/nixos/modules/services/misc/jackett.nix>

[8666]services.jackett.package

    Jackett package to use.

    Type: package

    Default: "pkgs.jackett"

    Declared by:

    [8667]<nixpkgs/nixos/modules/services/misc/jackett.nix>

[8668]services.jackett.dataDir

    The directory where Jackett stores its data files.

    Type: string

    Default: "/var/lib/jackett/.config/Jackett"

    Declared by:

    [8669]<nixpkgs/nixos/modules/services/misc/jackett.nix>

[8670]services.jackett.group

    Group under which Jackett runs.

    Type: string

    Default: "jackett"

    Declared by:

    [8671]<nixpkgs/nixos/modules/services/misc/jackett.nix>

[8672]services.jackett.openFirewall

    Open ports in the firewall for the Jackett web interface.

    Type: boolean

    Default: false

    Declared by:

    [8673]<nixpkgs/nixos/modules/services/misc/jackett.nix>

[8674]services.jackett.user

    User account under which Jackett runs.

    Type: string

    Default: "jackett"

    Declared by:

    [8675]<nixpkgs/nixos/modules/services/misc/jackett.nix>

[8676]services.jboss.enable

    Whether to enable JBoss. WARNING : this package is outdated and is known to have
    vulnerabilities.

    Type: boolean

    Default: false

    Declared by:

    [8677]<nixpkgs/nixos/modules/services/web-servers/jboss/default.nix>

[8678]services.jboss.deployDir

    Location of the deployment files

    Type: string

    Default: "/nix/var/nix/profiles/default/server/default/deploy/"

    Declared by:

    [8679]<nixpkgs/nixos/modules/services/web-servers/jboss/default.nix>

[8680]services.jboss.libUrl

    Location where the shared library JARs are stored

    Type: string

    Default: "file:///nix/var/nix/profiles/default/server/default/lib"

    Declared by:

    [8681]<nixpkgs/nixos/modules/services/web-servers/jboss/default.nix>

[8682]services.jboss.logDir

    Location of the logfile directory of JBoss

    Type: string

    Default: "/var/log/jboss"

    Declared by:

    [8683]<nixpkgs/nixos/modules/services/web-servers/jboss/default.nix>

[8684]services.jboss.serverDir

    Location of the server instance files

    Type: string

    Default: "/var/jboss/server"

    Declared by:

    [8685]<nixpkgs/nixos/modules/services/web-servers/jboss/default.nix>

[8686]services.jboss.tempDir

    Location where JBoss stores its temp files

    Type: string

    Default: "/tmp"

    Declared by:

    [8687]<nixpkgs/nixos/modules/services/web-servers/jboss/default.nix>

[8688]services.jboss.useJK

    Whether to use to connector to the Apache HTTP server

    Type: boolean

    Default: false

    Declared by:

    [8689]<nixpkgs/nixos/modules/services/web-servers/jboss/default.nix>

[8690]services.jboss.user

    User account under which jboss runs.

    Type: string

    Default: "nobody"

    Declared by:

    [8691]<nixpkgs/nixos/modules/services/web-servers/jboss/default.nix>

[8692]services.jellyfin.enable

    Whether to enable Jellyfin Media Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8693]<nixpkgs/nixos/modules/services/misc/jellyfin.nix>

[8694]services.jellyfin.package

    Jellyfin package to use.

    Type: package

    Default: (build of jellyfin-10.7.5)

    Example:

    pkgs.jellyfin

    Declared by:

    [8695]<nixpkgs/nixos/modules/services/misc/jellyfin.nix>

[8696]services.jellyfin.group

    Group under which jellyfin runs.

    Type: string

    Default: "jellyfin"

    Declared by:

    [8697]<nixpkgs/nixos/modules/services/misc/jellyfin.nix>

[8698]services.jellyfin.openFirewall

    Open the default ports in the firewall for the media server. The HTTP/HTTPS ports can be
    changed in the Web UI, so this option should only be used if they are unchanged.

    Type: boolean

    Default: false

    Declared by:

    [8699]<nixpkgs/nixos/modules/services/misc/jellyfin.nix>

[8700]services.jellyfin.user

    User account under which Jellyfin runs.

    Type: string

    Default: "jellyfin"

    Declared by:

    [8701]<nixpkgs/nixos/modules/services/misc/jellyfin.nix>

[8702]services.jenkins.enable

    Whether to enable the jenkins continuous integration server.

    Type: boolean

    Default: false

    Declared by:

    [8703]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/default.nix>

[8704]services.jenkins.package

    Jenkins package to use.

    Type: package

    Default: "pkgs.jenkins"

    Declared by:

    [8705]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/default.nix>

[8706]services.jenkins.packages

    Packages to add to PATH for the jenkins process.

    Type: list of packages

    Default: "[ pkgs.stdenv pkgs.git pkgs.jdk11 config.programs.ssh.package pkgs.nix ]"

    Declared by:

    [8707]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/default.nix>

[8708]services.jenkins.environment

    Additional environment variables to be passed to the jenkins process. As a base environment,
    jenkins receives NIX_PATH from environment.sessionVariables, NIX_REMOTE is set to "daemon"
    and JENKINS_HOME is set to the value of services.jenkins.home. This option has precedence and
    can be used to override those mentioned variables.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [8709]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/default.nix>

[8710]services.jenkins.extraGroups

    List of extra groups that the "jenkins" user should be a part of.

    Type: list of strings

    Default: [ ]

    Example: [ "wheel" "dialout" ]

    Declared by:

    [8711]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/default.nix>

[8712]services.jenkins.extraJavaOptions

    Additional command line arguments to pass to the Java run time (as opposed to Jenkins).

    Type: list of strings

    Default: [ ]

    Example: [ "-Xmx80m" ]

    Declared by:

    [8713]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/default.nix>

[8714]services.jenkins.extraOptions

    Additional command line arguments to pass to Jenkins.

    Type: list of strings

    Default: [ ]

    Example: [ "--debug=9" ]

    Declared by:

    [8715]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/default.nix>

[8716]services.jenkins.group

    If the default user "jenkins" is configured then this is the primary group of that user.

    Type: string

    Default: "jenkins"

    Declared by:

    [8717]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/default.nix>

[8718]services.jenkins.home

    The path to use as JENKINS_HOME. If the default user "jenkins" is configured then this is the
    home of the "jenkins" user.

    Type: path

    Default: "/var/lib/jenkins"

    Declared by:

    [8719]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/default.nix>

[8720]services.jenkins.jobBuilder.enable

    Whether or not to enable the Jenkins Job Builder (JJB) service. It allows defining jobs for
    Jenkins in a declarative manner.

    Jobs managed through the Jenkins WebUI (or by other means) are left unchanged.

    Note that it really is declarative configuration; if you remove a previously defined job, the
    corresponding job directory will be deleted.

    Please see the Jenkins Job Builder documentation for more info: [8721] http://
    docs.openstack.org/infra/jenkins-job-builder/

    Type: boolean

    Default: false

    Declared by:

    [8722]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/job-builder.nix>

[8723]services.jenkins.jobBuilder.accessToken

    User token in Jenkins used to reload config. WARNING: This token will be world readable in
    the Nix store. To keep it secret, use the accessTokenFile option instead.

    Type: string

    Default: ""

    Declared by:

    [8724]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/job-builder.nix>

[8725]services.jenkins.jobBuilder.accessTokenFile

    File containing the API token for the accessUser user.

    Type: string

    Default: ""

    Example: "/run/keys/jenkins-job-builder-access-token"

    Declared by:

    [8726]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/job-builder.nix>

[8727]services.jenkins.jobBuilder.accessUser

    User id in Jenkins used to reload config.

    Type: string

    Default: ""

    Declared by:

    [8728]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/job-builder.nix>

[8729]services.jenkins.jobBuilder.jsonJobs

    Job descriptions for Jenkins Job Builder in JSON format.

    Type: list of strings

    Default: [ ]

    Example:

    [
      ''
        [ { "job":
            { "name": "jenkins-job-test-2",
              "builders": [ "shell": "echo 'Hello world!'" ]
            }
          }
        ]
      ''
    ]

    Declared by:

    [8730]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/job-builder.nix>

[8731]services.jenkins.jobBuilder.nixJobs

    Job descriptions for Jenkins Job Builder in Nix format.

    This is a trivial wrapper around jsonJobs, using builtins.toJSON behind the scene.

    Type: list of attribute sets

    Default: [ ]

    Example:

    [ { job =
        { name = "jenkins-job-test-3";
          builders = [
            { shell = "echo 'Hello world!'"; }
          ];
        };
      }
    ]

    Declared by:

    [8732]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/job-builder.nix>

[8733]services.jenkins.jobBuilder.yamlJobs

    Job descriptions for Jenkins Job Builder in YAML format.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    - job:
        name: jenkins-job-test-1
        builders:
          - shell: echo 'Hello world!'
    ''

    Declared by:

    [8734]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/job-builder.nix>

[8735]services.jenkins.listenAddress

    Specifies the bind address on which the jenkins HTTP interface listens. The default is the
    wildcard address.

    Type: string

    Default: "0.0.0.0"

    Example: "localhost"

    Declared by:

    [8736]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/default.nix>

[8737]services.jenkins.plugins

    A set of plugins to activate. Note that this will completely remove and replace any
    previously installed plugins. If you have manually-installed plugins that you want to keep
    while using this module, set this option to null. You can generate this set with a tool such
    as jenkinsPlugins2nix.

    Type: null or attribute set of packages

    Default: null

    Example:

    import path/to/jenkinsPlugins2nix-generated-plugins.nix { inherit (pkgs) fetchurl stdenv; }

    Declared by:

    [8738]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/default.nix>

[8739]services.jenkins.port

    Specifies port number on which the jenkins HTTP interface listens. The default is 8080.

    Type: signed integer

    Default: 8080

    Declared by:

    [8740]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/default.nix>

[8741]services.jenkins.prefix

    Specifies a urlPrefix to use with jenkins. If the example /jenkins is given, the jenkins
    server will be accessible using localhost:8080/jenkins.

    Type: string

    Default: ""

    Example: "/jenkins"

    Declared by:

    [8742]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/default.nix>

[8743]services.jenkins.user

    User the jenkins server should execute under.

    Type: string

    Default: "jenkins"

    Declared by:

    [8744]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/default.nix>

[8745]services.jenkinsSlave.enable

    If true the system will be configured to work as a jenkins slave. If the system is also
    configured to work as a jenkins master then this has no effect. In progress: Currently only
    assures the jenkins user is configured.

    Type: boolean

    Default: false

    Declared by:

    [8746]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/slave.nix>

[8747]services.jenkinsSlave.group

    If the default slave agent user "jenkins" is configured then this is the primary group of
    that user.

    Type: string

    Default: "jenkins"

    Declared by:

    [8748]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/slave.nix>

[8749]services.jenkinsSlave.home

    The path to use as JENKINS_HOME. If the default user "jenkins" is configured then this is the
    home of the "jenkins" user.

    Type: path

    Default: "/var/lib/jenkins"

    Declared by:

    [8750]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/slave.nix>

[8751]services.jenkinsSlave.user

    User the jenkins slave agent should execute under.

    Type: string

    Default: "jenkins"

    Declared by:

    [8752]<nixpkgs/nixos/modules/services/continuous-integration/jenkins/slave.nix>

[8753]services.jicofo.enable

    Whether to enable Jitsi Conference Focus - component of Jitsi Meet.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8754]<nixpkgs/nixos/modules/services/networking/jicofo.nix>

[8755]services.jicofo.bridgeMuc

    JID of the internal MUC used to communicate with Videobridges.

    Type: string

    Example: "jvbbrewery@internal.meet.example.org"

    Declared by:

    [8756]<nixpkgs/nixos/modules/services/networking/jicofo.nix>

[8757]services.jicofo.componentPasswordFile

    Path to file containing component secret.

    Type: string

    Example: "/run/keys/jicofo-component"

    Declared by:

    [8758]<nixpkgs/nixos/modules/services/networking/jicofo.nix>

[8759]services.jicofo.config

    Contents of the sip-communicator.properties configuration file for jicofo.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      "org.jitsi.jicofo.auth.URL" = "XMPP:jitsi-meet.example.com";
    }

    Declared by:

    [8760]<nixpkgs/nixos/modules/services/networking/jicofo.nix>

[8761]services.jicofo.userDomain

    Domain part of the JID for XMPP user connection.

    Type: string

    Example: "auth.meet.example.org"

    Declared by:

    [8762]<nixpkgs/nixos/modules/services/networking/jicofo.nix>

[8763]services.jicofo.userName

    User part of the JID for XMPP user connection.

    Type: string

    Default: "focus"

    Declared by:

    [8764]<nixpkgs/nixos/modules/services/networking/jicofo.nix>

[8765]services.jicofo.userPasswordFile

    Path to file containing password for XMPP user connection.

    Type: string

    Example: "/run/keys/jicofo-user"

    Declared by:

    [8766]<nixpkgs/nixos/modules/services/networking/jicofo.nix>

[8767]services.jicofo.xmppDomain

    Domain name of the XMMP server to which to connect as a component.

    If null, xmppHost is used.

    Type: null or string

    Example: "meet.example.org"

    Declared by:

    [8768]<nixpkgs/nixos/modules/services/networking/jicofo.nix>

[8769]services.jicofo.xmppHost

    Hostname of the XMPP server to connect to.

    Type: string

    Example: "localhost"

    Declared by:

    [8770]<nixpkgs/nixos/modules/services/networking/jicofo.nix>

[8771]services.jira.enable

    Whether to enable Atlassian JIRA service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8772]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8773]services.jira.package

    Atlassian JIRA package to use.

    Type: package

    Default: "pkgs.atlassian-jira"

    Declared by:

    [8774]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8775]services.jira.catalinaOptions

    Java options to pass to catalina/tomcat.

    Type: list of strings

    Default: [ ]

    Example: [ "-Xms1024m" "-Xmx2048m" ]

    Declared by:

    [8776]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8777]services.jira.group

    Group which runs JIRA.

    Type: string

    Default: "jira"

    Declared by:

    [8778]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8779]services.jira.home

    Home directory of the JIRA instance.

    Type: string

    Default: "/var/lib/jira"

    Declared by:

    [8780]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8781]services.jira.jrePackage

    Note that Atlassian only support the Oracle JRE (JRASERVER-46152).

    Type: package

    Default: "pkgs.oraclejre8"

    Declared by:

    [8782]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8783]services.jira.listenAddress

    Address to listen on.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [8784]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8785]services.jira.listenPort

    Port to listen on.

    Type: signed integer

    Default: 8091

    Declared by:

    [8786]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8787]services.jira.proxy.enable

    Whether to enable reverse proxy support.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8788]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8789]services.jira.proxy.name

    Virtual hostname at the proxy

    Type: string

    Example: "jira.example.com"

    Declared by:

    [8790]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8791]services.jira.proxy.port

    Port used at the proxy

    Type: signed integer

    Default: 443

    Example: 80

    Declared by:

    [8792]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8793]services.jira.proxy.scheme

    Protocol used at the proxy.

    Type: string

    Default: "https"

    Example: "http"

    Declared by:

    [8794]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8795]services.jira.proxy.secure

    Whether the connections to the proxy should be considered secure.

    Type: boolean

    Default: true

    Declared by:

    [8796]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8797]services.jira.sso.enable

    Whether to enable SSO with Atlassian Crowd.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8798]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8799]services.jira.sso.applicationName

    Exact name of this JIRA instance in Crowd

    Type: string

    Example: "jira"

    Declared by:

    [8800]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8801]services.jira.sso.applicationPassword

    Application password of this JIRA instance in Crowd

    Type: string

    Declared by:

    [8802]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8803]services.jira.sso.crowd

    Crowd Base URL without trailing slash

    Type: string

    Example: "http://localhost:8095/crowd"

    Declared by:

    [8804]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8805]services.jira.sso.validationInterval

    Set to 0, if you want authentication checks to occur on each request. Otherwise set to the
    number of minutes between request to validate if the user is logged in or out of the Crowd
    SSO server. Setting this value to 1 or higher will increase the performance of Crowd's
    integration.

    Type: signed integer

    Default: 2

    Example: 0

    Declared by:

    [8806]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8807]services.jira.user

    User which runs JIRA.

    Type: string

    Default: "jira"

    Declared by:

    [8808]<nixpkgs/nixos/modules/services/web-apps/atlassian/jira.nix>

[8809]services.jirafeau.enable

    Whether to enable Jirafeau file upload application..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8810]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8811]services.jirafeau.package

    Jirafeau package to use

    Type: package

    Default: "pkgs.jirafeau"

    Example: "pkgs.jirafeau"

    Declared by:

    [8812]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8813]services.jirafeau.adminPasswordSha256

    SHA-256 of the desired administration password. Leave blank/unset for no password.

    Type: string

    Default: ""

    Declared by:

    [8814]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8815]services.jirafeau.dataDir

    Location of Jirafeau storage directory.

    Type: path

    Default: "/var/lib/jirafeau/data/"

    Declared by:

    [8816]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8817]services.jirafeau.extraConfig

    Jirefeau configuration. Refer to [8818]https://gitlab.com/mojo42/Jirafeau/-/blob/4.3.0/lib/
    config.original.php for supported values.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    $cfg['style'] = 'courgette';
    $cfg['organisation'] = 'ACME';
    ''

    Declared by:

    [8819]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8820]services.jirafeau.hostName

    URL of instance. Must have trailing slash.

    Type: string

    Default: "localhost"

    Declared by:

    [8821]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8822]services.jirafeau.maxUploadSizeMegabytes

    Maximum upload size of accepted files.

    Type: signed integer

    Default: 0

    Declared by:

    [8823]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8824]services.jirafeau.maxUploadTimeout

    Timeout for reading client request bodies and headers. Refer to [8825]http://nginx.org/en/
    docs/http/ngx_http_core_module.html#client_body_timeout and [8826]http://nginx.org/en/docs/
    http/ngx_http_core_module.html#client_header_timeout for accepted values.

    Type: string

    Default: "30m"

    Declared by:

    [8827]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8828]services.jirafeau.nginxConfig

    Extra configuration for the nginx virtual host of Jirafeau.

    Type: submodule

    Default: { }

    Example: { serverAliases = [ "wiki.\${config.networking.domain}" ] ; }

    Declared by:

    [8829]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8830]services.jirafeau.nginxConfig.enableACME

    Whether to ask Let's Encrypt to sign a certificate for this vhost. Alternately, you can use
    an existing certificate through useACMEHost.

    Type: boolean

    Default: false

    Declared by:

    [8831]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8832]services.jirafeau.nginxConfig.acmeFallbackHost

    Host which to proxy requests to if acme challenge is not found. Useful if you want multiple
    hosts to be able to verify the same domain name.

    Type: null or string

    Default: null

    Declared by:

    [8833]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8834]services.jirafeau.nginxConfig.acmeRoot

    Directory for the acme challenge which is PUBLIC, don't put certs or keys in here

    Type: string

    Default: "/var/lib/acme/acme-challenge"

    Declared by:

    [8835]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8836]services.jirafeau.nginxConfig.addSSL

    Whether to enable HTTPS in addition to plain HTTP. This will set defaults for listen to
    listen on all interfaces on the respective default ports (80, 443).

    Type: boolean

    Default: false

    Declared by:

    [8837]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8838]services.jirafeau.nginxConfig.basicAuth

    Basic Auth protection for a vhost.

    WARNING: This is implemented to store the password in plain text in the Nix store.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      user = "password";
    };

    Declared by:

    [8839]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8840]services.jirafeau.nginxConfig.basicAuthFile

    Basic Auth password file for a vhost. Can be created via: htpasswd -c <filename> <username>.

    WARNING: The generate file contains the users' passwords in a non-cryptographically-securely
    hashed way.

    Type: null or path

    Default: null

    Declared by:

    [8841]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8842]services.jirafeau.nginxConfig.default

    Makes this vhost the default.

    Type: boolean

    Default: false

    Declared by:

    [8843]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8844]services.jirafeau.nginxConfig.extraConfig

    These lines go to the end of the vhost verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [8845]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8846]services.jirafeau.nginxConfig.forceSSL

    Whether to add a separate nginx server block that permanently redirects (301) all plain HTTP
    traffic to HTTPS. This will set defaults for listen to listen on all interfaces on the
    respective default ports (80, 443), where the non-SSL listens are used for the redirect
    vhosts.

    Type: boolean

    Default: false

    Declared by:

    [8847]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8848]services.jirafeau.nginxConfig.globalRedirect

    If set, all requests for this host are redirected permanently to the given hostname.

    Type: null or string

    Default: null

    Example: "newserver.example.org"

    Declared by:

    [8849]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8850]services.jirafeau.nginxConfig.http2

    Whether to enable HTTP 2. Note that (as of writing) due to nginx's implementation, to disable
    HTTP 2 you have to disable it on all vhosts that use a given IP address / port. If there is
    one server block configured to enable http2,then it is enabled for all server blocks on this
    IP. See https://stackoverflow.com/a/39466948/263061.

    Type: boolean

    Default: true

    Declared by:

    [8851]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8852]services.jirafeau.nginxConfig.http3

    Whether to enable HTTP 3. This requires using pkgs.nginxQuic package which can be achived by
    setting services.nginx.package = pkgs.nginxQuic;. Note that HTTP 3 support is experimental
    and *not* yet recommended for production. Read more at https://quic.nginx.org/

    Type: boolean

    Default: false

    Declared by:

    [8853]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8854]services.jirafeau.nginxConfig.listen

    Listen addresses and ports for this virtual host. IPv6 addresses must be enclosed in square
    brackets. Note: this option overrides addSSL and onlySSL.

    Type: list of submodules

    Default: [ ]

    Example: [ { addr = "195.154.1.1"; port = 443; ssl = true; } { addr = "192.154.1.1"; port =
    80; } ]

    Declared by:

    [8855]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8856]services.jirafeau.nginxConfig.listen.*.addr

    IP address.

    Type: string

    Declared by:

    [8857]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8858]services.jirafeau.nginxConfig.listen.*.extraParameters

    Extra parameters of this listen directive.

    Type: list of strings

    Default: [ ]

    Example: [ "reuseport" "deferred" ]

    Declared by:

    [8859]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8860]services.jirafeau.nginxConfig.listen.*.port

    Port number.

    Type: signed integer

    Default: 80

    Declared by:

    [8861]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8862]services.jirafeau.nginxConfig.listen.*.ssl

    Enable SSL.

    Type: boolean

    Default: false

    Declared by:

    [8863]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8864]services.jirafeau.nginxConfig.locations

    Declarative location config

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "/" = {
        proxyPass = "http://localhost:3000";
      };
    };

    Declared by:

    [8865]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8866]services.jirafeau.nginxConfig.locations.<name>.alias

    Alias directory for requests.

    Type: null or path

    Default: null

    Example: "/your/alias/directory"

    Declared by:

    [8867]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8868]services.jirafeau.nginxConfig.locations.<name>.basicAuth

    Basic Auth protection for a vhost.

    WARNING: This is implemented to store the password in plain text in the Nix store.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      user = "password";
    };

    Declared by:

    [8869]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8870]services.jirafeau.nginxConfig.locations.<name>.basicAuthFile

    Basic Auth password file for a vhost. Can be created via: htpasswd -c <filename> <username>.

    WARNING: The generate file contains the users' passwords in a non-cryptographically-securely
    hashed way.

    Type: null or path

    Default: null

    Declared by:

    [8871]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8872]services.jirafeau.nginxConfig.locations.<name>.extraConfig

    These lines go to the end of the location verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [8873]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8874]services.jirafeau.nginxConfig.locations.<name>.fastcgiParams

    FastCGI parameters to override. Unlike in the Nginx configuration file, overriding only some
    default parameters won't unset the default values for other parameters.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [8875]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8876]services.jirafeau.nginxConfig.locations.<name>.index

    Adds index directive.

    Type: null or string

    Default: null

    Example: "index.php index.html"

    Declared by:

    [8877]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8878]services.jirafeau.nginxConfig.locations.<name>.priority

    Order of this location block in relation to the others in the vhost. The semantics are the
    same as with `lib.mkOrder`. Smaller values have a greater priority.

    Type: signed integer

    Default: 1000

    Declared by:

    [8879]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8880]services.jirafeau.nginxConfig.locations.<name>.proxyPass

    Adds proxy_pass directive and sets recommended proxy headers if recommendedProxySettings is
    enabled.

    Type: null or string

    Default: null

    Example: "http://www.example.org/"

    Declared by:

    [8881]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8882]services.jirafeau.nginxConfig.locations.<name>.proxyWebsockets

    Whether to support proxying websocket connections with HTTP/1.1.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8883]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8884]services.jirafeau.nginxConfig.locations.<name>.return

    Adds a return directive, for e.g. redirections.

    Type: null or string

    Default: null

    Example: "301 http://example.com\$request_uri"

    Declared by:

    [8885]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8886]services.jirafeau.nginxConfig.locations.<name>.root

    Root directory for requests.

    Type: null or path

    Default: null

    Example: "/your/root/directory"

    Declared by:

    [8887]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8888]services.jirafeau.nginxConfig.locations.<name>.tryFiles

    Adds try_files directive.

    Type: null or string

    Default: null

    Example: "\$uri =404"

    Declared by:

    [8889]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8890]services.jirafeau.nginxConfig.onlySSL

    Whether to enable HTTPS and reject plain HTTP connections. This will set defaults for listen
    to listen on all interfaces on port 443.

    Type: boolean

    Default: false

    Declared by:

    [8891]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8892]services.jirafeau.nginxConfig.root

    The path of the web root directory.

    Type: null or path

    Default: null

    Example: "/data/webserver/docs"

    Declared by:

    [8893]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8894]services.jirafeau.nginxConfig.serverAliases

    Additional names of virtual hosts served by this virtual host configuration.

    Type: list of strings

    Default: [ ]

    Example: [ "www.example.org" "example.org" ]

    Declared by:

    [8895]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8896]services.jirafeau.nginxConfig.serverName

    Name of this virtual host. Defaults to attribute name in virtualHosts.

    Type: null or string

    Default: null

    Example: "example.org"

    Declared by:

    [8897]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8898]services.jirafeau.nginxConfig.sslCertificate

    Path to server SSL certificate.

    Type: path

    Example: "/var/host.cert"

    Declared by:

    [8899]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8900]services.jirafeau.nginxConfig.sslCertificateKey

    Path to server SSL certificate key.

    Type: path

    Example: "/var/host.key"

    Declared by:

    [8901]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8902]services.jirafeau.nginxConfig.sslTrustedCertificate

    Path to root SSL certificate for stapling and client certificates.

    Type: null or path

    Default: null

    Example: "/var/root.cert"

    Declared by:

    [8903]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8904]services.jirafeau.nginxConfig.useACMEHost

    A host of an existing Let's Encrypt certificate to use. This is useful if you have many
    subdomains and want to avoid hitting the [8905]rate limit. Alternately, you can generate a
    certificate through enableACME. Note that this option does not create any certificates, nor
    it does add subdomains to existing ones – you will need to create them manually using [8906]
    security.acme.certs.

    Type: null or string

    Default: null

    Declared by:

    [8907]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8908]services.jirafeau.poolConfig

    Options for Jirafeau PHP pool. See documentation on php-fpm.conf for details on configuration
    directives.

    Type: attribute set of string or signed integer or booleans

    Default: { pm = "dynamic"; pm.max_children = 32; pm.max_requests = 500; pm.max_spare_servers
    = 4; pm.min_spare_servers = 2; pm.start_servers = 2; }

    Declared by:

    [8909]<nixpkgs/nixos/modules/services/web-apps/jirafeau.nix>

[8910]services.jitsi-meet.enable

    Whether to enable Jitsi Meet - Secure, Simple and Scalable Video Conferences.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8911]<nixpkgs/nixos/modules/services/web-apps/jitsi-meet.nix>

[8912]services.jitsi-meet.config

    Client-side web application settings that override the defaults in config.js.

    See [8913]https://github.com/jitsi/jitsi-meet/blob/master/config.js for default configuration
    with comments.

    Type: attribute set

    Default: { }

    Example:

    {
      enableWelcomePage = false;
      defaultLang = "fi";
    }

    Declared by:

    [8914]<nixpkgs/nixos/modules/services/web-apps/jitsi-meet.nix>

[8915]services.jitsi-meet.extraConfig

    Text to append to config.js web application config file.

    Can be used to insert JavaScript logic to determine user's region in cascading bridges setup.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [8916]<nixpkgs/nixos/modules/services/web-apps/jitsi-meet.nix>

[8917]services.jitsi-meet.hostName

    Hostname of the Jitsi Meet instance.

    Type: string

    Example: "meet.example.org"

    Declared by:

    [8918]<nixpkgs/nixos/modules/services/web-apps/jitsi-meet.nix>

[8919]services.jitsi-meet.interfaceConfig

    Client-side web-app interface settings that override the defaults in interface_config.js.

    See [8920]https://github.com/jitsi/jitsi-meet/blob/master/interface_config.js for default
    configuration with comments.

    Type: attribute set

    Default: { }

    Example:

    {
      SHOW_JITSI_WATERMARK = false;
      SHOW_WATERMARK_FOR_GUESTS = false;
    }

    Declared by:

    [8921]<nixpkgs/nixos/modules/services/web-apps/jitsi-meet.nix>

[8922]services.jitsi-meet.jicofo.enable

    Whether to enable JiCoFo instance and configure it to connect to Prosody.

    Additional configuration is possible with services.jicofo.

    Type: boolean

    Default: true

    Declared by:

    [8923]<nixpkgs/nixos/modules/services/web-apps/jitsi-meet.nix>

[8924]services.jitsi-meet.nginx.enable

    Whether to enable nginx virtual host that will serve the javascript application and act as a
    proxy for the XMPP server. Further nginx configuration can be done by adapting
    services.nginx.virtualHosts.<hostName>. When this is enabled, ACME will be used to retrieve a
    TLS certificate by default. To disable this, set the services.nginx.virtualHosts.
    <hostName>.enableACME to false and if appropriate do the same for
    services.nginx.virtualHosts.<hostName>.forceSSL.

    Type: boolean

    Default: true

    Declared by:

    [8925]<nixpkgs/nixos/modules/services/web-apps/jitsi-meet.nix>

[8926]services.jitsi-meet.prosody.enable

    Whether to configure Prosody to relay XMPP messages between Jitsi Meet components. Turn this
    off if you want to configure it manually.

    Type: boolean

    Default: true

    Declared by:

    [8927]<nixpkgs/nixos/modules/services/web-apps/jitsi-meet.nix>

[8928]services.jitsi-meet.videobridge.enable

    Whether to enable Jitsi Videobridge instance and configure it to connect to Prosody.

    Additional configuration is possible with services.jitsi-videobridge.

    Type: boolean

    Default: true

    Declared by:

    [8929]<nixpkgs/nixos/modules/services/web-apps/jitsi-meet.nix>

[8930]services.jitsi-meet.videobridge.passwordFile

    File containing password to the Prosody account for videobridge.

    If null, a file with password will be generated automatically. Setting this option is useful
    if you plan to connect additional videobridges to the XMPP server.

    Type: null or string

    Default: null

    Example: "/run/keys/videobridge"

    Declared by:

    [8931]<nixpkgs/nixos/modules/services/web-apps/jitsi-meet.nix>

[8932]services.jitsi-videobridge.enable

    Whether to enable Jitsi Videobridge, a WebRTC compatible video router.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8933]<nixpkgs/nixos/modules/services/networking/jitsi-videobridge.nix>

[8934]services.jitsi-videobridge.apis

    What is passed as --apis= parameter. If this is empty, "none" is passed. Needed for
    monitoring jitsi.

    Type: list of strings

    Default: [ ]

    Example:

    [ "colibri" "rest" ]

    Declared by:

    [8935]<nixpkgs/nixos/modules/services/networking/jitsi-videobridge.nix>

[8936]services.jitsi-videobridge.config

    Videobridge configuration.

    See [8937]https://github.com/jitsi/jitsi-videobridge/blob/master/src/main/resources/
    reference.conf for default configuration with comments.

    Type: attribute set

    Default: { }

    Example:

    {
      videobridge = {
        ice.udp.port = 5000;
        websockets = {
          enabled = true;
          server-id = "jvb1";
        };
      };
    }

    Declared by:

    [8938]<nixpkgs/nixos/modules/services/networking/jitsi-videobridge.nix>

[8939]services.jitsi-videobridge.extraProperties

    Additional Java properties passed to jitsi-videobridge.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [8940]<nixpkgs/nixos/modules/services/networking/jitsi-videobridge.nix>

[8941]services.jitsi-videobridge.nat.localAddress

    Local address when running behind NAT.

    Type: null or string

    Default: null

    Example: "192.168.1.42"

    Declared by:

    [8942]<nixpkgs/nixos/modules/services/networking/jitsi-videobridge.nix>

[8943]services.jitsi-videobridge.nat.publicAddress

    Public address when running behind NAT.

    Type: null or string

    Default: null

    Example: "1.2.3.4"

    Declared by:

    [8944]<nixpkgs/nixos/modules/services/networking/jitsi-videobridge.nix>

[8945]services.jitsi-videobridge.openFirewall

    Whether to open ports in the firewall for the videobridge.

    Type: boolean

    Default: false

    Declared by:

    [8946]<nixpkgs/nixos/modules/services/networking/jitsi-videobridge.nix>

[8947]services.jitsi-videobridge.xmppConfigs

    XMPP servers to connect to.

    See [8948]https://github.com/jitsi/jitsi-videobridge/blob/master/doc/muc.md for more
    information.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "localhost" = {
        hostName = "localhost";
        userName = "jvb";
        domain = "auth.xmpp.example.org";
        passwordFile = "/var/lib/jitsi-meet/videobridge-secret";
        mucJids = "jvbbrewery@internal.xmpp.example.org";
      };
    }

    Declared by:

    [8949]<nixpkgs/nixos/modules/services/networking/jitsi-videobridge.nix>

[8950]services.jitsi-videobridge.xmppConfigs.<name>.disableCertificateVerification

    Whether to skip validation of the server's certificate.

    Type: boolean

    Default: false

    Declared by:

    [8951]<nixpkgs/nixos/modules/services/networking/jitsi-videobridge.nix>

[8952]services.jitsi-videobridge.xmppConfigs.<name>.domain

    Domain part of JID of the XMPP user, if it is different from hostName.

    Type: null or string

    Default: null

    Example: "auth.xmpp.example.org"

    Declared by:

    [8953]<nixpkgs/nixos/modules/services/networking/jitsi-videobridge.nix>

[8954]services.jitsi-videobridge.xmppConfigs.<name>.hostName

    Hostname of the XMPP server to connect to. Name of the attribute set is used by default.

    Type: string

    Example: "xmpp.example.org"

    Declared by:

    [8955]<nixpkgs/nixos/modules/services/networking/jitsi-videobridge.nix>

[8956]services.jitsi-videobridge.xmppConfigs.<name>.mucJids

    JID of the MUC to join. JiCoFo needs to be configured to join the same MUC.

    Type: string

    Example: "jvbbrewery@internal.xmpp.example.org"

    Declared by:

    [8957]<nixpkgs/nixos/modules/services/networking/jitsi-videobridge.nix>

[8958]services.jitsi-videobridge.xmppConfigs.<name>.mucNickname

    Videobridges use the same XMPP account and need to be distinguished by the nickname (aka
    resource part of the JID). By default, system hostname is used.

    Type: string

    Declared by:

    [8959]<nixpkgs/nixos/modules/services/networking/jitsi-videobridge.nix>

[8960]services.jitsi-videobridge.xmppConfigs.<name>.passwordFile

    File containing the password for the user.

    Type: string

    Example: "/run/keys/jitsi-videobridge-xmpp1"

    Declared by:

    [8961]<nixpkgs/nixos/modules/services/networking/jitsi-videobridge.nix>

[8962]services.jitsi-videobridge.xmppConfigs.<name>.userName

    User part of the JID.

    Type: string

    Default: "jvb"

    Declared by:

    [8963]<nixpkgs/nixos/modules/services/networking/jitsi-videobridge.nix>

[8964]services.jmusicbot.enable

    Whether to enable jmusicbot, a Discord music bot that's easy to set up and run yourself.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8965]<nixpkgs/nixos/modules/services/audio/jmusicbot.nix>

[8966]services.jmusicbot.stateDir

    The directory where config.txt and serversettings.json is saved. If left as the default value
    this directory will automatically be created before JMusicBot starts, otherwise the sysadmin
    is responsible for ensuring the directory exists with appropriate ownership and permissions.
    Untouched by the value of this option config.txt needs to be placed manually into this
    directory.

    Type: path

    Default: "/var/lib/jmusicbot/"

    Declared by:

    [8967]<nixpkgs/nixos/modules/services/audio/jmusicbot.nix>

[8968]services.journalbeat.enable

    Whether to enable journalbeat.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [8969]<nixpkgs/nixos/modules/services/logging/journalbeat.nix>

[8970]services.journalbeat.package

    The journalbeat package to use

    Type: package

    Default: "pkgs.journalbeat"

    Example:

    pkgs.journalbeat7

    Declared by:

    [8971]<nixpkgs/nixos/modules/services/logging/journalbeat.nix>

[8972]services.journalbeat.extraConfig

    Any other configuration options you want to add

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [8973]<nixpkgs/nixos/modules/services/logging/journalbeat.nix>

[8974]services.journalbeat.name

    Name of the beat

    Type: string

    Default: "journalbeat"

    Declared by:

    [8975]<nixpkgs/nixos/modules/services/logging/journalbeat.nix>

[8976]services.journalbeat.stateDir

    Directory below /var/lib/ to store journalbeat's own logs and other data. This directory will
    be created automatically using systemd's StateDirectory mechanism.

    Type: string

    Default: "journalbeat"

    Declared by:

    [8977]<nixpkgs/nixos/modules/services/logging/journalbeat.nix>

[8978]services.journalbeat.tags

    Tags to place on the shipped log messages

    Type: list of strings

    Default: [ ]

    Declared by:

    [8979]<nixpkgs/nixos/modules/services/logging/journalbeat.nix>

[8980]services.journald.enableHttpGateway

    Whether to enable the HTTP gateway to the journal.

    Type: boolean

    Default: false

    Declared by:

    [8981]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[8982]services.journald.console

    If non-empty, write log messages to the specified TTY device.

    Type: string

    Default: ""

    Declared by:

    [8983]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[8984]services.journald.extraConfig

    Extra config options for systemd-journald. See man journald.conf for available options.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "Storage=volatile"

    Declared by:

    [8985]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[8986]services.journald.forwardToSyslog

    Whether to forward log messages to syslog.

    Type: boolean

    Default: "services.rsyslogd.enable || services.syslog-ng.enable"

    Declared by:

    [8987]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[8988]services.journald.rateLimitBurst

    Configures the rate limiting burst limit (number of messages per interval) that is applied to
    all messages generated on the system. This rate limiting is applied per-service, so that two
    services which log do not interfere with each other's limit.

    Note that the effective rate limit is multiplied by a factor derived from the available free
    disk space for the journal as described on [8989] journald.conf(5).

    Note that the total amount of logs stored is limited by journald settings such as
    SystemMaxUse, which defaults to a 4 GB cap.

    It is thus recommended to compute what period of time that you will be able to store logs for
    when an application logs at full burst rate. With default settings for log lines that are 100
    Bytes long, this can amount to just a few hours.

    Type: signed integer

    Default: 10000

    Declared by:

    [8990]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[8991]services.journald.rateLimitInterval

    Configures the rate limiting interval that is applied to all messages generated on the
    system. This rate limiting is applied per-service, so that two services which log do not
    interfere with each other's limit. The value may be specified in the following units: s, min,
    h, ms, us. To turn off any kind of rate limiting, set either value to 0.

    See services.journald.rateLimitBurst for important considerations when setting this value.

    Type: string

    Default: "30s"

    Declared by:

    [8992]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[8993]services.journaldriver.enable

    Whether to enable journaldriver to forward journald logs to Stackdriver Logging.

    Type: boolean

    Default: false

    Declared by:

    [8994]<nixpkgs/nixos/modules/services/logging/journaldriver.nix>

[8995]services.journaldriver.applicationCredentials

    Path to the service account private key (in JSON-format) used to forward log entries to
    Stackdriver Logging on non-GCP instances.

    This option is required on non-GCP machines, but should not be set on GCP instances.

    Type: null or path

    Default: null

    Declared by:

    [8996]<nixpkgs/nixos/modules/services/logging/journaldriver.nix>

[8997]services.journaldriver.googleCloudProject

    Configures the name of the Google Cloud project to which to forward journald logs.

    This option is required on non-GCP machines, but should not be set on GCP instances.

    Type: null or string

    Default: null

    Declared by:

    [8998]<nixpkgs/nixos/modules/services/logging/journaldriver.nix>

[8999]services.journaldriver.logLevel

    Log level at which journaldriver logs its own output.

    Type: string

    Default: "info"

    Declared by:

    [9000]<nixpkgs/nixos/modules/services/logging/journaldriver.nix>

[9001]services.journaldriver.logName

    Configures the name of the target log in Stackdriver Logging. This option can be set to, for
    example, the hostname of a machine to improve the user experience in the logging overview.

    Type: null or string

    Default: null

    Declared by:

    [9002]<nixpkgs/nixos/modules/services/logging/journaldriver.nix>

[9003]services.journaldriver.logStream

    Configures the name of the Stackdriver Logging log stream into which to write journald
    entries.

    This option is required on non-GCP machines, but should not be set on GCP instances.

    Type: null or string

    Default: null

    Declared by:

    [9004]<nixpkgs/nixos/modules/services/logging/journaldriver.nix>

[9005]services.journalwatch.enable

    If enabled, periodically check the journal with journalwatch and report the results by mail.

    Type: boolean

    Default: false

    Declared by:

    [9006]<nixpkgs/nixos/modules/services/logging/journalwatch.nix>

[9007]services.journalwatch.accuracy

    The time window around the interval in which the journalwatch run will be scheduled.

    The format is described in systemd.time(7).

    Type: string

    Default: "10min"

    Declared by:

    [9008]<nixpkgs/nixos/modules/services/logging/journalwatch.nix>

[9009]services.journalwatch.extraConfig

    Extra lines to be added verbatim to the journalwatch/config configuration file. You can add
    any commandline argument to the config, without the '--'. See journalwatch --help for all
    arguments and their description.

    Type: string

    Default: ""

    Declared by:

    [9010]<nixpkgs/nixos/modules/services/logging/journalwatch.nix>

[9011]services.journalwatch.filterBlocks

    filterBlocks can be defined to blacklist journal messages which are not errors. Each block
    matches on a log entry field, and the filters in that block then are matched against all
    messages with a matching log entry field.

    All messages whose PRIORITY is at least 6 (INFO) are processed by journalwatch. If you don't
    specify any filterBlocks, PRIORITY is reduced to 5 (NOTICE) by default.

    All regular expressions are extended Python regular expressions, for details see: http://
    doc.pyschools.com/html/regex.html

    Type: list of submodules

    Default: [ { filters = "(Stopped|Stopping|Starting|Started) .*\n(Created slice|Removed slice)
    user-\\d*\\.slice\\.\nReceived SIGRTMIN\\+24 from PID .*\n(Reached target|Stopped target) .*\
    nStartup finished in \\d*ms\\.\n"; match = "SYSLOG_IDENTIFIER = systemd"; } ]

    Example: [ { filters = "New session [a-z]?\\d+ of user \\w+\\.\nRemoved session [a-z]?\\d+\\.
    \n"; match = "_SYSTEMD_UNIT = systemd-logind.service"; } { filters = "pam_unix\\
    (crond:session\\): session (opened|closed) for user \\w+\n\\(\\w+\\) CMD .*\n"; match =
    "SYSLOG_IDENTIFIER = /(CROND|crond)/"; } ]

    Declared by:

    [9012]<nixpkgs/nixos/modules/services/logging/journalwatch.nix>

[9013]services.journalwatch.filterBlocks.*.filters

    The filters to apply on all messages which satisfy match. Any of those messages that match
    any specified filter will be removed from journalwatch's output. Each filter is an extended
    Python regular expression. You can specify multiple filters and separate them by newlines.
    Lines starting with '#' are comments. Inline-comments are not permitted.

    Type: string

    Example:

    ''
    (Stopped|Stopping|Starting|Started) .*
    (Reached target|Stopped target) .*
    ''

    Declared by:

    [9014]<nixpkgs/nixos/modules/services/logging/journalwatch.nix>

[9015]services.journalwatch.filterBlocks.*.match

    Syntax: field = value Specifies the log entry field this block should apply to. If the field
    of a message matches this value, this patternBlock's filters are applied. If value starts and
    ends with a slash, it is interpreted as an extended python regular expression, if not, it's
    an exact match. The journal fields are explained in systemd.journal-fields(7).

    Type: string

    Example: "SYSLOG_IDENTIFIER = systemd"

    Declared by:

    [9016]<nixpkgs/nixos/modules/services/logging/journalwatch.nix>

[9017]services.journalwatch.interval

    How often to run journalwatch.

    The format is described in systemd.time(7).

    Type: string

    Default: "hourly"

    Declared by:

    [9018]<nixpkgs/nixos/modules/services/logging/journalwatch.nix>

[9019]services.journalwatch.mailBinary

    Sendmail-compatible binary to be used to send the messages.

    Type: path

    Default: "/run/wrappers/bin/sendmail"

    Declared by:

    [9020]<nixpkgs/nixos/modules/services/logging/journalwatch.nix>

[9021]services.journalwatch.mailFrom

    Mail address to send journalwatch reports from.

    Type: string

    Default: "journalwatch@nixos"

    Declared by:

    [9022]<nixpkgs/nixos/modules/services/logging/journalwatch.nix>

[9023]services.journalwatch.mailTo

    Mail address to send journalwatch reports to.

    Type: null or string

    Default: null

    Declared by:

    [9024]<nixpkgs/nixos/modules/services/logging/journalwatch.nix>

[9025]services.journalwatch.priority

    Lowest priority of message to be considered. A value between 7 ("debug"), and 0 ("emerg").
    Defaults to 6 ("info"). If you don't care about anything with "info" priority, you can reduce
    this to e.g. 5 ("notice") to considerably reduce the amount of messages without needing many
    filterBlocks.

    Type: signed integer

    Default: 6

    Declared by:

    [9026]<nixpkgs/nixos/modules/services/logging/journalwatch.nix>

[9027]services.jupyter.enable

    Whether to enable Jupyter development server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9028]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9029]services.jupyter.package

    Jupyter package to use.

    Type: package

    Default: (build of python3.8-notebook-6.3.0)

    Declared by:

    [9030]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9031]services.jupyter.command

    Which command the service runs. Note that not all jupyter packages have all commands, e.g.
    jupyter-lab isn't present in the default package.

    Type: string

    Default: "jupyter-notebook"

    Example: "jupyter-lab"

    Declared by:

    [9032]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9033]services.jupyter.group

    Name of the group used to run the jupyter service. Use this if you want to create a group of
    users that are able to view the notebook directory's content.

    Type: string

    Default: "jupyter"

    Example: "users"

    Declared by:

    [9034]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9035]services.jupyter.ip

    IP address Jupyter will be listening on.

    Type: string

    Default: "localhost"

    Declared by:

    [9036]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9037]services.jupyter.kernels

    Declarative kernel config

    Kernels can be declared in any language that supports and has the required dependencies to
    communicate with a jupyter server. In python's case, it means that ipykernel package must
    always be included in the list of packages of the targeted environment.

    Type: null or attribute set of submodules

    Default: null

    Example:

    {
      python3 = let
        env = (pkgs.python3.withPackages (pythonPackages: with pythonPackages; [
                ipykernel
                pandas
                scikit-learn
              ]));
      in {
        displayName = "Python 3 for machine learning";
        argv = [
          "${env.interpreter}"
          "-m"
          "ipykernel_launcher"
          "-f"
          "{connection_file}"
        ];
        language = "python";
        logo32 = "${env.sitePackages}/ipykernel/resources/logo-32x32.png";
        logo64 = "${env.sitePackages}/ipykernel/resources/logo-64x64.png";
      };
    }

    Declared by:

    [9038]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9039]services.jupyter.kernels.<name>.argv

    Command and arguments to start the kernel.

    Type: list of strings

    Example: [ "{customEnv.interpreter}" "-m" "ipykernel_launcher" "-f" "{connection_file}" ]

    Declared by:

    [9040]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9041]services.jupyter.kernels.<name>.displayName

    Name that will be shown to the user.

    Type: string

    Default: ""

    Example: [ "Python 3" "Python 3 for Data Science" ]

    Declared by:

    [9042]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9043]services.jupyter.kernels.<name>.language

    Language of the environment. Typically the name of the binary.

    Type: string

    Example: "python"

    Declared by:

    [9044]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9045]services.jupyter.kernels.<name>.logo32

    Path to 32x32 logo png.

    Type: null or path

    Default: null

    Example: "{env.sitePackages}/ipykernel/resources/logo-32x32.png"

    Declared by:

    [9046]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9047]services.jupyter.kernels.<name>.logo64

    Path to 64x64 logo png.

    Type: null or path

    Default: null

    Example: "{env.sitePackages}/ipykernel/resources/logo-64x64.png"

    Declared by:

    [9048]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9049]services.jupyter.notebookConfig

    Raw jupyter config.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [9050]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9051]services.jupyter.notebookDir

    Root directory for notebooks.

    Type: string

    Default: "~/"

    Declared by:

    [9052]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9053]services.jupyter.password

    Password to use with notebook. Can be generated using: In [1]: from notebook.auth import
    passwd In [2]: passwd('test') Out[2]:
    'sha1:1b961dc713fb:88483270a63e57d18d43cf337e629539de1436ba' NOTE: you need to keep the
    single quote inside the nix string. Or you can use a python oneliner: "open('/path/
    secret_file', 'r', encoding='utf8').read().strip()" It will be interpreted at the end of the
    notebookConfig.

    Type: string

    Example: [ "'sha1:1b961dc713fb:88483270a63e57d18d43cf337e629539de1436ba'" "open('/path/
    secret_file', 'r', encoding='utf8').read().strip()" ]

    Declared by:

    [9054]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9055]services.jupyter.port

    Port number Jupyter will be listening on.

    Type: signed integer

    Default: 8888

    Declared by:

    [9056]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9057]services.jupyter.user

    Name of the user used to run the jupyter service. For security reason, jupyter should really
    not be run as root. If not set (jupyter), the service will create a jupyter user with
    appropriate settings.

    Type: string

    Default: "jupyter"

    Example: "aborsu"

    Declared by:

    [9058]<nixpkgs/nixos/modules/services/development/jupyter/default.nix>

[9059]services.jupyterhub.enable

    Whether to enable Jupyterhub development server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9060]<nixpkgs/nixos/modules/services/development/jupyterhub/default.nix>

[9061]services.jupyterhub.authentication

    Jupyterhub authentication to use

    There are many authenticators available including: oauth, pam, ldap, kerberos, etc.

    Type: string

    Default: "jupyterhub.auth.PAMAuthenticator"

    Declared by:

    [9062]<nixpkgs/nixos/modules/services/development/jupyterhub/default.nix>

[9063]services.jupyterhub.extraConfig

    Extra contents appended to the jupyterhub configuration

    Jupyterhub configuration is a normal python file using Traitlets. https://
    jupyterhub.readthedocs.io/en/stable/getting-started/config-basics.html. The base
    configuration of this module was designed to have sane defaults for configuration but you can
    override anything since this is a python file.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    c.SystemdSpawner.mem_limit = '8G'
    c.SystemdSpawner.cpu_limit = 2.0

    Declared by:

    [9064]<nixpkgs/nixos/modules/services/development/jupyterhub/default.nix>

[9065]services.jupyterhub.host

    Bind IP JupyterHub will be listening on

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [9066]<nixpkgs/nixos/modules/services/development/jupyterhub/default.nix>

[9067]services.jupyterhub.jupyterhubEnv

    Python environment to run jupyterhub

    Customizing will affect the packages available in the hub and proxy. This will allow packages
    to be available for the extraConfig that you may need. This will not normally need to be
    changed.

    Type: package

    Default: (build of python3-3.8.9-env)

    Declared by:

    [9068]<nixpkgs/nixos/modules/services/development/jupyterhub/default.nix>

[9069]services.jupyterhub.jupyterlabEnv

    Python environment to run jupyterlab

    Customizing will affect the packages available in the jupyterlab server and the default
    kernel provided. This is the way to customize the jupyterlab extensions and jupyter notebook
    extensions. This will not normally need to be changed.

    Type: package

    Default: (build of )

    Declared by:

    [9070]<nixpkgs/nixos/modules/services/development/jupyterhub/default.nix>

[9071]services.jupyterhub.kernels

    Declarative kernel config

    Kernels can be declared in any language that supports and has the required dependencies to
    communicate with a jupyter server. In python's case, it means that ipykernel package must
    always be included in the list of packages of the targeted environment.

    Type: null or attribute set of submodules

    Default: null

    Example:

    {
      python3 = let
        env = (pkgs.python3.withPackages (pythonPackages: with pythonPackages; [
                ipykernel
                pandas
                scikit-learn
              ]));
      in {
        displayName = "Python 3 for machine learning";
        argv = [
          "${env.interpreter}"
          "-m"
          "ipykernel_launcher"
          "-f"
          "{connection_file}"
        ];
        language = "python";
        logo32 = "${env}/${env.sitePackages}/ipykernel/resources/logo-32x32.png";
        logo64 = "${env}/${env.sitePackages}/ipykernel/resources/logo-64x64.png";
      };
    }

    Declared by:

    [9072]<nixpkgs/nixos/modules/services/development/jupyterhub/default.nix>

[9073]services.jupyterhub.kernels.<name>.argv

    Command and arguments to start the kernel.

    Type: list of strings

    Example: [ "{customEnv.interpreter}" "-m" "ipykernel_launcher" "-f" "{connection_file}" ]

    Declared by:

    [9074]<nixpkgs/nixos/modules/services/development/jupyterhub/default.nix>

[9075]services.jupyterhub.kernels.<name>.displayName

    Name that will be shown to the user.

    Type: string

    Default: ""

    Example: [ "Python 3" "Python 3 for Data Science" ]

    Declared by:

    [9076]<nixpkgs/nixos/modules/services/development/jupyterhub/default.nix>

[9077]services.jupyterhub.kernels.<name>.language

    Language of the environment. Typically the name of the binary.

    Type: string

    Example: "python"

    Declared by:

    [9078]<nixpkgs/nixos/modules/services/development/jupyterhub/default.nix>

[9079]services.jupyterhub.kernels.<name>.logo32

    Path to 32x32 logo png.

    Type: null or path

    Default: null

    Example: "{env.sitePackages}/ipykernel/resources/logo-32x32.png"

    Declared by:

    [9080]<nixpkgs/nixos/modules/services/development/jupyterhub/default.nix>

[9081]services.jupyterhub.kernels.<name>.logo64

    Path to 64x64 logo png.

    Type: null or path

    Default: null

    Example: "{env.sitePackages}/ipykernel/resources/logo-64x64.png"

    Declared by:

    [9082]<nixpkgs/nixos/modules/services/development/jupyterhub/default.nix>

[9083]services.jupyterhub.port

    Port number Jupyterhub will be listening on

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8000

    Declared by:

    [9084]<nixpkgs/nixos/modules/services/development/jupyterhub/default.nix>

[9085]services.jupyterhub.spawner

    Jupyterhub spawner to use

    There are many spawners available including: local process, systemd, docker, kubernetes,
    yarn, batch, etc.

    Type: string

    Default: "systemdspawner.SystemdSpawner"

    Declared by:

    [9086]<nixpkgs/nixos/modules/services/development/jupyterhub/default.nix>

[9087]services.jupyterhub.stateDirectory

    Directory for jupyterhub state (token + database)

    Type: string

    Default: "jupyterhub"

    Declared by:

    [9088]<nixpkgs/nixos/modules/services/development/jupyterhub/default.nix>

[9089]services.k3s.enable

    Whether to enable k3s.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9090]<nixpkgs/nixos/modules/services/cluster/k3s/default.nix>

[9091]services.k3s.package

    Package that should be used for k3s

    Type: package

    Default: "pkgs.k3s"

    Example:

    pkgs.k3s

    Declared by:

    [9092]<nixpkgs/nixos/modules/services/cluster/k3s/default.nix>

[9093]services.k3s.disableAgent

    Only run the server. This option only makes sense for a server.

    Type: boolean

    Default: false

    Declared by:

    [9094]<nixpkgs/nixos/modules/services/cluster/k3s/default.nix>

[9095]services.k3s.docker

    Use docker to run containers rather than the built-in containerd.

    Type: boolean

    Default: false

    Declared by:

    [9096]<nixpkgs/nixos/modules/services/cluster/k3s/default.nix>

[9097]services.k3s.extraFlags

    Extra flags to pass to the k3s command.

    Type: string

    Default: ""

    Example: "--no-deploy traefik --cluster-cidr 10.24.0.0/16"

    Declared by:

    [9098]<nixpkgs/nixos/modules/services/cluster/k3s/default.nix>

[9099]services.k3s.role

    Whether k3s should run as a server or agent. Note that the server, by default, also runs as
    an agent.

    Type: one of "server", "agent"

    Default: "server"

    Declared by:

    [9100]<nixpkgs/nixos/modules/services/cluster/k3s/default.nix>

[9101]services.k3s.serverAddr

    The k3s server to connect to. This option only makes sense for an agent.

    Type: string

    Default: ""

    Example: "https://10.0.0.10:6443"

    Declared by:

    [9102]<nixpkgs/nixos/modules/services/cluster/k3s/default.nix>

[9103]services.k3s.token

    The k3s token to use when connecting to the server. This option only makes sense for an
    agent.

    Type: string

    Default: ""

    Declared by:

    [9104]<nixpkgs/nixos/modules/services/cluster/k3s/default.nix>

[9105]services.kapacitor.enable

    Whether to enable kapacitor.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9106]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9107]services.kapacitor.alerta.enable

    Whether to enable kapacitor alerta integration.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9108]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9109]services.kapacitor.alerta.environment

    Default Alerta environment

    Type: string

    Default: "Production"

    Declared by:

    [9110]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9111]services.kapacitor.alerta.origin

    Default origin of alert

    Type: string

    Default: "kapacitor"

    Declared by:

    [9112]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9113]services.kapacitor.alerta.token

    Default Alerta authentication token

    Type: string

    Default: ""

    Declared by:

    [9114]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9115]services.kapacitor.alerta.url

    The URL to the Alerta REST API

    Type: string

    Default: "http://localhost:5000"

    Example: "http://localhost:5000"

    Declared by:

    [9116]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9117]services.kapacitor.bind

    Address to bind to. The default is to bind to all addresses

    Type: string

    Default: ""

    Example:

    0.0.0.0

    Declared by:

    [9118]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9119]services.kapacitor.dataDir

    Location where Kapacitor stores its state

    Type: path

    Default: "/var/lib/kapacitor"

    Example: "/var/lib/kapacitor"

    Declared by:

    [9120]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9121]services.kapacitor.defaultDatabase.enable

    Whether to enable kapacitor.defaultDatabase.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9122]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9123]services.kapacitor.defaultDatabase.password

    The password to connect to the remote InfluxDB server

    Type: string

    Declared by:

    [9124]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9125]services.kapacitor.defaultDatabase.url

    The URL to an InfluxDB server that serves as the default database

    Type: string

    Example: "http://localhost:8086"

    Declared by:

    [9126]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9127]services.kapacitor.defaultDatabase.username

    The username to connect to the remote InfluxDB server

    Type: string

    Declared by:

    [9128]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9129]services.kapacitor.extraConfig

    These lines go into kapacitord.conf verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [9130]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9131]services.kapacitor.group

    Group under which Kapacitor runs

    Type: string

    Default: "kapacitor"

    Declared by:

    [9132]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9133]services.kapacitor.loadDirectory

    Directory where to load services from, such as tasks, templates and handlers (or null to
    disable service loading on startup)

    Type: null or path

    Default: null

    Declared by:

    [9134]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9135]services.kapacitor.port

    Port of Kapacitor

    Type: signed integer

    Default: 9092

    Declared by:

    [9136]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9137]services.kapacitor.taskSnapshotInterval

    Specifies how often to snapshot the task state (in InfluxDB time units)

    Type: string

    Default: "1m0s"

    Example: "1m0s"

    Declared by:

    [9138]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9139]services.kapacitor.user

    User account under which Kapacitor runs

    Type: string

    Default: "kapacitor"

    Declared by:

    [9140]<nixpkgs/nixos/modules/services/monitoring/kapacitor.nix>

[9141]services.kbfs.enable

    Whether to mount the Keybase filesystem.

    Type: boolean

    Default: false

    Declared by:

    [9142]<nixpkgs/nixos/modules/services/network-filesystems/kbfs.nix>

[9143]services.kbfs.enableRedirector

    Whether to enable the Keybase root redirector service, allowing any user to access KBFS files
    via /keybase, which will show different contents depending on the requester.

    Type: boolean

    Default: false

    Declared by:

    [9144]<nixpkgs/nixos/modules/services/network-filesystems/kbfs.nix>

[9145]services.kbfs.extraFlags

    Additional flags to pass to the Keybase filesystem on launch.

    Type: list of strings

    Default: [ ]

    Example: [ "-label kbfs" "-mount-type normal" ]

    Declared by:

    [9146]<nixpkgs/nixos/modules/services/network-filesystems/kbfs.nix>

[9147]services.kbfs.mountPoint

    Mountpoint for the Keybase filesystem.

    Type: string

    Default: "%h/keybase"

    Example: "/keybase"

    Declared by:

    [9148]<nixpkgs/nixos/modules/services/network-filesystems/kbfs.nix>

[9149]services.keepalived.enable

    Whether to enable Keepalived.

    Type: boolean

    Default: false

    Declared by:

    [9150]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9151]services.keepalived.enableScriptSecurity

    Don't run scripts configured to be run as root if any part of the path is writable by a
    non-root user.

    Type: boolean

    Default: false

    Declared by:

    [9152]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9153]services.keepalived.extraConfig

    Extra lines to be added verbatim to the configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [9154]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9155]services.keepalived.extraGlobalDefs

    Extra lines to be added verbatim to the 'global_defs' block of the configuration file

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [9156]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9157]services.keepalived.snmp.enable

    Whether to enable the builtin AgentX subagent.

    Type: boolean

    Default: false

    Declared by:

    [9158]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9159]services.keepalived.snmp.enableChecker

    Enable SNMP handling of checker element of KEEPALIVED MIB.

    Type: boolean

    Default: false

    Declared by:

    [9160]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9161]services.keepalived.snmp.enableKeepalived

    Enable SNMP handling of vrrp element of KEEPALIVED MIB.

    Type: boolean

    Default: false

    Declared by:

    [9162]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9163]services.keepalived.snmp.enableRfc

    Enable SNMP handling of RFC2787 and RFC6527 VRRP MIBs.

    Type: boolean

    Default: false

    Declared by:

    [9164]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9165]services.keepalived.snmp.enableRfcV2

    Enable SNMP handling of RFC2787 VRRP MIB.

    Type: boolean

    Default: false

    Declared by:

    [9166]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9167]services.keepalived.snmp.enableRfcV3

    Enable SNMP handling of RFC6527 VRRP MIB.

    Type: boolean

    Default: false

    Declared by:

    [9168]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9169]services.keepalived.snmp.enableTraps

    Enable SNMP traps.

    Type: boolean

    Default: false

    Declared by:

    [9170]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9171]services.keepalived.snmp.socket

    Socket to use for connecting to SNMP master agent. If this value is set to null, keepalived's
    default will be used, which is unix:/var/agentx/master, unless using a network namespace,
    when the default is udp:localhost:705.

    Type: null or string

    Default: null

    Declared by:

    [9172]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9173]services.keepalived.vrrpInstances

    Declarative vhost config

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [9174]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9175]services.keepalived.vrrpInstances.<name>.extraConfig

    Extra lines to be added verbatim to the vrrp_instance section.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [9176]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9177]services.keepalived.vrrpInstances.<name>.interface

    Interface for inside_network, bound by vrrp.

    Type: string

    Declared by:

    [9178]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9179]services.keepalived.vrrpInstances.<name>.noPreempt

    VRRP will normally preempt a lower priority machine when a higher priority machine comes
    online. "nopreempt" allows the lower priority machine to maintain the master role, even when
    a higher priority machine comes back online. NOTE: For this to work, the initial state of
    this entry must be BACKUP.

    Type: boolean

    Default: false

    Declared by:

    [9180]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9181]services.keepalived.vrrpInstances.<name>.priority

    For electing MASTER, highest priority wins. To be MASTER, make 50 more than other machines.

    Type: signed integer

    Default: 100

    Declared by:

    [9182]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9183]services.keepalived.vrrpInstances.<name>.state

    Initial state. As soon as the other machine(s) come up, an election will be held and the
    machine with the highest "priority" will become MASTER. So the entry here doesn't matter a
    whole lot.

    Type: one of "MASTER", "BACKUP"

    Default: "BACKUP"

    Declared by:

    [9184]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9185]services.keepalived.vrrpInstances.<name>.trackInterfaces

    List of network interfaces to monitor for health tracking.

    Type: list of strings

    Default: [ ]

    Example: [ "eth0" "eth1" ]

    Declared by:

    [9186]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9187]services.keepalived.vrrpInstances.<name>.trackScripts

    List of script names to invoke for health tracking.

    Type: list of strings

    Default: [ ]

    Example: [ "chk_cmd1" "chk_cmd2" ]

    Declared by:

    [9188]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9189]services.keepalived.vrrpInstances.<name>.unicastPeers

    Do not send VRRP adverts over VRRP multicast group. Instead it sends adverts to the following
    list of ip addresses using unicast design fashion. It can be cool to use VRRP FSM and
    features in a networking environment where multicast is not supported! IP Addresses specified
    can IPv4 as well as IPv6.

    Type: list of strings

    Default: [ ]

    Declared by:

    [9190]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9191]services.keepalived.vrrpInstances.<name>.unicastSrcIp

    Default IP for binding vrrpd is the primary IP on interface. If you want to hide location of
    vrrpd, use this IP as src_addr for unicast vrrp packets.

    Type: null or string

    Default: null

    Declared by:

    [9192]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9193]services.keepalived.vrrpInstances.<name>.useVmac

    Use VRRP Virtual MAC.

    Type: boolean

    Default: false

    Declared by:

    [9194]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9195]services.keepalived.vrrpInstances.<name>.virtualIps

    Declarative vhost config

    Type: list of submodules

    Default: [ ]

    Example:

    TODO: Example

    Declared by:

    [9196]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9197]services.keepalived.vrrpInstances.<name>.virtualIps.*.addr

    IP address, optionally with a netmask: IPADDR[/MASK]

    Type: string

    Declared by:

    [9198]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9199]services.keepalived.vrrpInstances.<name>.virtualIps.*.brd

    The broadcast address on the interface.

    Type: null or string

    Default: null

    Declared by:

    [9200]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9201]services.keepalived.vrrpInstances.<name>.virtualIps.*.dev

    The name of the device to add the address to.

    Type: null or string

    Default: null

    Declared by:

    [9202]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9203]services.keepalived.vrrpInstances.<name>.virtualIps.*.label

    Each address may be tagged with a label string. In order to preserve compatibility with
    Linux-2.0 net aliases, this string must coincide with the name of the device or must be
    prefixed with the device name followed by colon.

    Type: null or string

    Default: null

    Declared by:

    [9204]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9205]services.keepalived.vrrpInstances.<name>.virtualIps.*.scope

    The scope of the area where this address is valid.

    Type: null or string

    Default: null

    Declared by:

    [9206]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9207]services.keepalived.vrrpInstances.<name>.virtualRouterId

    Arbitrary unique number 0..255. Used to differentiate multiple instances of vrrpd running on
    the same NIC (and hence same socket).

    Type: signed integer

    Declared by:

    [9208]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9209]services.keepalived.vrrpInstances.<name>.vmacInterface

    Name of the vmac interface to use. keepalived will come up with a name if you don't specify
    one.

    Type: null or string

    Default: null

    Declared by:

    [9210]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9211]services.keepalived.vrrpInstances.<name>.vmacXmitBase

    Send/Recv VRRP messages from base interface instead of VMAC interface.

    Type: boolean

    Default: false

    Declared by:

    [9212]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9213]services.keepalived.vrrpScripts

    Declarative vrrp script config

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [9214]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9215]services.keepalived.vrrpScripts.<name>.extraConfig

    Extra lines to be added verbatim to the vrrp_script section.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [9216]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9217]services.keepalived.vrrpScripts.<name>.fall

    Required number of failures for KO transition.

    Type: signed integer

    Default: 3

    Declared by:

    [9218]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9219]services.keepalived.vrrpScripts.<name>.group

    Name of group to run the script under. Defaults to user group.

    Type: null or string

    Default: null

    Declared by:

    [9220]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9221]services.keepalived.vrrpScripts.<name>.interval

    Seconds between script invocations.

    Type: signed integer

    Default: 1

    Declared by:

    [9222]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9223]services.keepalived.vrrpScripts.<name>.rise

    Required number of successes for OK transition.

    Type: signed integer

    Default: 5

    Declared by:

    [9224]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9225]services.keepalived.vrrpScripts.<name>.script

    (Path of) Script command to execute followed by args, i.e. cmd [args]...

    Type: string

    Example: "\${pkgs.curl} -f http://localhost:80"

    Declared by:

    [9226]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9227]services.keepalived.vrrpScripts.<name>.timeout

    Seconds after which script is considered to have failed.

    Type: signed integer

    Default: 5

    Declared by:

    [9228]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9229]services.keepalived.vrrpScripts.<name>.user

    Name of user to run the script under.

    Type: string

    Default: "keepalived_script"

    Declared by:

    [9230]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9231]services.keepalived.vrrpScripts.<name>.weight

    Following a failure, adjust the priority by this weight.

    Type: signed integer

    Default: 0

    Declared by:

    [9232]<nixpkgs/nixos/modules/services/networking/keepalived/default.nix>

[9233]services.kerberos_server.enable

    Whether to enable the kerberos authentification server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9234]<nixpkgs/nixos/modules/services/system/kerberos/default.nix>

[9235]services.kerberos_server.realms

    The realm(s) to serve keys for.

    Type: attribute set of submodules

    Declared by:

    [9236]<nixpkgs/nixos/modules/services/system/kerberos/default.nix>

[9237]services.kerberos_server.realms.<name>.acl

    The privileges granted to a user.

    Type: list of submodules

    Default: [ { access = "all"; principal = "*/admin"; } { access = "all"; principal = "admin";
    } ]

    Declared by:

    [9238]<nixpkgs/nixos/modules/services/system/kerberos/default.nix>

[9239]services.kerberos_server.realms.<name>.acl.*.access

    The changes the principal is allowed to make.

    Type: list of one of "add", "cpw", "delete", "get", "list", "modify"s or one of "all"

    Default: "all"

    Declared by:

    [9240]<nixpkgs/nixos/modules/services/system/kerberos/default.nix>

[9241]services.kerberos_server.realms.<name>.acl.*.principal

    Which principal the rule applies to

    Type: string

    Declared by:

    [9242]<nixpkgs/nixos/modules/services/system/kerberos/default.nix>

[9243]services.kerberos_server.realms.<name>.acl.*.target

    The principals that 'access' applies to.

    Type: string

    Default: "*"

    Declared by:

    [9244]<nixpkgs/nixos/modules/services/system/kerberos/default.nix>

[9245]services.keybase.enable

    Whether to start the Keybase service.

    Type: boolean

    Default: false

    Declared by:

    [9246]<nixpkgs/nixos/modules/services/networking/keybase.nix>

[9247]services.keycloak.enable

    Whether to enable the Keycloak identity and access management server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9248]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9249]services.keycloak.package

    Keycloak package to use.

    Type: package

    Default: (build of keycloak-14.0.0)

    Declared by:

    [9250]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9251]services.keycloak.bindAddress

    On which address Keycloak should accept new connections.

    A special syntax can be used to allow command line Java system properties to override the
    value: ${property.name:value}

    Type: string

    Default: "\${jboss.bind.address:0.0.0.0}"

    Example: "127.0.0.1"

    Declared by:

    [9252]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9253]services.keycloak.database.caCert

    The SSL / TLS CA certificate that verifies the identity of the database server.

    Required when PostgreSQL is used and SSL is turned on.

    For MySQL, if left at null, the default Java keystore is used, which should suffice if the
    server certificate is issued by an official CA.

    Type: null or path

    Default: null

    Declared by:

    [9254]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9255]services.keycloak.database.createLocally

    Whether a database should be automatically created on the local host. Set this to false if
    you plan on provisioning a local database yourself. This has no effect if
    services.keycloak.database.host is customized.

    Type: boolean

    Default: true

    Declared by:

    [9256]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9257]services.keycloak.database.host

    Hostname of the database to connect to.

    Type: string

    Default: "localhost"

    Declared by:

    [9258]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9259]services.keycloak.database.passwordFile

    File containing the database password.

    This should be a string, not a Nix path, since Nix paths are copied into the world-readable
    Nix store.

    Type: path

    Example: "/run/keys/db_password"

    Declared by:

    [9260]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9261]services.keycloak.database.port

    Port of the database to connect to.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 5432

    Declared by:

    [9262]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9263]services.keycloak.database.type

    The type of database Keycloak should connect to.

    Type: one of "mysql", "postgresql"

    Default: "postgresql"

    Example: "mysql"

    Declared by:

    [9264]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9265]services.keycloak.database.useSSL

    Whether the database connection should be secured by SSL / TLS.

    Type: boolean

    Default: false

    Declared by:

    [9266]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9267]services.keycloak.database.username

    Username to use when connecting to an external or manually provisioned database; has no
    effect when a local database is automatically provisioned.

    To use this with a local database, set [9268]services.keycloak.database.createLocally to
    false and create the database and user manually. The database should be called keycloak.

    Type: string

    Default: "keycloak"

    Declared by:

    [9269]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9270]services.keycloak.extraConfig

    Additional Keycloak configuration options to set in standalone.xml.

    Options are expressed as a Nix attribute set which matches the structure of the jboss-cli
    configuration. The configuration is effectively overlayed on top of the default configuration
    shipped with Keycloak. To remove existing nodes and undefine attributes from the default
    configuration, set them to null.

    The example configuration does the equivalent of the following script, which removes the
    hostname provider default, adds the deprecated hostname provider fixed and defines it the
    default:

    /subsystem=keycloak-server/spi=hostname/provider=default:remove()
    /subsystem=keycloak-server/spi=hostname/provider=fixed:add(enabled = true, properties = { hostname = "keycloak.example.com" })
    /subsystem=keycloak-server/spi=hostname:write-attribute(name=default-provider, value="fixed")

    You can discover available options by using the [9271]jboss-cli.sh program and by referring
    to the [9272]Keycloak Server Installation and Configuration Guide.

    Type: attribute set

    Default: { }

    Example:

    {
      "subsystem=keycloak-server" = {
        "spi=hostname" = {
          "provider=default" = null;
          "provider=fixed" = {
            enabled = true;
            properties.hostname = "keycloak.example.com";
          };
          default-provider = "fixed";
        };
      };
    }

    Declared by:

    [9273]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9274]services.keycloak.forceBackendUrlToFrontendUrl

    Whether Keycloak should force all requests to go through the frontend URL configured in 
    [9275]services.keycloak.frontendUrl. By default, Keycloak allows backend requests to instead
    use its local hostname or IP address and may also advertise it to clients through its OpenID
    Connect Discovery endpoint.

    See [9276]the Hostname section of the Keycloak server installation manual for more
    information.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9277]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9278]services.keycloak.frontendUrl

    The public URL used as base for all frontend requests. Should normally include a trailing /
    auth.

    See [9279]the Hostname section of the Keycloak server installation manual for more
    information.

    Type: string

    Example: "keycloak.example.com/auth"

    Declared by:

    [9280]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9281]services.keycloak.httpPort

    On which port Keycloak should listen for new HTTP connections.

    A special syntax can be used to allow command line Java system properties to override the
    value: ${property.name:value}

    Type: string

    Default: "\${jboss.http.port:80}"

    Example: "8080"

    Declared by:

    [9282]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9283]services.keycloak.httpsPort

    On which port Keycloak should listen for new HTTPS connections.

    A special syntax can be used to allow command line Java system properties to override the
    value: ${property.name:value}

    Type: string

    Default: "\${jboss.https.port:443}"

    Example: "8443"

    Declared by:

    [9284]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9285]services.keycloak.initialAdminPassword

    Initial password set for the admin user. The password is not stored safely and should be
    changed immediately in the admin panel.

    Type: string

    Default: "changeme"

    Declared by:

    [9286]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9287]services.keycloak.sslCertificate

    The path to a PEM formatted certificate to use for TLS/SSL connections.

    This should be a string, not a Nix path, since Nix paths are copied into the world-readable
    Nix store.

    Type: null or path

    Default: null

    Example: "/run/keys/ssl_cert"

    Declared by:

    [9288]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9289]services.keycloak.sslCertificateKey

    The path to a PEM formatted private key to use for TLS/SSL connections.

    This should be a string, not a Nix path, since Nix paths are copied into the world-readable
    Nix store.

    Type: null or path

    Default: null

    Example: "/run/keys/ssl_key"

    Declared by:

    [9290]<nixpkgs/nixos/modules/services/web-apps/keycloak.nix>

[9291]services.kibana.enable

    Whether to enable kibana service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9292]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9293]services.kibana.package

    Kibana package to use

    Type: package

    Default: "pkgs.kibana"

    Example: "pkgs.kibana"

    Declared by:

    [9294]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9295]services.kibana.cert

    Kibana ssl certificate.

    Type: null or path

    Default: null

    Declared by:

    [9296]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9297]services.kibana.dataDir

    Kibana data directory

    Type: path

    Default: "/var/lib/kibana"

    Declared by:

    [9298]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9299]services.kibana.defaultAppId

    Elasticsearch default application id.

    Type: string

    Default: "discover"

    Declared by:

    [9300]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9301]services.kibana.elasticsearch.ca

    CA file to auth against elasticsearch.

    It's recommended to use the certificateAuthorities option when using kibana-5.4 or newer.

    Type: null or path

    Default: null

    Declared by:

    [9302]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9303]services.kibana.elasticsearch.cert

    Certificate file to auth against elasticsearch.

    Type: null or path

    Default: null

    Declared by:

    [9304]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9305]services.kibana.elasticsearch.certificateAuthorities

    CA files to auth against elasticsearch.

    Please use the ca option when using kibana < 5.4 because those old versions don't support
    setting multiple CA's.

    This defaults to the singleton list [ca] when the ca option is defined.

    Type: list of paths

    Default: [ ]

    Declared by:

    [9306]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9307]services.kibana.elasticsearch.hosts

    The URLs of the Elasticsearch instances to use for all your queries. All nodes listed here
    must be on the same cluster.

    Defaults to [ "http://localhost:9200" ].

    This option is only valid when using kibana >= 6.6.

    Type: null or list of strings

    Default: null

    Declared by:

    [9308]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9309]services.kibana.elasticsearch.key

    Key file to auth against elasticsearch.

    Type: null or path

    Default: null

    Declared by:

    [9310]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9311]services.kibana.elasticsearch.password

    Password for elasticsearch basic auth.

    Type: null or string

    Default: null

    Declared by:

    [9312]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9313]services.kibana.elasticsearch.url

    Elasticsearch url.

    Defaults to "http://localhost:9200".

    Don't set this when using Kibana >= 7.0.0 because it will result in a configuration error.
    Use services.kibana.elasticsearch.hosts instead.

    Type: null or string

    Default: null

    Declared by:

    [9314]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9315]services.kibana.elasticsearch.username

    Username for elasticsearch basic auth.

    Type: null or string

    Default: null

    Declared by:

    [9316]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9317]services.kibana.extraConf

    Kibana extra configuration

    Type: attribute set

    Default: { }

    Declared by:

    [9318]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9319]services.kibana.index

    Elasticsearch index to use for saving kibana config.

    Type: string

    Default: ".kibana"

    Declared by:

    [9320]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9321]services.kibana.key

    Kibana ssl key.

    Type: null or path

    Default: null

    Declared by:

    [9322]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9323]services.kibana.listenAddress

    Kibana listening host

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [9324]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9325]services.kibana.port

    Kibana listening port

    Type: signed integer

    Default: 5601

    Declared by:

    [9326]<nixpkgs/nixos/modules/services/search/kibana.nix>

[9327]services.kippo.enable

    Enable the kippo honeypot ssh server.

    Type: boolean

    Default: false

    Declared by:

    [9328]<nixpkgs/nixos/modules/services/networking/kippo.nix>

[9329]services.kippo.extraConfig

    Extra verbatim configuration added to the end of kippo.cfg.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [9330]<nixpkgs/nixos/modules/services/networking/kippo.nix>

[9331]services.kippo.hostname

    Hostname for kippo to present to SSH login

    Type: string

    Default: "nas3"

    Declared by:

    [9332]<nixpkgs/nixos/modules/services/networking/kippo.nix>

[9333]services.kippo.logPath

    Path of log files needed for operation and configuration.

    Type: path

    Default: "/var/log/kippo"

    Declared by:

    [9334]<nixpkgs/nixos/modules/services/networking/kippo.nix>

[9335]services.kippo.pidPath

    Path of pid files needed for operation.

    Type: path

    Default: "/run/kippo"

    Declared by:

    [9336]<nixpkgs/nixos/modules/services/networking/kippo.nix>

[9337]services.kippo.port

    TCP port number for kippo to bind to.

    Type: signed integer

    Default: 2222

    Declared by:

    [9338]<nixpkgs/nixos/modules/services/networking/kippo.nix>

[9339]services.kippo.varPath

    Path of read/write files needed for operation and configuration.

    Type: path

    Default: "/var/lib/kippo"

    Declared by:

    [9340]<nixpkgs/nixos/modules/services/networking/kippo.nix>

[9341]services.klipper.enable

    Whether to enable Klipper, the 3D printer firmware.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9342]<nixpkgs/nixos/modules/services/misc/klipper.nix>

[9343]services.klipper.octoprintIntegration

    Allows Octoprint to control Klipper.

    Type: boolean

    Default: false

    Declared by:

    [9344]<nixpkgs/nixos/modules/services/misc/klipper.nix>

[9345]services.klipper.settings

    Configuration for Klipper. See the [9346]documentation for supported values.

    Type: attribute set of attribute set of INI atom (null, bool, int, float or string)ss

    Default: { }

    Declared by:

    [9347]<nixpkgs/nixos/modules/services/misc/klipper.nix>

[9348]services.klogd.enable

    Whether to enable klogd, the kernel log message processing daemon. Since systemd handles
    logging of kernel messages on Linux 3.5 and later, this is only useful if you're running an
    older kernel.

    Type: boolean

    Default: false

    Declared by:

    [9349]<nixpkgs/nixos/modules/services/logging/klogd.nix>

[9350]services.kmscon.enable

    Use kmscon as the virtual console instead of gettys. kmscon is a kms/dri-based userspace
    virtual terminal implementation. It supports a richer feature set than the standard linux
    console VT, including full unicode support, and when the video card supports drm should be
    much faster.

    Type: boolean

    Default: false

    Declared by:

    [9351]<nixpkgs/nixos/modules/services/ttys/kmscon.nix>

[9352]services.kmscon.autologinUser

    Username of the account that will be automatically logged in at the console. If unspecified,
    a login prompt is shown as usual.

    Type: null or string

    Default: null

    Declared by:

    [9353]<nixpkgs/nixos/modules/services/ttys/kmscon.nix>

[9354]services.kmscon.extraConfig

    Extra contents of the kmscon.conf file.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "font-size=14"

    Declared by:

    [9355]<nixpkgs/nixos/modules/services/ttys/kmscon.nix>

[9356]services.kmscon.extraOptions

    Extra flags to pass to kmscon.

    Type: strings concatenated with " "

    Default: ""

    Example: "--term xterm-256color"

    Declared by:

    [9357]<nixpkgs/nixos/modules/services/ttys/kmscon.nix>

[9358]services.kmscon.hwRender

    Whether to use 3D hardware acceleration to render the console.

    Type: boolean

    Default: false

    Declared by:

    [9359]<nixpkgs/nixos/modules/services/ttys/kmscon.nix>

[9360]services.knot.enable

    Whether to enable Knot authoritative-only DNS server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9361]<nixpkgs/nixos/modules/services/networking/knot.nix>

[9362]services.knot.package

    Which Knot DNS package to use

    Type: package

    Default: "pkgs.knot-dns"

    Declared by:

    [9363]<nixpkgs/nixos/modules/services/networking/knot.nix>

[9364]services.knot.extraArgs

    List of additional command line paramters for knotd

    Type: list of strings

    Default: [ ]

    Declared by:

    [9365]<nixpkgs/nixos/modules/services/networking/knot.nix>

[9366]services.knot.extraConfig

    Extra lines to be added verbatim to knot.conf

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [9367]<nixpkgs/nixos/modules/services/networking/knot.nix>

[9368]services.knot.keyFiles

    A list of files containing additional configuration to be included using the include
    directive. This option allows to include configuration like TSIG keys without exposing them
    to the nix store readable to any process. Note that using this option will also disable
    configuration checks at build time.

    Type: list of paths

    Default: [ ]

    Declared by:

    [9369]<nixpkgs/nixos/modules/services/networking/knot.nix>

[9370]services.kresd.enable

    Whether to enable knot-resolver domain name server. DNSSEC validation is turned on by
    default. You can run sudo nc -U /run/knot-resolver/control/1 and give commands interactively
    to kresd@1.service.

    Type: boolean

    Default: false

    Declared by:

    [9371]<nixpkgs/nixos/modules/services/networking/kresd.nix>

[9372]services.kresd.package

    knot-resolver package to use.

    Type: package

    Default: "pkgs.knot-resolver"

    Example:

    pkgs.knot-resolver.override { extraFeatures = true; }

    Declared by:

    [9373]<nixpkgs/nixos/modules/services/networking/kresd.nix>

[9374]services.kresd.extraConfig

    Extra lines to be added verbatim to the generated configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [9375]<nixpkgs/nixos/modules/services/networking/kresd.nix>

[9376]services.kresd.instances

    The number of instances to start. They will be called kresd@{1,2,...}.service. Knot Resolver
    uses no threads, so this is the way to scale. You can dynamically start/stop them at will, so
    this is just system default.

    Type: unsigned integer, meaning >=0

    Default: 1

    Declared by:

    [9377]<nixpkgs/nixos/modules/services/networking/kresd.nix>

[9378]services.kresd.listenDoH

    Addresses and ports on which kresd should provide DNS over HTTPS/2 (see RFC 8484). For
    detailed syntax see ListenStream in man systemd.socket.

    Type: list of strings

    Default: [ ]

    Example: [ "198.51.100.1:443" "[2001:db8::1]:443" "443" ]

    Declared by:

    [9379]<nixpkgs/nixos/modules/services/networking/kresd.nix>

[9380]services.kresd.listenPlain

    What addresses and ports the server should listen on. For detailed syntax see ListenStream in
    man systemd.socket.

    Type: list of strings

    Default: [ "[::1]:53" "127.0.0.1:53" ]

    Example: [ "53" ]

    Declared by:

    [9381]<nixpkgs/nixos/modules/services/networking/kresd.nix>

[9382]services.kresd.listenTLS

    Addresses and ports on which kresd should provide DNS over TLS (see RFC 7858). For detailed
    syntax see ListenStream in man systemd.socket.

    Type: list of strings

    Default: [ ]

    Example: [ "198.51.100.1:853" "[2001:db8::1]:853" "853" ]

    Declared by:

    [9383]<nixpkgs/nixos/modules/services/networking/kresd.nix>

[9384]services.kubernetes.package

    Kubernetes package to use.

    Type: package

    Default: "pkgs.kubernetes"

    Declared by:

    [9385]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9386]services.kubernetes.addonManager.enable

    Whether to enable Kubernetes addon manager..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9387]<nixpkgs/nixos/modules/services/cluster/kubernetes/addon-manager.nix>

[9388]services.kubernetes.addonManager.addons

    Kubernetes addons (any kind of Kubernetes resource can be an addon).

    Type: attribute set of attribute set or list of attribute setss

    Default: { }

    Example:

    {
      "my-service" = {
        "apiVersion" = "v1";
        "kind" = "Service";
        "metadata" = {
          "name" = "my-service";
          "namespace" = "default";
        };
        "spec" = { ... };
      };
    }
    // import <nixpkgs/nixos/modules/services/cluster/kubernetes/dashboard.nix> { cfg = config.services.kubernetes; };

    Declared by:

    [9389]<nixpkgs/nixos/modules/services/cluster/kubernetes/addon-manager.nix>

[9390]services.kubernetes.addonManager.bootstrapAddons

    Bootstrap addons are like regular addons, but they are applied with cluster-admin rigths.
    They are applied at addon-manager startup only.

    Type: attribute set of attribute sets

    Default: { }

    Example:

    {
      "my-service" = {
        "apiVersion" = "v1";
        "kind" = "Service";
        "metadata" = {
          "name" = "my-service";
          "namespace" = "default";
        };
        "spec" = { ... };
      };
    }

    Declared by:

    [9391]<nixpkgs/nixos/modules/services/cluster/kubernetes/addon-manager.nix>

[9392]services.kubernetes.addons.dashboard.enable

    Whether to enable kubernetes dashboard addon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9393]<nixpkgs/nixos/modules/services/cluster/kubernetes/addons/dashboard.nix>

[9394]services.kubernetes.addons.dashboard.extraArgs

    Extra arguments to append to the dashboard cmdline

    Type: list of strings

    Default: [ ]

    Example: [ "--enable-skip-login" ]

    Declared by:

    [9395]<nixpkgs/nixos/modules/services/cluster/kubernetes/addons/dashboard.nix>

[9396]services.kubernetes.addons.dashboard.image

    Docker image to seed for the kubernetes dashboard container.

    Type: attribute set

    Default: { finalImageTag = "v1.10.1"; imageDigest =
    "sha256:0ae6b69432e78069c5ce2bcde0fe409c5c4d6f0f4d9cd50a17974fea38898747"; imageName =
    "k8s.gcr.io/kubernetes-dashboard-amd64"; sha256 =
    "01xrr4pwgr2hcjrjsi3d14ifpzdfbxzqpzxbk2fkbjb9zkv38zxy"; }

    Declared by:

    [9397]<nixpkgs/nixos/modules/services/cluster/kubernetes/addons/dashboard.nix>

[9398]services.kubernetes.addons.dashboard.rbac

    Role-based access control (RBAC) options

    Type: submodule

    Default: { }

    Declared by:

    [9399]<nixpkgs/nixos/modules/services/cluster/kubernetes/addons/dashboard.nix>

[9400]services.kubernetes.addons.dashboard.rbac.enable

    Whether to enable role based access control is enabled for kubernetes dashboard

    Type: boolean

    Default: true

    Declared by:

    [9401]<nixpkgs/nixos/modules/services/cluster/kubernetes/addons/dashboard.nix>

[9402]services.kubernetes.addons.dashboard.rbac.clusterAdmin

    Whether to assign cluster admin rights to the kubernetes dashboard

    Type: boolean

    Default: false

    Declared by:

    [9403]<nixpkgs/nixos/modules/services/cluster/kubernetes/addons/dashboard.nix>

[9404]services.kubernetes.addons.dashboard.version

    Which version of the kubernetes dashboard to deploy

    Type: string

    Default: "v1.10.1"

    Declared by:

    [9405]<nixpkgs/nixos/modules/services/cluster/kubernetes/addons/dashboard.nix>

[9406]services.kubernetes.addons.dns.enable

    Whether to enable kubernetes dns addon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9407]<nixpkgs/nixos/modules/services/cluster/kubernetes/addons/dns.nix>

[9408]services.kubernetes.addons.dns.clusterDomain

    Dns cluster domain

    Type: string

    Default: "cluster.local"

    Declared by:

    [9409]<nixpkgs/nixos/modules/services/cluster/kubernetes/addons/dns.nix>

[9410]services.kubernetes.addons.dns.clusterIp

    Dns addon clusterIP

    Type: string

    Default: "10.0.0.254"

    Declared by:

    [9411]<nixpkgs/nixos/modules/services/cluster/kubernetes/addons/dns.nix>

[9412]services.kubernetes.addons.dns.coredns

    Docker image to seed for the CoreDNS container.

    Type: attribute set

    Default: { finalImageTag = "1.7.1"; imageDigest =
    "sha256:4a6e0769130686518325b21b0c1d0688b54e7c79244d48e1b15634e98e40c6ef"; imageName =
    "coredns/coredns"; sha256 = "02r440xcdsgi137k5lmmvp0z5w5fmk8g9mysq5pnysq1wl8sj6mw"; }

    Declared by:

    [9413]<nixpkgs/nixos/modules/services/cluster/kubernetes/addons/dns.nix>

[9414]services.kubernetes.addons.dns.reconcileMode

    Controls the addon manager reconciliation mode for the DNS addon.

    Setting reconcile mode to EnsureExists makes it possible to tailor DNS behavior by editing
    the coredns ConfigMap.

    See: [9415]https://github.com/kubernetes/kubernetes/blob/master/cluster/addons/addon-manager/
    README.md.

    Type: one of "Reconcile", "EnsureExists"

    Default: "Reconcile"

    Declared by:

    [9416]<nixpkgs/nixos/modules/services/cluster/kubernetes/addons/dns.nix>

[9417]services.kubernetes.addons.dns.replicas

    Number of DNS pod replicas to deploy in the cluster.

    Type: signed integer

    Default: 2

    Declared by:

    [9418]<nixpkgs/nixos/modules/services/cluster/kubernetes/addons/dns.nix>

[9419]services.kubernetes.apiserver.enable

    Whether to enable Kubernetes apiserver.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9420]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9421]services.kubernetes.apiserver.enableAdmissionPlugins

    Kubernetes admission control plugins to enable. See [9422]https://kubernetes.io/docs/admin/
    admission-controllers/

    Type: list of strings

    Default: [ "NamespaceLifecycle" "LimitRanger" "ServiceAccount" "ResourceQuota"
    "DefaultStorageClass" "DefaultTolerationSeconds" "NodeRestriction" ]

    Example: [ "NamespaceLifecycle" "NamespaceExists" "LimitRanger" "SecurityContextDeny"
    "ServiceAccount" "ResourceQuota" "PodSecurityPolicy" "NodeRestriction" "DefaultStorageClass"
    ]

    Declared by:

    [9423]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9424]services.kubernetes.apiserver.advertiseAddress

    Kubernetes apiserver IP address on which to advertise the apiserver to members of the
    cluster. This address must be reachable by the rest of the cluster.

    Type: null or string

    Default: null

    Declared by:

    [9425]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9426]services.kubernetes.apiserver.allowPrivileged

    Whether to allow privileged containers on Kubernetes.

    Type: boolean

    Default: false

    Declared by:

    [9427]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9428]services.kubernetes.apiserver.apiAudiences

    Kubernetes apiserver ServiceAccount issuer.

    Type: string

    Default: "api,https://kubernetes.default.svc"

    Declared by:

    [9429]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9430]services.kubernetes.apiserver.authorizationMode

    Kubernetes apiserver authorization mode (AlwaysAllow/AlwaysDeny/ABAC/Webhook/RBAC/Node). See 
    [9431]https://kubernetes.io/docs/reference/access-authn-authz/authorization/

    Type: list of one of "AlwaysAllow", "AlwaysDeny", "ABAC", "Webhook", "RBAC", "Node"s

    Default: [ "RBAC" "Node" ]

    Declared by:

    [9432]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9433]services.kubernetes.apiserver.authorizationPolicy

    Kubernetes apiserver authorization policy file. See [9434]https://kubernetes.io/docs/
    reference/access-authn-authz/authorization/

    Type: list of attribute sets

    Default: [ ]

    Declared by:

    [9435]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9436]services.kubernetes.apiserver.basicAuthFile

    Kubernetes apiserver basic authentication file. See [9437]https://kubernetes.io/docs/
    reference/access-authn-authz/authentication

    Type: null or path

    Default: null

    Declared by:

    [9438]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9439]services.kubernetes.apiserver.bindAddress

    The IP address on which to listen for the --secure-port port. The associated interface(s)
    must be reachable by the rest of the cluster, and by CLI/web clients.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [9440]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9441]services.kubernetes.apiserver.clientCaFile

    Kubernetes apiserver CA file for client auth.

    Type: null or path

    Default: null

    Declared by:

    [9442]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9443]services.kubernetes.apiserver.disableAdmissionPlugins

    Kubernetes admission control plugins to disable. See [9444]https://kubernetes.io/docs/admin/
    admission-controllers/

    Type: list of strings

    Default: [ ]

    Declared by:

    [9445]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9446]services.kubernetes.apiserver.etcd.caFile

    Etcd ca file.

    Type: null or path

    Default: null

    Declared by:

    [9447]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9448]services.kubernetes.apiserver.etcd.certFile

    Etcd cert file.

    Type: null or path

    Default: null

    Declared by:

    [9449]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9450]services.kubernetes.apiserver.etcd.keyFile

    Etcd key file.

    Type: null or path

    Default: null

    Declared by:

    [9451]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9452]services.kubernetes.apiserver.etcd.servers

    List of etcd servers.

    Type: list of strings

    Default: [ "http://127.0.0.1:2379" ]

    Declared by:

    [9453]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9454]services.kubernetes.apiserver.extraOpts

    Kubernetes apiserver extra command line options.

    Type: strings concatenated with " "

    Default: ""

    Declared by:

    [9455]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9456]services.kubernetes.apiserver.extraSANs

    Extra x509 Subject Alternative Names to be added to the kubernetes apiserver tls cert.

    Type: list of strings

    Default: [ ]

    Declared by:

    [9457]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9458]services.kubernetes.apiserver.featureGates

    List set of feature gates

    Type: list of strings

    Default: [ ]

    Declared by:

    [9459]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9460]services.kubernetes.apiserver.insecureBindAddress

    The IP address on which to serve the --insecure-port.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [9461]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9462]services.kubernetes.apiserver.insecurePort

    Kubernetes apiserver insecure listening port. (0 = disabled)

    Type: signed integer

    Default: 0

    Declared by:

    [9463]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9464]services.kubernetes.apiserver.kubeletClientCaFile

    Path to a cert file for connecting to kubelet.

    Type: null or path

    Default: null

    Declared by:

    [9465]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9466]services.kubernetes.apiserver.kubeletClientCertFile

    Client certificate to use for connections to kubelet.

    Type: null or path

    Default: null

    Declared by:

    [9467]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9468]services.kubernetes.apiserver.kubeletClientKeyFile

    Key to use for connections to kubelet.

    Type: null or path

    Default: null

    Declared by:

    [9469]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9470]services.kubernetes.apiserver.kubeletHttps

    Whether to use https for connections to kubelet.

    Type: boolean

    Default: true

    Declared by:

    [9471]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9472]services.kubernetes.apiserver.preferredAddressTypes

    List of the preferred NodeAddressTypes to use for kubelet connections.

    Type: null or string

    Default: null

    Declared by:

    [9473]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9474]services.kubernetes.apiserver.proxyClientCertFile

    Client certificate to use for connections to proxy.

    Type: null or path

    Default: null

    Declared by:

    [9475]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9476]services.kubernetes.apiserver.proxyClientKeyFile

    Key to use for connections to proxy.

    Type: null or path

    Default: null

    Declared by:

    [9477]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9478]services.kubernetes.apiserver.runtimeConfig

    Api runtime configuration. See [9479]https://kubernetes.io/docs/tasks/administer-cluster/
    cluster-management/

    Type: string

    Default: "authentication.k8s.io/v1beta1=true"

    Example: "api/all=false,api/v1=true"

    Declared by:

    [9480]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9481]services.kubernetes.apiserver.securePort

    Kubernetes apiserver secure port.

    Type: signed integer

    Default: 6443

    Declared by:

    [9482]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9483]services.kubernetes.apiserver.serviceAccountIssuer

    Kubernetes apiserver ServiceAccount issuer.

    Type: string

    Default: "https://kubernetes.default.svc"

    Declared by:

    [9484]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9485]services.kubernetes.apiserver.serviceAccountKeyFile

    File containing PEM-encoded x509 RSA or ECDSA private or public keys, used to verify
    ServiceAccount tokens. The specified file can contain multiple keys, and the flag can be
    specified multiple times with different files. If unspecified, --tls-private-key-file is
    used. Must be specified when --service-account-signing-key is provided

    Type: path

    Declared by:

    [9486]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9487]services.kubernetes.apiserver.serviceAccountSigningKeyFile

    Path to the file that contains the current private key of the service account token issuer.
    The issuer will sign issued ID tokens with this private key.

    Type: path

    Declared by:

    [9488]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9489]services.kubernetes.apiserver.serviceClusterIpRange

    A CIDR notation IP range from which to assign service cluster IPs. This must not overlap with
    any IP ranges assigned to nodes for pods.

    Type: string

    Default: "10.0.0.0/24"

    Declared by:

    [9490]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9491]services.kubernetes.apiserver.storageBackend

    Kubernetes apiserver storage backend.

    Type: one of "etcd2", "etcd3"

    Default: "etcd3"

    Declared by:

    [9492]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9493]services.kubernetes.apiserver.tlsCertFile

    Kubernetes apiserver certificate file.

    Type: null or path

    Default: null

    Declared by:

    [9494]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9495]services.kubernetes.apiserver.tlsKeyFile

    Kubernetes apiserver private key file.

    Type: null or path

    Default: null

    Declared by:

    [9496]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9497]services.kubernetes.apiserver.tokenAuthFile

    Kubernetes apiserver token authentication file. See [9498]https://kubernetes.io/docs/
    reference/access-authn-authz/authentication

    Type: null or path

    Default: null

    Declared by:

    [9499]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9500]services.kubernetes.apiserver.verbosity

    Optional glog verbosity level for logging statements. See [9501]https://github.com/kubernetes
    /community/blob/master/contributors/devel/logging.md

    Type: null or signed integer

    Default: null

    Declared by:

    [9502]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9503]services.kubernetes.apiserver.webhookConfig

    Kubernetes apiserver Webhook config file. It uses the kubeconfig file format. See [9504]
    https://kubernetes.io/docs/reference/access-authn-authz/webhook/

    Type: null or path

    Default: null

    Declared by:

    [9505]<nixpkgs/nixos/modules/services/cluster/kubernetes/apiserver.nix>

[9506]services.kubernetes.apiserverAddress

    Clusterwide accessible address for the kubernetes apiserver, including protocol and optional
    port.

    Type: string

    Example: "https://kubernetes-apiserver.example.com:6443"

    Declared by:

    [9507]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9508]services.kubernetes.caFile

    Default kubernetes certificate authority

    Type: null or path

    Default: null

    Declared by:

    [9509]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9510]services.kubernetes.clusterCidr

    Kubernetes controller manager and proxy CIDR Range for Pods in cluster.

    Type: null or string

    Default: "10.1.0.0/16"

    Declared by:

    [9511]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9512]services.kubernetes.controllerManager.enable

    Whether to enable Kubernetes controller manager.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9513]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9514]services.kubernetes.controllerManager.allocateNodeCIDRs

    Whether to automatically allocate CIDR ranges for cluster nodes.

    Type: boolean

    Default: true

    Declared by:

    [9515]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9516]services.kubernetes.controllerManager.bindAddress

    Kubernetes controller manager listening address.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [9517]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9518]services.kubernetes.controllerManager.clusterCidr

    Kubernetes CIDR Range for Pods in cluster.

    Type: string

    Default: "10.1.0.0/16"

    Declared by:

    [9519]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9520]services.kubernetes.controllerManager.extraOpts

    Kubernetes controller manager extra command line options.

    Type: strings concatenated with " "

    Default: ""

    Declared by:

    [9521]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9522]services.kubernetes.controllerManager.featureGates

    List set of feature gates

    Type: list of strings

    Default: [ ]

    Declared by:

    [9523]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9524]services.kubernetes.controllerManager.insecurePort

    Kubernetes controller manager insecure listening port.

    Type: signed integer

    Default: 0

    Declared by:

    [9525]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9526]services.kubernetes.controllerManager.kubeconfig.caFile

    Kubernetes controller manager certificate authority file used to connect to kube-apiserver.

    Type: null or path

    Default: null

    Declared by:

    [9527]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9528]services.kubernetes.controllerManager.kubeconfig.certFile

    Kubernetes controller manager client certificate file used to connect to kube-apiserver.

    Type: null or path

    Default: null

    Declared by:

    [9529]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9530]services.kubernetes.controllerManager.kubeconfig.keyFile

    Kubernetes controller manager client key file used to connect to kube-apiserver.

    Type: null or path

    Default: null

    Declared by:

    [9531]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9532]services.kubernetes.controllerManager.kubeconfig.server

    Kubernetes controller manager kube-apiserver server address.

    Type: string

    Declared by:

    [9533]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9534]services.kubernetes.controllerManager.leaderElect

    Whether to start leader election before executing main loop.

    Type: boolean

    Default: true

    Declared by:

    [9535]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9536]services.kubernetes.controllerManager.rootCaFile

    Kubernetes controller manager certificate authority file included in service account's token
    secret.

    Type: null or path

    Default: null

    Declared by:

    [9537]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9538]services.kubernetes.controllerManager.securePort

    Kubernetes controller manager secure listening port.

    Type: signed integer

    Default: 10252

    Declared by:

    [9539]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9540]services.kubernetes.controllerManager.serviceAccountKeyFile

    Kubernetes controller manager PEM-encoded private RSA key file used to sign service account
    tokens

    Type: null or path

    Default: null

    Declared by:

    [9541]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9542]services.kubernetes.controllerManager.tlsCertFile

    Kubernetes controller-manager certificate file.

    Type: null or path

    Default: null

    Declared by:

    [9543]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9544]services.kubernetes.controllerManager.tlsKeyFile

    Kubernetes controller-manager private key file.

    Type: null or path

    Default: null

    Declared by:

    [9545]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9546]services.kubernetes.controllerManager.verbosity

    Optional glog verbosity level for logging statements. See [9547]https://github.com/kubernetes
    /community/blob/master/contributors/devel/logging.md

    Type: null or signed integer

    Default: null

    Declared by:

    [9548]<nixpkgs/nixos/modules/services/cluster/kubernetes/controller-manager.nix>

[9549]services.kubernetes.dataDir

    Kubernetes root directory for managing kubelet files.

    Type: path

    Default: "/var/lib/kubernetes"

    Declared by:

    [9550]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9551]services.kubernetes.easyCerts

    Automatically setup x509 certificates and keys for the entire cluster.

    Type: boolean

    Default: false

    Declared by:

    [9552]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9553]services.kubernetes.featureGates

    List set of feature gates.

    Type: list of strings

    Default: [ ]

    Declared by:

    [9554]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9555]services.kubernetes.flannel.enable

    Whether to enable enable flannel networking.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9556]<nixpkgs/nixos/modules/services/cluster/kubernetes/flannel.nix>

[9557]services.kubernetes.kubeconfig.caFile

    Default kubeconfig certificate authority file used to connect to kube-apiserver.

    Type: null or path

    Default: null

    Declared by:

    [9558]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9559]services.kubernetes.kubeconfig.certFile

    Default kubeconfig client certificate file used to connect to kube-apiserver.

    Type: null or path

    Default: null

    Declared by:

    [9560]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9561]services.kubernetes.kubeconfig.keyFile

    Default kubeconfig client key file used to connect to kube-apiserver.

    Type: null or path

    Default: null

    Declared by:

    [9562]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9563]services.kubernetes.kubeconfig.server

    Default kubeconfig kube-apiserver server address.

    Type: string

    Declared by:

    [9564]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9565]services.kubernetes.kubelet.enable

    Whether to enable Kubernetes kubelet..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9566]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9567]services.kubernetes.kubelet.address

    Kubernetes kubelet info server listening address.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [9568]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9569]services.kubernetes.kubelet.clientCaFile

    Kubernetes apiserver CA file for client authentication.

    Type: null or path

    Default: null

    Declared by:

    [9570]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9571]services.kubernetes.kubelet.clusterDns

    Use alternative DNS.

    Type: string

    Default: "10.1.0.1"

    Declared by:

    [9572]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9573]services.kubernetes.kubelet.clusterDomain

    Use alternative domain.

    Type: string

    Default: "cluster.local"

    Declared by:

    [9574]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9575]services.kubernetes.kubelet.cni.packages

    List of network plugin packages to install.

    Type: list of packages

    Default: [ ]

    Declared by:

    [9576]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9577]services.kubernetes.kubelet.cni.config

    Kubernetes CNI configuration.

    Type: list of attribute sets

    Default: [ ]

    Example:

    [{
      "cniVersion": "0.3.1",
      "name": "mynet",
      "type": "bridge",
      "bridge": "cni0",
      "isGateway": true,
      "ipMasq": true,
      "ipam": {
          "type": "host-local",
          "subnet": "10.22.0.0/16",
          "routes": [
              { "dst": "0.0.0.0/0" }
          ]
      }
    } {
      "cniVersion": "0.3.1",
      "type": "loopback"
    }]

    Declared by:

    [9578]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9579]services.kubernetes.kubelet.cni.configDir

    Path to Kubernetes CNI configuration directory.

    Type: null or path

    Default: null

    Declared by:

    [9580]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9581]services.kubernetes.kubelet.containerRuntime

    Which container runtime type to use

    Type: one of "docker", "remote"

    Default: "remote"

    Declared by:

    [9582]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9583]services.kubernetes.kubelet.containerRuntimeEndpoint

    Endpoint at which to find the container runtime api interface/socket

    Type: string

    Default: "unix:///run/containerd/containerd.sock"

    Declared by:

    [9584]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9585]services.kubernetes.kubelet.extraOpts

    Kubernetes kubelet extra command line options.

    Type: strings concatenated with " "

    Default: ""

    Declared by:

    [9586]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9587]services.kubernetes.kubelet.featureGates

    List set of feature gates

    Type: list of strings

    Default: [ ]

    Declared by:

    [9588]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9589]services.kubernetes.kubelet.healthz.bind

    Kubernetes kubelet healthz listening address.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [9590]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9591]services.kubernetes.kubelet.healthz.port

    Kubernetes kubelet healthz port.

    Type: signed integer

    Default: 10248

    Declared by:

    [9592]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9593]services.kubernetes.kubelet.hostname

    Kubernetes kubelet hostname override.

    Type: string

    Default: "nixos"

    Declared by:

    [9594]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9595]services.kubernetes.kubelet.kubeconfig.caFile

    Kubelet certificate authority file used to connect to kube-apiserver.

    Type: null or path

    Default: null

    Declared by:

    [9596]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9597]services.kubernetes.kubelet.kubeconfig.certFile

    Kubelet client certificate file used to connect to kube-apiserver.

    Type: null or path

    Default: null

    Declared by:

    [9598]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9599]services.kubernetes.kubelet.kubeconfig.keyFile

    Kubelet client key file used to connect to kube-apiserver.

    Type: null or path

    Default: null

    Declared by:

    [9600]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9601]services.kubernetes.kubelet.kubeconfig.server

    Kubelet kube-apiserver server address.

    Type: string

    Declared by:

    [9602]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9603]services.kubernetes.kubelet.manifests

    List of manifests to bootstrap with kubelet (only pods can be created as manifest entry)

    Type: attribute set of attribute sets

    Default: { }

    Declared by:

    [9604]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9605]services.kubernetes.kubelet.networkPlugin

    Network plugin to use by Kubernetes.

    Type: null or one of "cni", "kubenet"

    Default: "kubenet"

    Declared by:

    [9606]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9607]services.kubernetes.kubelet.nodeIp

    IP address of the node. If set, kubelet will use this IP address for the node.

    Type: null or string

    Default: null

    Declared by:

    [9608]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9609]services.kubernetes.kubelet.port

    Kubernetes kubelet info server listening port.

    Type: signed integer

    Default: 10250

    Declared by:

    [9610]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9611]services.kubernetes.kubelet.registerNode

    Whether to auto register kubelet with API server.

    Type: boolean

    Default: true

    Declared by:

    [9612]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9613]services.kubernetes.kubelet.seedDockerImages

    List of docker images to preload on system

    Type: list of packages

    Default: [ ]

    Declared by:

    [9614]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9615]services.kubernetes.kubelet.taints

    Node taints (https://kubernetes.io/docs/concepts/configuration/assign-pod-node/).

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [9616]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9617]services.kubernetes.kubelet.taints.<name>.effect

    Effect of taint.

    Type: one of "NoSchedule", "PreferNoSchedule", "NoExecute"

    Example: "NoSchedule"

    Declared by:

    [9618]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9619]services.kubernetes.kubelet.taints.<name>.key

    Key of taint.

    Type: string

    Default: "‹name›"

    Declared by:

    [9620]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9621]services.kubernetes.kubelet.taints.<name>.value

    Value of taint.

    Type: string

    Declared by:

    [9622]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9623]services.kubernetes.kubelet.tlsCertFile

    File containing x509 Certificate for HTTPS.

    Type: null or path

    Default: null

    Declared by:

    [9624]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9625]services.kubernetes.kubelet.tlsKeyFile

    File containing x509 private key matching tlsCertFile.

    Type: null or path

    Default: null

    Declared by:

    [9626]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9627]services.kubernetes.kubelet.unschedulable

    Whether to set node taint to unschedulable=true as it is the case of node that has only
    master role.

    Type: boolean

    Default: false

    Declared by:

    [9628]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9629]services.kubernetes.kubelet.verbosity

    Optional glog verbosity level for logging statements. See [9630]https://github.com/kubernetes
    /community/blob/master/contributors/devel/logging.md

    Type: null or signed integer

    Default: null

    Declared by:

    [9631]<nixpkgs/nixos/modules/services/cluster/kubernetes/kubelet.nix>

[9632]services.kubernetes.lib

    Common functions for the kubernetes modules.

    Type: attribute set

    Default: { mkCert = "<function>"; mkKubeConfig = "<function>"; mkKubeConfigOptions = "
    <function>"; }

    Declared by:

    [9633]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9634]services.kubernetes.masterAddress

    Clusterwide available network address or hostname for the kubernetes master server.

    Type: string

    Example: "master.example.com"

    Declared by:

    [9635]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9636]services.kubernetes.path

    Packages added to the services' PATH environment variable. Both the bin and sbin
    subdirectories of each package are added.

    Type: list of packages

    Default: [ ]

    Declared by:

    [9637]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9638]services.kubernetes.pki.enable

    Whether to enable easyCert issuer service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9639]<nixpkgs/nixos/modules/services/cluster/kubernetes/pki.nix>

[9640]services.kubernetes.pki.caCertPathPrefix

    Path-prefrix for the CA-certificate to be used for cfssl signing. Suffixes ".pem" and
    "-key.pem" will be automatically appended for the public and private keys respectively.

    Type: string

    Default: "/var/lib/cfssl/ca"

    Declared by:

    [9641]<nixpkgs/nixos/modules/services/cluster/kubernetes/pki.nix>

[9642]services.kubernetes.pki.caSpec

    Certificate specification for the auto-generated CAcert.

    Type: attribute set

    Default: { CN = "kubernetes-cluster-ca"; L = "auto-generated"; O = "NixOS"; OU =
    "services.kubernetes.pki.caSpec"; }

    Declared by:

    [9643]<nixpkgs/nixos/modules/services/cluster/kubernetes/pki.nix>

[9644]services.kubernetes.pki.certs

    List of certificate specs to feed to cert generator.

    Type: attribute set

    Default: { }

    Declared by:

    [9645]<nixpkgs/nixos/modules/services/cluster/kubernetes/pki.nix>

[9646]services.kubernetes.pki.cfsslAPIExtraSANs

    Extra x509 Subject Alternative Names to be added to the cfssl API webserver TLS cert.

    Type: list of strings

    Default: [ ]

    Example: [ "subdomain.example.com" ]

    Declared by:

    [9647]<nixpkgs/nixos/modules/services/cluster/kubernetes/pki.nix>

[9648]services.kubernetes.pki.etcClusterAdminKubeconfig

    Symlink a kubeconfig with cluster-admin privileges to environment path (/etc/<path>).

    Type: null or string

    Default: null

    Declared by:

    [9649]<nixpkgs/nixos/modules/services/cluster/kubernetes/pki.nix>

[9650]services.kubernetes.pki.genCfsslAPICerts

    Whether to automatically generate cfssl API webserver TLS cert and key, if they don't exist.

    Type: boolean

    Default: true

    Declared by:

    [9651]<nixpkgs/nixos/modules/services/cluster/kubernetes/pki.nix>

[9652]services.kubernetes.pki.genCfsslAPIToken

    Whether to automatically generate cfssl API-token secret, if they doesn't exist.

    Type: boolean

    Default: true

    Declared by:

    [9653]<nixpkgs/nixos/modules/services/cluster/kubernetes/pki.nix>

[9654]services.kubernetes.pki.genCfsslCACert

    Whether to automatically generate cfssl CA certificate and key, if they don't exist.

    Type: boolean

    Default: true

    Declared by:

    [9655]<nixpkgs/nixos/modules/services/cluster/kubernetes/pki.nix>

[9656]services.kubernetes.pki.pkiTrustOnBootstrap

    Whether to always trust remote cfssl server upon initial PKI bootstrap.

    Type: boolean

    Default: true

    Declared by:

    [9657]<nixpkgs/nixos/modules/services/cluster/kubernetes/pki.nix>

[9658]services.kubernetes.proxy.enable

    Whether to enable Kubernetes proxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9659]<nixpkgs/nixos/modules/services/cluster/kubernetes/proxy.nix>

[9660]services.kubernetes.proxy.bindAddress

    Kubernetes proxy listening address.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [9661]<nixpkgs/nixos/modules/services/cluster/kubernetes/proxy.nix>

[9662]services.kubernetes.proxy.extraOpts

    Kubernetes proxy extra command line options.

    Type: strings concatenated with " "

    Default: ""

    Declared by:

    [9663]<nixpkgs/nixos/modules/services/cluster/kubernetes/proxy.nix>

[9664]services.kubernetes.proxy.featureGates

    List set of feature gates

    Type: list of strings

    Default: [ ]

    Declared by:

    [9665]<nixpkgs/nixos/modules/services/cluster/kubernetes/proxy.nix>

[9666]services.kubernetes.proxy.hostname

    Kubernetes proxy hostname override.

    Type: string

    Default: "nixos"

    Declared by:

    [9667]<nixpkgs/nixos/modules/services/cluster/kubernetes/proxy.nix>

[9668]services.kubernetes.proxy.kubeconfig.caFile

    Kubernetes proxy certificate authority file used to connect to kube-apiserver.

    Type: null or path

    Default: null

    Declared by:

    [9669]<nixpkgs/nixos/modules/services/cluster/kubernetes/proxy.nix>

[9670]services.kubernetes.proxy.kubeconfig.certFile

    Kubernetes proxy client certificate file used to connect to kube-apiserver.

    Type: null or path

    Default: null

    Declared by:

    [9671]<nixpkgs/nixos/modules/services/cluster/kubernetes/proxy.nix>

[9672]services.kubernetes.proxy.kubeconfig.keyFile

    Kubernetes proxy client key file used to connect to kube-apiserver.

    Type: null or path

    Default: null

    Declared by:

    [9673]<nixpkgs/nixos/modules/services/cluster/kubernetes/proxy.nix>

[9674]services.kubernetes.proxy.kubeconfig.server

    Kubernetes proxy kube-apiserver server address.

    Type: string

    Declared by:

    [9675]<nixpkgs/nixos/modules/services/cluster/kubernetes/proxy.nix>

[9676]services.kubernetes.proxy.verbosity

    Optional glog verbosity level for logging statements. See [9677]https://github.com/kubernetes
    /community/blob/master/contributors/devel/logging.md

    Type: null or signed integer

    Default: null

    Declared by:

    [9678]<nixpkgs/nixos/modules/services/cluster/kubernetes/proxy.nix>

[9679]services.kubernetes.roles

    Kubernetes role that this machine should take.

    Master role will enable etcd, apiserver, scheduler, controller manager addon manager, flannel
    and proxy services. Node role will enable flannel, docker, kubelet and proxy services.

    Type: list of one of "master", "node"s

    Default: [ ]

    Declared by:

    [9680]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9681]services.kubernetes.scheduler.enable

    Whether to enable Kubernetes scheduler.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9682]<nixpkgs/nixos/modules/services/cluster/kubernetes/scheduler.nix>

[9683]services.kubernetes.scheduler.address

    Kubernetes scheduler listening address.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [9684]<nixpkgs/nixos/modules/services/cluster/kubernetes/scheduler.nix>

[9685]services.kubernetes.scheduler.extraOpts

    Kubernetes scheduler extra command line options.

    Type: strings concatenated with " "

    Default: ""

    Declared by:

    [9686]<nixpkgs/nixos/modules/services/cluster/kubernetes/scheduler.nix>

[9687]services.kubernetes.scheduler.featureGates

    List set of feature gates

    Type: list of strings

    Default: [ ]

    Declared by:

    [9688]<nixpkgs/nixos/modules/services/cluster/kubernetes/scheduler.nix>

[9689]services.kubernetes.scheduler.kubeconfig.caFile

    Kubernetes scheduler certificate authority file used to connect to kube-apiserver.

    Type: null or path

    Default: null

    Declared by:

    [9690]<nixpkgs/nixos/modules/services/cluster/kubernetes/scheduler.nix>

[9691]services.kubernetes.scheduler.kubeconfig.certFile

    Kubernetes scheduler client certificate file used to connect to kube-apiserver.

    Type: null or path

    Default: null

    Declared by:

    [9692]<nixpkgs/nixos/modules/services/cluster/kubernetes/scheduler.nix>

[9693]services.kubernetes.scheduler.kubeconfig.keyFile

    Kubernetes scheduler client key file used to connect to kube-apiserver.

    Type: null or path

    Default: null

    Declared by:

    [9694]<nixpkgs/nixos/modules/services/cluster/kubernetes/scheduler.nix>

[9695]services.kubernetes.scheduler.kubeconfig.server

    Kubernetes scheduler kube-apiserver server address.

    Type: string

    Declared by:

    [9696]<nixpkgs/nixos/modules/services/cluster/kubernetes/scheduler.nix>

[9697]services.kubernetes.scheduler.leaderElect

    Whether to start leader election before executing main loop.

    Type: boolean

    Default: true

    Declared by:

    [9698]<nixpkgs/nixos/modules/services/cluster/kubernetes/scheduler.nix>

[9699]services.kubernetes.scheduler.port

    Kubernetes scheduler listening port.

    Type: signed integer

    Default: 10251

    Declared by:

    [9700]<nixpkgs/nixos/modules/services/cluster/kubernetes/scheduler.nix>

[9701]services.kubernetes.scheduler.verbosity

    Optional glog verbosity level for logging statements. See [9702]https://github.com/kubernetes
    /community/blob/master/contributors/devel/logging.md

    Type: null or signed integer

    Default: null

    Declared by:

    [9703]<nixpkgs/nixos/modules/services/cluster/kubernetes/scheduler.nix>

[9704]services.kubernetes.secretsPath

    Default location for kubernetes secrets. Not a store location.

    Type: path

    Default: "/var/lib/kubernetes/secrets"

    Declared by:

    [9705]<nixpkgs/nixos/modules/services/cluster/kubernetes/default.nix>

[9706]services.lambdabot.enable

    Enable the Lambdabot IRC bot

    Type: boolean

    Default: false

    Declared by:

    [9707]<nixpkgs/nixos/modules/services/networking/lambdabot.nix>

[9708]services.lambdabot.package

    Used lambdabot package

    Type: package

    Default: "pkgs.lambdabot"

    Declared by:

    [9709]<nixpkgs/nixos/modules/services/networking/lambdabot.nix>

[9710]services.lambdabot.script

    Lambdabot script

    Type: string

    Default: ""

    Declared by:

    [9711]<nixpkgs/nixos/modules/services/networking/lambdabot.nix>

[9712]services.leaps.enable

    Whether to enable leaps.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9713]<nixpkgs/nixos/modules/services/misc/leaps.nix>

[9714]services.leaps.address

    Hostname or IP-address to listen to. By default it will listen on all interfaces.

    Type: string

    Default: ""

    Example: "127.0.0.1"

    Declared by:

    [9715]<nixpkgs/nixos/modules/services/misc/leaps.nix>

[9716]services.leaps.path

    Subdirectory used for reverse proxy setups

    Type: path

    Default: "/"

    Declared by:

    [9717]<nixpkgs/nixos/modules/services/misc/leaps.nix>

[9718]services.leaps.port

    A port where leaps listens for incoming http requests

    Type: signed integer

    Default: 8080

    Declared by:

    [9719]<nixpkgs/nixos/modules/services/misc/leaps.nix>

[9720]services.libreswan.enable

    Whether to enable Libreswan IPsec service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9721]<nixpkgs/nixos/modules/services/networking/libreswan.nix>

[9722]services.libreswan.configSetup

    Options to go in the 'config setup' section of the Libreswan IPsec configuration

    Type: strings concatenated with "\n"

    Default:

    ''
    protostack=netkey
    virtual_private=%v4:10.0.0.0/8,%v4:192.168.0.0/16,%v4:172.16.0.0/12,%v4:25.0.0.0/8,%v4:100.64.0.0/10,%v6:fd00::/8,%v6:fe80::/10
    ''

    Example:

    ''
    secretsfile=/root/ipsec.secrets
    protostack=netkey
    virtual_private=%v4:10.0.0.0/8,%v4:192.168.0.0/16,%v4:172.16.0.0/12,%v4:25.0.0.0/8,%v4:100.64.0.0/10,%v6:fd00::/8,%v6:fe80::/10
    ''

    Declared by:

    [9723]<nixpkgs/nixos/modules/services/networking/libreswan.nix>

[9724]services.libreswan.connections

    A set of connections to define for the Libreswan IPsec service

    Type: attribute set of strings concatenated with "\n"s

    Default: { }

    Example:

    { myconnection = ''
        auto=add
        left=%defaultroute
        leftid=@user

        right=my.vpn.com

        ikev2=no
        ikelifetime=8h
      '';
    }

    Declared by:

    [9725]<nixpkgs/nixos/modules/services/networking/libreswan.nix>

[9726]services.libreswan.disableRedirects

    Whether to disable send and accept redirects for all nework interfaces. See the Libreswan 
    [9727] FAQ page for why this is recommended.

    Type: boolean

    Default: true

    Declared by:

    [9728]<nixpkgs/nixos/modules/services/networking/libreswan.nix>

[9729]services.libreswan.policies

    A set of policies to apply to the IPsec connections.

    Note: The policy name must match the one of connection it needs to apply to.

    Type: attribute set of strings concatenated with "\n"s

    Default: { }

    Example:

    { private-or-clear = ''
        # Attempt opportunistic IPsec for the entire Internet
        0.0.0.0/0
        ::/0
      '';
    }

    Declared by:

    [9730]<nixpkgs/nixos/modules/services/networking/libreswan.nix>

[9731]services.lidarr.enable

    Whether to enable Lidarr.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9732]<nixpkgs/nixos/modules/services/misc/lidarr.nix>

[9733]services.lidarr.package

    The Lidarr package to use

    Type: package

    Default: "pkgs.lidarr"

    Declared by:

    [9734]<nixpkgs/nixos/modules/services/misc/lidarr.nix>

[9735]services.lidarr.dataDir

    The directory where Lidarr stores its data files.

    Type: string

    Default: "/var/lib/lidarr/.config/Lidarr"

    Declared by:

    [9736]<nixpkgs/nixos/modules/services/misc/lidarr.nix>

[9737]services.lidarr.group

    Group under which Lidarr runs.

    Type: string

    Default: "lidarr"

    Declared by:

    [9738]<nixpkgs/nixos/modules/services/misc/lidarr.nix>

[9739]services.lidarr.openFirewall

    Open ports in the firewall for Lidarr

    Type: boolean

    Default: false

    Declared by:

    [9740]<nixpkgs/nixos/modules/services/misc/lidarr.nix>

[9741]services.lidarr.user

    User account under which Lidarr runs.

    Type: string

    Default: "lidarr"

    Declared by:

    [9742]<nixpkgs/nixos/modules/services/misc/lidarr.nix>

[9743]services.lifecycled.enable

    Whether to enable lifecycled.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9744]<nixpkgs/nixos/modules/services/misc/lifecycled.nix>

[9745]services.lifecycled.awsRegion

    The region used for accessing AWS services.

    Type: null or string

    Default: null

    Declared by:

    [9746]<nixpkgs/nixos/modules/services/misc/lifecycled.nix>

[9747]services.lifecycled.cloudwatchGroup

    Write logs to a specific Cloudwatch Logs group.

    Type: null or string

    Default: null

    Declared by:

    [9748]<nixpkgs/nixos/modules/services/misc/lifecycled.nix>

[9749]services.lifecycled.cloudwatchStream

    Write logs to a specific Cloudwatch Logs stream. Defaults to the instance ID.

    Type: null or string

    Default: null

    Declared by:

    [9750]<nixpkgs/nixos/modules/services/misc/lifecycled.nix>

[9751]services.lifecycled.debug

    Enable debugging information.

    Type: boolean

    Default: false

    Declared by:

    [9752]<nixpkgs/nixos/modules/services/misc/lifecycled.nix>

[9753]services.lifecycled.handler

    The script to invoke to handle events.

    Type: path

    Declared by:

    [9754]<nixpkgs/nixos/modules/services/misc/lifecycled.nix>

[9755]services.lifecycled.instanceId

    The instance ID to listen for events for.

    Type: null or string

    Default: null

    Declared by:

    [9756]<nixpkgs/nixos/modules/services/misc/lifecycled.nix>

[9757]services.lifecycled.json

    Enable JSON logging.

    Type: boolean

    Default: false

    Declared by:

    [9758]<nixpkgs/nixos/modules/services/misc/lifecycled.nix>

[9759]services.lifecycled.noSpot

    Disable the spot termination listener.

    Type: boolean

    Default: false

    Declared by:

    [9760]<nixpkgs/nixos/modules/services/misc/lifecycled.nix>

[9761]services.lifecycled.queueCleaner.enable

    Whether to enable lifecycled-queue-cleaner.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9762]<nixpkgs/nixos/modules/services/misc/lifecycled.nix>

[9763]services.lifecycled.queueCleaner.frequency

    How often to trigger the queue cleaner.

    NOTE: This string should be a valid value for a systemd timer's OnCalendar configuration. See
    systemd.timer(5) for more information.

    Type: string

    Default: "hourly"

    Declared by:

    [9764]<nixpkgs/nixos/modules/services/misc/lifecycled.nix>

[9765]services.lifecycled.queueCleaner.parallel

    The number of parallel deletes to run.

    Type: unsigned integer, meaning >=0

    Default: 20

    Declared by:

    [9766]<nixpkgs/nixos/modules/services/misc/lifecycled.nix>

[9767]services.lifecycled.snsTopic

    The SNS topic that receives events.

    Type: null or string

    Default: null

    Declared by:

    [9768]<nixpkgs/nixos/modules/services/misc/lifecycled.nix>

[9769]services.lighttpd.enable

    Enable the lighttpd web server.

    Type: boolean

    Default: false

    Declared by:

    [9770]<nixpkgs/nixos/modules/services/web-servers/lighttpd/default.nix>

[9771]services.lighttpd.enableModules

    List of lighttpd modules to enable. Sub-services take care of enabling modules as needed, so
    this option is mainly for when you want to add custom stuff to services.lighttpd.extraConfig
    that depends on a certain module.

    Type: list of strings

    Default: [ ]

    Example: [ "mod_cgi" "mod_status" ]

    Declared by:

    [9772]<nixpkgs/nixos/modules/services/web-servers/lighttpd/default.nix>

[9773]services.lighttpd.enableUpstreamMimeTypes

    Whether to include the list of mime types bundled with lighttpd (upstream). If you disable
    this, no mime types will be added by NixOS and you will have to add your own mime types in
    services.lighttpd.extraConfig.

    Type: boolean

    Default: true

    Declared by:

    [9774]<nixpkgs/nixos/modules/services/web-servers/lighttpd/default.nix>

[9775]services.lighttpd.cgit.enable

    If true, enable cgit (fast web interface for git repositories) as a sub-service in lighttpd.

    Type: boolean

    Default: false

    Declared by:

    [9776]<nixpkgs/nixos/modules/services/web-servers/lighttpd/cgit.nix>

[9777]services.lighttpd.cgit.configText

    Verbatim contents of the cgit runtime configuration file. Documentation (with cgitrc example
    file) is available in "man cgitrc". Or online: http://git.zx2c4.com/cgit/tree/cgitrc.5.txt

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    source-filter=''${pkgs.cgit}/lib/cgit/filters/syntax-highlighting.py
    about-filter=''${pkgs.cgit}/lib/cgit/filters/about-formatting.sh
    cache-size=1000
    scan-path=/srv/git
    ''

    Declared by:

    [9778]<nixpkgs/nixos/modules/services/web-servers/lighttpd/cgit.nix>

[9779]services.lighttpd.cgit.subdir

    The subdirectory in which to serve cgit. The web application will be accessible at http://
    yourserver/${subdir}

    Type: string

    Default: "cgit"

    Example: ""

    Declared by:

    [9780]<nixpkgs/nixos/modules/services/web-servers/lighttpd/cgit.nix>

[9781]services.lighttpd.collectd.enable

    Whether to enable collectd subservice accessible at http://yourserver/collectd.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9782]<nixpkgs/nixos/modules/services/web-servers/lighttpd/collectd.nix>

[9783]services.lighttpd.collectd.collectionCgi

    Path to collection.cgi script from (collectd sources)/contrib/collection.cgi This option
    allows to use a customized version

    Type: path

    Default: (build of collection.cgi)

    Declared by:

    [9784]<nixpkgs/nixos/modules/services/web-servers/lighttpd/collectd.nix>

[9785]services.lighttpd.configText

    Overridable config file contents to use for lighttpd. By default, use the contents
    automatically generated by NixOS.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "...verbatim config file contents..."

    Declared by:

    [9786]<nixpkgs/nixos/modules/services/web-servers/lighttpd/default.nix>

[9787]services.lighttpd.document-root

    Document-root of the web server. Must be readable by the "lighttpd" user.

    Type: path

    Default: "/srv/www"

    Declared by:

    [9788]<nixpkgs/nixos/modules/services/web-servers/lighttpd/default.nix>

[9789]services.lighttpd.extraConfig

    These configuration lines will be appended to the generated lighttpd config file. Note that
    this mechanism does not work when the manual configText option is used.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [9790]<nixpkgs/nixos/modules/services/web-servers/lighttpd/default.nix>

[9791]services.lighttpd.gitweb.enable

    If true, enable gitweb in lighttpd. Access it at http://yourserver/gitweb

    Type: boolean

    Default: false

    Declared by:

    [9792]<nixpkgs/nixos/modules/services/web-servers/lighttpd/gitweb.nix>

[9793]services.lighttpd.mod_status

    Show server status overview at /server-status, statistics at /server-statistics and list of
    loaded modules at /server-config.

    Type: boolean

    Default: false

    Declared by:

    [9794]<nixpkgs/nixos/modules/services/web-servers/lighttpd/default.nix>

[9795]services.lighttpd.mod_userdir

    If true, requests in the form /~user/page.html are rewritten to take the file public_html/
    page.html from the home directory of the user.

    Type: boolean

    Default: false

    Declared by:

    [9796]<nixpkgs/nixos/modules/services/web-servers/lighttpd/default.nix>

[9797]services.lighttpd.port

    TCP port number for lighttpd to bind to.

    Type: signed integer

    Default: 80

    Declared by:

    [9798]<nixpkgs/nixos/modules/services/web-servers/lighttpd/default.nix>

[9799]services.limesurvey.enable

    Whether to enable Limesurvey web application..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9800]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9801]services.limesurvey.config

    LimeSurvey configuration. Refer to [9802]https://manual.limesurvey.org/Optional_settings for
    details on supported values.

    Type: limesurvey config type (str, int, bool or attribute set thereof)

    Default: { }

    Declared by:

    [9803]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9804]services.limesurvey.database.createLocally

    Create the database and database user locally. This currently only applies if database type
    "mysql" is selected.

    Type: boolean

    Default: "true"

    Declared by:

    [9805]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9806]services.limesurvey.database.host

    Database host address.

    Type: string

    Default: "localhost"

    Declared by:

    [9807]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9808]services.limesurvey.database.name

    Database name.

    Type: string

    Default: "limesurvey"

    Declared by:

    [9809]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9810]services.limesurvey.database.passwordFile

    A file containing the password corresponding to database.user.

    Type: null or path

    Default: null

    Example: "/run/keys/limesurvey-dbpassword"

    Declared by:

    [9811]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9812]services.limesurvey.database.port

    Database host port.

    Type: signed integer

    Default: "3306"

    Declared by:

    [9813]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9814]services.limesurvey.database.socket

    Path to the unix socket file to use for authentication.

    Type: null or path

    Default: "/run/mysqld/mysqld.sock"

    Declared by:

    [9815]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9816]services.limesurvey.database.type

    Database engine to use.

    Type: one of "mysql", "pgsql", "odbc", "mssql"

    Default: "mysql"

    Example: "pgsql"

    Declared by:

    [9817]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9818]services.limesurvey.database.user

    Database user.

    Type: string

    Default: "limesurvey"

    Declared by:

    [9819]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9820]services.limesurvey.poolConfig

    Options for the LimeSurvey PHP pool. See the documentation on php-fpm.conf for details on
    configuration directives.

    Type: attribute set of string or signed integer or booleans

    Default: { pm = "dynamic"; pm.max_children = 32; pm.max_requests = 500; pm.max_spare_servers
    = 4; pm.min_spare_servers = 2; pm.start_servers = 2; }

    Declared by:

    [9821]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9822]services.limesurvey.virtualHost

    Apache configuration can be done by adapting services.httpd.virtualHosts.<name>. See [9823]
    services.httpd.virtualHosts for further information.

    Type: submodule

    Example:

    {
      hostName = "survey.example.org";
      adminAddr = "webmaster@example.org";
      forceSSL = true;
      enableACME = true;
    }

    Declared by:

    [9824]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9825]services.limesurvey.virtualHost.enableACME

    Whether to ask Let's Encrypt to sign a certificate for this vhost. Alternately, you can use
    an existing certificate through useACMEHost.

    Type: boolean

    Default: false

    Declared by:

    [9826]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9827]services.limesurvey.virtualHost.enableUserDir

    Whether to enable serving ~/public_html as /~username.

    Type: boolean

    Default: false

    Declared by:

    [9828]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9829]services.limesurvey.virtualHost.acmeRoot

    Directory for the acme challenge which is PUBLIC, don't put certs or keys in here

    Type: string

    Default: "/var/lib/acme/acme-challenge"

    Declared by:

    [9830]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9831]services.limesurvey.virtualHost.addSSL

    Whether to enable HTTPS in addition to plain HTTP. This will set defaults for listen to
    listen on all interfaces on the respective default ports (80, 443).

    Type: boolean

    Default: false

    Declared by:

    [9832]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9833]services.limesurvey.virtualHost.adminAddr

    E-mail address of the server administrator.

    Type: null or string

    Default: null

    Example: "admin@example.org"

    Declared by:

    [9834]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9835]services.limesurvey.virtualHost.documentRoot

    The path of Apache's document root directory. If left undefined, an empty directory in the
    Nix store will be used as root.

    Type: null or path

    Default: null

    Example: "/data/webserver/docs"

    Declared by:

    [9836]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9837]services.limesurvey.virtualHost.extraConfig

    These lines go to httpd.conf verbatim. They will go after directories and directory aliases
    defined by default.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    <Directory /home>
      Options FollowSymlinks
      AllowOverride All
    </Directory>
    ''

    Declared by:

    [9838]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9839]services.limesurvey.virtualHost.forceSSL

    Whether to add a separate nginx server block that permanently redirects (301) all plain HTTP
    traffic to HTTPS. This will set defaults for listen to listen on all interfaces on the
    respective default ports (80, 443), where the non-SSL listens are used for the redirect
    vhosts.

    Type: boolean

    Default: false

    Declared by:

    [9840]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9841]services.limesurvey.virtualHost.globalRedirect

    If set, all requests for this host are redirected permanently to the given URL.

    Type: null or string

    Default: null

    Example: "http://newserver.example.org/"

    Declared by:

    [9842]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9843]services.limesurvey.virtualHost.hostName

    Canonical hostname for the server.

    Type: string

    Default: "‹name›"

    Declared by:

    [9844]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9845]services.limesurvey.virtualHost.http2

    Whether to enable HTTP 2. HTTP/2 is supported in all multi-processing modules that come with
    httpd. However, if you use the prefork mpm, there will be severe restrictions. Refer to 
    [9846]https://httpd.apache.org/docs/2.4/howto/http2.html#mpm-config for details.

    Type: boolean

    Default: true

    Declared by:

    [9847]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9848]services.limesurvey.virtualHost.listen

    Listen addresses and ports for this virtual host.

    Note: This option overrides addSSL, forceSSL and onlySSL.

    Type: list of submodules

    Default: [ ]

    Example: [ { ip = "195.154.1.1"; port = 443; ssl = true; } { ip = "192.154.1.1"; port = 80; }
    { ip = "*"; port = 8080; } ]

    Declared by:

    [9849]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9850]services.limesurvey.virtualHost.listen.*.ip

    IP to listen on. 0.0.0.0 for IPv4 only, * for all.

    Type: string

    Default: "*"

    Declared by:

    [9851]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9852]services.limesurvey.virtualHost.listen.*.port

    Port to listen on

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Declared by:

    [9853]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9854]services.limesurvey.virtualHost.listen.*.ssl

    Whether to enable SSL (https) support.

    Type: boolean

    Default: false

    Declared by:

    [9855]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9856]services.limesurvey.virtualHost.locations

    Declarative location config. See [9857]https://httpd.apache.org/docs/2.4/mod/core.html#
    location for details.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "/" = {
        proxyPass = "http://localhost:3000";
      };
      "/foo/bar.png" = {
        alias = "/home/eelco/some-file.png";
      };
    };

    Declared by:

    [9858]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9859]services.limesurvey.virtualHost.locations.<name>.alias

    Alias directory for requests. See [9860]https://httpd.apache.org/docs/2.4/mod/mod_alias.html#
    alias.

    Type: null or path

    Default: null

    Example: "/your/alias/directory"

    Declared by:

    [9861]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9862]services.limesurvey.virtualHost.locations.<name>.extraConfig

    These lines go to the end of the location verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [9863]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9864]services.limesurvey.virtualHost.locations.<name>.index

    Adds DirectoryIndex directive. See [9865]https://httpd.apache.org/docs/2.4/mod/mod_dir.html#
    directoryindex.

    Type: null or string

    Default: null

    Example: "index.php index.html"

    Declared by:

    [9866]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9867]services.limesurvey.virtualHost.locations.<name>.priority

    Order of this location block in relation to the others in the vhost. The semantics are the
    same as with `lib.mkOrder`. Smaller values have a greater priority.

    Type: signed integer

    Default: 1000

    Declared by:

    [9868]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9869]services.limesurvey.virtualHost.locations.<name>.proxyPass

    Sets up a simple reverse proxy as described by [9870]https://httpd.apache.org/docs/2.4/howto/
    reverse_proxy.html#simple.

    Type: null or string

    Default: null

    Example: "http://www.example.org/"

    Declared by:

    [9871]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9872]services.limesurvey.virtualHost.logFormat

    Log format for Apache's log files. Possible values are: combined, common, referer, agent.

    Type: string

    Default: "common"

    Example: "combined"

    Declared by:

    [9873]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9874]services.limesurvey.virtualHost.onlySSL

    Whether to enable HTTPS and reject plain HTTP connections. This will set defaults for listen
    to listen on all interfaces on port 443.

    Type: boolean

    Default: false

    Declared by:

    [9875]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9876]services.limesurvey.virtualHost.robotsEntries

    Specification of pages to be ignored by web crawlers. See [9877]http://www.robotstxt.org/ for
    details.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "Disallow: /foo/"

    Declared by:

    [9878]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9879]services.limesurvey.virtualHost.servedDirs

    This option provides a simple way to serve static directories.

    Type: list of attribute sets

    Default: [ ]

    Example: [ { dir = "/home/eelco/Dev/nix-homepage"; urlPath = "/nix"; } ]

    Declared by:

    [9880]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9881]services.limesurvey.virtualHost.servedFiles

    This option provides a simple way to serve individual, static files.

    Note: This option has been deprecated and will be removed in a future version of NixOS. You
    can achieve the same result by making use of the locations.<name>.alias option.

    Type: list of attribute sets

    Default: [ ]

    Example: [ { file = "/home/eelco/some-file.png"; urlPath = "/foo/bar.png"; } ]

    Declared by:

    [9882]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9883]services.limesurvey.virtualHost.serverAliases

    Additional names of virtual hosts served by this virtual host configuration.

    Type: list of strings

    Default: [ ]

    Example: [ "www.example.org" "www.example.org:8080" "example.org" ]

    Declared by:

    [9884]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9885]services.limesurvey.virtualHost.sslServerCert

    Path to server SSL certificate.

    Type: path

    Example: "/var/host.cert"

    Declared by:

    [9886]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9887]services.limesurvey.virtualHost.sslServerChain

    Path to server SSL chain file.

    Type: null or path

    Default: null

    Example: "/var/ca.pem"

    Declared by:

    [9888]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9889]services.limesurvey.virtualHost.sslServerKey

    Path to server SSL certificate key.

    Type: path

    Example: "/var/host.key"

    Declared by:

    [9890]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9891]services.limesurvey.virtualHost.useACMEHost

    A host of an existing Let's Encrypt certificate to use. This is useful if you have many
    subdomains and want to avoid hitting the [9892]rate limit. Alternately, you can generate a
    certificate through enableACME. Note that this option does not create any certificates, nor
    it does add subdomains to existing ones – you will need to create them manually using [9893]
    security.acme.certs.

    Type: null or string

    Default: null

    Declared by:

    [9894]<nixpkgs/nixos/modules/services/web-apps/limesurvey.nix>

[9895]services.liquidsoap.streams

    Set of Liquidsoap streams to start, one systemd service per stream.

    Type: attribute set of path or strings

    Default: { }

    Example: { myStream1 = "/etc/liquidsoap/myStream1.liq"; myStream2 = ./myStream2.liq;
    myStream3 = "out(playlist(\"/srv/music/\"))"; }

    Declared by:

    [9896]<nixpkgs/nixos/modules/services/audio/liquidsoap.nix>

[9897]services.lirc.enable

    Whether to enable LIRC daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9898]<nixpkgs/nixos/modules/services/hardware/lirc.nix>

[9899]services.lirc.configs

    Configurations for lircd to load, see man:lircd.conf(5) for details (lircd.conf)

    Type: list of strings concatenated with "\n"s

    Declared by:

    [9900]<nixpkgs/nixos/modules/services/hardware/lirc.nix>

[9901]services.lirc.extraArguments

    Extra arguments to lircd.

    Type: list of strings

    Default: [ ]

    Declared by:

    [9902]<nixpkgs/nixos/modules/services/hardware/lirc.nix>

[9903]services.lirc.options

    LIRC default options descriped in man:lircd(8) (lirc_options.conf)

    Type: strings concatenated with "\n"

    Example:

    ''
    [lircd]
    nodaemon = False
    ''

    Declared by:

    [9904]<nixpkgs/nixos/modules/services/hardware/lirc.nix>

[9905]services.lldpd.enable

    Whether to enable Link Layer Discovery Protocol Daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9906]<nixpkgs/nixos/modules/services/networking/lldpd.nix>

[9907]services.lldpd.extraArgs

    List of command line parameters for lldpd

    Type: list of strings

    Default: [ ]

    Example: [ "-c" "-k" "-I eth0" ]

    Declared by:

    [9908]<nixpkgs/nixos/modules/services/networking/lldpd.nix>

[9909]services.localtime.enable

    Enable localtime, simple daemon for keeping the system timezone up-to-date based on the
    current location. It uses geoclue2 to determine the current location and systemd-timedated to
    actually set the timezone.

    Type: boolean

    Default: false

    Declared by:

    [9910]<nixpkgs/nixos/modules/services/system/localtime.nix>

[9911]services.locate.enable

    If enabled, NixOS will periodically update the database of files used by the locate command.

    Type: boolean

    Default: false

    Declared by:

    [9912]<nixpkgs/nixos/modules/misc/locate.nix>

[9913]services.locate.extraFlags

    Extra flags to pass to updatedb.

    Type: list of strings

    Default: [ ]

    Declared by:

    [9914]<nixpkgs/nixos/modules/misc/locate.nix>

[9915]services.locate.interval

    Update the locate database at this interval. Updates by default at 2:15 AM every day.

    The format is described in systemd.time(7).

    Type: string

    Default: "02:15"

    Example: "hourly"

    Declared by:

    [9916]<nixpkgs/nixos/modules/misc/locate.nix>

[9917]services.locate.localuser

    The user to search non-network directories as, using su.

    Type: null or string

    Default: "nobody"

    Declared by:

    [9918]<nixpkgs/nixos/modules/misc/locate.nix>

[9919]services.locate.locate

    The locate implementation to use

    Type: package

    Default: "pkgs.findutils"

    Example: "pkgs.mlocate"

    Declared by:

    [9920]<nixpkgs/nixos/modules/misc/locate.nix>

[9921]services.locate.output

    The database file to build.

    Type: path

    Default: "/var/cache/locatedb"

    Declared by:

    [9922]<nixpkgs/nixos/modules/misc/locate.nix>

[9923]services.locate.pruneBindMounts

    Whether not to index bind mounts

    Type: boolean

    Default: false

    Declared by:

    [9924]<nixpkgs/nixos/modules/misc/locate.nix>

[9925]services.locate.pruneFS

    Which filesystem types to exclude from indexing

    Type: list of strings

    Default: [ "afs" "anon_inodefs" "auto" "autofs" "bdev" "binfmt" "binfmt_misc" "cgroup" "cifs"
    "coda" "configfs" "cramfs" "cpuset" "debugfs" "devfs" "devpts" "devtmpfs" "ecryptfs"
    "eventpollfs" "exofs" "futexfs" "ftpfs" "fuse" "fusectl" "fuse.sshfs" "gfs" "gfs2" "hostfs"
    "hugetlbfs" "inotifyfs" "iso9660" "jffs2" "lustre" "misc" "mqueue" "ncpfs" "nnpfs" "ocfs"
    "ocfs2" "pipefs" "proc" "ramfs" "rpc_pipefs" "securityfs" "selinuxfs" "sfs" "shfs" "smbfs"
    "sockfs" "spufs" "nfs" "NFS" "nfs4" "nfsd" "sshfs" "subfs" "supermount" "sysfs" "tmpfs"
    "ubifs" "udf" "usbfs" "vboxsf" "vperfctrfs" ]

    Declared by:

    [9926]<nixpkgs/nixos/modules/misc/locate.nix>

[9927]services.locate.pruneNames

    Directory components which should exclude paths containing them from indexing

    Type: list of strings

    Default: [ ]

    Declared by:

    [9928]<nixpkgs/nixos/modules/misc/locate.nix>

[9929]services.locate.prunePaths

    Which paths to exclude from indexing

    Type: list of paths

    Default: [ "/tmp" "/var/tmp" "/var/cache" "/var/lock" "/var/run" "/var/spool" "/nix/store" ]

    Declared by:

    [9930]<nixpkgs/nixos/modules/misc/locate.nix>

[9931]services.logcheck.enable

    Enable the logcheck cron job.

    Type: boolean

    Default: false

    Declared by:

    [9932]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9933]services.logcheck.config

    Config options that you would like in logcheck.conf.

    Type: strings concatenated with "\n"

    Default: "FQDN=1"

    Declared by:

    [9934]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9935]services.logcheck.extraGroups

    Extra groups for the logcheck user, for example to be able to use sendmail, or to access
    certain log files.

    Type: list of strings

    Default: [ ]

    Example: [ "postdrop" "mongodb" ]

    Declared by:

    [9936]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9937]services.logcheck.extraRulesDirs

    Directories with extra rules.

    Type: list of paths

    Default: [ ]

    Example: "/etc/logcheck"

    Declared by:

    [9938]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9939]services.logcheck.files

    Which log files to check.

    Type: list of paths

    Default: [ "/var/log/messages" ]

    Example: [ "/var/log/messages" "/var/log/mail" ]

    Declared by:

    [9940]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9941]services.logcheck.ignore

    This option defines extra ignore rules.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [9942]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9943]services.logcheck.ignore.<name>.level

    Set the logcheck level.

    Type: one of "workstation", "server", "paranoid"

    Default: "server"

    Declared by:

    [9944]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9945]services.logcheck.ignore.<name>.regex

    Regex specifying which log lines to ignore.

    Type: string

    Default: ""

    Declared by:

    [9946]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9947]services.logcheck.ignoreCron

    This option defines extra ignore rules for cronjobs.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [9948]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9949]services.logcheck.ignoreCron.<name>.cmdline

    Command line for the cron job. Will be turned into a regex for the logcheck ignore rule.

    Type: string

    Default: ""

    Declared by:

    [9950]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9951]services.logcheck.ignoreCron.<name>.timeArgs

    "min hr dom mon dow" crontab time args, to auto-create a cronjob too. Leave at null to not do
    this and just add a logcheck ignore rule.

    Type: null or string

    Default: null

    Example: "02 06 * * *"

    Declared by:

    [9952]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9953]services.logcheck.ignoreCron.<name>.user

    User that runs the cronjob.

    Type: string

    Default: "root"

    Declared by:

    [9954]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9955]services.logcheck.level

    Set the logcheck level. Either "workstation", "server", or "paranoid".

    Type: string

    Default: "server"

    Declared by:

    [9956]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9957]services.logcheck.mailTo

    Email address to send reports to.

    Type: string

    Default: "root"

    Example: "you@domain.com"

    Declared by:

    [9958]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9959]services.logcheck.timeOfDay

    Time of day to run logcheck. A logcheck will be scheduled at xx:02 each day. Leave default
    (*) to run every hour. Of course when nothing special was logged, logcheck will be silent.

    Type: string

    Default: "*"

    Example: "6"

    Declared by:

    [9960]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9961]services.logcheck.user

    Username for the logcheck user.

    Type: string

    Default: "logcheck"

    Declared by:

    [9962]<nixpkgs/nixos/modules/services/logging/logcheck.nix>

[9963]services.logind.extraConfig

    Extra config options for systemd-logind. See [9964] logind.conf(5) for available options.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "IdleAction=lock"

    Declared by:

    [9965]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[9966]services.logind.killUserProcesses

    Specifies whether the processes of a user should be killed when the user logs out. If true,
    the scope unit corresponding to the session and all processes inside that scope will be
    terminated. If false, the scope is "abandoned" (see [9967] systemd.scope(5)), and processes
    are not killed.

    See [9968]logind.conf(5) for more details.

    Type: boolean

    Default: false

    Declared by:

    [9969]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[9970]services.logind.lidSwitch

    Specifies what to be done when the laptop lid is closed.

    Type: one of "ignore", "poweroff", "reboot", "halt", "kexec", "suspend", "hibernate",
    "hybrid-sleep", "suspend-then-hibernate", "lock"

    Default: "suspend"

    Example: "ignore"

    Declared by:

    [9971]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[9972]services.logind.lidSwitchDocked

    Specifies what to be done when the laptop lid is closed and another screen is added.

    Type: one of "ignore", "poweroff", "reboot", "halt", "kexec", "suspend", "hibernate",
    "hybrid-sleep", "suspend-then-hibernate", "lock"

    Default: "ignore"

    Example: "suspend"

    Declared by:

    [9973]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[9974]services.logind.lidSwitchExternalPower

    Specifies what to do when the laptop lid is closed and the system is on external power. By
    default use the same action as specified in services.logind.lidSwitch.

    Type: one of "ignore", "poweroff", "reboot", "halt", "kexec", "suspend", "hibernate",
    "hybrid-sleep", "suspend-then-hibernate", "lock"

    Default: "services.logind.lidSwitch"

    Example: "ignore"

    Declared by:

    [9975]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[9976]services.logkeys.enable

    Whether to enable logkeys service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9977]<nixpkgs/nixos/modules/services/misc/logkeys.nix>

[9978]services.logkeys.device

    Use the given device as keyboard input event device instead of /dev/input/eventX default.

    Type: null or string

    Default: null

    Example: "/dev/input/event15"

    Declared by:

    [9979]<nixpkgs/nixos/modules/services/misc/logkeys.nix>

[9980]services.logmein-hamachi.enable

    Whether to enable LogMeIn Hamachi, a proprietary (closed source) commercial VPN software.

    Type: boolean

    Default: false

    Declared by:

    [9981]<nixpkgs/nixos/modules/services/networking/logmein-hamachi.nix>

[9982]services.logrotate.enable

    Whether to enable the logrotate systemd service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [9983]<nixpkgs/nixos/modules/services/logging/logrotate.nix>

[9984]services.logrotate.extraConfig

    Extra contents to append to the logrotate configuration file. Refer to [9985]https://
    linux.die.net/man/8/logrotate for details.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [9986]<nixpkgs/nixos/modules/services/logging/logrotate.nix>

[9987]services.logrotate.paths

    Attribute set of paths to rotate. The order each block appears in the generated configuration
    file can be controlled by the [9988]priority option using the same semantics as `lib.mkOrder
    `. Smaller values have a greater priority.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      httpd = {
        path = "/var/log/httpd/*.log";
        user = config.services.httpd.user;
        group = config.services.httpd.group;
        keep = 7;
      };

      myapp = {
        path = "/var/log/myapp/*.log";
        user = "myuser";
        group = "mygroup";
        frequency = "weekly";
        keep = 5;
        priority = 1;
      };
    }

    Declared by:

    [9989]<nixpkgs/nixos/modules/services/logging/logrotate.nix>

[9990]services.logrotate.paths.<name>.enable

    Whether to enable log rotation for this path. This can be used to explicitly disable logging
    that has been configured by NixOS.

    Type: boolean

    Default: true

    Declared by:

    [9991]<nixpkgs/nixos/modules/services/logging/logrotate.nix>

[9992]services.logrotate.paths.<name>.extraConfig

    Extra logrotate config options for this path. Refer to [9993]https://linux.die.net/man/8/
    logrotate for details.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [9994]<nixpkgs/nixos/modules/services/logging/logrotate.nix>

[9995]services.logrotate.paths.<name>.frequency

    How often to rotate the logs.

    Type: one of "daily", "weekly", "monthly", "yearly"

    Default: "daily"

    Declared by:

    [9996]<nixpkgs/nixos/modules/services/logging/logrotate.nix>

[9997]services.logrotate.paths.<name>.group

    The group to use for rotation.

    Type: null or string

    Default: null

    Declared by:

    [9998]<nixpkgs/nixos/modules/services/logging/logrotate.nix>

[9999]services.logrotate.paths.<name>.keep

    How many rotations to keep.

    Type: signed integer

    Default: 20

    Declared by:

    [10000]<nixpkgs/nixos/modules/services/logging/logrotate.nix>

[10001]services.logrotate.paths.<name>.path

    The path to log files to be rotated.

    Type: string

    Declared by:

    [10002]<nixpkgs/nixos/modules/services/logging/logrotate.nix>

[10003]services.logrotate.paths.<name>.priority

    Order of this logrotate block in relation to the others. The semantics are the same as with
    `lib.mkOrder`. Smaller values have a greater priority.

    Type: signed integer

    Default: 1000

    Declared by:

    [10004]<nixpkgs/nixos/modules/services/logging/logrotate.nix>

[10005]services.logrotate.paths.<name>.user

    The user account to use for rotation.

    Type: null or string

    Default: null

    Declared by:

    [10006]<nixpkgs/nixos/modules/services/logging/logrotate.nix>

[10007]services.logstash.enable

    Enable logstash.

    Type: boolean

    Default: false

    Declared by:

    [10008]<nixpkgs/nixos/modules/services/logging/logstash.nix>

[10009]services.logstash.package

    Logstash package to use.

    Type: package

    Default: "pkgs.logstash"

    Example:

    pkgs.logstash

    Declared by:

    [10010]<nixpkgs/nixos/modules/services/logging/logstash.nix>

[10011]services.logstash.dataDir

    A path to directory writable by logstash that it uses to store data. Plugins will also have
    access to this path.

    Type: string

    Default: "/var/lib/logstash"

    Declared by:

    [10012]<nixpkgs/nixos/modules/services/logging/logstash.nix>

[10013]services.logstash.extraSettings

    Extra Logstash settings in YAML format.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    pipeline:
      batch:
        size: 125
        delay: 5
    ''

    Declared by:

    [10014]<nixpkgs/nixos/modules/services/logging/logstash.nix>

[10015]services.logstash.filterConfig

    logstash filter configuration.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    if [type] == "syslog" {
      # Keep only relevant systemd fields
      # http://www.freedesktop.org/software/systemd/man/systemd.journal-fields.html
      prune {
        whitelist_names => [
          "type", "@timestamp", "@version",
          "MESSAGE", "PRIORITY", "SYSLOG_FACILITY"
        ]
      }
    }
    ''

    Declared by:

    [10016]<nixpkgs/nixos/modules/services/logging/logstash.nix>

[10017]services.logstash.filterWorkers

    The quantity of filter workers to run.

    Type: signed integer

    Default: 1

    Declared by:

    [10018]<nixpkgs/nixos/modules/services/logging/logstash.nix>

[10019]services.logstash.inputConfig

    Logstash input configuration.

    Type: strings concatenated with "\n"

    Default: "generator { }"

    Example:

    ''
    # Read from journal
    pipe {
      command => "''${pkgs.systemd}/bin/journalctl -f -o json"
      type => "syslog" codec => json {}
    }
    ''

    Declared by:

    [10020]<nixpkgs/nixos/modules/services/logging/logstash.nix>

[10021]services.logstash.listenAddress

    Address on which to start webserver.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [10022]<nixpkgs/nixos/modules/services/logging/logstash.nix>

[10023]services.logstash.logLevel

    Logging verbosity level.

    Type: one of "debug", "info", "warn", "error", "fatal"

    Default: "warn"

    Declared by:

    [10024]<nixpkgs/nixos/modules/services/logging/logstash.nix>

[10025]services.logstash.outputConfig

    Logstash output configuration.

    Type: strings concatenated with "\n"

    Default: "stdout { codec => rubydebug }"

    Example:

    ''
    redis { host => ["localhost"] data_type => "list" key => "logstash" codec => json }
    elasticsearch { }
    ''

    Declared by:

    [10026]<nixpkgs/nixos/modules/services/logging/logstash.nix>

[10027]services.logstash.plugins

    The paths to find other logstash plugins in.

    Type: list of paths

    Default: [ ]

    Example:

    [ pkgs.logstash-contrib ]

    Declared by:

    [10028]<nixpkgs/nixos/modules/services/logging/logstash.nix>

[10029]services.logstash.port

    Port on which to start webserver.

    Type: string

    Default: "9292"

    Declared by:

    [10030]<nixpkgs/nixos/modules/services/logging/logstash.nix>

[10031]services.loki.enable

    Whether to enable loki.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10032]<nixpkgs/nixos/modules/services/monitoring/loki.nix>

[10033]services.loki.configFile

    Specify a configuration file that Loki should use.

    Type: null or path

    Default: null

    Declared by:

    [10034]<nixpkgs/nixos/modules/services/monitoring/loki.nix>

[10035]services.loki.configuration

    Specify the configuration for Loki in Nix.

    Type: JSON value

    Default: { }

    Declared by:

    [10036]<nixpkgs/nixos/modules/services/monitoring/loki.nix>

[10037]services.loki.dataDir

    Specify the directory for Loki.

    Type: path

    Default: "/var/lib/loki"

    Declared by:

    [10038]<nixpkgs/nixos/modules/services/monitoring/loki.nix>

[10039]services.loki.extraFlags

    Specify a list of additional command line flags, which get escaped and are then passed to
    Loki.

    Type: list of strings

    Default: [ ]

    Example:

    Declared by:

    [10040]<nixpkgs/nixos/modules/services/monitoring/loki.nix>

[10041]services.loki.group

    Group under which the Loki service runs.

    Type: string

    Default: "loki"

    Declared by:

    [10042]<nixpkgs/nixos/modules/services/monitoring/loki.nix>

[10043]services.loki.user

    User under which the Loki service runs.

    Type: string

    Default: "loki"

    Declared by:

    [10044]<nixpkgs/nixos/modules/services/monitoring/loki.nix>

[10045]services.longview.enable

    If enabled, system metrics will be sent to Linode LongView.

    Type: boolean

    Default: false

    Declared by:

    [10046]<nixpkgs/nixos/modules/services/monitoring/longview.nix>

[10047]services.longview.apacheStatusUrl

    The Apache status page URL. If provided, Longview will gather statistics from this location.
    This requires Apache mod_status to be loaded and enabled.

    Type: string

    Default: ""

    Example: "http://127.0.0.1/server-status"

    Declared by:

    [10048]<nixpkgs/nixos/modules/services/monitoring/longview.nix>

[10049]services.longview.apiKey

    Longview API key. To get this, look in Longview settings which are found at https://
    manager.linode.com/longview/.

    Warning: this secret is stored in the world-readable Nix store! Use apiKeyFile instead.

    Type: string

    Default: ""

    Example: "01234567-89AB-CDEF-0123456789ABCDEF"

    Declared by:

    [10050]<nixpkgs/nixos/modules/services/monitoring/longview.nix>

[10051]services.longview.apiKeyFile

    A file containing the Longview API key. To get this, look in Longview settings which are
    found at https://manager.linode.com/longview/.

    apiKeyFile takes precedence over apiKey.

    Type: null or path

    Default: null

    Example: "/run/keys/longview-api-key"

    Declared by:

    [10052]<nixpkgs/nixos/modules/services/monitoring/longview.nix>

[10053]services.longview.mysqlPassword

    The password corresponding to mysqlUser. Warning: this is stored in cleartext in the Nix
    store! Use mysqlPasswordFile instead.

    Type: string

    Default: ""

    Declared by:

    [10054]<nixpkgs/nixos/modules/services/monitoring/longview.nix>

[10055]services.longview.mysqlPasswordFile

    A file containing the password corresponding to mysqlUser.

    Type: null or path

    Default: null

    Example: "/run/keys/dbpassword"

    Declared by:

    [10056]<nixpkgs/nixos/modules/services/monitoring/longview.nix>

[10057]services.longview.mysqlUser

    The user for connecting to the MySQL database. If provided, Longview will connect to MySQL
    and collect statistics about queries, etc. This user does not need to have been granted any
    extra privileges.

    Type: string

    Default: ""

    Declared by:

    [10058]<nixpkgs/nixos/modules/services/monitoring/longview.nix>

[10059]services.longview.nginxStatusUrl

    The Nginx status page URL. Longview will gather statistics from this URL. This requires the
    Nginx stub_status module to be enabled and configured at the given location.

    Type: string

    Default: ""

    Example: "http://127.0.0.1/nginx_status"

    Declared by:

    [10060]<nixpkgs/nixos/modules/services/monitoring/longview.nix>

[10061]services.lorri.enable

    Enables the daemon for `lorri`, a nix-shell replacement for project development. The
    socket-activated daemon starts on the first request issued by the `lorri` command.

    Type: boolean

    Default: false

    Declared by:

    [10062]<nixpkgs/nixos/modules/services/development/lorri.nix>

[10063]services.lorri.package

    The lorri package to use.

    Type: package

    Default: pkgs.lorri

    Example:

    pkgs.lorri

    Declared by:

    [10064]<nixpkgs/nixos/modules/services/development/lorri.nix>

[10065]services.lshd.enable

    Whether to enable the GNU lshd SSH2 daemon, which allows secure remote login.

    Type: boolean

    Default: false

    Declared by:

    [10066]<nixpkgs/nixos/modules/services/networking/ssh/lshd.nix>

[10067]services.lshd.hostKey

    Path to the server's private key. Note that this key must have been created, e.g., using
    "lsh-keygen --server | lsh-writekey --server", so that you can run lshd.

    Type: string

    Default: "/etc/lsh/host-key"

    Declared by:

    [10068]<nixpkgs/nixos/modules/services/networking/ssh/lshd.nix>

[10069]services.lshd.interfaces

    List of network interfaces where listening for connections. When providing the empty list,
    `[]', lshd listens on all network interfaces.

    Type: list of strings

    Default: [ ]

    Example: [ "localhost" "1.2.3.4:443" ]

    Declared by:

    [10070]<nixpkgs/nixos/modules/services/networking/ssh/lshd.nix>

[10071]services.lshd.loginShell

    If non-null, override the default login shell with the specified value.

    Type: null or string

    Default: null

    Example: "/nix/store/xyz-bash-10.0/bin/bash10"

    Declared by:

    [10072]<nixpkgs/nixos/modules/services/networking/ssh/lshd.nix>

[10073]services.lshd.passwordAuthentication

    Whether to enable password authentication.

    Type: boolean

    Default: true

    Declared by:

    [10074]<nixpkgs/nixos/modules/services/networking/ssh/lshd.nix>

[10075]services.lshd.portNumber

    The port on which to listen for connections.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 22

    Declared by:

    [10076]<nixpkgs/nixos/modules/services/networking/ssh/lshd.nix>

[10077]services.lshd.publicKeyAuthentication

    Whether to enable public key authentication.

    Type: boolean

    Default: true

    Declared by:

    [10078]<nixpkgs/nixos/modules/services/networking/ssh/lshd.nix>

[10079]services.lshd.rootLogin

    Whether to enable remote root login.

    Type: boolean

    Default: false

    Declared by:

    [10080]<nixpkgs/nixos/modules/services/networking/ssh/lshd.nix>

[10081]services.lshd.srpKeyExchange

    Whether to enable SRP key exchange and user authentication.

    Type: boolean

    Default: false

    Declared by:

    [10082]<nixpkgs/nixos/modules/services/networking/ssh/lshd.nix>

[10083]services.lshd.subsystems

    List of subsystem-path pairs, where the head of the pair denotes the subsystem name, and the
    tail denotes the path to an executable implementing it.

    Type: list of paths

    Declared by:

    [10084]<nixpkgs/nixos/modules/services/networking/ssh/lshd.nix>

[10085]services.lshd.syslog

    Whether to enable syslog output.

    Type: boolean

    Default: true

    Declared by:

    [10086]<nixpkgs/nixos/modules/services/networking/ssh/lshd.nix>

[10087]services.lshd.tcpForwarding

    Whether to enable TCP/IP forwarding.

    Type: boolean

    Default: true

    Declared by:

    [10088]<nixpkgs/nixos/modules/services/networking/ssh/lshd.nix>

[10089]services.lshd.x11Forwarding

    Whether to enable X11 forwarding.

    Type: boolean

    Default: true

    Declared by:

    [10090]<nixpkgs/nixos/modules/services/networking/ssh/lshd.nix>

[10091]services.lvm.boot.thin.enable

    Whether to enable support for booting from ThinLVs.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10092]<nixpkgs/nixos/modules/tasks/lvm.nix>

[10093]services.lvm.dmeventd.enable

    Whether to enable the LVM dmevent daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10094]<nixpkgs/nixos/modules/tasks/lvm.nix>

[10095]services.mackerel-agent.enable

    Whether to enable mackerel.io agent.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10096]<nixpkgs/nixos/modules/services/monitoring/mackerel-agent.nix>

[10097]services.mackerel-agent.apiKeyFile

    Path to file containing the Mackerel API key. The file should contain a single line of the
    following form:

    apikey = "EXAMPLE_API_KEY"

    Type: path

    Default: ""

    Example: "/run/keys/mackerel-api-key"

    Declared by:

    [10098]<nixpkgs/nixos/modules/services/monitoring/mackerel-agent.nix>

[10099]services.mackerel-agent.autoRetirement

    Whether to enable Whether to automatically retire the host upon OS shutdown. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10100]<nixpkgs/nixos/modules/services/monitoring/mackerel-agent.nix>

[10101]services.mackerel-agent.runAsRoot

    Whether to enable Whether to run as root..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10102]<nixpkgs/nixos/modules/services/monitoring/mackerel-agent.nix>

[10103]services.mackerel-agent.settings

    Options for mackerel-agent.conf.

    Documentation: [10104]https://mackerel.io/docs/entry/spec/agent

    Type: TOML value

    Default: { }

    Example: { silent = false; verbose = false; }

    Declared by:

    [10105]<nixpkgs/nixos/modules/services/monitoring/mackerel-agent.nix>

[10106]services.mackerel-agent.settings.diagnostic

    Whether to enable Collect memory usage for the agent itself.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10107]<nixpkgs/nixos/modules/services/monitoring/mackerel-agent.nix>

[10108]services.mackerel-agent.settings.host_status.on_start

    Host status after agent startup.

    Type: one of "working", "standby", "maintenance", "poweroff"

    Default: "working"

    Declared by:

    [10109]<nixpkgs/nixos/modules/services/monitoring/mackerel-agent.nix>

[10110]services.mackerel-agent.settings.host_status.on_stop

    Host status after agent shutdown.

    Type: one of "working", "standby", "maintenance", "poweroff"

    Default: "poweroff"

    Declared by:

    [10111]<nixpkgs/nixos/modules/services/monitoring/mackerel-agent.nix>

[10112]services.magic-wormhole-mailbox-server.enable

    Whether to enable Enable Magic Wormhole Mailbox Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10113]<nixpkgs/nixos/modules/services/networking/magic-wormhole-mailbox-server.nix>

[10114]services.magnetico.enable

    Whether to enable Magnetico, Bittorrent DHT crawler.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10115]<nixpkgs/nixos/modules/services/torrent/magnetico.nix>

[10116]services.magnetico.crawler.address

    Address to be used for indexing DHT nodes.

    Type: string

    Default: "0.0.0.0"

    Example: "1.2.3.4"

    Declared by:

    [10117]<nixpkgs/nixos/modules/services/torrent/magnetico.nix>

[10118]services.magnetico.crawler.extraOptions

    Extra command line arguments to pass to magneticod.

    Type: list of strings

    Default: [ ]

    Declared by:

    [10119]<nixpkgs/nixos/modules/services/torrent/magnetico.nix>

[10120]services.magnetico.crawler.maxLeeches

    Maximum number of simultaneous leeches.

    Type: positive integer, meaning >0

    Default: 200

    Declared by:

    [10121]<nixpkgs/nixos/modules/services/torrent/magnetico.nix>

[10122]services.magnetico.crawler.maxNeighbors

    Maximum number of simultaneous neighbors of an indexer. Be careful changing this number: high
    values can very easily cause your network to be congested or even crash your router.

    Type: positive integer, meaning >0

    Default: 1000

    Declared by:

    [10123]<nixpkgs/nixos/modules/services/torrent/magnetico.nix>

[10124]services.magnetico.crawler.port

    Port to be used for indexing DHT nodes. This port should be added to
    networking.firewall.allowedTCPPorts.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 0

    Declared by:

    [10125]<nixpkgs/nixos/modules/services/torrent/magnetico.nix>

[10126]services.magnetico.web.address

    Address the web interface will listen to.

    Type: string

    Default: "localhost"

    Example: "1.2.3.4"

    Declared by:

    [10127]<nixpkgs/nixos/modules/services/torrent/magnetico.nix>

[10128]services.magnetico.web.credentials

    The credentials to access the web interface, in case authentication is enabled, in the format
    username:hash. If unset no authentication will be required.

    Usernames must start with a lowercase ([a-z]) ASCII character, might contain non-consecutive
    underscores except at the end, and consists of small-case a-z characters and digits 0-9. The 
    htpasswd tool from the apacheHttpd package may be used to generate the hash: htpasswd -bnBC
    12 username password

    Warning: The hashes will be stored world-readable in the nix store. Consider using the
    credentialsFile option if you don't want this.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      myuser = "$2y$12$YE01LZ8jrbQbx6c0s2hdZO71dSjn2p/O9XsYJpz.5968yCysUgiaG";
    }

    Declared by:

    [10129]<nixpkgs/nixos/modules/services/torrent/magnetico.nix>

[10130]services.magnetico.web.credentialsFile

    The path to the file holding the credentials to access the web interface. If unset no
    authentication will be required.

    The file must constain user names and password hashes in the format username:hash , one for
    each line. Usernames must start with a lowecase ([a-z]) ASCII character, might contain
    non-consecutive underscores except at the end, and consists of small-case a-z characters and
    digits 0-9. The htpasswd tool from the apacheHttpd package may be used to generate the hash: 
    htpasswd -bnBC 12 username password

    Type: null or path

    Default: null

    Declared by:

    [10131]<nixpkgs/nixos/modules/services/torrent/magnetico.nix>

[10132]services.magnetico.web.extraOptions

    Extra command line arguments to pass to magneticow.

    Type: list of strings

    Default: [ ]

    Declared by:

    [10133]<nixpkgs/nixos/modules/services/torrent/magnetico.nix>

[10134]services.magnetico.web.port

    Port the web interface will listen to.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8080

    Declared by:

    [10135]<nixpkgs/nixos/modules/services/torrent/magnetico.nix>

[10136]services.mailcatcher.enable

    Whether to enable MailCatcher.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10137]<nixpkgs/nixos/modules/services/mail/mailcatcher.nix>

[10138]services.mailcatcher.http.ip

    The ip address of the http server.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [10139]<nixpkgs/nixos/modules/services/mail/mailcatcher.nix>

[10140]services.mailcatcher.http.path

    Prefix to all HTTP paths.

    Type: null or string

    Default: null

    Example: "/mailcatcher"

    Declared by:

    [10141]<nixpkgs/nixos/modules/services/mail/mailcatcher.nix>

[10142]services.mailcatcher.http.port

    The port address of the http server.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 1080

    Declared by:

    [10143]<nixpkgs/nixos/modules/services/mail/mailcatcher.nix>

[10144]services.mailcatcher.smtp.ip

    The ip address of the smtp server.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [10145]<nixpkgs/nixos/modules/services/mail/mailcatcher.nix>

[10146]services.mailcatcher.smtp.port

    The port address of the smtp server.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 1025

    Declared by:

    [10147]<nixpkgs/nixos/modules/services/mail/mailcatcher.nix>

[10148]services.mailhog.enable

    Whether to enable MailHog.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10149]<nixpkgs/nixos/modules/services/mail/mailhog.nix>

[10150]services.mailhog.apiPort

    Port on which the API endpoint will listen.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8025

    Declared by:

    [10151]<nixpkgs/nixos/modules/services/mail/mailhog.nix>

[10152]services.mailhog.extraArgs

    List of additional arguments to pass to the MailHog process.

    Type: list of strings

    Default: [ ]

    Declared by:

    [10153]<nixpkgs/nixos/modules/services/mail/mailhog.nix>

[10154]services.mailhog.smtpPort

    Port on which the SMTP endpoint will listen.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 1025

    Declared by:

    [10155]<nixpkgs/nixos/modules/services/mail/mailhog.nix>

[10156]services.mailhog.storage

    Store mails on disk or in memory.

    Type: one of "maildir", "memory"

    Default: "memory"

    Declared by:

    [10157]<nixpkgs/nixos/modules/services/mail/mailhog.nix>

[10158]services.mailhog.uiPort

    Port on which the HTTP UI will listen.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8025

    Declared by:

    [10159]<nixpkgs/nixos/modules/services/mail/mailhog.nix>

[10160]services.mailman.enable

    Enable Mailman on this host. Requires an active MTA on the host (e.g. Postfix).

    Type: boolean

    Default: false

    Declared by:

    [10161]<nixpkgs/nixos/modules/services/mail/mailman.nix>

[10162]services.mailman.enablePostfix

    Enable Postfix integration. Requires an active Postfix installation.

    If you want to use another MTA, set this option to false and configure settings in
    services.mailman.settings.mta.

    Refer to the Mailman manual for more info.

    Type: boolean

    Default: true

    Example: false

    Declared by:

    [10163]<nixpkgs/nixos/modules/services/mail/mailman.nix>

[10164]services.mailman.package

    Mailman package to use

    Type: package

    Default: "pkgs.mailman"

    Example:

    pkgs.mailman.override { archivers = []; }

    Declared by:

    [10165]<nixpkgs/nixos/modules/services/mail/mailman.nix>

[10166]services.mailman.extraPythonPackages

    Packages to add to the python environment used by mailman and mailman-web

    Type: list of packages

    Default: [ ]

    Declared by:

    [10167]<nixpkgs/nixos/modules/services/mail/mailman.nix>

[10168]services.mailman.hyperkitty.enable

    Whether to enable the Hyperkitty archiver for Mailman.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10169]<nixpkgs/nixos/modules/services/mail/mailman.nix>

[10170]services.mailman.hyperkitty.baseUrl

    Where can Mailman connect to Hyperkitty's internal API, preferably on localhost?

    Type: string

    Default: "http://localhost:18507/archives/"

    Declared by:

    [10171]<nixpkgs/nixos/modules/services/mail/mailman.nix>

[10172]services.mailman.serve.enable

    Whether to enable Automatic nginx and uwsgi setup for mailman-web.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10173]<nixpkgs/nixos/modules/services/mail/mailman.nix>

[10174]services.mailman.settings

    Settings for mailman.cfg

    Type: attribute set of attribute set of stringss

    Default: { }

    Declared by:

    [10175]<nixpkgs/nixos/modules/services/mail/mailman.nix>

[10176]services.mailman.siteOwner

    Certain messages that must be delivered to a human, but which can't be delivered to a list
    owner (e.g. a bounce from a list owner), will be sent to this address. It should point to a
    human.

    Type: string

    Example: "postmaster@example.org"

    Declared by:

    [10177]<nixpkgs/nixos/modules/services/mail/mailman.nix>

[10178]services.mailman.webHosts

    The list of hostnames and/or IP addresses from which the Mailman Web UI will accept requests.
    By default, "localhost" and "127.0.0.1" are enabled. All additional names under which your
    web server accepts requests for the UI must be listed here or incoming requests will be
    rejected.

    Type: list of strings

    Default: [ ]

    Declared by:

    [10179]<nixpkgs/nixos/modules/services/mail/mailman.nix>

[10180]services.mailman.webSettings

    Overrides for the default mailman-web Django settings.

    Type: attribute set

    Default: { }

    Declared by:

    [10181]<nixpkgs/nixos/modules/services/mail/mailman.nix>

[10182]services.mailman.webUser

    User to run mailman-web as

    Type: string

    Default: "mailman-web"

    Declared by:

    [10183]<nixpkgs/nixos/modules/services/mail/mailman.nix>

[10184]services.mailpile.enable

    Whether to enable Mailpile the mail client.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10185]<nixpkgs/nixos/modules/services/networking/mailpile.nix>

[10186]services.mailpile.hostname

    Listen to this hostname or ip.

    Type: string

    Default: "localhost"

    Declared by:

    [10187]<nixpkgs/nixos/modules/services/networking/mailpile.nix>

[10188]services.mailpile.port

    Listen on this port.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 33411

    Declared by:

    [10189]<nixpkgs/nixos/modules/services/networking/mailpile.nix>

[10190]services.malcontent.enable

    Whether to enable Malcontent, parental control support for applications.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10191]<nixpkgs/nixos/modules/services/desktops/malcontent.nix>

[10192]services.mame.enable

    Whether to setup TUN/TAP Ethernet interface for MAME emulator.

    Type: boolean

    Default: false

    Declared by:

    [10193]<nixpkgs/nixos/modules/services/misc/mame.nix>

[10194]services.mame.emuAddr

    IP address of the guest system. The same you set inside guest OS under MAME. Should be on the
    same subnet as services.mame.hostAddr.

    Type: string

    Example: "192.168.31.155"

    Declared by:

    [10195]<nixpkgs/nixos/modules/services/misc/mame.nix>

[10196]services.mame.hostAddr

    IP address of the host system. Usually an address of the main network adapter or the adapter
    through which you get an internet connection.

    Type: string

    Example: "192.168.31.156"

    Declared by:

    [10197]<nixpkgs/nixos/modules/services/misc/mame.nix>

[10198]services.mame.user

    User from which you run MAME binary.

    Type: string

    Declared by:

    [10199]<nixpkgs/nixos/modules/services/misc/mame.nix>

[10200]services.mastodon.enable

    Whether to enable Mastodon, a federated social network server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10201]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10202]services.mastodon.enableUnixSocket

    Instead of binding to an IP address like 127.0.0.1, you may bind to a Unix socket. This
    variable is process-specific, e.g. you need different values for every process, and it works
    for both web (Puma) processes and streaming API (Node.js) processes.

    Type: boolean

    Default: true

    Declared by:

    [10203]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10204]services.mastodon.package

    Mastodon package to use.

    Type: package

    Default: "pkgs.mastodon"

    Declared by:

    [10205]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10206]services.mastodon.automaticMigrations

    Do automatic database migrations.

    Type: boolean

    Default: true

    Declared by:

    [10207]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10208]services.mastodon.configureNginx

    Configure nginx as a reverse proxy for mastodon. Note that this makes some assumptions on
    your setup, and sets settings that will affect other virtualHosts running on your nginx
    instance, if any. Alternatively you can configure a reverse-proxy of your choice to serve
    these paths:

    / -> $(nix-instantiate --eval '<nixpkgs>' -A mastodon.outPath)/public

    / -> 127.0.0.1:{{ webPort }} (If there was no file in the directory above.)

    /system/ -> /var/lib/mastodon/public-system/

    /api/v1/streaming/ -> 127.0.0.1:{{ streamingPort }}

    Make sure that websockets are forwarded properly. You might want to set up caching of some
    requests. Take a look at mastodon's provided nginx configuration at https://github.com/
    tootsuite/mastodon/blob/master/dist/nginx.conf.

    Type: boolean

    Default: false

    Declared by:

    [10209]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10210]services.mastodon.database.createLocally

    Configure local PostgreSQL database server for Mastodon.

    Type: boolean

    Default: true

    Declared by:

    [10211]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10212]services.mastodon.database.host

    Database host address or unix socket.

    Type: string

    Default: "/run/postgresql"

    Example: "192.168.23.42"

    Declared by:

    [10213]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10214]services.mastodon.database.name

    Database name.

    Type: string

    Default: "mastodon"

    Declared by:

    [10215]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10216]services.mastodon.database.passwordFile

    A file containing the password corresponding to database.user.

    Type: null or path

    Default: "/var/lib/mastodon/secrets/db-password"

    Example: "/run/keys/mastodon-db-password"

    Declared by:

    [10217]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10218]services.mastodon.database.port

    Database host port.

    Type: signed integer

    Default: 5432

    Declared by:

    [10219]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10220]services.mastodon.database.user

    Database user.

    Type: string

    Default: "mastodon"

    Declared by:

    [10221]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10222]services.mastodon.elasticsearch.host

    Elasticsearch host. If it is not null, Elasticsearch full text search will be enabled.

    Type: null or string

    Default: null

    Declared by:

    [10223]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10224]services.mastodon.elasticsearch.port

    Elasticsearch port.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9200

    Declared by:

    [10225]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10226]services.mastodon.extraConfig

    Extra environment variables to pass to all mastodon services.

    Type: attribute set

    Default: { }

    Declared by:

    [10227]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10228]services.mastodon.group

    Group under which mastodon runs.

    Type: string

    Default: "mastodon"

    Declared by:

    [10229]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10230]services.mastodon.localDomain

    The domain serving your Mastodon instance.

    Type: string

    Example: "social.example.org"

    Declared by:

    [10231]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10232]services.mastodon.otpSecretFile

    Path to file containing the OTP secret. A new OTP secret can be generated by running:

    nix build -f '<nixpkgs>' mastodon; cd result; bin/rake secret

    If this file does not exist, it will be created with a new OTP secret.

    Type: string

    Default: "/var/lib/mastodon/secrets/otp-secret"

    Declared by:

    [10233]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10234]services.mastodon.redis.createLocally

    Configure local Redis server for Mastodon.

    Type: boolean

    Default: true

    Declared by:

    [10235]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10236]services.mastodon.redis.host

    Redis host.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [10237]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10238]services.mastodon.redis.port

    Redis port.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 6379

    Declared by:

    [10239]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10240]services.mastodon.secretKeyBaseFile

    Path to file containing the secret key base. A new secret key base can be generated by
    running:

    nix build -f '<nixpkgs>' mastodon; cd result; bin/rake secret

    If this file does not exist, it will be created with a new secret key base.

    Type: string

    Default: "/var/lib/mastodon/secrets/secret-key-base"

    Declared by:

    [10241]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10242]services.mastodon.sidekiqPort

    TCP port used by the mastodon-sidekiq service

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 55002

    Declared by:

    [10243]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10244]services.mastodon.smtp.authenticate

    Authenticate with the SMTP server using username and password.

    Type: boolean

    Default: true

    Declared by:

    [10245]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10246]services.mastodon.smtp.createLocally

    Configure local Postfix SMTP server for Mastodon.

    Type: boolean

    Default: true

    Declared by:

    [10247]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10248]services.mastodon.smtp.fromAddress

    "From" address used when sending Emails to users.

    Type: string

    Declared by:

    [10249]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10250]services.mastodon.smtp.host

    SMTP host used when sending emails to users.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [10251]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10252]services.mastodon.smtp.passwordFile

    Path to file containing the SMTP password.

    Type: string

    Default: "/var/lib/mastodon/secrets/smtp-password"

    Example: "/run/keys/mastodon-smtp-password"

    Declared by:

    [10253]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10254]services.mastodon.smtp.port

    SMTP port used when sending emails to users.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 25

    Declared by:

    [10255]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10256]services.mastodon.smtp.user

    SMTP login name.

    Type: string

    Declared by:

    [10257]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10258]services.mastodon.streamingPort

    TCP port used by the mastodon-streaming service.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 55000

    Declared by:

    [10259]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10260]services.mastodon.trustedProxy

    You need to set it to the IP from which your reverse proxy sends requests to Mastodon's web
    process, otherwise Mastodon will record the reverse proxy's own IP as the IP of all requests,
    which would be bad because IP addresses are used for important rate limits and security
    functions.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [10261]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10262]services.mastodon.user

    User under which mastodon runs. If it is set to "mastodon", that user will be created,
    otherwise it should be set to the name of a user created elsewhere. In both cases, mastodon
    and a package containing only the shell script mastodon-env will be added to the user's
    package set. To run a command from mastodon such as tootctl with the environment configured
    by this module use mastodon-env, as in:

    mastodon-env tootctl accounts create newuser --email newuser@example.com

    Type: string

    Default: "mastodon"

    Declared by:

    [10263]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10264]services.mastodon.vapidPrivateKeyFile

    Path to file containing the private key used for Web Push Voluntary Application Server
    Identification. A new keypair can be generated by running:

    nix build -f '<nixpkgs>' mastodon; cd result; bin/rake webpush:generate_keys

    If this file does not exist, it will be created with a new private key.

    Type: string

    Default: "/var/lib/mastodon/secrets/vapid-private-key"

    Declared by:

    [10265]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10266]services.mastodon.vapidPublicKeyFile

    Path to file containing the public key used for Web Push Voluntary Application Server
    Identification. A new keypair can be generated by running:

    nix build -f '<nixpkgs>' mastodon; cd result; bin/rake webpush:generate_keys

    If mastodon.vapidPrivateKeyFiledoes not exist, it and this file will be created with a new
    keypair.

    Type: string

    Default: "/var/lib/mastodon/secrets/vapid-public-key"

    Declared by:

    [10267]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10268]services.mastodon.webPort

    TCP port used by the mastodon-web service.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 55001

    Declared by:

    [10269]<nixpkgs/nixos/modules/services/web-apps/mastodon.nix>

[10270]services.matomo.enable

    Enable Matomo web analytics with php-fpm backend. Either the nginx option or the
    webServerUser option is mandatory.

    Type: boolean

    Default: false

    Declared by:

    [10271]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10272]services.matomo.package

    Matomo package for the service to use. This can be used to point to newer releases from
    nixos-unstable, as they don't get backported if they are not security-relevant.

    Type: package

    Default: "pkgs.matomo"

    Declared by:

    [10273]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10274]services.matomo.nginx

    With this option, you can customize an nginx virtualHost which already has sensible defaults
    for Matomo. Either this option or the webServerUser option is mandatory. Set this to {} to
    just enable the virtualHost if you don't need any customization. If enabled, then by default,
    the serverName is ${user}.${config.networking.hostName}.${config.networking.domain}, SSL is
    active, and certificates are acquired via ACME. If this is set to null (the default), no
    nginx virtualHost will be configured.

    Type: null or submodule

    Default: null

    Example: { enableACME = false; serverAliases = [ "matomo.\${config.networking.domain}"
    "stats.\${config.networking.domain}" ] ; }

    Declared by:

    [10275]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10276]services.matomo.nginx.enableACME

    Whether to ask Let's Encrypt to sign a certificate for this vhost. Alternately, you can use
    an existing certificate through useACMEHost.

    Type: boolean

    Default: true

    Declared by:

    [10277]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10278]services.matomo.nginx.acmeFallbackHost

    Host which to proxy requests to if acme challenge is not found. Useful if you want multiple
    hosts to be able to verify the same domain name.

    Type: null or string

    Default: null

    Declared by:

    [10279]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10280]services.matomo.nginx.acmeRoot

    Directory for the acme challenge which is PUBLIC, don't put certs or keys in here

    Type: string

    Default: "/var/lib/acme/acme-challenge"

    Declared by:

    [10281]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10282]services.matomo.nginx.addSSL

    Whether to enable HTTPS in addition to plain HTTP. This will set defaults for listen to
    listen on all interfaces on the respective default ports (80, 443).

    Type: boolean

    Default: false

    Declared by:

    [10283]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10284]services.matomo.nginx.basicAuth

    Basic Auth protection for a vhost.

    WARNING: This is implemented to store the password in plain text in the Nix store.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      user = "password";
    };

    Declared by:

    [10285]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10286]services.matomo.nginx.basicAuthFile

    Basic Auth password file for a vhost. Can be created via: htpasswd -c <filename> <username>.

    WARNING: The generate file contains the users' passwords in a non-cryptographically-securely
    hashed way.

    Type: null or path

    Default: null

    Declared by:

    [10287]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10288]services.matomo.nginx.default

    Makes this vhost the default.

    Type: boolean

    Default: false

    Declared by:

    [10289]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10290]services.matomo.nginx.extraConfig

    These lines go to the end of the vhost verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [10291]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10292]services.matomo.nginx.forceSSL

    Whether to add a separate nginx server block that permanently redirects (301) all plain HTTP
    traffic to HTTPS. This will set defaults for listen to listen on all interfaces on the
    respective default ports (80, 443), where the non-SSL listens are used for the redirect
    vhosts.

    Type: boolean

    Default: true

    Declared by:

    [10293]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10294]services.matomo.nginx.globalRedirect

    If set, all requests for this host are redirected permanently to the given hostname.

    Type: null or string

    Default: null

    Example: "newserver.example.org"

    Declared by:

    [10295]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10296]services.matomo.nginx.http2

    Whether to enable HTTP 2. Note that (as of writing) due to nginx's implementation, to disable
    HTTP 2 you have to disable it on all vhosts that use a given IP address / port. If there is
    one server block configured to enable http2,then it is enabled for all server blocks on this
    IP. See https://stackoverflow.com/a/39466948/263061.

    Type: boolean

    Default: true

    Declared by:

    [10297]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10298]services.matomo.nginx.http3

    Whether to enable HTTP 3. This requires using pkgs.nginxQuic package which can be achived by
    setting services.nginx.package = pkgs.nginxQuic;. Note that HTTP 3 support is experimental
    and *not* yet recommended for production. Read more at https://quic.nginx.org/

    Type: boolean

    Default: false

    Declared by:

    [10299]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10300]services.matomo.nginx.listen

    Listen addresses and ports for this virtual host. IPv6 addresses must be enclosed in square
    brackets. Note: this option overrides addSSL and onlySSL.

    Type: list of submodules

    Default: [ ]

    Example: [ { addr = "195.154.1.1"; port = 443; ssl = true; } { addr = "192.154.1.1"; port =
    80; } ]

    Declared by:

    [10301]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10302]services.matomo.nginx.listen.*.addr

    IP address.

    Type: string

    Declared by:

    [10303]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10304]services.matomo.nginx.listen.*.extraParameters

    Extra parameters of this listen directive.

    Type: list of strings

    Default: [ ]

    Example: [ "reuseport" "deferred" ]

    Declared by:

    [10305]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10306]services.matomo.nginx.listen.*.port

    Port number.

    Type: signed integer

    Default: 80

    Declared by:

    [10307]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10308]services.matomo.nginx.listen.*.ssl

    Enable SSL.

    Type: boolean

    Default: false

    Declared by:

    [10309]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10310]services.matomo.nginx.locations

    Declarative location config

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "/" = {
        proxyPass = "http://localhost:3000";
      };
    };

    Declared by:

    [10311]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10312]services.matomo.nginx.locations.<name>.alias

    Alias directory for requests.

    Type: null or path

    Default: null

    Example: "/your/alias/directory"

    Declared by:

    [10313]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10314]services.matomo.nginx.locations.<name>.basicAuth

    Basic Auth protection for a vhost.

    WARNING: This is implemented to store the password in plain text in the Nix store.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      user = "password";
    };

    Declared by:

    [10315]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10316]services.matomo.nginx.locations.<name>.basicAuthFile

    Basic Auth password file for a vhost. Can be created via: htpasswd -c <filename> <username>.

    WARNING: The generate file contains the users' passwords in a non-cryptographically-securely
    hashed way.

    Type: null or path

    Default: null

    Declared by:

    [10317]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10318]services.matomo.nginx.locations.<name>.extraConfig

    These lines go to the end of the location verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [10319]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10320]services.matomo.nginx.locations.<name>.fastcgiParams

    FastCGI parameters to override. Unlike in the Nginx configuration file, overriding only some
    default parameters won't unset the default values for other parameters.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [10321]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10322]services.matomo.nginx.locations.<name>.index

    Adds index directive.

    Type: null or string

    Default: null

    Example: "index.php index.html"

    Declared by:

    [10323]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10324]services.matomo.nginx.locations.<name>.priority

    Order of this location block in relation to the others in the vhost. The semantics are the
    same as with `lib.mkOrder`. Smaller values have a greater priority.

    Type: signed integer

    Default: 1000

    Declared by:

    [10325]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10326]services.matomo.nginx.locations.<name>.proxyPass

    Adds proxy_pass directive and sets recommended proxy headers if recommendedProxySettings is
    enabled.

    Type: null or string

    Default: null

    Example: "http://www.example.org/"

    Declared by:

    [10327]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10328]services.matomo.nginx.locations.<name>.proxyWebsockets

    Whether to support proxying websocket connections with HTTP/1.1.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10329]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10330]services.matomo.nginx.locations.<name>.return

    Adds a return directive, for e.g. redirections.

    Type: null or string

    Default: null

    Example: "301 http://example.com\$request_uri"

    Declared by:

    [10331]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10332]services.matomo.nginx.locations.<name>.root

    Root directory for requests.

    Type: null or path

    Default: null

    Example: "/your/root/directory"

    Declared by:

    [10333]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10334]services.matomo.nginx.locations.<name>.tryFiles

    Adds try_files directive.

    Type: null or string

    Default: null

    Example: "\$uri =404"

    Declared by:

    [10335]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10336]services.matomo.nginx.onlySSL

    Whether to enable HTTPS and reject plain HTTP connections. This will set defaults for listen
    to listen on all interfaces on port 443.

    Type: boolean

    Default: false

    Declared by:

    [10337]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10338]services.matomo.nginx.root

    The path of the web root directory.

    Type: null or path

    Default: null

    Example: "/data/webserver/docs"

    Declared by:

    [10339]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10340]services.matomo.nginx.serverAliases

    Additional names of virtual hosts served by this virtual host configuration.

    Type: list of strings

    Default: [ ]

    Example: [ "www.example.org" "example.org" ]

    Declared by:

    [10341]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10342]services.matomo.nginx.serverName

    Name of this virtual host. Defaults to attribute name in virtualHosts.

    Type: null or string

    Default: null

    Example: "example.org"

    Declared by:

    [10343]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10344]services.matomo.nginx.sslCertificate

    Path to server SSL certificate.

    Type: path

    Example: "/var/host.cert"

    Declared by:

    [10345]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10346]services.matomo.nginx.sslCertificateKey

    Path to server SSL certificate key.

    Type: path

    Example: "/var/host.key"

    Declared by:

    [10347]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10348]services.matomo.nginx.sslTrustedCertificate

    Path to root SSL certificate for stapling and client certificates.

    Type: null or path

    Default: null

    Example: "/var/root.cert"

    Declared by:

    [10349]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10350]services.matomo.nginx.useACMEHost

    A host of an existing Let's Encrypt certificate to use. This is useful if you have many
    subdomains and want to avoid hitting the [10351]rate limit. Alternately, you can generate a
    certificate through enableACME. Note that this option does not create any certificates, nor
    it does add subdomains to existing ones – you will need to create them manually using [10352]
    security.acme.certs.

    Type: null or string

    Default: null

    Declared by:

    [10353]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10354]services.matomo.periodicArchiveProcessing

    Enable periodic archive processing, which generates aggregated reports from the visits.

    This means that you can safely disable browser triggers for Matomo archiving, and safely
    enable to delete old visitor logs. Before deleting visitor logs, make sure though that you
    run systemctl start matomo-archive-processing.service at least once without errors if you
    have already collected data before.

    Type: boolean

    Default: true

    Declared by:

    [10355]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10356]services.matomo.webServerUser

    Name of the web server user that forwards requests to services.phpfpm.pools.<name>.socket the
    fastcgi socket for Matomo if the nginx option is not used. Either this option or the nginx
    option is mandatory. If you want to use another webserver than nginx, you need to set this to
    that server's user and pass fastcgi requests to `index.php`, `matomo.php` and `piwik.php`
    (legacy name) to this socket.

    Type: null or string

    Default: null

    Example: "lighttpd"

    Declared by:

    [10357]<nixpkgs/nixos/modules/services/web-apps/matomo.nix>

[10358]services.matrix-appservice-discord.enable

    Whether to enable a bridge between Matrix and Discord.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10359]<nixpkgs/nixos/modules/services/misc/matrix-appservice-discord.nix>

[10360]services.matrix-appservice-discord.environmentFile

    File containing environment variables to be passed to the matrix-appservice-discord service,
    in which secret tokens can be specified securely by defining values for
    APPSERVICE_DISCORD_AUTH_CLIENT_I_D and APPSERVICE_DISCORD_AUTH_BOT_TOKEN.

    Type: null or path

    Default: null

    Declared by:

    [10361]<nixpkgs/nixos/modules/services/misc/matrix-appservice-discord.nix>

[10362]services.matrix-appservice-discord.localpart

    The user_id localpart to assign to the AS.

    Type: null or string

    Default: null

    Declared by:

    [10363]<nixpkgs/nixos/modules/services/misc/matrix-appservice-discord.nix>

[10364]services.matrix-appservice-discord.port

    Port number on which the bridge should listen for internal communication with the Matrix
    homeserver.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9005

    Declared by:

    [10365]<nixpkgs/nixos/modules/services/misc/matrix-appservice-discord.nix>

[10366]services.matrix-appservice-discord.serviceDependencies

    List of Systemd services to require and wait for when starting the application service, such
    as the Matrix homeserver if it's running on the same host.

    Type: list of strings

    Default: [ ]

    Declared by:

    [10367]<nixpkgs/nixos/modules/services/misc/matrix-appservice-discord.nix>

[10368]services.matrix-appservice-discord.settings

    config.yaml configuration as a Nix attribute set.

    Configuration options should match those described in [10369] config.sample.yaml.

    config.bridge.domain and config.bridge.homeserverUrl should be set to match the public host
    name of the Matrix homeserver for webhooks and avatars to work.

    Secret tokens should be specified using environmentFile instead of this world-readable
    attribute set.

    Type: attribute set

    Default: { auth = { botToken = ""; clientID = ""; } ; database = { filename = "/var/lib/
    matrix-appservice-discord/discord.db"; } ; }

    Example:

    {
      bridge = {
        domain = "public-domain.tld";
        homeserverUrl = "http://public-domain.tld:8008";
      };
    }

    Declared by:

    [10370]<nixpkgs/nixos/modules/services/misc/matrix-appservice-discord.nix>

[10371]services.matrix-appservice-discord.url

    The URL where the application service is listening for HS requests.

    Type: string

    Default: "http://localhost:9005"

    Declared by:

    [10372]<nixpkgs/nixos/modules/services/misc/matrix-appservice-discord.nix>

[10373]services.matrix-appservice-irc.enable

    Whether to enable the Matrix/IRC bridge.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10374]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10375]services.matrix-appservice-irc.localpart

    The user_id localpart to assign to the appservice

    Type: string

    Default: "appservice-irc"

    Declared by:

    [10376]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10377]services.matrix-appservice-irc.needBindingCap

    Whether the daemon needs to bind to ports below 1024 (e.g. for the ident service)

    Type: boolean

    Default: false

    Declared by:

    [10378]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10379]services.matrix-appservice-irc.passwordEncryptionKeyLength

    Length of the key to encrypt IRC passwords with

    Type: unsigned integer, meaning >=0

    Default: 4096

    Example: 8192

    Declared by:

    [10380]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10381]services.matrix-appservice-irc.port

    The port to listen on

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8009

    Declared by:

    [10382]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10383]services.matrix-appservice-irc.registrationUrl

    The URL where the application service is listening for homeserver requests, from the Matrix
    homeserver perspective.

    Type: string

    Example: "http://localhost:8009"

    Declared by:

    [10384]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10385]services.matrix-appservice-irc.settings

    Configuration for the appservice, see [10386]https://github.com/matrix-org/
    matrix-appservice-irc/blob/0.26.1/config.sample.yaml for supported values

    Type: JSON value

    Default: { }

    Declared by:

    [10387]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10388]services.matrix-appservice-irc.settings.database

    Configuration for the database

    Type: JSON value

    Default: { }

    Declared by:

    [10389]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10390]services.matrix-appservice-irc.settings.database.connectionString

    The database connection string

    Type: string

    Default: "nedb://var/lib/matrix-appservice-irc/data"

    Example: "postgres://username:password@host:port/databasename"

    Declared by:

    [10391]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10392]services.matrix-appservice-irc.settings.database.engine

    Which database engine to use

    Type: string

    Default: "nedb"

    Example: "postgres"

    Declared by:

    [10393]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10394]services.matrix-appservice-irc.settings.homeserver

    Homeserver configuration

    Type: JSON value

    Default: { }

    Declared by:

    [10395]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10396]services.matrix-appservice-irc.settings.homeserver.domain

    The 'domain' part for user IDs on this home server. Usually (but not always) is the "domain
    name" part of the homeserver URL.

    Type: string

    Declared by:

    [10397]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10398]services.matrix-appservice-irc.settings.homeserver.url

    The URL to the home server for client-server API calls

    Type: string

    Declared by:

    [10399]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10400]services.matrix-appservice-irc.settings.ircService

    IRC bridge configuration

    Type: JSON value

    Default: { }

    Declared by:

    [10401]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10402]services.matrix-appservice-irc.settings.ircService.passwordEncryptionKeyPath

    Location of the key with which IRC passwords are encrypted for storage. Will be generated on
    first run if not present.

    Type: string

    Default: "/var/lib/matrix-appservice-irc/passkey.pem"

    Declared by:

    [10403]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10404]services.matrix-appservice-irc.settings.ircService.servers

    IRC servers to connect to

    Type: JSON value

    Declared by:

    [10405]<nixpkgs/nixos/modules/services/misc/matrix-appservice-irc.nix>

[10406]services.matrix-synapse.enable

    Whether to enable matrix.org synapse.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10407]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10408]services.matrix-synapse.enable_metrics

    Enable collection and rendering of performance metrics

    Type: boolean

    Default: false

    Declared by:

    [10409]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10410]services.matrix-synapse.enable_registration

    Enable registration for new users.

    Type: boolean

    Default: false

    Declared by:

    [10411]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10412]services.matrix-synapse.enable_registration_captcha

    Enables ReCaptcha checks when registering, preventing signup unless a captcha is answered.
    Requires a valid ReCaptcha public/private key.

    Type: boolean

    Default: false

    Declared by:

    [10413]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10414]services.matrix-synapse.package

    Overridable attribute of the matrix synapse server package to use.

    Type: package

    Default: "pkgs.matrix-synapse"

    Declared by:

    [10415]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10416]services.matrix-synapse.account_threepid_delegates.email

    Delegate email sending to https://example.org

    Type: null or string

    Default: null

    Declared by:

    [10417]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10418]services.matrix-synapse.account_threepid_delegates.msisdn

    Delegate SMS sending to this local process (https://localhost:8090)

    Type: null or string

    Default: null

    Declared by:

    [10419]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10420]services.matrix-synapse.allow_guest_access

    Allows users to register as guests without a password/email/etc, and participate in rooms
    hosted on this server which have been made accessible to anonymous users.

    Type: boolean

    Default: false

    Declared by:

    [10421]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10422]services.matrix-synapse.app_service_config_files

    A list of application service config file to use

    Type: list of paths

    Default: [ ]

    Declared by:

    [10423]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10424]services.matrix-synapse.bcrypt_rounds

    Set the number of bcrypt rounds used to generate password hash. Larger numbers increase the
    work factor needed to generate the hash.

    Type: string

    Default: "12"

    Declared by:

    [10425]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10426]services.matrix-synapse.bind_host

    DEPRECATED: Use listeners instead. Local interface to listen on. The empty string will cause
    synapse to listen on all interfaces.

    Type: null or string

    Default: null

    Declared by:

    [10427]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10428]services.matrix-synapse.bind_port

    DEPRECATED: Use listeners instead. The port to listen for HTTPS requests on. For when matrix
    traffic is sent directly to synapse.

    Type: null or signed integer

    Default: null

    Example: 8448

    Declared by:

    [10429]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10430]services.matrix-synapse.dataDir

    The directory where matrix-synapse stores its stateful data such as certificates, media and
    uploads.

    Type: string

    Default: "/var/lib/matrix-synapse"

    Declared by:

    [10431]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10432]services.matrix-synapse.database_args

    Arguments to pass to the engine.

    Type: attribute set

    Default: { database = "matrix-synapse"; user = "matrix-synapse"; }

    Declared by:

    [10433]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10434]services.matrix-synapse.database_name

    Database name.

    Type: string

    Default: "matrix-synapse"

    Declared by:

    [10435]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10436]services.matrix-synapse.database_type

    The database engine name. Can be sqlite or psycopg2.

    Type: one of "sqlite3", "psycopg2"

    Default: "psycopg2"

    Declared by:

    [10437]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10438]services.matrix-synapse.database_user

    Database user name.

    Type: string

    Default: "matrix-synapse"

    Declared by:

    [10439]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10440]services.matrix-synapse.dynamic_thumbnails

    Whether to generate new thumbnails on the fly to precisely match the resolution requested by
    the client. If true then whenever a new resolution is requested by the client the server will
    generate a new thumbnail. If false the server will pick a thumbnail from a precalculated
    list.

    Type: boolean

    Default: false

    Declared by:

    [10441]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10442]services.matrix-synapse.event_cache_size

    Number of events to cache in memory.

    Type: string

    Default: "10K"

    Declared by:

    [10443]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10444]services.matrix-synapse.expire_access_token

    Whether to enable access token expiration.

    Type: boolean

    Default: false

    Declared by:

    [10445]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10446]services.matrix-synapse.extraConfig

    Extra config options for matrix-synapse.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [10447]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10448]services.matrix-synapse.extraConfigFiles

    Extra config files to include.

    The configuration files will be included based on the command line argument --config-path.
    This allows to configure secrets without having to go through the Nix store, e.g. based on
    deployment keys if NixOPS is in use.

    Type: list of paths

    Default: [ ]

    Declared by:

    [10449]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10450]services.matrix-synapse.federation_rc_concurrent

    The number of federation requests to concurrently process from a single server

    Type: string

    Default: "3"

    Declared by:

    [10451]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10452]services.matrix-synapse.federation_rc_reject_limit

    The maximum number of concurrent federation requests allowed from a single server

    Type: string

    Default: "50"

    Declared by:

    [10453]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10454]services.matrix-synapse.federation_rc_sleep_delay

    The duration in milliseconds to delay processing events from remote servers by if they go
    over the sleep limit.

    Type: string

    Default: "500"

    Declared by:

    [10455]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10456]services.matrix-synapse.federation_rc_sleep_limit

    The number of federation requests from a single server in a window before the server will
    delay processing the request.

    Type: string

    Default: "10"

    Declared by:

    [10457]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10458]services.matrix-synapse.federation_rc_window_size

    The federation window size in milliseconds

    Type: string

    Default: "1000"

    Declared by:

    [10459]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10460]services.matrix-synapse.key_refresh_interval

    How long key response published by this server is valid for. Used to set the valid_until_ts
    in /key/v2 APIs. Determines how quickly servers will query to check which keys are still
    valid.

    Type: string

    Default: "1d"

    Declared by:

    [10461]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10462]services.matrix-synapse.listeners

    List of ports that Synapse should listen on, their purpose and their configuration.

    Type: list of submodules

    Default: [ { bind_address = ""; port = 8448; resources = [ { compress = true; names = [
    "client" "webclient" ] ; } { compress = false; names = [ "federation" ] ; } ] ; tls = true;
    type = "http"; x_forwarded = false; } ]

    Declared by:

    [10463]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10464]services.matrix-synapse.listeners.*.bind_address

    Local interface to listen on. The empty string will cause synapse to listen on all
    interfaces.

    Type: string

    Default: ""

    Example: "203.0.113.42"

    Declared by:

    [10465]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10466]services.matrix-synapse.listeners.*.port

    The port to listen for HTTP(S) requests on.

    Type: signed integer

    Example: 8448

    Declared by:

    [10467]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10468]services.matrix-synapse.listeners.*.resources

    List of HTTP resources to serve on this listener.

    Type: list of submodules

    Declared by:

    [10469]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10470]services.matrix-synapse.listeners.*.resources.*.compress

    Should synapse compress HTTP responses to clients that support it? This should be disabled if
    running synapse behind a load balancer that can do automatic compression.

    Type: boolean

    Declared by:

    [10471]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10472]services.matrix-synapse.listeners.*.resources.*.names

    List of resources to host on this listener.

    Type: list of strings

    Example: [ "client" "webclient" "federation" ]

    Declared by:

    [10473]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10474]services.matrix-synapse.listeners.*.tls

    Whether to listen for HTTPS connections rather than HTTP.

    Type: boolean

    Default: true

    Declared by:

    [10475]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10476]services.matrix-synapse.listeners.*.type

    Type of listener.

    Type: string

    Default: "http"

    Declared by:

    [10477]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10478]services.matrix-synapse.listeners.*.x_forwarded

    Use the X-Forwarded-For (XFF) header as the client IP and not the actual client IP.

    Type: boolean

    Default: false

    Declared by:

    [10479]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10480]services.matrix-synapse.logConfig

    A yaml python logging config file

    Type: strings concatenated with "\n"

    Default:

    ''
    version: 1

    # In systemd's journal, loglevel is implicitly stored, so let's omit it
    # from the message text.
    formatters:
        journal_fmt:
            format: '%(name)s: [%(request)s] %(message)s'

    filters:
        context:
            (): synapse.util.logcontext.LoggingContextFilter
            request: ""

    handlers:
        journal:
            class: systemd.journal.JournalHandler
            formatter: journal_fmt
            filters: [context]
            SYSLOG_IDENTIFIER: synapse

    root:
        level: INFO
        handlers: [journal]

    disable_existing_loggers: False
    ''

    Declared by:

    [10481]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10482]services.matrix-synapse.macaroon_secret_key

    Secret key for authentication tokens

    Type: null or string

    Default: null

    Declared by:

    [10483]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10484]services.matrix-synapse.max_image_pixels

    Maximum number of pixels that will be thumbnailed

    Type: string

    Default: "32M"

    Declared by:

    [10485]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10486]services.matrix-synapse.max_upload_size

    The largest allowed upload size in bytes

    Type: string

    Default: "10M"

    Declared by:

    [10487]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10488]services.matrix-synapse.no_tls

    Don't bind to the https port

    Type: boolean

    Default: false

    Declared by:

    [10489]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10490]services.matrix-synapse.plugins

    List of additional Matrix plugins to make available.

    Type: list of packages

    Default: [ ]

    Example:

    with config.services.matrix-synapse.package.plugins; [
      matrix-synapse-ldap3
      matrix-synapse-pam
    ];

    Declared by:

    [10491]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10492]services.matrix-synapse.public_baseurl

    The public-facing base URL for the client API (not including _matrix/...)

    Type: null or string

    Default: null

    Example: "https://example.com:8448/"

    Declared by:

    [10493]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10494]services.matrix-synapse.rc_message_burst_count

    Number of message a client can send before being throttled

    Type: string

    Default: "10.0"

    Declared by:

    [10495]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10496]services.matrix-synapse.rc_messages_per_second

    Number of messages a client can send per second

    Type: string

    Default: "0.2"

    Declared by:

    [10497]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10498]services.matrix-synapse.recaptcha_private_key

    This Home Server's ReCAPTCHA private key.

    Type: string

    Default: ""

    Declared by:

    [10499]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10500]services.matrix-synapse.recaptcha_public_key

    This Home Server's ReCAPTCHA public key.

    Type: string

    Default: ""

    Declared by:

    [10501]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10502]services.matrix-synapse.redaction_retention_period

    How long to keep redacted events in unredacted form in the database.

    Type: signed integer

    Default: 7

    Declared by:

    [10503]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10504]services.matrix-synapse.registration_shared_secret

    If set, allows registration by anyone who also has the shared secret, even if registration is
    otherwise disabled.

    Type: null or string

    Default: null

    Declared by:

    [10505]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10506]services.matrix-synapse.report_stats

    Type: boolean

    Default: false

    Declared by:

    [10507]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10508]services.matrix-synapse.room_prejoin_state.additional_event_types

    Additional events to share with users who received an invite.

    Type: list of strings

    Default: [ ]

    Declared by:

    [10509]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10510]services.matrix-synapse.room_prejoin_state.disable_default_event_types

    Whether to disable the default state-event types for users invited to a room. These are:

      □ m.room.join_rules

      □ m.room.canonical_alias

      □ m.room.avatar

      □ m.room.encryption

      □ m.room.name

      □ m.room.create

    Type: boolean

    Default: false

    Declared by:

    [10511]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10512]services.matrix-synapse.server_name

    The domain name of the server, with optional explicit port. This is used by remote servers to
    connect to this server, e.g. matrix.org, localhost:8080, etc. This is also the last part of
    your UserID.

    Type: string

    Default: "nixos"

    Example: "example.com"

    Declared by:

    [10513]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10514]services.matrix-synapse.servers

    The trusted servers to download signing keys from.

    Type: attribute set of attribute set of stringss

    Default: { matrix.org = { ed25519:auto = "Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw"; } ; }

    Declared by:

    [10515]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10516]services.matrix-synapse.tls_certificate_path

    PEM encoded X509 certificate for TLS. You can replace the self-signed certificate that
    synapse autogenerates on launch with your own SSL certificate + key pair if you like. Any
    required intermediary certificates can be appended after the primary certificate in
    hierarchical order.

    Type: null or string

    Default: null

    Example: "/var/lib/matrix-synapse/homeserver.tls.crt"

    Declared by:

    [10517]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10518]services.matrix-synapse.tls_dh_params_path

    PEM dh parameters for ephemeral keys

    Type: null or string

    Default: null

    Example: "/var/lib/matrix-synapse/homeserver.tls.dh"

    Declared by:

    [10519]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10520]services.matrix-synapse.tls_private_key_path

    PEM encoded private key for TLS. Specify null if synapse is not speaking TLS directly.

    Type: null or string

    Default: null

    Example: "/var/lib/matrix-synapse/homeserver.tls.key"

    Declared by:

    [10521]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10522]services.matrix-synapse.turn_shared_secret

    The shared secret used to compute passwords for the TURN server

    Type: string

    Default: ""

    Declared by:

    [10523]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10524]services.matrix-synapse.turn_uris

    The public URIs of the TURN server to give to clients

    Type: list of strings

    Default: [ ]

    Declared by:

    [10525]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10526]services.matrix-synapse.turn_user_lifetime

    How long generated TURN credentials last

    Type: string

    Default: "1h"

    Declared by:

    [10527]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10528]services.matrix-synapse.unsecure_port

    DEPRECATED: Use listeners instead. The port to listen for HTTP requests on. For when matrix
    traffic passes through loadbalancer that unwraps TLS.

    Type: null or signed integer

    Default: null

    Example: 8008

    Declared by:

    [10529]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10530]services.matrix-synapse.url_preview_enabled

    Is the preview URL API enabled? If enabled, you *must* specify an explicit
    url_preview_ip_range_blacklist of IPs that the spider is denied from accessing.

    Type: boolean

    Default: false

    Declared by:

    [10531]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10532]services.matrix-synapse.url_preview_ip_range_blacklist

    List of IP address CIDR ranges that the URL preview spider is denied from accessing.

    Type: list of strings

    Default: [ "127.0.0.0/8" "10.0.0.0/8" "172.16.0.0/12" "192.168.0.0/16" "100.64.0.0/10"
    "169.254.0.0/16" "::1/128" "fe80::/64" "fc00::/7" ]

    Declared by:

    [10533]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10534]services.matrix-synapse.url_preview_ip_range_whitelist

    List of IP address CIDR ranges that the URL preview spider is allowed to access even if they
    are specified in url_preview_ip_range_blacklist.

    Type: list of strings

    Default: [ ]

    Declared by:

    [10535]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10536]services.matrix-synapse.url_preview_url_blacklist

    Optional list of URL matches that the URL preview spider is denied from accessing.

    Type: list of strings

    Default: [ ]

    Declared by:

    [10537]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10538]services.matrix-synapse.user_creation_max_duration

    Sets the expiry for the short term user creation in milliseconds. The default value is two
    weeks.

    Type: string

    Default: "1209600000"

    Declared by:

    [10539]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10540]services.matrix-synapse.verbose

    Logging verbosity level.

    Type: string

    Default: "0"

    Declared by:

    [10541]<nixpkgs/nixos/modules/services/misc/matrix-synapse.nix>

[10542]services.matterbridge.enable

    Whether to enable Matterbridge chat platform bridge.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10543]<nixpkgs/nixos/modules/services/networking/matterbridge.nix>

[10544]services.matterbridge.configFile

    WARNING: THIS IS INSECURE, as your password will end up in /nix/store, thus publicly
    readable. Use services.matterbridge.configPath instead.

    The matterbridge configuration file in the TOML file format.

    Type: string

    Example:

    ''
    # WARNING: as this file contains credentials, do not use this option!
    # It is kept only for backwards compatibility, and would cause your
    # credentials to be in the nix-store, thus with the world-readable
    # permission bits.
    # Use services.matterbridge.configPath instead.

    [irc]
        [irc.freenode]
        Server="irc.freenode.net:6667"
        Nick="matterbot"

    [mattermost]
        [mattermost.work]
         # Do not prefix it with http:// or https://
         Server="yourmattermostserver.domain"
         Team="yourteam"
         Login="yourlogin"
         Password="yourpass"
         PrefixMessagesWithNick=true

    [[gateway]]
    name="gateway1"
    enable=true
        [[gateway.inout]]
        account="irc.freenode"
        channel="#testing"

        [[gateway.inout]]
        account="mattermost.work"
        channel="off-topic"
    ''

    Declared by:

    [10545]<nixpkgs/nixos/modules/services/networking/matterbridge.nix>

[10546]services.matterbridge.configPath

    The path to the matterbridge configuration file.

    Type: null or string

    Default: null

    Example: "/etc/nixos/matterbridge.toml"

    Declared by:

    [10547]<nixpkgs/nixos/modules/services/networking/matterbridge.nix>

[10548]services.matterbridge.group

    Group which runs the matterbridge service.

    Type: string

    Default: "matterbridge"

    Declared by:

    [10549]<nixpkgs/nixos/modules/services/networking/matterbridge.nix>

[10550]services.matterbridge.user

    User which runs the matterbridge service.

    Type: string

    Default: "matterbridge"

    Declared by:

    [10551]<nixpkgs/nixos/modules/services/networking/matterbridge.nix>

[10552]services.mattermost.enable

    Whether to enable Mattermost chat server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10553]<nixpkgs/nixos/modules/services/web-apps/mattermost.nix>

[10554]services.mattermost.extraConfig

    Addtional configuration options as Nix attribute set in config.json schema.

    Type: attribute set

    Default: { }

    Declared by:

    [10555]<nixpkgs/nixos/modules/services/web-apps/mattermost.nix>

[10556]services.mattermost.group

    Group which runs the Mattermost service.

    Type: string

    Default: "mattermost"

    Declared by:

    [10557]<nixpkgs/nixos/modules/services/web-apps/mattermost.nix>

[10558]services.mattermost.listenAddress

    Address and port this Mattermost instance listens to.

    Type: string

    Default: ":8065"

    Example: "[::1]:8065"

    Declared by:

    [10559]<nixpkgs/nixos/modules/services/web-apps/mattermost.nix>

[10560]services.mattermost.localDatabaseCreate

    Create a local PostgreSQL database for Mattermost automatically.

    Type: boolean

    Default: true

    Declared by:

    [10561]<nixpkgs/nixos/modules/services/web-apps/mattermost.nix>

[10562]services.mattermost.localDatabaseName

    Local Mattermost database name.

    Type: string

    Default: "mattermost"

    Declared by:

    [10563]<nixpkgs/nixos/modules/services/web-apps/mattermost.nix>

[10564]services.mattermost.localDatabasePassword

    Password for local Mattermost database user.

    Type: string

    Default: "mmpgsecret"

    Declared by:

    [10565]<nixpkgs/nixos/modules/services/web-apps/mattermost.nix>

[10566]services.mattermost.localDatabaseUser

    Local Mattermost database username.

    Type: string

    Default: "mattermost"

    Declared by:

    [10567]<nixpkgs/nixos/modules/services/web-apps/mattermost.nix>

[10568]services.mattermost.matterircd.enable

    Whether to enable Mattermost IRC bridge.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10569]<nixpkgs/nixos/modules/services/web-apps/mattermost.nix>

[10570]services.mattermost.matterircd.parameters

    Set commandline parameters to pass to matterircd. See https://github.com/42wim/matterircd#
    usage for more information.

    Type: list of strings

    Default: [ ]

    Example: [ "-mmserver chat.example.com" "-bind [::]:6667" ]

    Declared by:

    [10571]<nixpkgs/nixos/modules/services/web-apps/mattermost.nix>

[10572]services.mattermost.mutableConfig

    Whether the Mattermost config.json is writeable by Mattermost.

    Most of the settings can be edited in the system console of Mattermost if this option is
    enabled. A template config using the options specified in services.mattermost will be
    generated but won't be overwritten on changes or rebuilds.

    If this option is disabled, changes in the system console won't be possible (default). If an
    config.json is present, it will be overwritten!

    Type: boolean

    Default: false

    Declared by:

    [10573]<nixpkgs/nixos/modules/services/web-apps/mattermost.nix>

[10574]services.mattermost.siteName

    Name of this Mattermost site.

    Type: string

    Default: "Mattermost"

    Declared by:

    [10575]<nixpkgs/nixos/modules/services/web-apps/mattermost.nix>

[10576]services.mattermost.siteUrl

    URL this Mattermost instance is reachable under, without trailing slash.

    Type: string

    Example: "https://chat.example.com"

    Declared by:

    [10577]<nixpkgs/nixos/modules/services/web-apps/mattermost.nix>

[10578]services.mattermost.statePath

    Mattermost working directory

    Type: string

    Default: "/var/lib/mattermost"

    Declared by:

    [10579]<nixpkgs/nixos/modules/services/web-apps/mattermost.nix>

[10580]services.mattermost.user

    User which runs the Mattermost service.

    Type: string

    Default: "mattermost"

    Declared by:

    [10581]<nixpkgs/nixos/modules/services/web-apps/mattermost.nix>

[10582]services.mautrix-telegram.enable

    Whether to enable Mautrix-Telegram, a Matrix-Telegram hybrid puppeting/relaybot bridge.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10583]<nixpkgs/nixos/modules/services/misc/mautrix-telegram.nix>

[10584]services.mautrix-telegram.environmentFile

    File containing environment variables to be passed to the mautrix-telegram service, in which
    secret tokens can be specified securely by defining values for
    MAUTRIX_TELEGRAM_APPSERVICE_AS_TOKEN, MAUTRIX_TELEGRAM_APPSERVICE_HS_TOKEN,
    MAUTRIX_TELEGRAM_TELEGRAM_API_ID, MAUTRIX_TELEGRAM_TELEGRAM_API_HASH and optionally
    MAUTRIX_TELEGRAM_TELEGRAM_BOT_TOKEN.

    Type: null or path

    Default: null

    Declared by:

    [10585]<nixpkgs/nixos/modules/services/misc/mautrix-telegram.nix>

[10586]services.mautrix-telegram.serviceDependencies

    List of Systemd services to require and wait for when starting the application service.

    Type: list of strings

    Default: [ ]

    Declared by:

    [10587]<nixpkgs/nixos/modules/services/misc/mautrix-telegram.nix>

[10588]services.mautrix-telegram.settings

    config.yaml configuration as a Nix attribute set. Configuration options should match those
    described in [10589] example-config.yaml.

    Secret tokens should be specified using environmentFile instead of this world-readable
    attribute set.

    Type: JSON value

    Default: { appservice = { address = "http://localhost:8080"; database = "sqlite:////var/lib/
    mautrix-telegram/mautrix-telegram.db"; database_opts = { } ; hostname = "0.0.0.0"; port =
    8080; } ; bridge = { double_puppet_server_map = { } ; login_shared_secret_map = { } ;
    permissions = { * = "relaybot"; } ; relaybot = { whitelist = [ ] ; } ; } ; logging = {
    formatters = { precise = { format = "[%(levelname)s@%(name)s] %(message)s"; } ; } ; handlers
    = { console = { class = "logging.StreamHandler"; formatter = "precise"; } ; } ; loggers = {
    aiohttp = { level = "WARNING"; } ; mau = { level = "INFO"; } ; telethon = { level = "INFO"; }
    ; } ; root = { handlers = [ "console" ] ; level = "INFO"; } ; version = 1; } ; }

    Example:

    {
      homeserver = {
        address = "http://localhost:8008";
        domain = "public-domain.tld";
      };

      appservice.public = {
        prefix = "/public";
        external = "https://public-appservice-address/public";
      };

      bridge.permissions = {
        "example.com" = "full";
        "@admin:example.com" = "admin";
      };
    }

    Declared by:

    [10590]<nixpkgs/nixos/modules/services/misc/mautrix-telegram.nix>

[10591]services.mbpfan.enable

    Whether to enable mbpfan, fan controller daemon for Apple Macs and MacBooks.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10592]<nixpkgs/nixos/modules/services/misc/mbpfan.nix>

[10593]services.mbpfan.package

    The package used for the mbpfan daemon.

    Type: package

    Default: "pkgs.mbpfan"

    Declared by:

    [10594]<nixpkgs/nixos/modules/services/misc/mbpfan.nix>

[10595]services.mbpfan.highTemp

    The high temperature.

    Type: signed integer

    Default: 66

    Declared by:

    [10596]<nixpkgs/nixos/modules/services/misc/mbpfan.nix>

[10597]services.mbpfan.lowTemp

    The low temperature.

    Type: signed integer

    Default: 63

    Declared by:

    [10598]<nixpkgs/nixos/modules/services/misc/mbpfan.nix>

[10599]services.mbpfan.maxFanSpeed

    The maximum fan speed.

    Type: signed integer

    Default: 6200

    Declared by:

    [10600]<nixpkgs/nixos/modules/services/misc/mbpfan.nix>

[10601]services.mbpfan.maxTemp

    The maximum temperature.

    Type: signed integer

    Default: 86

    Declared by:

    [10602]<nixpkgs/nixos/modules/services/misc/mbpfan.nix>

[10603]services.mbpfan.minFanSpeed

    The minimum fan speed.

    Type: signed integer

    Default: 2000

    Declared by:

    [10604]<nixpkgs/nixos/modules/services/misc/mbpfan.nix>

[10605]services.mbpfan.pollingInterval

    The polling interval.

    Type: signed integer

    Default: 7

    Declared by:

    [10606]<nixpkgs/nixos/modules/services/misc/mbpfan.nix>

[10607]services.mbpfan.verbose

    If true, sets the log level to verbose.

    Type: boolean

    Default: false

    Declared by:

    [10608]<nixpkgs/nixos/modules/services/misc/mbpfan.nix>

[10609]services.mediatomb.enable

    Whether to enable the Gerbera/Mediatomb DLNA server.

    Type: boolean

    Default: false

    Declared by:

    [10610]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10611]services.mediatomb.package

    Underlying package to be used with the module (default: pkgs.gerbera).

    Type: package

    Default: (build of gerbera-1.8.1)

    Example:

    pkgs.mediatomb

    Declared by:

    [10612]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10613]services.mediatomb.customCfg

    Allow gerbera to create and use its own config file inside the dataDir as configured by
    services.mediatomb.dataDir. Deactivated by default, the service then runs with the
    configuration generated from this module. Otherwise, when enabled, no service configuration
    is generated. Gerbera/Mediatomb then starts using config.xml within the configured dataDir.
    It's up to the user to make a correct configuration file.

    Type: boolean

    Default: false

    Declared by:

    [10614]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10615]services.mediatomb.dataDir

    The directory where Gerbera/Mediatomb stores its state, data, etc.

    Type: path

    Default: "/var/lib/gerbera"

    Declared by:

    [10616]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10617]services.mediatomb.dsmSupport

    Whether to enable D-Link DSM 320 specific tweaks. WARNING: incompatible with ps3 support.

    Type: boolean

    Default: false

    Declared by:

    [10618]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10619]services.mediatomb.group

    Group account under which gerbera runs.

    Type: string

    Default: "mediatomb"

    Declared by:

    [10620]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10621]services.mediatomb.interface

    A specific interface to bind to.

    Type: string

    Default: ""

    Declared by:

    [10622]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10623]services.mediatomb.mediaDirectories

    Declare media directories to index.

    Type: list of submodules

    Default: { }

    Example: [ { hidden-files = false; path = "/data/pictures"; recursive = false; } {
    hidden-files = false; path = "/data/audio"; recursive = true; } ]

    Declared by:

    [10624]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10625]services.mediatomb.mediaDirectories.*.hidden-files

    Whether to index the hidden files or not.

    Type: boolean

    Default: true

    Declared by:

    [10626]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10627]services.mediatomb.mediaDirectories.*.path

    Absolute directory path to the media directory to index.

    Type: string

    Declared by:

    [10628]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10629]services.mediatomb.mediaDirectories.*.recursive

    Whether the indexation must take place recursively or not.

    Type: boolean

    Default: false

    Declared by:

    [10630]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10631]services.mediatomb.openFirewall

    If false (the default), this is up to the user to declare the firewall rules. If true, this
    opens port 1900 (tcp and udp) and the port specified by sercvices.mediatomb.port.

    If the option services.mediatomb.interface is set, the firewall rules opened are dedicated to
    that interface. Otherwise, those rules are opened globally.

    Type: boolean

    Default: false

    Declared by:

    [10632]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10633]services.mediatomb.pcDirectoryHide

    Whether to list the top-level directory or not (from upnp client standpoint).

    Type: boolean

    Default: true

    Declared by:

    [10634]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10635]services.mediatomb.port

    The network port to listen on.

    Type: signed integer

    Default: 49152

    Declared by:

    [10636]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10637]services.mediatomb.ps3Support

    Whether to enable ps3 specific tweaks. WARNING: incompatible with DSM 320 support.

    Type: boolean

    Default: false

    Declared by:

    [10638]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10639]services.mediatomb.serverName

    How to identify the server on the network.

    Type: string

    Default: "Gerbera (Mediatomb)"

    Declared by:

    [10640]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10641]services.mediatomb.tg100Support

    Whether to enable Telegent TG100 specific tweaks.

    Type: boolean

    Default: false

    Declared by:

    [10642]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10643]services.mediatomb.transcoding

    Whether to enable transcoding.

    Type: boolean

    Default: false

    Declared by:

    [10644]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10645]services.mediatomb.user

    User account under which gerbera runs.

    Type: string

    Default: "mediatomb"

    Declared by:

    [10646]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10647]services.mediatomb.uuid

    A unique (on your network) to identify the server by.

    Type: string

    Default: "fdfc8a4e-a3ad-4c1d-b43d-a2eedb03a687"

    Declared by:

    [10648]<nixpkgs/nixos/modules/services/misc/mediatomb.nix>

[10649]services.mediawiki.enable

    Whether to enable MediaWiki.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10650]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10651]services.mediawiki.package

    Which MediaWiki package to use.

    Type: package

    Default: (build of mediawiki-1.35.2)

    Declared by:

    [10652]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10653]services.mediawiki.database.createLocally

    Create the database and database user locally. This currently only applies if database type
    "mysql" is selected.

    Type: boolean

    Default: "true"

    Declared by:

    [10654]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10655]services.mediawiki.database.host

    Database host address.

    Type: string

    Default: "localhost"

    Declared by:

    [10656]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10657]services.mediawiki.database.name

    Database name.

    Type: string

    Default: "mediawiki"

    Declared by:

    [10658]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10659]services.mediawiki.database.passwordFile

    A file containing the password corresponding to database.user.

    Type: null or path

    Default: null

    Example: "/run/keys/mediawiki-dbpassword"

    Declared by:

    [10660]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10661]services.mediawiki.database.port

    Database host port.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 3306

    Declared by:

    [10662]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10663]services.mediawiki.database.socket

    Path to the unix socket file to use for authentication.

    Type: null or path

    Default: "/run/mysqld/mysqld.sock"

    Declared by:

    [10664]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10665]services.mediawiki.database.tablePrefix

    If you only have access to a single database and wish to install more than one version of
    MediaWiki, or have other applications that also use the database, you can give the table
    names a unique prefix to stop any naming conflicts or confusion. See [10666]https://
    www.mediawiki.org/wiki/Manual:$wgDBprefix.

    Type: null or string

    Default: null

    Declared by:

    [10667]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10668]services.mediawiki.database.type

    Database engine to use. MySQL/MariaDB is the database of choice by MediaWiki developers.

    Type: one of "mysql", "postgres", "sqlite", "mssql", "oracle"

    Default: "mysql"

    Declared by:

    [10669]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10670]services.mediawiki.database.user

    Database user.

    Type: string

    Default: "mediawiki"

    Declared by:

    [10671]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10672]services.mediawiki.extensions

    Attribute set of paths whose content is copied to the extensions subdirectory of the
    MediaWiki installation and enabled in configuration.

    Use null instead of path to enable extensions that are part of MediaWiki.

    Type: attribute set of null or paths

    Default: { }

    Example:

    {
      Matomo = pkgs.fetchzip {
        url = "https://github.com/DaSchTour/matomo-mediawiki-extension/archive/v4.0.1.tar.gz";
        sha256 = "0g5rd3zp0avwlmqagc59cg9bbkn3r7wx7p6yr80s644mj6dlvs1b";
      };
      ParserFunctions = null;
    }

    Declared by:

    [10673]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10674]services.mediawiki.extraConfig

    Any additional text to be appended to MediaWiki's LocalSettings.php configuration file. For
    configuration settings, see [10675]https://www.mediawiki.org/wiki/
    Manual:Configuration_settings.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    $wgEnableEmail = false;
    ''

    Declared by:

    [10676]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10677]services.mediawiki.name

    Name of the wiki.

    Type: string

    Default: "MediaWiki"

    Example: "Foobar Wiki"

    Declared by:

    [10678]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10679]services.mediawiki.passwordFile

    A file containing the initial password for the admin user.

    Type: path

    Example: "/run/keys/mediawiki-password"

    Declared by:

    [10680]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10681]services.mediawiki.poolConfig

    Options for the MediaWiki PHP pool. See the documentation on php-fpm.conf for details on
    configuration directives.

    Type: attribute set of string or signed integer or booleans

    Default: { pm = "dynamic"; pm.max_children = 32; pm.max_requests = 500; pm.max_spare_servers
    = 4; pm.min_spare_servers = 2; pm.start_servers = 2; }

    Declared by:

    [10682]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10683]services.mediawiki.skins

    Attribute set of paths whose content is copied to the skins subdirectory of the MediaWiki
    installation in addition to the default skins.

    Type: attribute set of paths

    Default: { }

    Declared by:

    [10684]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10685]services.mediawiki.uploadsDir

    This directory is used for uploads of pictures. The directory passed here is automatically
    created and permissions adjusted as required.

    Type: null or path

    Default: "/var/lib/mediawiki/uploads"

    Declared by:

    [10686]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10687]services.mediawiki.virtualHost

    Apache configuration can be done by adapting services.httpd.virtualHosts. See [10688]
    services.httpd.virtualHosts for further information.

    Type: submodule

    Example:

    {
      hostName = "mediawiki.example.org";
      adminAddr = "webmaster@example.org";
      forceSSL = true;
      enableACME = true;
    }

    Declared by:

    [10689]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10690]services.mediawiki.virtualHost.enableACME

    Whether to ask Let's Encrypt to sign a certificate for this vhost. Alternately, you can use
    an existing certificate through useACMEHost.

    Type: boolean

    Default: false

    Declared by:

    [10691]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10692]services.mediawiki.virtualHost.enableUserDir

    Whether to enable serving ~/public_html as /~username.

    Type: boolean

    Default: false

    Declared by:

    [10693]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10694]services.mediawiki.virtualHost.acmeRoot

    Directory for the acme challenge which is PUBLIC, don't put certs or keys in here

    Type: string

    Default: "/var/lib/acme/acme-challenge"

    Declared by:

    [10695]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10696]services.mediawiki.virtualHost.addSSL

    Whether to enable HTTPS in addition to plain HTTP. This will set defaults for listen to
    listen on all interfaces on the respective default ports (80, 443).

    Type: boolean

    Default: false

    Declared by:

    [10697]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10698]services.mediawiki.virtualHost.adminAddr

    E-mail address of the server administrator.

    Type: null or string

    Default: null

    Example: "admin@example.org"

    Declared by:

    [10699]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10700]services.mediawiki.virtualHost.documentRoot

    The path of Apache's document root directory. If left undefined, an empty directory in the
    Nix store will be used as root.

    Type: null or path

    Default: null

    Example: "/data/webserver/docs"

    Declared by:

    [10701]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10702]services.mediawiki.virtualHost.extraConfig

    These lines go to httpd.conf verbatim. They will go after directories and directory aliases
    defined by default.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    <Directory /home>
      Options FollowSymlinks
      AllowOverride All
    </Directory>
    ''

    Declared by:

    [10703]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10704]services.mediawiki.virtualHost.forceSSL

    Whether to add a separate nginx server block that permanently redirects (301) all plain HTTP
    traffic to HTTPS. This will set defaults for listen to listen on all interfaces on the
    respective default ports (80, 443), where the non-SSL listens are used for the redirect
    vhosts.

    Type: boolean

    Default: false

    Declared by:

    [10705]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10706]services.mediawiki.virtualHost.globalRedirect

    If set, all requests for this host are redirected permanently to the given URL.

    Type: null or string

    Default: null

    Example: "http://newserver.example.org/"

    Declared by:

    [10707]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10708]services.mediawiki.virtualHost.hostName

    Canonical hostname for the server.

    Type: string

    Default: "‹name›"

    Declared by:

    [10709]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10710]services.mediawiki.virtualHost.http2

    Whether to enable HTTP 2. HTTP/2 is supported in all multi-processing modules that come with
    httpd. However, if you use the prefork mpm, there will be severe restrictions. Refer to 
    [10711]https://httpd.apache.org/docs/2.4/howto/http2.html#mpm-config for details.

    Type: boolean

    Default: true

    Declared by:

    [10712]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10713]services.mediawiki.virtualHost.listen

    Listen addresses and ports for this virtual host.

    Note: This option overrides addSSL, forceSSL and onlySSL.

    Type: list of submodules

    Default: [ ]

    Example: [ { ip = "195.154.1.1"; port = 443; ssl = true; } { ip = "192.154.1.1"; port = 80; }
    { ip = "*"; port = 8080; } ]

    Declared by:

    [10714]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10715]services.mediawiki.virtualHost.listen.*.ip

    IP to listen on. 0.0.0.0 for IPv4 only, * for all.

    Type: string

    Default: "*"

    Declared by:

    [10716]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10717]services.mediawiki.virtualHost.listen.*.port

    Port to listen on

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Declared by:

    [10718]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10719]services.mediawiki.virtualHost.listen.*.ssl

    Whether to enable SSL (https) support.

    Type: boolean

    Default: false

    Declared by:

    [10720]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10721]services.mediawiki.virtualHost.locations

    Declarative location config. See [10722]https://httpd.apache.org/docs/2.4/mod/core.html#
    location for details.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "/" = {
        proxyPass = "http://localhost:3000";
      };
      "/foo/bar.png" = {
        alias = "/home/eelco/some-file.png";
      };
    };

    Declared by:

    [10723]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10724]services.mediawiki.virtualHost.locations.<name>.alias

    Alias directory for requests. See [10725]https://httpd.apache.org/docs/2.4/mod/mod_alias.html
    #alias.

    Type: null or path

    Default: null

    Example: "/your/alias/directory"

    Declared by:

    [10726]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10727]services.mediawiki.virtualHost.locations.<name>.extraConfig

    These lines go to the end of the location verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [10728]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10729]services.mediawiki.virtualHost.locations.<name>.index

    Adds DirectoryIndex directive. See [10730]https://httpd.apache.org/docs/2.4/mod/mod_dir.html#
    directoryindex.

    Type: null or string

    Default: null

    Example: "index.php index.html"

    Declared by:

    [10731]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10732]services.mediawiki.virtualHost.locations.<name>.priority

    Order of this location block in relation to the others in the vhost. The semantics are the
    same as with `lib.mkOrder`. Smaller values have a greater priority.

    Type: signed integer

    Default: 1000

    Declared by:

    [10733]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10734]services.mediawiki.virtualHost.locations.<name>.proxyPass

    Sets up a simple reverse proxy as described by [10735]https://httpd.apache.org/docs/2.4/howto
    /reverse_proxy.html#simple.

    Type: null or string

    Default: null

    Example: "http://www.example.org/"

    Declared by:

    [10736]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10737]services.mediawiki.virtualHost.logFormat

    Log format for Apache's log files. Possible values are: combined, common, referer, agent.

    Type: string

    Default: "common"

    Example: "combined"

    Declared by:

    [10738]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10739]services.mediawiki.virtualHost.onlySSL

    Whether to enable HTTPS and reject plain HTTP connections. This will set defaults for listen
    to listen on all interfaces on port 443.

    Type: boolean

    Default: false

    Declared by:

    [10740]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10741]services.mediawiki.virtualHost.robotsEntries

    Specification of pages to be ignored by web crawlers. See [10742]http://www.robotstxt.org/
    for details.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "Disallow: /foo/"

    Declared by:

    [10743]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10744]services.mediawiki.virtualHost.servedDirs

    This option provides a simple way to serve static directories.

    Type: list of attribute sets

    Default: [ ]

    Example: [ { dir = "/home/eelco/Dev/nix-homepage"; urlPath = "/nix"; } ]

    Declared by:

    [10745]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10746]services.mediawiki.virtualHost.servedFiles

    This option provides a simple way to serve individual, static files.

    Note: This option has been deprecated and will be removed in a future version of NixOS. You
    can achieve the same result by making use of the locations.<name>.alias option.

    Type: list of attribute sets

    Default: [ ]

    Example: [ { file = "/home/eelco/some-file.png"; urlPath = "/foo/bar.png"; } ]

    Declared by:

    [10747]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10748]services.mediawiki.virtualHost.serverAliases

    Additional names of virtual hosts served by this virtual host configuration.

    Type: list of strings

    Default: [ ]

    Example: [ "www.example.org" "www.example.org:8080" "example.org" ]

    Declared by:

    [10749]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10750]services.mediawiki.virtualHost.sslServerCert

    Path to server SSL certificate.

    Type: path

    Example: "/var/host.cert"

    Declared by:

    [10751]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10752]services.mediawiki.virtualHost.sslServerChain

    Path to server SSL chain file.

    Type: null or path

    Default: null

    Example: "/var/ca.pem"

    Declared by:

    [10753]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10754]services.mediawiki.virtualHost.sslServerKey

    Path to server SSL certificate key.

    Type: path

    Example: "/var/host.key"

    Declared by:

    [10755]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10756]services.mediawiki.virtualHost.useACMEHost

    A host of an existing Let's Encrypt certificate to use. This is useful if you have many
    subdomains and want to avoid hitting the [10757]rate limit. Alternately, you can generate a
    certificate through enableACME. Note that this option does not create any certificates, nor
    it does add subdomains to existing ones – you will need to create them manually using [10758]
    security.acme.certs.

    Type: null or string

    Default: null

    Declared by:

    [10759]<nixpkgs/nixos/modules/services/web-apps/mediawiki.nix>

[10760]services.memcached.enable

    Whether to enable Memcached.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10761]<nixpkgs/nixos/modules/services/databases/memcached.nix>

[10762]services.memcached.enableUnixSocket

    Whether to enable unix socket at /run/memcached/memcached.sock.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10763]<nixpkgs/nixos/modules/services/databases/memcached.nix>

[10764]services.memcached.extraOptions

    A list of extra options that will be added as a suffix when running memcached.

    Type: list of strings

    Default: [ ]

    Declared by:

    [10765]<nixpkgs/nixos/modules/services/databases/memcached.nix>

[10766]services.memcached.listen

    The IP address to bind to.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [10767]<nixpkgs/nixos/modules/services/databases/memcached.nix>

[10768]services.memcached.maxConnections

    The maximum number of simultaneous connections.

    Type: unsigned integer, meaning >=0

    Default: 1024

    Declared by:

    [10769]<nixpkgs/nixos/modules/services/databases/memcached.nix>

[10770]services.memcached.maxMemory

    The maximum amount of memory to use for storage, in megabytes.

    Type: unsigned integer, meaning >=0

    Default: 64

    Declared by:

    [10771]<nixpkgs/nixos/modules/services/databases/memcached.nix>

[10772]services.memcached.port

    The port to bind to.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 11211

    Declared by:

    [10773]<nixpkgs/nixos/modules/services/databases/memcached.nix>

[10774]services.memcached.user

    The user to run Memcached as

    Type: string

    Default: "memcached"

    Declared by:

    [10775]<nixpkgs/nixos/modules/services/databases/memcached.nix>

[10776]services.metabase.enable

    Whether to enable Metabase service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10777]<nixpkgs/nixos/modules/services/misc/metabase.nix>

[10778]services.metabase.listen.ip

    IP address that Metabase should listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [10779]<nixpkgs/nixos/modules/services/misc/metabase.nix>

[10780]services.metabase.listen.port

    Listen port for Metabase.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 3000

    Declared by:

    [10781]<nixpkgs/nixos/modules/services/misc/metabase.nix>

[10782]services.metabase.openFirewall

    Open ports in the firewall for Metabase.

    Type: boolean

    Default: false

    Declared by:

    [10783]<nixpkgs/nixos/modules/services/misc/metabase.nix>

[10784]services.metabase.ssl.enable

    Whether to enable SSL (https) support.

    Type: boolean

    Default: false

    Declared by:

    [10785]<nixpkgs/nixos/modules/services/misc/metabase.nix>

[10786]services.metabase.ssl.keystore

    [10787]Java KeyStore file containing the certificates.

    Type: null or path

    Default: "/var/lib/metabase/metabase.jks"

    Example: "/etc/secrets/keystore.jks"

    Declared by:

    [10788]<nixpkgs/nixos/modules/services/misc/metabase.nix>

[10789]services.metabase.ssl.port

    Listen port over SSL (https) for Metabase.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8443

    Declared by:

    [10790]<nixpkgs/nixos/modules/services/misc/metabase.nix>

[10791]services.mighttpd2.enable

    Whether to enable Mighttpd2 web server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10792]<nixpkgs/nixos/modules/services/web-servers/mighttpd2.nix>

[10793]services.mighttpd2.config

    Verbatim config file to use (see http://www.mew.org/~kazu/proj/mighttpd/en/config.html)

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    # Example configuration for Mighttpd 2
    Port: 80
    # IP address or "*"
    Host: *
    Debug_Mode: Yes # Yes or No
    # If available, "nobody" is much more secure for User:.
    User: root
    # If available, "nobody" is much more secure for Group:.
    Group: root
    Pid_File: /run/mighty.pid
    Logging: Yes # Yes or No
    Log_File: /var/log/mighty # The directory must be writable by User:
    Log_File_Size: 16777216 # bytes
    Log_Backup_Number: 10
    Index_File: index.html
    Index_Cgi: index.cgi
    Status_File_Dir: /usr/local/share/mighty/status
    Connection_Timeout: 30 # seconds
    Fd_Cache_Duration: 10 # seconds
    # Server_Name: Mighttpd/3.x.y
    Tls_Port: 443
    Tls_Cert_File: cert.pem # should change this with an absolute path
    # should change this with comma-separated absolute paths
    Tls_Chain_Files: chain.pem
    # Currently, Tls_Key_File must not be encrypted.
    Tls_Key_File: privkey.pem # should change this with an absolute path
    Service: 0 # 0 is HTTP only, 1 is HTTPS only, 2 is both
    ''

    Declared by:

    [10794]<nixpkgs/nixos/modules/services/web-servers/mighttpd2.nix>

[10795]services.mighttpd2.cores

    How many cores to use. If null it will be determined automatically

    Type: null or signed integer

    Default: null

    Declared by:

    [10796]<nixpkgs/nixos/modules/services/web-servers/mighttpd2.nix>

[10797]services.mighttpd2.routing

    Verbatim routing file to use (see http://www.mew.org/~kazu/proj/mighttpd/en/config.html)

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    # Example routing for Mighttpd 2

    # Domain lists
    [localhost www.example.com]

    # Entries are looked up in the specified order
    # All paths must end with "/"

    # A path to CGI scripts should be specified with "=>"
    /~alice/cgi-bin/ => /home/alice/public_html/cgi-bin/

    # A path to static files should be specified with "->"
    /~alice/         -> /home/alice/public_html/
    /cgi-bin/        => /export/cgi-bin/

    # Reverse proxy rules should be specified with ">>"
    # /path >> host:port/path2
    # Either "host" or ":port" can be committed, but not both.
    /app/cal/        >> example.net/calendar/
    # Yesod app in the same server
    /app/wiki/       >> 127.0.0.1:3000/

    /                -> /export/www/
    ''

    Declared by:

    [10798]<nixpkgs/nixos/modules/services/web-servers/mighttpd2.nix>

[10799]services.minecraft-server.enable

    If enabled, start a Minecraft Server. The server data will be loaded from and saved to
    services.minecraft-server.dataDir.

    Type: boolean

    Default: false

    Declared by:

    [10800]<nixpkgs/nixos/modules/services/games/minecraft-server.nix>

[10801]services.minecraft-server.package

    Version of minecraft-server to run.

    Type: package

    Default: "pkgs.minecraft-server"

    Example:

    pkgs.minecraft-server_1_12_2

    Declared by:

    [10802]<nixpkgs/nixos/modules/services/games/minecraft-server.nix>

[10803]services.minecraft-server.dataDir

    Directory to store Minecraft database and other state/data files.

    Type: path

    Default: "/var/lib/minecraft"

    Declared by:

    [10804]<nixpkgs/nixos/modules/services/games/minecraft-server.nix>

[10805]services.minecraft-server.declarative

    Whether to use a declarative Minecraft server configuration. Only if set to true, the options
    services.minecraft-server.whitelist and services.minecraft-server.serverProperties will be
    applied.

    Type: boolean

    Default: false

    Declared by:

    [10806]<nixpkgs/nixos/modules/services/games/minecraft-server.nix>

[10807]services.minecraft-server.eula

    Whether you agree to [10808] Mojangs EULA. This option must be set to true to run Minecraft
    server.

    Type: boolean

    Default: false

    Declared by:

    [10809]<nixpkgs/nixos/modules/services/games/minecraft-server.nix>

[10810]services.minecraft-server.jvmOpts

    JVM options for the Minecraft server.

    Type: strings concatenated with " "

    Default: "-Xmx2048M -Xms2048M"

    Example: "-Xmx2048M -Xms4092M -XX:+UseG1GC -XX:+CMSIncrementalPacing
    -XX:+CMSClassUnloadingEnabled -XX:ParallelGCThreads=2 -XX:MinHeapFreeRatio=5
    -XX:MaxHeapFreeRatio=10"

    Declared by:

    [10811]<nixpkgs/nixos/modules/services/games/minecraft-server.nix>

[10812]services.minecraft-server.openFirewall

    Whether to open ports in the firewall for the server.

    Type: boolean

    Default: false

    Declared by:

    [10813]<nixpkgs/nixos/modules/services/games/minecraft-server.nix>

[10814]services.minecraft-server.serverProperties

    Minecraft server properties for the server.properties file. Only has an effect when
    services.minecraft-server.declarative is set to true. See [10815]https://
    minecraft.gamepedia.com/Server.properties#Java_Edition_3 for documentation on these values.

    Type: attribute set of boolean or signed integer or strings

    Default: { }

    Example:

    {
      server-port = 43000;
      difficulty = 3;
      gamemode = 1;
      max-players = 5;
      motd = "NixOS Minecraft server!";
      white-list = true;
      enable-rcon = true;
      "rcon.password" = "hunter2";
    }

    Declared by:

    [10816]<nixpkgs/nixos/modules/services/games/minecraft-server.nix>

[10817]services.minecraft-server.whitelist

    Whitelisted players, only has an effect when services.minecraft-server.declarative is true
    and the whitelist is enabled via services.minecraft-server.serverProperties by setting
    white-list to true. This is a mapping from Minecraft usernames to UUIDs. You can use [10818]
    https://mcuuid.net/ to get a Minecraft UUID for a username.

    Type: attribute set of Minecraft UUIDs

    Default: { }

    Example:

    {
      username1 = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx";
      username2 = "yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy";
    };

    Declared by:

    [10819]<nixpkgs/nixos/modules/services/games/minecraft-server.nix>

[10820]services.minetest-server.enable

    If enabled, starts a Minetest Server.

    Type: boolean

    Default: false

    Declared by:

    [10821]<nixpkgs/nixos/modules/services/games/minetest-server.nix>

[10822]services.minetest-server.configPath

    Path to the config to use.

    If set to null, the config of the running user will be used: `~/.minetest/minetest.conf`.

    Type: null or path

    Default: null

    Declared by:

    [10823]<nixpkgs/nixos/modules/services/games/minetest-server.nix>

[10824]services.minetest-server.gameId

    Id of the game to use. To list available games run `minetestserver --gameid list`.

    If only one game exists, this option can be null.

    Type: null or string

    Default: null

    Declared by:

    [10825]<nixpkgs/nixos/modules/services/games/minetest-server.nix>

[10826]services.minetest-server.logPath

    Path to logfile for logging.

    If set to null, logging will be output to stdout which means all output will be catched by
    systemd.

    Type: null or path

    Default: null

    Declared by:

    [10827]<nixpkgs/nixos/modules/services/games/minetest-server.nix>

[10828]services.minetest-server.port

    Port number to bind to.

    If set to null, the default 30000 will be used.

    Type: null or signed integer

    Default: null

    Declared by:

    [10829]<nixpkgs/nixos/modules/services/games/minetest-server.nix>

[10830]services.minetest-server.world

    Name of the world to use. To list available worlds run `minetestserver --world list`.

    If only one world exists, this option can be null.

    Type: null or path

    Default: null

    Declared by:

    [10831]<nixpkgs/nixos/modules/services/games/minetest-server.nix>

[10832]services.minidlna.enable

    Whether to enable MiniDLNA, a simple DLNA server. It serves media files such as video and
    music to DLNA client devices such as televisions and media players.

    Type: boolean

    Default: false

    Declared by:

    [10833]<nixpkgs/nixos/modules/services/networking/minidlna.nix>

[10834]services.minidlna.announceInterval

    The interval between announces (in seconds).

    By default miniDLNA will announce its presence on the network approximately every 15 minutes.

    Many people prefer shorter announce intervals (e.g. 60 seconds) on their home networks,
    especially when DLNA clients are started on demand.

    Type: signed integer

    Default: 895

    Declared by:

    [10835]<nixpkgs/nixos/modules/services/networking/minidlna.nix>

[10836]services.minidlna.config

    The contents of MiniDLNA's configuration file. When the service is activated, a basic
    template is generated from the current options opened here.

    Type: strings concatenated with "\n"

    Declared by:

    [10837]<nixpkgs/nixos/modules/services/networking/minidlna.nix>

[10838]services.minidlna.extraConfig

    Extra minidlna options not yet opened for configuration here (strict_dlna, model_number,
    model_name, etc...). This is appended to the current service already provided.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    # Not exhaustive example
    # Support for streaming .jpg and .mp3 files to a TiVo supporting HMO.
    enable_tivo=no
    # SSDP notify interval, in seconds.
    notify_interval=10
    # maximum number of simultaneous connections
    # note: many clients open several simultaneous connections while
    # streaming
    max_connections=50
    # set this to yes to allow symlinks that point outside user-defined
    # media_dirs.
    wide_links=yes
    ''

    Declared by:

    [10839]<nixpkgs/nixos/modules/services/networking/minidlna.nix>

[10840]services.minidlna.friendlyName

    Name that the DLNA server presents to clients.

    Type: string

    Default: "\$HOSTNAME MiniDLNA"

    Example: "rpi3"

    Declared by:

    [10841]<nixpkgs/nixos/modules/services/networking/minidlna.nix>

[10842]services.minidlna.loglevel

    Defines the type of messages that should be logged, and down to which level of importance
    they should be considered.

    The possible types are “artwork”, “database”, “general”, “http”, “inotify”, “metadata”,
    “scanner”, “ssdp” and “tivo”.

    The levels are “off”, “fatal”, “error”, “warn”, “info” and “debug”, listed here in order of
    decreasing importance. “off” turns off logging messages entirely, “fatal” logs the most
    critical messages only, and so on down to “debug” that logs every single messages.

    The types are comma-separated, followed by an equal sign (‘=’), followed by a level that
    applies to the preceding types. This can be repeated, separating each of these constructs
    with a comma.

    Defaults to “general,artwork,database,inotify,scanner,metadata, http,ssdp,tivo=warn” which
    logs every type of message at the “warn” level.

    Type: string

    Default: "warn"

    Example: "general,artwork,database,inotify,scanner,metadata,http,ssdp,tivo=warn"

    Declared by:

    [10843]<nixpkgs/nixos/modules/services/networking/minidlna.nix>

[10844]services.minidlna.mediaDirs

    Directories to be scanned for media files. The prefixes A,, V, and P, restrict a directory to
    audio, video or image files. The directories must be accessible to the minidlna user account.

    Type: list of strings

    Default: [ ]

    Example: [ "/data/media" "V,/home/alice/video" ]

    Declared by:

    [10845]<nixpkgs/nixos/modules/services/networking/minidlna.nix>

[10846]services.minidlna.rootContainer

    Use a different container as the root of the directory tree presented to clients. The
    possible values are: - "." - standard container - "B" - "Browse Directory" - "M" - "Music" -
    "P" - "Pictures" - "V" - "Video" - Or, you can specify the ObjectID of your desired root
    container (eg. 1$F for Music/Playlists) If you specify "B" and the client device is
    audio-only then "Music/Folders" will be used as root.

    Type: string

    Default: "."

    Example: "B"

    Declared by:

    [10847]<nixpkgs/nixos/modules/services/networking/minidlna.nix>

[10848]services.miniflux.enable

    Whether to enable miniflux.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10849]<nixpkgs/nixos/modules/services/web-apps/miniflux.nix>

[10850]services.miniflux.adminCredentialsFile

    File containing the ADMIN_USERNAME, default is "admin", and ADMIN_PASSWORD (length >= 6),
    default is "password"; in the format of an EnvironmentFile=, as described by systemd.exec(5).

    Type: null or path

    Default: null

    Example: "/etc/nixos/miniflux-admin-credentials"

    Declared by:

    [10851]<nixpkgs/nixos/modules/services/web-apps/miniflux.nix>

[10852]services.miniflux.config

    Configuration for Miniflux, refer to [10853]https://miniflux.app/docs/configuration.html for
    documentation on the supported values.

    Type: attribute set of strings

    Example:

    {
      CLEANUP_FREQUENCY = "48";
      LISTEN_ADDR = "localhost:8080";
    }

    Declared by:

    [10854]<nixpkgs/nixos/modules/services/web-apps/miniflux.nix>

[10855]services.minio.enable

    Whether to enable Minio Object Storage.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10856]<nixpkgs/nixos/modules/services/web-servers/minio.nix>

[10857]services.minio.package

    Minio package to use.

    Type: package

    Default: "pkgs.minio"

    Declared by:

    [10858]<nixpkgs/nixos/modules/services/web-servers/minio.nix>

[10859]services.minio.accessKey

    Access key of 5 to 20 characters in length that clients use to access the server. This
    overrides the access key that is generated by minio on first startup and stored inside the
    configDir directory.

    Type: string

    Default: ""

    Declared by:

    [10860]<nixpkgs/nixos/modules/services/web-servers/minio.nix>

[10861]services.minio.browser

    Enable or disable access to web UI.

    Type: boolean

    Default: true

    Declared by:

    [10862]<nixpkgs/nixos/modules/services/web-servers/minio.nix>

[10863]services.minio.configDir

    The config directory, for the access keys and other settings.

    Type: path

    Default: "/var/lib/minio/config"

    Declared by:

    [10864]<nixpkgs/nixos/modules/services/web-servers/minio.nix>

[10865]services.minio.dataDir

    The list of data directories for storing the objects. Use one path for regular operation and
    the minimum of 4 endpoints for Erasure Code mode.

    Type: list of paths

    Default: [ "/var/lib/minio/data" ]

    Declared by:

    [10866]<nixpkgs/nixos/modules/services/web-servers/minio.nix>

[10867]services.minio.listenAddress

    Listen on a specific IP address and port.

    Type: string

    Default: ":9000"

    Declared by:

    [10868]<nixpkgs/nixos/modules/services/web-servers/minio.nix>

[10869]services.minio.region

    The physical location of the server. By default it is set to us-east-1, which is same as AWS
    S3's and Minio's default region.

    Type: string

    Default: "us-east-1"

    Declared by:

    [10870]<nixpkgs/nixos/modules/services/web-servers/minio.nix>

[10871]services.minio.secretKey

    Specify the Secret key of 8 to 40 characters in length that clients use to access the server.
    This overrides the secret key that is generated by minio on first startup and stored inside
    the configDir directory.

    Type: string

    Default: ""

    Declared by:

    [10872]<nixpkgs/nixos/modules/services/web-servers/minio.nix>

[10873]services.miniupnpd.enable

    Whether to enable MiniUPnP daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10874]<nixpkgs/nixos/modules/services/networking/miniupnpd.nix>

[10875]services.miniupnpd.appendConfig

    Configuration lines appended to the MiniUPnP config.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [10876]<nixpkgs/nixos/modules/services/networking/miniupnpd.nix>

[10877]services.miniupnpd.externalInterface

    Name of the external interface.

    Type: string

    Declared by:

    [10878]<nixpkgs/nixos/modules/services/networking/miniupnpd.nix>

[10879]services.miniupnpd.internalIPs

    The IP address ranges to listen on.

    Type: list of strings

    Example: [ "192.168.1.1/24" "enp1s0" ]

    Declared by:

    [10880]<nixpkgs/nixos/modules/services/networking/miniupnpd.nix>

[10881]services.miniupnpd.natpmp

    Whether to enable NAT-PMP support.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10882]<nixpkgs/nixos/modules/services/networking/miniupnpd.nix>

[10883]services.miniupnpd.upnp

    Whether to enable UPNP support.

    Type: boolean

    Default: true

    Declared by:

    [10884]<nixpkgs/nixos/modules/services/networking/miniupnpd.nix>

[10885]services.mirakurun.enable

    Whether to enable Japanese DTV Tuner Server Service..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10886]<nixpkgs/nixos/modules/services/video/mirakurun.nix>

[10887]services.mirakurun.allowSmartCardAccess

    Install polkit rules to allow Mirakurun to access smart card readers which is commonly used
    along with tuner devices.

    Type: boolean

    Default: true

    Declared by:

    [10888]<nixpkgs/nixos/modules/services/video/mirakurun.nix>

[10889]services.mirakurun.channelSettings

    Options which are added to channels.yml. If none is specified, it will automatically be
    generated at runtime.

    Documentation: [10890]https://github.com/Chinachu/Mirakurun/blob/master/doc/Configuration.md

    Type: null or YAML value

    Default: null

    Example:

    [
      {
        name = "channel";
        types = "GR";
        channel = "0";
      }
    ];

    Declared by:

    [10891]<nixpkgs/nixos/modules/services/video/mirakurun.nix>

[10892]services.mirakurun.openFirewall

    Open ports in the firewall for Mirakurun.

    Warning: Exposing Mirakurun to the open internet is generally advised against. Only use it
    inside a trusted local network, or consider putting it behind a VPN if you want remote
    access.

    Type: boolean

    Default: false

    Declared by:

    [10893]<nixpkgs/nixos/modules/services/video/mirakurun.nix>

[10894]services.mirakurun.port

    Port to listen on. If null, it won't listen on any port.

    Type: null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 40772

    Declared by:

    [10895]<nixpkgs/nixos/modules/services/video/mirakurun.nix>

[10896]services.mirakurun.serverSettings

    Options for server.yml.

    Documentation: [10897]https://github.com/Chinachu/Mirakurun/blob/master/doc/Configuration.md

    Type: YAML value

    Default: { }

    Example:

    {
      highWaterMark = 25165824;
      overflowTimeLimit = 30000;
    };

    Declared by:

    [10898]<nixpkgs/nixos/modules/services/video/mirakurun.nix>

[10899]services.mirakurun.tunerSettings

    Options which are added to tuners.yml. If none is specified, it will automatically be
    generated at runtime.

    Documentation: [10900]https://github.com/Chinachu/Mirakurun/blob/master/doc/Configuration.md

    Type: null or YAML value

    Default: null

    Example:

    [
      {
        name = "tuner-name";
        types = [ "GR" "BS" "CS" "SKY" ];
        dvbDevicePath = "/dev/dvb/adapterX/dvrX";
      }
    ];

    Declared by:

    [10901]<nixpkgs/nixos/modules/services/video/mirakurun.nix>

[10902]services.mirakurun.unixSocket

    Path to unix socket to listen on. If null, it won't listen on any unix sockets.

    Type: null or path

    Default: "/var/run/mirakurun/mirakurun.sock"

    Declared by:

    [10903]<nixpkgs/nixos/modules/services/video/mirakurun.nix>

[10904]services.miredo.enable

    Whether to enable the Miredo IPv6 tunneling service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10905]<nixpkgs/nixos/modules/services/networking/miredo.nix>

[10906]services.miredo.package

    The package to use for the miredo daemon's binary.

    Type: package

    Default: "pkgs.miredo"

    Declared by:

    [10907]<nixpkgs/nixos/modules/services/networking/miredo.nix>

[10908]services.miredo.bindAddress

    Depending on the local firewall/NAT rules, you might need to force Miredo to use a fixed UDP
    port and or IPv4 address.

    Type: null or string

    Default: null

    Declared by:

    [10909]<nixpkgs/nixos/modules/services/networking/miredo.nix>

[10910]services.miredo.bindPort

    Depending on the local firewall/NAT rules, you might need to force Miredo to use a fixed UDP
    port and or IPv4 address.

    Type: null or string

    Default: null

    Declared by:

    [10911]<nixpkgs/nixos/modules/services/networking/miredo.nix>

[10912]services.miredo.interfaceName

    Name of the network tunneling interface.

    Type: string

    Default: "teredo"

    Declared by:

    [10913]<nixpkgs/nixos/modules/services/networking/miredo.nix>

[10914]services.miredo.serverAddress

    The hostname or primary IPv4 address of the Teredo server. This setting is required if Miredo
    runs as a Teredo client. "teredo.remlab.net" is an experimental service for testing only.
    Please use another server for production and/or large scale deployments.

    Type: string

    Default: "teredo.remlab.net"

    Declared by:

    [10915]<nixpkgs/nixos/modules/services/networking/miredo.nix>

[10916]services.mjpg-streamer.enable

    Whether to enable mjpg-streamer webcam streamer.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10917]<nixpkgs/nixos/modules/services/networking/mjpg-streamer.nix>

[10918]services.mjpg-streamer.group

    mjpg-streamer group name.

    Type: string

    Default: "video"

    Declared by:

    [10919]<nixpkgs/nixos/modules/services/networking/mjpg-streamer.nix>

[10920]services.mjpg-streamer.inputPlugin

    Input plugin. See plugins documentation for more information.

    Type: string

    Default: "input_uvc.so"

    Declared by:

    [10921]<nixpkgs/nixos/modules/services/networking/mjpg-streamer.nix>

[10922]services.mjpg-streamer.outputPlugin

    Output plugin. @www@ is substituted for default mjpg-streamer www directory. See plugins
    documentation for more information.

    Type: string

    Default: "output_http.so -w @www@ -n -p 5050"

    Declared by:

    [10923]<nixpkgs/nixos/modules/services/networking/mjpg-streamer.nix>

[10924]services.mjpg-streamer.user

    mjpg-streamer user name.

    Type: string

    Default: "mjpg-streamer"

    Declared by:

    [10925]<nixpkgs/nixos/modules/services/networking/mjpg-streamer.nix>

[10926]services.mlmmj.enable

    Enable mlmmj

    Type: boolean

    Default: false

    Declared by:

    [10927]<nixpkgs/nixos/modules/services/mail/mlmmj.nix>

[10928]services.mlmmj.group

    mailinglist local group

    Type: string

    Default: "mlmmj"

    Declared by:

    [10929]<nixpkgs/nixos/modules/services/mail/mlmmj.nix>

[10930]services.mlmmj.listDomain

    Set the mailing list domain

    Type: string

    Default: "localhost"

    Declared by:

    [10931]<nixpkgs/nixos/modules/services/mail/mlmmj.nix>

[10932]services.mlmmj.mailLists

    The collection of hosted maillists

    Type: list of strings

    Default: [ ]

    Declared by:

    [10933]<nixpkgs/nixos/modules/services/mail/mlmmj.nix>

[10934]services.mlmmj.maintInterval

    Time interval between mlmmj-maintd runs, see systemd.time(7) for format information.

    Type: string

    Default: "20min"

    Declared by:

    [10935]<nixpkgs/nixos/modules/services/mail/mlmmj.nix>

[10936]services.mlmmj.user

    mailinglist local user

    Type: string

    Default: "mlmmj"

    Declared by:

    [10937]<nixpkgs/nixos/modules/services/mail/mlmmj.nix>

[10938]services.moinmoin.enable

    Whether to enable MoinMoin Wiki Engine.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10939]<nixpkgs/nixos/modules/services/web-apps/moinmoin.nix>

[10940]services.moinmoin.gunicorn.workers

    The number of worker processes for handling requests.

    Type: positive integer, meaning >0

    Default: 3

    Example: 10

    Declared by:

    [10941]<nixpkgs/nixos/modules/services/web-apps/moinmoin.nix>

[10942]services.moinmoin.webServer

    Which web server to use to serve the wiki. Use none if you want to configure this yourself.

    Type: one of "nginx-gunicorn", "gunicorn", "none"

    Default: "nginx-gunicorn"

    Example: "none"

    Declared by:

    [10943]<nixpkgs/nixos/modules/services/web-apps/moinmoin.nix>

[10944]services.moinmoin.wikis

    Configurations of the individual wikis. Attribute names must be valid Python identifiers of
    the form [A-Za-z_][A-Za-z0-9_]*.

    For every attribute WIKINAME, a helper script moin-WIKINAME is created which runs the moin
    command under the moin user (to avoid file ownership issues) and with the right configuration
    directory passed to it.

    Type: attribute set of submodules

    Example:

    {
      "mywiki" = {
        siteName = "Example Wiki";
        webHost = "wiki.example.org";
        superUsers = [ "admin" ];
        frontPage = "Index";
        extraConfig = "page_category_regex = ur'(?P<all>(Category|Kategorie)(?P<key>(?!Template)\S+))'"
      };
    }

    Declared by:

    [10945]<nixpkgs/nixos/modules/services/web-apps/moinmoin.nix>

[10946]services.moinmoin.wikis.<name>.extraConfig

    Additional configuration to be appended verbatim to this wiki's config.

    See [10947]http://moinmo.in/HelpOnConfiguration for documentation.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    show_hosts = True
    search_results_per_page = 100
    acl_rights_default = u"Known:read,write,delete,revert All:read"
    logo_string = u"<h2>\U0001f639</h2>"
    theme_default = u"modernized"

    user_checkbox_defaults = {'show_page_trail': 0, 'edit_on_doubleclick': 0}
    navi_bar = [u'SomePage'] + multiconfig.DefaultConfig.navi_bar
    actions_excluded = multiconfig.DefaultConfig.actions_excluded + ['newaccount']

    mail_smarthost = "mail.example.org"
    mail_from = u"Example.Org Wiki <wiki@example.org>"
    ''

    Declared by:

    [10948]<nixpkgs/nixos/modules/services/web-apps/moinmoin.nix>

[10949]services.moinmoin.wikis.<name>.frontPage

    Front page name. Set this to something like FrontPage once languages are configured.

    Type: string

    Default: "LanguageSetup"

    Example: "FrontPage"

    Declared by:

    [10950]<nixpkgs/nixos/modules/services/web-apps/moinmoin.nix>

[10951]services.moinmoin.wikis.<name>.languageDefault

    The ISO-639-1 name of the main wiki language. Languages that MoinMoin does not support are
    ignored.

    Type: string

    Default: "en"

    Example: "de"

    Declared by:

    [10952]<nixpkgs/nixos/modules/services/web-apps/moinmoin.nix>

[10953]services.moinmoin.wikis.<name>.siteName

    Short description of your wiki site, displayed below the logo on each page, and used in RSS
    documents as the channel title.

    Type: string

    Default: "Untitled Wiki"

    Example: "ExampleWiki"

    Declared by:

    [10954]<nixpkgs/nixos/modules/services/web-apps/moinmoin.nix>

[10955]services.moinmoin.wikis.<name>.superUsers

    List of trusted user names with wiki system administration super powers.

    Please note that accounts for these users need to be created using the moin command-line
    utility, e.g.: moin-WIKINAME account create --name=NAME --email=EMAIL --password=PASSWORD.

    Type: list of strings

    Default: [ ]

    Example: [ "elvis" ]

    Declared by:

    [10956]<nixpkgs/nixos/modules/services/web-apps/moinmoin.nix>

[10957]services.moinmoin.wikis.<name>.webHost

    Host part of the wiki URL. If undefined, the name of the attribute set will be used.

    Type: string

    Example: "wiki.example.org"

    Declared by:

    [10958]<nixpkgs/nixos/modules/services/web-apps/moinmoin.nix>

[10959]services.moinmoin.wikis.<name>.webLocation

    Location part of the wiki URL.

    Type: string

    Default: "/"

    Example: "/moin"

    Declared by:

    [10960]<nixpkgs/nixos/modules/services/web-apps/moinmoin.nix>

[10961]services.molly-brown.enable

    Whether to enable Molly-Brown Gemini server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10962]<nixpkgs/nixos/modules/services/web-servers/molly-brown.nix>

[10963]services.molly-brown.certPath

    Path to TLS certificate. An ACME certificate and key may be shared with an HTTP server, but
    only if molly-brown has permissions allowing it to read such keys.

    As an example:

    systemd.services.molly-brown.serviceConfig.SupplementaryGroups =
      [ config.security.acme.certs."example.com".group ];

    Type: path

    Example: "/var/lib/acme/example.com/cert.pem"

    Declared by:

    [10964]<nixpkgs/nixos/modules/services/web-servers/molly-brown.nix>

[10965]services.molly-brown.docBase

    Base directory for Gemini content.

    Type: path

    Example: "/var/lib/molly-brown"

    Declared by:

    [10966]<nixpkgs/nixos/modules/services/web-servers/molly-brown.nix>

[10967]services.molly-brown.hostName

    The hostname to respond to requests for. Requests for URLs with other hosts will result in a
    status 53 (PROXY REQUEST REFUSED) response.

    Type: string

    Default: "nixos"

    Example:

    config.networking.hostName

    Declared by:

    [10968]<nixpkgs/nixos/modules/services/web-servers/molly-brown.nix>

[10969]services.molly-brown.keyPath

    Path to TLS key. See CertPath.

    Type: path

    Example: "/var/lib/acme/example.com/key.pem"

    Declared by:

    [10970]<nixpkgs/nixos/modules/services/web-servers/molly-brown.nix>

[10971]services.molly-brown.port

    TCP port for molly-brown to bind to.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 1965

    Declared by:

    [10972]<nixpkgs/nixos/modules/services/web-servers/molly-brown.nix>

[10973]services.molly-brown.settings

    molly-brown configuration. Refer to [10974]https://tildegit.org/solderpunk/molly-brown/src/
    branch/master/example.conf for details on supported values.

    Type: TOML value

    Default: { }

    Declared by:

    [10975]<nixpkgs/nixos/modules/services/web-servers/molly-brown.nix>

[10976]services.monero.enable

    Whether to enable Monero node daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [10977]<nixpkgs/nixos/modules/services/networking/monero.nix>

[10978]services.monero.dataDir

    The directory where Monero stores its data files.

    Type: string

    Default: "/var/lib/monero"

    Declared by:

    [10979]<nixpkgs/nixos/modules/services/networking/monero.nix>

[10980]services.monero.exclusiveNodes

    List of peer IP addresses to connect to *only*. If given the other peer options will be
    ignored.

    Type: list of strings

    Default: [ ]

    Declared by:

    [10981]<nixpkgs/nixos/modules/services/networking/monero.nix>

[10982]services.monero.extraConfig

    Extra lines to be added verbatim to monerod configuration.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [10983]<nixpkgs/nixos/modules/services/networking/monero.nix>

[10984]services.monero.extraNodes

    List of additional peer IP addresses to add to the local list.

    Type: list of strings

    Default: [ ]

    Declared by:

    [10985]<nixpkgs/nixos/modules/services/networking/monero.nix>

[10986]services.monero.limits.download

    Limit of the download rate in kB/s. Set to -1 to leave unlimited.

    Type: signed integer

    Default: -1

    Declared by:

    [10987]<nixpkgs/nixos/modules/services/networking/monero.nix>

[10988]services.monero.limits.syncSize

    Maximum number of blocks to sync at once. Set to 0 for adaptive.

    Type: signed integer

    Default: 0

    Declared by:

    [10989]<nixpkgs/nixos/modules/services/networking/monero.nix>

[10990]services.monero.limits.threads

    Maximum number of threads used for a parallel job. Set to 0 to leave unlimited.

    Type: signed integer

    Default: 0

    Declared by:

    [10991]<nixpkgs/nixos/modules/services/networking/monero.nix>

[10992]services.monero.limits.upload

    Limit of the upload rate in kB/s. Set to -1 to leave unlimited.

    Type: signed integer

    Default: -1

    Declared by:

    [10993]<nixpkgs/nixos/modules/services/networking/monero.nix>

[10994]services.monero.mining.enable

    Whether to mine monero.

    Type: boolean

    Default: false

    Declared by:

    [10995]<nixpkgs/nixos/modules/services/networking/monero.nix>

[10996]services.monero.mining.address

    Monero address where to send mining rewards.

    Type: string

    Default: ""

    Declared by:

    [10997]<nixpkgs/nixos/modules/services/networking/monero.nix>

[10998]services.monero.mining.threads

    Number of threads used for mining. Set to 0 to use all available.

    Type: signed integer

    Default: 0

    Declared by:

    [10999]<nixpkgs/nixos/modules/services/networking/monero.nix>

[11000]services.monero.priorityNodes

    List of peer IP addresses to connect to and attempt to keep the connection open.

    Type: list of strings

    Default: [ ]

    Declared by:

    [11001]<nixpkgs/nixos/modules/services/networking/monero.nix>

[11002]services.monero.rpc.address

    IP address the RPC server will bind to.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [11003]<nixpkgs/nixos/modules/services/networking/monero.nix>

[11004]services.monero.rpc.password

    Password for RPC connections.

    Type: null or string

    Default: null

    Declared by:

    [11005]<nixpkgs/nixos/modules/services/networking/monero.nix>

[11006]services.monero.rpc.port

    Port the RPC server will bind to.

    Type: signed integer

    Default: 18081

    Declared by:

    [11007]<nixpkgs/nixos/modules/services/networking/monero.nix>

[11008]services.monero.rpc.restricted

    Whether to restrict RPC to view only commands.

    Type: boolean

    Default: false

    Declared by:

    [11009]<nixpkgs/nixos/modules/services/networking/monero.nix>

[11010]services.monero.rpc.user

    User name for RPC connections.

    Type: null or string

    Default: null

    Declared by:

    [11011]<nixpkgs/nixos/modules/services/networking/monero.nix>

[11012]services.monetdb.enable

    Whether to enable the MonetDB database server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11013]<nixpkgs/nixos/modules/services/databases/monetdb.nix>

[11014]services.monetdb.package

    MonetDB package to use.

    Type: package

    Default: "pkgs.monetdb"

    Declared by:

    [11015]<nixpkgs/nixos/modules/services/databases/monetdb.nix>

[11016]services.monetdb.dataDir

    Data directory for the dbfarm.

    Type: path

    Default: "/var/lib/monetdb"

    Declared by:

    [11017]<nixpkgs/nixos/modules/services/databases/monetdb.nix>

[11018]services.monetdb.group

    Group under which MonetDB runs.

    Type: string

    Default: "monetdb"

    Declared by:

    [11019]<nixpkgs/nixos/modules/services/databases/monetdb.nix>

[11020]services.monetdb.listenAddress

    Address to listen on.

    Type: string

    Default: "127.0.0.1"

    Example: "0.0.0.0"

    Declared by:

    [11021]<nixpkgs/nixos/modules/services/databases/monetdb.nix>

[11022]services.monetdb.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 50000

    Declared by:

    [11023]<nixpkgs/nixos/modules/services/databases/monetdb.nix>

[11024]services.monetdb.user

    User account under which MonetDB runs.

    Type: string

    Default: "monetdb"

    Declared by:

    [11025]<nixpkgs/nixos/modules/services/databases/monetdb.nix>

[11026]services.mongodb.enable

    Whether to enable the MongoDB server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11027]<nixpkgs/nixos/modules/services/databases/mongodb.nix>

[11028]services.mongodb.enableAuth

    Enable client authentication. Creates a default superuser with username root!

    Type: boolean

    Default: false

    Declared by:

    [11029]<nixpkgs/nixos/modules/services/databases/mongodb.nix>

[11030]services.mongodb.package

    Which MongoDB derivation to use.

    Type: package

    Default: "pkgs.mongodb"

    Declared by:

    [11031]<nixpkgs/nixos/modules/services/databases/mongodb.nix>

[11032]services.mongodb.bind_ip

    IP to bind to

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [11033]<nixpkgs/nixos/modules/services/databases/mongodb.nix>

[11034]services.mongodb.dbpath

    Location where MongoDB stores its files

    Type: string

    Default: "/var/db/mongodb"

    Declared by:

    [11035]<nixpkgs/nixos/modules/services/databases/mongodb.nix>

[11036]services.mongodb.extraConfig

    MongoDB extra configuration in YAML format

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    storage.journal.enabled: false
    ''

    Declared by:

    [11037]<nixpkgs/nixos/modules/services/databases/mongodb.nix>

[11038]services.mongodb.initialRootPassword

    Password for the root user if auth is enabled.

    Type: null or string

    Default: null

    Declared by:

    [11039]<nixpkgs/nixos/modules/services/databases/mongodb.nix>

[11040]services.mongodb.initialScript

    A file containing MongoDB statements to execute on first startup.

    Type: null or path

    Default: null

    Declared by:

    [11041]<nixpkgs/nixos/modules/services/databases/mongodb.nix>

[11042]services.mongodb.pidFile

    Location of MongoDB pid file

    Type: string

    Default: "/run/mongodb.pid"

    Declared by:

    [11043]<nixpkgs/nixos/modules/services/databases/mongodb.nix>

[11044]services.mongodb.quiet

    quieter output

    Type: boolean

    Default: false

    Declared by:

    [11045]<nixpkgs/nixos/modules/services/databases/mongodb.nix>

[11046]services.mongodb.replSetName

    If this instance is part of a replica set, set its name here. Otherwise, leave empty to run
    as single node.

    Type: string

    Default: ""

    Declared by:

    [11047]<nixpkgs/nixos/modules/services/databases/mongodb.nix>

[11048]services.mongodb.user

    User account under which MongoDB runs

    Type: string

    Default: "mongodb"

    Declared by:

    [11049]<nixpkgs/nixos/modules/services/databases/mongodb.nix>

[11050]services.monit.enable

    Whether to enable Monit.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11051]<nixpkgs/nixos/modules/services/monitoring/monit.nix>

[11052]services.monit.config

    monitrc content

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [11053]<nixpkgs/nixos/modules/services/monitoring/monit.nix>

[11054]services.moodle.enable

    Whether to enable Moodle web application.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11055]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11056]services.moodle.package

    The Moodle package to use.

    Type: package

    Default: "pkgs.moodle"

    Declared by:

    [11057]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11058]services.moodle.database.createLocally

    Create the database and database user locally.

    Type: boolean

    Default: true

    Declared by:

    [11059]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11060]services.moodle.database.host

    Database host address.

    Type: string

    Default: "localhost"

    Declared by:

    [11061]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11062]services.moodle.database.name

    Database name.

    Type: string

    Default: "moodle"

    Declared by:

    [11063]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11064]services.moodle.database.passwordFile

    A file containing the password corresponding to database.user.

    Type: null or path

    Default: null

    Example: "/run/keys/moodle-dbpassword"

    Declared by:

    [11065]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11066]services.moodle.database.port

    Database host port.

    Type: signed integer

    Default: "3306"

    Declared by:

    [11067]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11068]services.moodle.database.socket

    Path to the unix socket file to use for authentication.

    Type: null or path

    Default: "/run/mysqld/mysqld.sock"

    Declared by:

    [11069]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11070]services.moodle.database.type

    Database engine to use.

    Type: one of "mysql", "pgsql"

    Default: "mysql"

    Declared by:

    [11071]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11072]services.moodle.database.user

    Database user.

    Type: string

    Default: "moodle"

    Declared by:

    [11073]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11074]services.moodle.extraConfig

    Any additional text to be appended to the config.php configuration file. This is a PHP
    script. For configuration details, see [11075]https://docs.moodle.org/37/en/
    Configuration_file.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    $CFG->disableupdatenotifications = true;
    ''

    Declared by:

    [11076]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11077]services.moodle.initialPassword

    Specifies the initial password for the admin, i.e. the password assigned if the user does not
    already exist. The password specified here is world-readable in the Nix store, so it should
    be changed promptly.

    Type: string

    Example: "correcthorsebatterystaple"

    Declared by:

    [11078]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11079]services.moodle.poolConfig

    Options for the Moodle PHP pool. See the documentation on php-fpm.conf for details on
    configuration directives.

    Type: attribute set of string or signed integer or booleans

    Default: { pm = "dynamic"; pm.max_children = 32; pm.max_requests = 500; pm.max_spare_servers
    = 4; pm.min_spare_servers = 2; pm.start_servers = 2; }

    Declared by:

    [11080]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11081]services.moodle.virtualHost

    Apache configuration can be done by adapting services.httpd.virtualHosts. See [11082]
    services.httpd.virtualHosts for further information.

    Type: submodule

    Example:

    {
      hostName = "moodle.example.org";
      adminAddr = "webmaster@example.org";
      forceSSL = true;
      enableACME = true;
    }

    Declared by:

    [11083]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11084]services.moodle.virtualHost.enableACME

    Whether to ask Let's Encrypt to sign a certificate for this vhost. Alternately, you can use
    an existing certificate through useACMEHost.

    Type: boolean

    Default: false

    Declared by:

    [11085]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11086]services.moodle.virtualHost.enableUserDir

    Whether to enable serving ~/public_html as /~username.

    Type: boolean

    Default: false

    Declared by:

    [11087]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11088]services.moodle.virtualHost.acmeRoot

    Directory for the acme challenge which is PUBLIC, don't put certs or keys in here

    Type: string

    Default: "/var/lib/acme/acme-challenge"

    Declared by:

    [11089]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11090]services.moodle.virtualHost.addSSL

    Whether to enable HTTPS in addition to plain HTTP. This will set defaults for listen to
    listen on all interfaces on the respective default ports (80, 443).

    Type: boolean

    Default: false

    Declared by:

    [11091]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11092]services.moodle.virtualHost.adminAddr

    E-mail address of the server administrator.

    Type: null or string

    Default: null

    Example: "admin@example.org"

    Declared by:

    [11093]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11094]services.moodle.virtualHost.documentRoot

    The path of Apache's document root directory. If left undefined, an empty directory in the
    Nix store will be used as root.

    Type: null or path

    Default: null

    Example: "/data/webserver/docs"

    Declared by:

    [11095]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11096]services.moodle.virtualHost.extraConfig

    These lines go to httpd.conf verbatim. They will go after directories and directory aliases
    defined by default.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    <Directory /home>
      Options FollowSymlinks
      AllowOverride All
    </Directory>
    ''

    Declared by:

    [11097]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11098]services.moodle.virtualHost.forceSSL

    Whether to add a separate nginx server block that permanently redirects (301) all plain HTTP
    traffic to HTTPS. This will set defaults for listen to listen on all interfaces on the
    respective default ports (80, 443), where the non-SSL listens are used for the redirect
    vhosts.

    Type: boolean

    Default: false

    Declared by:

    [11099]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11100]services.moodle.virtualHost.globalRedirect

    If set, all requests for this host are redirected permanently to the given URL.

    Type: null or string

    Default: null

    Example: "http://newserver.example.org/"

    Declared by:

    [11101]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11102]services.moodle.virtualHost.hostName

    Canonical hostname for the server.

    Type: string

    Default: "‹name›"

    Declared by:

    [11103]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11104]services.moodle.virtualHost.http2

    Whether to enable HTTP 2. HTTP/2 is supported in all multi-processing modules that come with
    httpd. However, if you use the prefork mpm, there will be severe restrictions. Refer to 
    [11105]https://httpd.apache.org/docs/2.4/howto/http2.html#mpm-config for details.

    Type: boolean

    Default: true

    Declared by:

    [11106]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11107]services.moodle.virtualHost.listen

    Listen addresses and ports for this virtual host.

    Note: This option overrides addSSL, forceSSL and onlySSL.

    Type: list of submodules

    Default: [ ]

    Example: [ { ip = "195.154.1.1"; port = 443; ssl = true; } { ip = "192.154.1.1"; port = 80; }
    { ip = "*"; port = 8080; } ]

    Declared by:

    [11108]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11109]services.moodle.virtualHost.listen.*.ip

    IP to listen on. 0.0.0.0 for IPv4 only, * for all.

    Type: string

    Default: "*"

    Declared by:

    [11110]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11111]services.moodle.virtualHost.listen.*.port

    Port to listen on

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Declared by:

    [11112]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11113]services.moodle.virtualHost.listen.*.ssl

    Whether to enable SSL (https) support.

    Type: boolean

    Default: false

    Declared by:

    [11114]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11115]services.moodle.virtualHost.locations

    Declarative location config. See [11116]https://httpd.apache.org/docs/2.4/mod/core.html#
    location for details.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "/" = {
        proxyPass = "http://localhost:3000";
      };
      "/foo/bar.png" = {
        alias = "/home/eelco/some-file.png";
      };
    };

    Declared by:

    [11117]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11118]services.moodle.virtualHost.locations.<name>.alias

    Alias directory for requests. See [11119]https://httpd.apache.org/docs/2.4/mod/mod_alias.html
    #alias.

    Type: null or path

    Default: null

    Example: "/your/alias/directory"

    Declared by:

    [11120]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11121]services.moodle.virtualHost.locations.<name>.extraConfig

    These lines go to the end of the location verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [11122]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11123]services.moodle.virtualHost.locations.<name>.index

    Adds DirectoryIndex directive. See [11124]https://httpd.apache.org/docs/2.4/mod/mod_dir.html#
    directoryindex.

    Type: null or string

    Default: null

    Example: "index.php index.html"

    Declared by:

    [11125]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11126]services.moodle.virtualHost.locations.<name>.priority

    Order of this location block in relation to the others in the vhost. The semantics are the
    same as with `lib.mkOrder`. Smaller values have a greater priority.

    Type: signed integer

    Default: 1000

    Declared by:

    [11127]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11128]services.moodle.virtualHost.locations.<name>.proxyPass

    Sets up a simple reverse proxy as described by [11129]https://httpd.apache.org/docs/2.4/howto
    /reverse_proxy.html#simple.

    Type: null or string

    Default: null

    Example: "http://www.example.org/"

    Declared by:

    [11130]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11131]services.moodle.virtualHost.logFormat

    Log format for Apache's log files. Possible values are: combined, common, referer, agent.

    Type: string

    Default: "common"

    Example: "combined"

    Declared by:

    [11132]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11133]services.moodle.virtualHost.onlySSL

    Whether to enable HTTPS and reject plain HTTP connections. This will set defaults for listen
    to listen on all interfaces on port 443.

    Type: boolean

    Default: false

    Declared by:

    [11134]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11135]services.moodle.virtualHost.robotsEntries

    Specification of pages to be ignored by web crawlers. See [11136]http://www.robotstxt.org/
    for details.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "Disallow: /foo/"

    Declared by:

    [11137]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11138]services.moodle.virtualHost.servedDirs

    This option provides a simple way to serve static directories.

    Type: list of attribute sets

    Default: [ ]

    Example: [ { dir = "/home/eelco/Dev/nix-homepage"; urlPath = "/nix"; } ]

    Declared by:

    [11139]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11140]services.moodle.virtualHost.servedFiles

    This option provides a simple way to serve individual, static files.

    Note: This option has been deprecated and will be removed in a future version of NixOS. You
    can achieve the same result by making use of the locations.<name>.alias option.

    Type: list of attribute sets

    Default: [ ]

    Example: [ { file = "/home/eelco/some-file.png"; urlPath = "/foo/bar.png"; } ]

    Declared by:

    [11141]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11142]services.moodle.virtualHost.serverAliases

    Additional names of virtual hosts served by this virtual host configuration.

    Type: list of strings

    Default: [ ]

    Example: [ "www.example.org" "www.example.org:8080" "example.org" ]

    Declared by:

    [11143]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11144]services.moodle.virtualHost.sslServerCert

    Path to server SSL certificate.

    Type: path

    Example: "/var/host.cert"

    Declared by:

    [11145]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11146]services.moodle.virtualHost.sslServerChain

    Path to server SSL chain file.

    Type: null or path

    Default: null

    Example: "/var/ca.pem"

    Declared by:

    [11147]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11148]services.moodle.virtualHost.sslServerKey

    Path to server SSL certificate key.

    Type: path

    Example: "/var/host.key"

    Declared by:

    [11149]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11150]services.moodle.virtualHost.useACMEHost

    A host of an existing Let's Encrypt certificate to use. This is useful if you have many
    subdomains and want to avoid hitting the [11151]rate limit. Alternately, you can generate a
    certificate through enableACME. Note that this option does not create any certificates, nor
    it does add subdomains to existing ones – you will need to create them manually using [11152]
    security.acme.certs.

    Type: null or string

    Default: null

    Declared by:

    [11153]<nixpkgs/nixos/modules/services/web-apps/moodle.nix>

[11154]services.mopidy.enable

    Whether to enable Mopidy, a music player daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11155]<nixpkgs/nixos/modules/services/audio/mopidy.nix>

[11156]services.mopidy.configuration

    The configuration that Mopidy should use.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [11157]<nixpkgs/nixos/modules/services/audio/mopidy.nix>

[11158]services.mopidy.dataDir

    The directory where Mopidy stores its state.

    Type: string

    Default: "/var/lib/mopidy"

    Declared by:

    [11159]<nixpkgs/nixos/modules/services/audio/mopidy.nix>

[11160]services.mopidy.extensionPackages

    Mopidy extensions that should be loaded by the service.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.mopidy-spotify ]

    Declared by:

    [11161]<nixpkgs/nixos/modules/services/audio/mopidy.nix>

[11162]services.mopidy.extraConfigFiles

    Extra config file read by Mopidy when the service starts. Later files in the list overrides
    earlier configuration.

    Type: list of strings

    Default: [ ]

    Declared by:

    [11163]<nixpkgs/nixos/modules/services/audio/mopidy.nix>

[11164]services.morty.enable

    Whether to enable Morty proxy server. See https://github.com/asciimoo/morty.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11165]<nixpkgs/nixos/modules/services/networking/morty.nix>

[11166]services.morty.package

    morty package to use.

    Type: package

    Default: "pkgs.morty"

    Declared by:

    [11167]<nixpkgs/nixos/modules/services/networking/morty.nix>

[11168]services.morty.ipv6

    Allow IPv6 HTTP requests?

    Type: boolean

    Default: "Allow IPv6 HTTP requests."

    Declared by:

    [11169]<nixpkgs/nixos/modules/services/networking/morty.nix>

[11170]services.morty.key

    HMAC url validation key (hexadecimal encoded). Leave blank to disable. Without validation
    key, anyone can submit proxy requests. Leave blank to disable.

    Type: string

    Default: "No HMAC url validation. Generate with echo -n somevalue | openssl dgst -sha1 -hmac
    somekey"

    Declared by:

    [11171]<nixpkgs/nixos/modules/services/networking/morty.nix>

[11172]services.morty.listenAddress

    The address on which the service listens

    Type: string

    Default: "127.0.0.1 (localhost)"

    Declared by:

    [11173]<nixpkgs/nixos/modules/services/networking/morty.nix>

[11174]services.morty.port

    Listing port

    Type: signed integer

    Default: 3000

    Declared by:

    [11175]<nixpkgs/nixos/modules/services/networking/morty.nix>

[11176]services.morty.timeout

    Request timeout in seconds.

    Type: signed integer

    Default: "A resource now gets 2 seconds to respond."

    Declared by:

    [11177]<nixpkgs/nixos/modules/services/networking/morty.nix>

[11178]services.mosquitto.enable

    Whether to enable the MQTT Mosquitto broker.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11179]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11180]services.mosquitto.aclExtraConf

    Extra config to prepend to the ACL file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [11181]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11182]services.mosquitto.allowAnonymous

    Allow clients to connect without authentication.

    Type: boolean

    Default: false

    Declared by:

    [11183]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11184]services.mosquitto.checkPasswords

    Refuse connection when clients provide incorrect passwords.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11185]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11186]services.mosquitto.dataDir

    The data directory.

    Type: path

    Default: "/var/lib/mosquitto"

    Declared by:

    [11187]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11188]services.mosquitto.extraConf

    Extra config to append to `mosquitto.conf` file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [11189]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11190]services.mosquitto.host

    Host to listen on without SSL.

    Type: string

    Default: "127.0.0.1"

    Example: "0.0.0.0"

    Declared by:

    [11191]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11192]services.mosquitto.port

    Port on which to listen without SSL.

    Type: signed integer

    Default: 1883

    Example: 1883

    Declared by:

    [11193]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11194]services.mosquitto.ssl.enable

    Whether to enable SSL listener.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11195]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11196]services.mosquitto.ssl.cafile

    Path to PEM encoded CA certificates.

    Type: null or path

    Default: null

    Declared by:

    [11197]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11198]services.mosquitto.ssl.certfile

    Path to PEM encoded server certificate.

    Type: null or path

    Default: null

    Declared by:

    [11199]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11200]services.mosquitto.ssl.host

    Host to listen on with SSL.

    Type: string

    Default: "0.0.0.0"

    Example: "localhost"

    Declared by:

    [11201]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11202]services.mosquitto.ssl.keyfile

    Path to PEM encoded server key.

    Type: null or path

    Default: null

    Declared by:

    [11203]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11204]services.mosquitto.ssl.port

    Port on which to listen with SSL.

    Type: signed integer

    Default: 8883

    Example: 8883

    Declared by:

    [11205]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11206]services.mosquitto.users

    A set of users and their passwords and ACLs.

    Type: attribute set of submodules

    Example: { john = { acl = [ "topic readwrite john/#" ] ; password = "123456"; } ; }

    Declared by:

    [11207]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11208]services.mosquitto.users.<name>.acl

    Control client access to topics on the broker.

    Type: list of strings

    Example: [ "topic read A/B" "topic A/#" ]

    Declared by:

    [11209]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11210]services.mosquitto.users.<name>.hashedPassword

    Specifies the hashed password for the MQTT User. To generate hashed password install
    mosquitto package and use mosquitto_passwd.

    Type: null or string

    Default: null

    Declared by:

    [11211]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11212]services.mosquitto.users.<name>.hashedPasswordFile

    Specifies the path to a file containing the hashed password for the MQTT user. To generate
    hashed password install mosquitto package and use mosquitto_passwd.

    Type: null or string

    Default: null

    Example: "/path/to/file"

    Declared by:

    [11213]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11214]services.mosquitto.users.<name>.password

    Specifies the (clear text) password for the MQTT User.

    Type: null or string

    Default: null

    Declared by:

    [11215]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11216]services.mosquitto.users.<name>.passwordFile

    Specifies the path to a file containing the clear text password for the MQTT user.

    Type: null or string

    Default: null

    Example: "/path/to/file"

    Declared by:

    [11217]<nixpkgs/nixos/modules/services/networking/mosquitto.nix>

[11218]services.mpd.enable

    Whether to enable MPD, the music player daemon.

    Type: boolean

    Default: false

    Declared by:

    [11219]<nixpkgs/nixos/modules/services/audio/mpd.nix>

[11220]services.mpd.credentials

    Credentials and permissions for accessing the mpd server.

    Type: list of submodules

    Default: [ ]

    Example: [ { passwordFile = "/var/lib/secrets/mpd_readonly_password"; permissions = [ "read"
    ] ; } { passwordFile = "/var/lib/secrets/mpd_admin_password"; permissions = [ "read" "add"
    "control" "admin" ] ; } ]

    Declared by:

    [11221]<nixpkgs/nixos/modules/services/audio/mpd.nix>

[11222]services.mpd.credentials.*.passwordFile

    Path to file containing the password.

    Type: path

    Declared by:

    [11223]<nixpkgs/nixos/modules/services/audio/mpd.nix>

[11224]services.mpd.credentials.*.permissions

    List of permissions that are granted with this password. Permissions can be "read", "add",
    "control", "admin".

    Type: list of one of "read", "add", "control", "admin"s

    Default: [ "read" ]

    Declared by:

    [11225]<nixpkgs/nixos/modules/services/audio/mpd.nix>

[11226]services.mpd.dataDir

    The directory where MPD stores its state, tag cache, playlists etc. If left as the default
    value this directory will automatically be created before the MPD server starts, otherwise
    the sysadmin is responsible for ensuring the directory exists with appropriate ownership and
    permissions.

    Type: path

    Default: "/var/lib/mpd"

    Declared by:

    [11227]<nixpkgs/nixos/modules/services/audio/mpd.nix>

[11228]services.mpd.dbFile

    The path to MPD's database. If set to null the parameter is omitted from the configuration.

    Type: null or string

    Default: "\${dataDir}/tag_cache"

    Declared by:

    [11229]<nixpkgs/nixos/modules/services/audio/mpd.nix>

[11230]services.mpd.extraConfig

    Extra directives added to to the end of MPD's configuration file, mpd.conf. Basic
    configuration like file location and uid/gid is added automatically to the beginning of the
    file. For available options see man 5 mpd.conf'.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [11231]<nixpkgs/nixos/modules/services/audio/mpd.nix>

[11232]services.mpd.fluidsynth

    If set, add fluidsynth soundfont and configure the plugin.

    Type: boolean

    Default: false

    Declared by:

    [11233]<nixpkgs/nixos/modules/services/audio/mpd.nix>

[11234]services.mpd.group

    Group account under which MPD runs.

    Type: string

    Default: "mpd"

    Declared by:

    [11235]<nixpkgs/nixos/modules/services/audio/mpd.nix>

[11236]services.mpd.musicDirectory

    The directory or NFS/SMB network share where MPD reads music from. If left as the default
    value this directory will automatically be created before the MPD server starts, otherwise
    the sysadmin is responsible for ensuring the directory exists with appropriate ownership and
    permissions.

    Type: path or string matching the pattern (http|https|nfs|smb)://.+

    Default: "\${dataDir}/music"

    Declared by:

    [11237]<nixpkgs/nixos/modules/services/audio/mpd.nix>

[11238]services.mpd.network.listenAddress

    The address for the daemon to listen on. Use any to listen on all addresses.

    Type: string

    Default: "127.0.0.1"

    Example: "any"

    Declared by:

    [11239]<nixpkgs/nixos/modules/services/audio/mpd.nix>

[11240]services.mpd.network.port

    This setting is the TCP port that is desired for the daemon to get assigned to.

    Type: signed integer

    Default: 6600

    Declared by:

    [11241]<nixpkgs/nixos/modules/services/audio/mpd.nix>

[11242]services.mpd.playlistDirectory

    The directory where MPD stores playlists. If left as the default value this directory will
    automatically be created before the MPD server starts, otherwise the sysadmin is responsible
    for ensuring the directory exists with appropriate ownership and permissions.

    Type: path

    Default: "\${dataDir}/playlists"

    Declared by:

    [11243]<nixpkgs/nixos/modules/services/audio/mpd.nix>

[11244]services.mpd.startWhenNeeded

    If set, mpd is socket-activated; that is, instead of having it permanently running as a
    daemon, systemd will start it on the first incoming connection.

    Type: boolean

    Default: false

    Declared by:

    [11245]<nixpkgs/nixos/modules/services/audio/mpd.nix>

[11246]services.mpd.user

    User account under which MPD runs.

    Type: string

    Default: "mpd"

    Declared by:

    [11247]<nixpkgs/nixos/modules/services/audio/mpd.nix>

[11248]services.mpdscribble.enable

    Whether to enable mpdscribble.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11249]<nixpkgs/nixos/modules/services/audio/mpdscribble.nix>

[11250]services.mpdscribble.endpoints

    Endpoints to scrobble to. If the endpoint is one of "jamendo", "last.fm", "libre.fm",
    "listenbrainz" the url is set automatically.

    Type: attribute set of submodules

    Default: { }

    Example: { last.fm = { passwordFile = "/run/secrets/lastfm_password"; username = "foo"; } ; }

    Declared by:

    [11251]<nixpkgs/nixos/modules/services/audio/mpdscribble.nix>

[11252]services.mpdscribble.endpoints.<name>.passwordFile

    File containing the password, either as MD5SUM or cleartext.

    Type: null or string

    Declared by:

    [11253]<nixpkgs/nixos/modules/services/audio/mpdscribble.nix>

[11254]services.mpdscribble.endpoints.<name>.url

    The url endpoint where the scrobble API is listening.

    Type: string

    Default: ""

    Declared by:

    [11255]<nixpkgs/nixos/modules/services/audio/mpdscribble.nix>

[11256]services.mpdscribble.endpoints.<name>.username

    Username for the scrobble service.

    Type: string

    Declared by:

    [11257]<nixpkgs/nixos/modules/services/audio/mpdscribble.nix>

[11258]services.mpdscribble.host

    Host for the mpdscribble daemon to search for a mpd daemon on.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [11259]<nixpkgs/nixos/modules/services/audio/mpdscribble.nix>

[11260]services.mpdscribble.journalInterval

    How often should mpdscribble save the journal file? [seconds]

    Type: signed integer

    Default: 600

    Example: 60

    Declared by:

    [11261]<nixpkgs/nixos/modules/services/audio/mpdscribble.nix>

[11262]services.mpdscribble.passwordFile

    File containing the password for the mpd daemon. If there is a local mpd configured using
    services.mpd.credentials the default is automatically set to a matching passwordFile of the
    local mpd.

    Type: null or string

    Default: null

    Declared by:

    [11263]<nixpkgs/nixos/modules/services/audio/mpdscribble.nix>

[11264]services.mpdscribble.port

    Port for the mpdscribble daemon to search for a mpd daemon on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 6600

    Declared by:

    [11265]<nixpkgs/nixos/modules/services/audio/mpdscribble.nix>

[11266]services.mpdscribble.proxy

    HTTP proxy URL.

    Type: null or string

    Default: null

    Declared by:

    [11267]<nixpkgs/nixos/modules/services/audio/mpdscribble.nix>

[11268]services.mpdscribble.verbose

    Log level for the mpdscribble daemon.

    Type: signed integer

    Default: 1

    Declared by:

    [11269]<nixpkgs/nixos/modules/services/audio/mpdscribble.nix>

[11270]services.mstpd.enable

    Whether to enable the multiple spanning tree protocol daemon.

    Type: boolean

    Default: false

    Declared by:

    [11271]<nixpkgs/nixos/modules/services/networking/mstpd.nix>

[11272]services.mtprotoproxy.enable

    Whether to enable mtprotoproxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11273]<nixpkgs/nixos/modules/services/networking/mtprotoproxy.nix>

[11274]services.mtprotoproxy.adTag

    Tag for advertising that can be obtained from @MTProxybot.

    Type: null or string

    Default: null

    Example: "3c09c680b76ee91a4c25ad51f742267d"

    Declared by:

    [11275]<nixpkgs/nixos/modules/services/networking/mtprotoproxy.nix>

[11276]services.mtprotoproxy.extraConfig

    Extra configuration options for mtprotoproxy.

    Type: attribute set

    Default: { }

    Example: { STATS_PRINT_PERIOD = 600; }

    Declared by:

    [11277]<nixpkgs/nixos/modules/services/networking/mtprotoproxy.nix>

[11278]services.mtprotoproxy.port

    TCP port to accept mtproto connections on.

    Type: signed integer

    Default: 3256

    Declared by:

    [11279]<nixpkgs/nixos/modules/services/networking/mtprotoproxy.nix>

[11280]services.mtprotoproxy.secureOnly

    Don't allow users to connect in non-secure mode (without random padding).

    Type: boolean

    Default: true

    Declared by:

    [11281]<nixpkgs/nixos/modules/services/networking/mtprotoproxy.nix>

[11282]services.mtprotoproxy.users

    Allowed users and their secrets. A secret is a 32 characters long hex string.

    Type: attribute set of strings

    Example: { tg = "00000000000000000000000000000000"; tg2 = "0123456789abcdef0123456789abcdef";
    }

    Declared by:

    [11283]<nixpkgs/nixos/modules/services/networking/mtprotoproxy.nix>

[11284]services.mullvad-vpn.enable

    This option enables Mullvad VPN daemon.

    Type: boolean

    Default: false

    Declared by:

    [11285]<nixpkgs/nixos/modules/services/networking/mullvad-vpn.nix>

[11286]services.munge.enable

    Whether to enable munge service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11287]<nixpkgs/nixos/modules/services/security/munge.nix>

[11288]services.munge.password

    The path to a daemon's secret key.

    Type: path

    Default: "/etc/munge/munge.key"

    Declared by:

    [11289]<nixpkgs/nixos/modules/services/security/munge.nix>

[11290]services.munin-cron.enable

    Enable munin-cron. Takes care of all heavy lifting to collect data from nodes and draws
    graphs to html. Runs munin-update, munin-limits, munin-graphs and munin-html in that order.

    HTML output is in /var/www/munin/, configure your favourite webserver to serve static files.

    Type: boolean

    Default: false

    Declared by:

    [11291]<nixpkgs/nixos/modules/services/monitoring/munin.nix>

[11292]services.munin-cron.extraCSS

    Custom styling for the HTML that munin-cron generates. This will be appended to the CSS files
    used by munin-cron and will thus take precedence over the builtin styles.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    /* A simple dark theme. */
    html, body { background: #222222; }
    #header, #footer { background: #333333; }
    img.i, img.iwarn, img.icrit, img.iunkn {
      filter: invert(100%) hue-rotate(-30deg);
    }
    ''

    Declared by:

    [11293]<nixpkgs/nixos/modules/services/monitoring/munin.nix>

[11294]services.munin-cron.extraGlobalConfig

    munin.conf extra global configuration. See [11295]http://guide.munin-monitoring.org/en/latest
    /reference/munin.conf.html. Useful to setup notifications, see [11296]http://
    guide.munin-monitoring.org/en/latest/tutorial/alert.html

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    contact.email.command mail -s "Munin notification for ''${var:host}" someone@example.com
    ''

    Declared by:

    [11297]<nixpkgs/nixos/modules/services/monitoring/munin.nix>

[11298]services.munin-cron.hosts

    Definitions of hosts of nodes to collect data from. Needs at least one host for cron to
    succeed. See [11299]http://guide.munin-monitoring.org/en/latest/reference/munin.conf.html

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    [''${config.networking.hostName}]
    address localhost
    ''

    Declared by:

    [11300]<nixpkgs/nixos/modules/services/monitoring/munin.nix>

[11301]services.munin-node.enable

    Enable Munin Node agent. Munin node listens on 0.0.0.0 and by default accepts connections
    only from 127.0.0.1 for security reasons.

    See [11302]http://guide.munin-monitoring.org/en/latest/architecture/index.html.

    Type: boolean

    Default: false

    Declared by:

    [11303]<nixpkgs/nixos/modules/services/monitoring/munin.nix>

[11304]services.munin-node.disabledPlugins

    Munin plugins to disable, even if munin-node-configure --suggest tries to enable them. To
    disable a wildcard plugin, use an actual wildcard, as in the example.

    munin_stats is disabled by default as it tries to read /var/log/munin/munin-update.log for
    timing information, and the NixOS build of Munin does not write this file.

    Type: list of strings

    Default: [ "munin_stats" ]

    Example: [ "diskstats" "zfs_usage_*" ]

    Declared by:

    [11305]<nixpkgs/nixos/modules/services/monitoring/munin.nix>

[11306]services.munin-node.extraAutoPlugins

    Additional Munin plugins to autoconfigure, using munin-node-configure --suggest. These should
    be the actual paths to the plugin files (or directories containing them), not just their
    names.

    If you want to manually enable individual plugins instead, use
    services.munin-node.extraPlugins.

    Note that only plugins that have the 'autoconfig' capability will do anything if listed here,
    since plugins that cannot autoconfigure won't be automatically enabled by
    munin-node-configure.

    Plugins will be copied into the Nix store, and it will attempt to modify them to run properly
    by fixing hardcoded references to /bin, /usr/bin, /sbin, and /usr/sbin.

    Type: list of paths

    Default: [ ]

    Example:

    [
      /src/munin-contrib/plugins/zfs
      /src/munin-contrib/plugins/ssh
    ];

    Declared by:

    [11307]<nixpkgs/nixos/modules/services/monitoring/munin.nix>

[11308]services.munin-node.extraConfig

    munin-node.conf extra configuration. See [11309]http://guide.munin-monitoring.org/en/latest/
    reference/munin-node.conf.html

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [11310]<nixpkgs/nixos/modules/services/monitoring/munin.nix>

[11311]services.munin-node.extraPluginConfig

    plugin-conf.d extra plugin configuration. See [11312]http://guide.munin-monitoring.org/en/
    latest/plugin/use.html

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    [fail2ban_*]
    user root
    ''

    Declared by:

    [11313]<nixpkgs/nixos/modules/services/monitoring/munin.nix>

[11314]services.munin-node.extraPlugins

    Additional Munin plugins to activate. Keys are the name of the plugin symlink, values are the
    path to the underlying plugin script. You can use the same plugin script multiple times (e.g.
    for wildcard plugins).

    Note that these plugins do not participate in autoconfiguration. If you want to autoconfigure
    additional plugins, use services.munin-node.extraAutoPlugins.

    Plugins enabled in this manner take precedence over autoconfigured plugins.

    Plugins will be copied into the Nix store, and it will attempt to modify them to run properly
    by fixing hardcoded references to /bin, /usr/bin, /sbin, and /usr/sbin.

    Type: attribute set of paths

    Default: { }

    Example:

    {
      zfs_usage_bigpool = /src/munin-contrib/plugins/zfs/zfs_usage_;
      zfs_usage_smallpool = /src/munin-contrib/plugins/zfs/zfs_usage_;
      zfs_list = /src/munin-contrib/plugins/zfs/zfs_list;
    };

    Declared by:

    [11315]<nixpkgs/nixos/modules/services/monitoring/munin.nix>

[11316]services.murmur.enable

    If enabled, start the Murmur Mumble server.

    Type: boolean

    Default: false

    Declared by:

    [11317]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11318]services.murmur.package

    Overridable attribute of the murmur package to use.

    Type: package

    Default: "pkgs.murmur"

    Declared by:

    [11319]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11320]services.murmur.allowHtml

    Allow HTML in client messages, comments, and channel descriptions.

    Type: boolean

    Default: true

    Declared by:

    [11321]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11322]services.murmur.autobanAttempts

    Number of attempts a client is allowed to make in autobanTimeframe seconds, before being
    banned for autobanTime.

    Type: signed integer

    Default: 10

    Declared by:

    [11323]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11324]services.murmur.autobanTime

    The amount of time an IP ban lasts (in seconds).

    Type: signed integer

    Default: 300

    Declared by:

    [11325]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11326]services.murmur.autobanTimeframe

    Timeframe in which a client can connect without being banned for repeated attempts (in
    seconds).

    Type: signed integer

    Default: 120

    Declared by:

    [11327]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11328]services.murmur.bandwidth

    Maximum bandwidth (in bits per second) that clients may send speech at.

    Type: signed integer

    Default: 72000

    Declared by:

    [11329]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11330]services.murmur.bonjour

    Enable Bonjour auto-discovery, which allows clients over your LAN to automatically discover
    Murmur servers.

    Type: boolean

    Default: false

    Declared by:

    [11331]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11332]services.murmur.clientCertRequired

    Require clients to authenticate via certificates.

    Type: boolean

    Default: false

    Declared by:

    [11333]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11334]services.murmur.environmentFile

    Environment file as defined in systemd.exec(5).

    Secrets may be passed to the service without adding them to the world-readable Nix store, by
    specifying placeholder variables as the option value in Nix and setting these variables
    accordingly in the environment file.

      # snippet of murmur-related config
      services.murmur.password = "$MURMURD_PASSWORD";

      # content of the environment file
      MURMURD_PASSWORD=verysecretpassword

    Note that this file needs to be available on the host on which murmur is running.

    Type: null or path

    Default: null

    Example: "/var/lib/murmur/murmurd.env"

    Declared by:

    [11335]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11336]services.murmur.extraConfig

    Extra configuration to put into murmur.ini.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [11337]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11338]services.murmur.hostName

    Host to bind to. Defaults binding on all addresses.

    Type: string

    Default: ""

    Declared by:

    [11339]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11340]services.murmur.imgMsgLength

    Max length of image messages. Set 0 for no limit.

    Type: signed integer

    Default: 131072

    Declared by:

    [11341]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11342]services.murmur.logDays

    How long to store RPC logs for in the database. Set 0 to keep logs forever, or -1 to disable
    DB logging.

    Type: signed integer

    Default: 31

    Declared by:

    [11343]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11344]services.murmur.logFile

    Path to the log file for Murmur daemon. Empty means log to journald.

    Type: null or path

    Default: null

    Example: "/var/log/murmur/murmurd.log"

    Declared by:

    [11345]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11346]services.murmur.password

    Required password to join server, if specified.

    Type: string

    Default: ""

    Declared by:

    [11347]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11348]services.murmur.port

    Ports to bind to (UDP and TCP).

    Type: signed integer

    Default: 64738

    Declared by:

    [11349]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11350]services.murmur.registerHostname

    DNS hostname where your server can be reached. This is only needed if you want your server to
    be accessed by its hostname and not IP - but the name *must* resolve on the internet
    properly.

    Type: string

    Default: ""

    Declared by:

    [11351]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11352]services.murmur.registerName

    Public server registration name, and also the name of the Root channel. Even if you don't
    publicly register your server, you probably still want to set this.

    Type: string

    Default: ""

    Declared by:

    [11353]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11354]services.murmur.registerPassword

    Public server registry password, used authenticate your server to the registry to prevent
    impersonation; required for subsequent registry updates.

    Type: string

    Default: ""

    Declared by:

    [11355]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11356]services.murmur.registerUrl

    URL website for your server.

    Type: string

    Default: ""

    Declared by:

    [11357]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11358]services.murmur.sendVersion

    Send Murmur version in UDP response.

    Type: boolean

    Default: true

    Declared by:

    [11359]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11360]services.murmur.sslCa

    Path to your SSL CA certificate.

    Type: string

    Default: ""

    Declared by:

    [11361]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11362]services.murmur.sslCert

    Path to your SSL certificate.

    Type: string

    Default: ""

    Declared by:

    [11363]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11364]services.murmur.sslKey

    Path to your SSL key.

    Type: string

    Default: ""

    Declared by:

    [11365]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11366]services.murmur.textMsgLength

    Max length of text messages. Set 0 for no limit.

    Type: signed integer

    Default: 5000

    Declared by:

    [11367]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11368]services.murmur.users

    Maximum number of concurrent clients allowed.

    Type: signed integer

    Default: 100

    Declared by:

    [11369]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11370]services.murmur.welcometext

    Welcome message for connected clients.

    Type: string

    Default: ""

    Declared by:

    [11371]<nixpkgs/nixos/modules/services/networking/murmur.nix>

[11372]services.mwlib.nserve.enable

    Whether to enable nserve. Nserve is a HTTP server. The Collection extension is talking to
    that program directly. Nserve uses at least one qserve instance in order to distribute and
    manage jobs.

    Type: boolean

    Default: false

    Declared by:

    [11373]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11374]services.mwlib.nserve.address

    Specify network interface to listen on.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [11375]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11376]services.mwlib.nserve.port

    Specify port to listen on.

    Type: signed integer

    Default: 8899

    Declared by:

    [11377]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11378]services.mwlib.nserve.qserve

    Register qserve instance.

    Type: list of strings

    Default: [ "127.0.0.1:14311" ]

    Declared by:

    [11379]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11380]services.mwlib.nserve.user

    User to run as.

    Type: string

    Default: "nobody"

    Declared by:

    [11381]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11382]services.mwlib.nslave.enable

    Pulls new jobs from exactly one qserve instance and calls the zip and render programs in
    order to download article collections and convert them to different output formats. Nslave
    uses a cache directory to store the generated documents. Nslave also starts an internal http
    server serving the content of the cache directory.

    Type: boolean

    Default: false

    Declared by:

    [11383]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11384]services.mwlib.nslave.cachedir

    Directory to store generated documents.

    Type: path

    Default: "/var/cache/mwlib-nslave"

    Declared by:

    [11385]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11386]services.mwlib.nslave.http

    Internal http server serving the content of the cache directory. You have to enable it, or
    use your own way for serving files and set the http.url option accordingly.

    Type: submodule

    Default: { }

    Declared by:

    [11387]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11388]services.mwlib.nslave.http.enable

    Enable internal http server.

    Type: boolean

    Default: true

    Declared by:

    [11389]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11390]services.mwlib.nslave.http.address

    Specify network interface to listen on.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [11391]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11392]services.mwlib.nslave.http.port

    Port to listen to when serving files from cache.

    Type: signed integer

    Default: 8898

    Declared by:

    [11393]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11394]services.mwlib.nslave.http.url

    Specify URL for accessing generated files from cache. The Collection extension of Mediawiki
    won't be able to download files without it.

    Type: string

    Default: "http://localhost:8898/cache"

    Declared by:

    [11395]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11396]services.mwlib.nslave.numprocs

    Number of parallel jobs to be executed.

    Type: signed integer

    Default: 10

    Declared by:

    [11397]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11398]services.mwlib.nslave.user

    User to run as.

    Type: string

    Default: "nobody"

    Declared by:

    [11399]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11400]services.mwlib.qserve.enable

    A job queue server used to distribute and manage jobs. You should start one qserve instance
    for each machine that is supposed to render pdf files. Unless you’re operating the Wikipedia
    installation, one machine should suffice.

    Type: boolean

    Default: false

    Declared by:

    [11401]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11402]services.mwlib.qserve.address

    Specify network interface to listen on.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [11403]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11404]services.mwlib.qserve.allow

    List of allowed client IPs. Empty means any.

    Type: list of strings

    Default: [ "127.0.0.1" ]

    Declared by:

    [11405]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11406]services.mwlib.qserve.datadir

    qserve data directory (FIXME: unused?)

    Type: path

    Default: "/var/lib/mwlib-qserve"

    Declared by:

    [11407]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11408]services.mwlib.qserve.port

    Specify port to listen on.

    Type: signed integer

    Default: 14311

    Declared by:

    [11409]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11410]services.mwlib.qserve.user

    User to run as.

    Type: string

    Default: "nobody"

    Declared by:

    [11411]<nixpkgs/nixos/modules/services/misc/mwlib.nix>

[11412]services.mxisd.enable

    Whether to enable matrix federated identity server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11413]<nixpkgs/nixos/modules/services/networking/mxisd.nix>

[11414]services.mxisd.package

    The mxisd/ma1sd package to use

    Type: package

    Default: "pkgs.ma1sd"

    Declared by:

    [11415]<nixpkgs/nixos/modules/services/networking/mxisd.nix>

[11416]services.mxisd.dataDir

    Where data mxisd/ma1sd uses resides

    Type: string

    Default: "/var/lib/mxisd"

    Declared by:

    [11417]<nixpkgs/nixos/modules/services/networking/mxisd.nix>

[11418]services.mxisd.extraConfig

    Extra options merged into the mxisd/ma1sd configuration

    Type: attribute set

    Default: { }

    Declared by:

    [11419]<nixpkgs/nixos/modules/services/networking/mxisd.nix>

[11420]services.mxisd.matrix.domain

    the domain of the matrix homeserver

    Type: string

    Declared by:

    [11421]<nixpkgs/nixos/modules/services/networking/mxisd.nix>

[11422]services.mxisd.server.name

    Public hostname of mxisd/ma1sd, if different from the Matrix domain.

    Type: null or string

    Default: null

    Declared by:

    [11423]<nixpkgs/nixos/modules/services/networking/mxisd.nix>

[11424]services.mxisd.server.port

    HTTP port to listen on (unencrypted)

    Type: null or signed integer

    Default: null

    Declared by:

    [11425]<nixpkgs/nixos/modules/services/networking/mxisd.nix>

[11426]services.mysql.enable

    Whether to enable MySQL server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11427]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11428]services.mysql.package

    Which MySQL derivation to use. MariaDB packages are supported too.

    Type: package

    Example:

    pkgs.mariadb

    Declared by:

    [11429]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11430]services.mysql.bind

    Address to bind to. The default is to bind to all addresses.

    Type: null or string

    Default: null

    Example:

    0.0.0.0

    Declared by:

    [11431]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11432]services.mysql.configFile

    Override the configuration file used by MySQL. By default, NixOS generates one automatically
    from services.mysql.settings.

    Type: path

    Default: "settingsFile"

    Example:

    pkgs.writeText "my.cnf" ''
      [mysqld]
      datadir = /var/lib/mysql
      bind-address = 127.0.0.1
      port = 3336

      !includedir /etc/mysql/conf.d/
    '';

    Declared by:

    [11433]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11434]services.mysql.dataDir

    Location where MySQL stores its table files.

    Type: path

    Example: "/var/lib/mysql"

    Declared by:

    [11435]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11436]services.mysql.ensureDatabases

    Ensures that the specified databases exist. This option will never delete existing databases,
    especially not when the value of this option is changed. This means that databases created
    once through this option or otherwise have to be removed manually.

    Type: list of strings

    Default: [ ]

    Example: [ "nextcloud" "matomo" ]

    Declared by:

    [11437]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11438]services.mysql.ensureUsers

    Ensures that the specified users exist and have at least the ensured permissions. The MySQL
    users will be identified using Unix socket authentication. This authenticates the Unix user
    with the same name only, and that without the need for a password. This option will never
    delete existing users or remove permissions, especially not when the value of this option is
    changed. This means that users created and permissions assigned once through this option or
    otherwise have to be removed manually.

    Type: list of submodules

    Default: [ ]

    Example:

    [
      {
        name = "nextcloud";
        ensurePermissions = {
          "nextcloud.*" = "ALL PRIVILEGES";
        };
      }
      {
        name = "backup";
        ensurePermissions = {
          "*.*" = "SELECT, LOCK TABLES";
        };
      }
    ]

    Declared by:

    [11439]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11440]services.mysql.ensureUsers.*.ensurePermissions

    Permissions to ensure for the user, specified as attribute set. The attribute names specify
    the database and tables to grant the permissions for, separated by a dot. You may use
    wildcards here. The attribute values specfiy the permissions to grant. You may specify one or
    multiple comma-separated SQL privileges here.

    For more information on how to specify the target and on which privileges exist, see the 
    [11441]GRANT syntax. The attributes are used as GRANT ${attrName} ON ${attrValue}.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      "database.*" = "ALL PRIVILEGES";
      "*.*" = "SELECT, LOCK TABLES";
    }

    Declared by:

    [11442]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11443]services.mysql.ensureUsers.*.name

    Name of the user to ensure.

    Type: string

    Declared by:

    [11444]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11445]services.mysql.extraOptions

    Provide extra options to the MySQL configuration file.

    Please note, that these options are added to the [mysqld] section so you don't need to
    explicitly state it again.

    Type: null or strings concatenated with "\n"

    Default: null

    Example:

    ''
    key_buffer_size = 6G
    table_cache = 1600
    log-error = /var/log/mysql_err.log
    ''

    Declared by:

    [11446]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11447]services.mysql.group

    Group under which MySQL runs.

    Type: string

    Default: "mysql"

    Declared by:

    [11448]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11449]services.mysql.initialDatabases

    List of database names and their initial schemas that should be used to create databases on
    the first startup of MySQL. The schema attribute is optional: If not specified, an empty
    database is created.

    Type: list of submodules

    Default: [ ]

    Example: [ { name = "foodatabase"; schema = ./foodatabase.sql; } { name = "bardatabase"; } ]

    Declared by:

    [11450]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11451]services.mysql.initialDatabases.*.name

    The name of the database to create.

    Type: string

    Declared by:

    [11452]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11453]services.mysql.initialDatabases.*.schema

    The initial schema of the database; if null (the default), an empty database is created.

    Type: null or path

    Default: null

    Declared by:

    [11454]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11455]services.mysql.initialScript

    A file containing SQL statements to be executed on the first startup. Can be used for
    granting certain permissions on the database.

    Type: null or path

    Default: null

    Declared by:

    [11456]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11457]services.mysql.port

    Port of MySQL.

    Type: signed integer

    Default: 3306

    Declared by:

    [11458]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11459]services.mysql.replication.masterHost

    Hostname of the MySQL master server.

    Type: string

    Declared by:

    [11460]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11461]services.mysql.replication.masterPassword

    Password of the MySQL replication user.

    Type: string

    Declared by:

    [11462]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11463]services.mysql.replication.masterPort

    Port number on which the MySQL master server runs.

    Type: signed integer

    Default: 3306

    Declared by:

    [11464]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11465]services.mysql.replication.masterUser

    Username of the MySQL replication user.

    Type: string

    Declared by:

    [11466]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11467]services.mysql.replication.role

    Role of the MySQL server instance.

    Type: one of "master", "slave", "none"

    Default: "none"

    Declared by:

    [11468]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11469]services.mysql.replication.serverId

    Id of the MySQL server instance. This number must be unique for each instance.

    Type: signed integer

    Default: 1

    Declared by:

    [11470]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11471]services.mysql.replication.slaveHost

    Hostname of the MySQL slave server.

    Type: string

    Declared by:

    [11472]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11473]services.mysql.settings

    MySQL configuration. Refer to [11474]https://dev.mysql.com/doc/refman/5.7/en/
    server-system-variables.html, [11475]https://dev.mysql.com/doc/refman/8.0/en/
    server-system-variables.html, and [11476]https://mariadb.com/kb/en/server-system-variables/
    for details on supported values.

    Note: MySQL configuration options such as --quick should be treated as boolean options and
    provided values such as true, false, 1, or 0. See the provided example below.

    Type: attribute set of attribute set of boolean or signed integer or string or list of
    stringsss

    Default: { }

    Example:

    {
      mysqld = {
        key_buffer_size = "6G";
        table_cache = 1600;
        log-error = "/var/log/mysql_err.log";
        plugin-load-add = [ "server_audit" "ed25519=auth_ed25519" ];
      };
      mysqldump = {
        quick = true;
        max_allowed_packet = "16M";
      };
    }

    Declared by:

    [11477]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11478]services.mysql.user

    User account under which MySQL runs.

    Type: string

    Default: "mysql"

    Declared by:

    [11479]<nixpkgs/nixos/modules/services/databases/mysql.nix>

[11480]services.mysqlBackup.enable

    Whether to enable MySQL backups.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11481]<nixpkgs/nixos/modules/services/backup/mysql-backup.nix>

[11482]services.mysqlBackup.calendar

    Configured when to run the backup service systemd unit (DayOfWeek Year-Month-Day
    Hour:Minute:Second).

    Type: string

    Default: "01:15:00"

    Declared by:

    [11483]<nixpkgs/nixos/modules/services/backup/mysql-backup.nix>

[11484]services.mysqlBackup.databases

    List of database names to dump.

    Type: list of strings

    Default: [ ]

    Declared by:

    [11485]<nixpkgs/nixos/modules/services/backup/mysql-backup.nix>

[11486]services.mysqlBackup.location

    Location to put the gzipped MySQL database dumps.

    Type: path

    Default: "/var/backup/mysql"

    Declared by:

    [11487]<nixpkgs/nixos/modules/services/backup/mysql-backup.nix>

[11488]services.mysqlBackup.singleTransaction

    Whether to create database dump in a single transaction

    Type: boolean

    Default: false

    Declared by:

    [11489]<nixpkgs/nixos/modules/services/backup/mysql-backup.nix>

[11490]services.mysqlBackup.user

    User to be used to perform backup.

    Type: string

    Default: "mysqlbackup"

    Declared by:

    [11491]<nixpkgs/nixos/modules/services/backup/mysql-backup.nix>

[11492]services.n8n.enable

    Whether to enable n8n server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11493]<nixpkgs/nixos/modules/services/misc/n8n.nix>

[11494]services.n8n.openFirewall

    Open ports in the firewall for the n8n web interface.

    Type: boolean

    Default: false

    Declared by:

    [11495]<nixpkgs/nixos/modules/services/misc/n8n.nix>

[11496]services.n8n.settings

    Configuration for n8n, see [11497]https://docs.n8n.io/reference/configuration.html for
    supported values.

    Type: JSON value

    Default: { }

    Declared by:

    [11498]<nixpkgs/nixos/modules/services/misc/n8n.nix>

[11499]services.nagios.enable

    Whether to enable [11500]Nagios to monitor your system or network..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11501]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11502]services.nagios.enableWebInterface

    Whether to enable the Nagios web interface. You should also enable Apache
    (services.httpd.enable).

    Type: boolean

    Default: false

    Declared by:

    [11503]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11504]services.nagios.cgiConfigFile

    Derivation for the configuration file of Nagios CGI scripts that can be used in web servers
    for running the Nagios web interface.

    Type: package

    Default: "nagiosCGICfgFile"

    Declared by:

    [11505]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11506]services.nagios.extraConfig

    Configuration to add to /etc/nagios.cfg

    Type: attribute set of strings

    Default: { }

    Example: { debug_file = "/var/log/nagios/debug.log"; debug_level = "-1"; }

    Declared by:

    [11507]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11508]services.nagios.mainConfigFile

    If non-null, overrides the main configuration file of Nagios.

    Type: null or package

    Default: null

    Declared by:

    [11509]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11510]services.nagios.objectDefs

    A list of Nagios object configuration files that must define the hosts, host groups, services
    and contacts for the network that you want Nagios to monitor.

    Type: list of paths

    Example:

    [ ./objects.cfg ]

    Declared by:

    [11511]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11512]services.nagios.plugins

    Packages to be added to the Nagios PATH. Typically used to add plugins, but can be anything.

    Type: list of packages

    Default: "[pkgs.nagiosPluginsOfficial pkgs.ssmtp pkgs.mailutils]"

    Declared by:

    [11513]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11514]services.nagios.validateConfig

    if true, the syntax of the nagios configuration file is checked at build time

    Type: boolean

    Default: false

    Declared by:

    [11515]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11516]services.nagios.virtualHost

    Apache configuration can be done by adapting services.httpd.virtualHosts. See [11517]
    services.httpd.virtualHosts for further information.

    Type: submodule

    Example:

    { hostName = "example.org";
      adminAddr = "webmaster@example.org";
      enableSSL = true;
      sslServerCert = "/var/lib/acme/example.org/full.pem";
      sslServerKey = "/var/lib/acme/example.org/key.pem";
    }

    Declared by:

    [11518]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11519]services.nagios.virtualHost.enableACME

    Whether to ask Let's Encrypt to sign a certificate for this vhost. Alternately, you can use
    an existing certificate through useACMEHost.

    Type: boolean

    Default: false

    Declared by:

    [11520]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11521]services.nagios.virtualHost.enableUserDir

    Whether to enable serving ~/public_html as /~username.

    Type: boolean

    Default: false

    Declared by:

    [11522]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11523]services.nagios.virtualHost.acmeRoot

    Directory for the acme challenge which is PUBLIC, don't put certs or keys in here

    Type: string

    Default: "/var/lib/acme/acme-challenge"

    Declared by:

    [11524]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11525]services.nagios.virtualHost.addSSL

    Whether to enable HTTPS in addition to plain HTTP. This will set defaults for listen to
    listen on all interfaces on the respective default ports (80, 443).

    Type: boolean

    Default: false

    Declared by:

    [11526]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11527]services.nagios.virtualHost.adminAddr

    E-mail address of the server administrator.

    Type: null or string

    Default: null

    Example: "admin@example.org"

    Declared by:

    [11528]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11529]services.nagios.virtualHost.documentRoot

    The path of Apache's document root directory. If left undefined, an empty directory in the
    Nix store will be used as root.

    Type: null or path

    Default: null

    Example: "/data/webserver/docs"

    Declared by:

    [11530]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11531]services.nagios.virtualHost.extraConfig

    These lines go to httpd.conf verbatim. They will go after directories and directory aliases
    defined by default.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    <Directory /home>
      Options FollowSymlinks
      AllowOverride All
    </Directory>
    ''

    Declared by:

    [11532]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11533]services.nagios.virtualHost.forceSSL

    Whether to add a separate nginx server block that permanently redirects (301) all plain HTTP
    traffic to HTTPS. This will set defaults for listen to listen on all interfaces on the
    respective default ports (80, 443), where the non-SSL listens are used for the redirect
    vhosts.

    Type: boolean

    Default: false

    Declared by:

    [11534]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11535]services.nagios.virtualHost.globalRedirect

    If set, all requests for this host are redirected permanently to the given URL.

    Type: null or string

    Default: null

    Example: "http://newserver.example.org/"

    Declared by:

    [11536]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11537]services.nagios.virtualHost.hostName

    Canonical hostname for the server.

    Type: string

    Default: "‹name›"

    Declared by:

    [11538]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11539]services.nagios.virtualHost.http2

    Whether to enable HTTP 2. HTTP/2 is supported in all multi-processing modules that come with
    httpd. However, if you use the prefork mpm, there will be severe restrictions. Refer to 
    [11540]https://httpd.apache.org/docs/2.4/howto/http2.html#mpm-config for details.

    Type: boolean

    Default: true

    Declared by:

    [11541]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11542]services.nagios.virtualHost.listen

    Listen addresses and ports for this virtual host.

    Note: This option overrides addSSL, forceSSL and onlySSL.

    Type: list of submodules

    Default: [ ]

    Example: [ { ip = "195.154.1.1"; port = 443; ssl = true; } { ip = "192.154.1.1"; port = 80; }
    { ip = "*"; port = 8080; } ]

    Declared by:

    [11543]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11544]services.nagios.virtualHost.listen.*.ip

    IP to listen on. 0.0.0.0 for IPv4 only, * for all.

    Type: string

    Default: "*"

    Declared by:

    [11545]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11546]services.nagios.virtualHost.listen.*.port

    Port to listen on

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Declared by:

    [11547]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11548]services.nagios.virtualHost.listen.*.ssl

    Whether to enable SSL (https) support.

    Type: boolean

    Default: false

    Declared by:

    [11549]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11550]services.nagios.virtualHost.locations

    Declarative location config. See [11551]https://httpd.apache.org/docs/2.4/mod/core.html#
    location for details.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "/" = {
        proxyPass = "http://localhost:3000";
      };
      "/foo/bar.png" = {
        alias = "/home/eelco/some-file.png";
      };
    };

    Declared by:

    [11552]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11553]services.nagios.virtualHost.locations.<name>.alias

    Alias directory for requests. See [11554]https://httpd.apache.org/docs/2.4/mod/mod_alias.html
    #alias.

    Type: null or path

    Default: null

    Example: "/your/alias/directory"

    Declared by:

    [11555]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11556]services.nagios.virtualHost.locations.<name>.extraConfig

    These lines go to the end of the location verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [11557]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11558]services.nagios.virtualHost.locations.<name>.index

    Adds DirectoryIndex directive. See [11559]https://httpd.apache.org/docs/2.4/mod/mod_dir.html#
    directoryindex.

    Type: null or string

    Default: null

    Example: "index.php index.html"

    Declared by:

    [11560]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11561]services.nagios.virtualHost.locations.<name>.priority

    Order of this location block in relation to the others in the vhost. The semantics are the
    same as with `lib.mkOrder`. Smaller values have a greater priority.

    Type: signed integer

    Default: 1000

    Declared by:

    [11562]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11563]services.nagios.virtualHost.locations.<name>.proxyPass

    Sets up a simple reverse proxy as described by [11564]https://httpd.apache.org/docs/2.4/howto
    /reverse_proxy.html#simple.

    Type: null or string

    Default: null

    Example: "http://www.example.org/"

    Declared by:

    [11565]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11566]services.nagios.virtualHost.logFormat

    Log format for Apache's log files. Possible values are: combined, common, referer, agent.

    Type: string

    Default: "common"

    Example: "combined"

    Declared by:

    [11567]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11568]services.nagios.virtualHost.onlySSL

    Whether to enable HTTPS and reject plain HTTP connections. This will set defaults for listen
    to listen on all interfaces on port 443.

    Type: boolean

    Default: false

    Declared by:

    [11569]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11570]services.nagios.virtualHost.robotsEntries

    Specification of pages to be ignored by web crawlers. See [11571]http://www.robotstxt.org/
    for details.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "Disallow: /foo/"

    Declared by:

    [11572]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11573]services.nagios.virtualHost.servedDirs

    This option provides a simple way to serve static directories.

    Type: list of attribute sets

    Default: [ ]

    Example: [ { dir = "/home/eelco/Dev/nix-homepage"; urlPath = "/nix"; } ]

    Declared by:

    [11574]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11575]services.nagios.virtualHost.servedFiles

    This option provides a simple way to serve individual, static files.

    Note: This option has been deprecated and will be removed in a future version of NixOS. You
    can achieve the same result by making use of the locations.<name>.alias option.

    Type: list of attribute sets

    Default: [ ]

    Example: [ { file = "/home/eelco/some-file.png"; urlPath = "/foo/bar.png"; } ]

    Declared by:

    [11576]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11577]services.nagios.virtualHost.serverAliases

    Additional names of virtual hosts served by this virtual host configuration.

    Type: list of strings

    Default: [ ]

    Example: [ "www.example.org" "www.example.org:8080" "example.org" ]

    Declared by:

    [11578]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11579]services.nagios.virtualHost.sslServerCert

    Path to server SSL certificate.

    Type: path

    Example: "/var/host.cert"

    Declared by:

    [11580]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11581]services.nagios.virtualHost.sslServerChain

    Path to server SSL chain file.

    Type: null or path

    Default: null

    Example: "/var/ca.pem"

    Declared by:

    [11582]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11583]services.nagios.virtualHost.sslServerKey

    Path to server SSL certificate key.

    Type: path

    Example: "/var/host.key"

    Declared by:

    [11584]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11585]services.nagios.virtualHost.useACMEHost

    A host of an existing Let's Encrypt certificate to use. This is useful if you have many
    subdomains and want to avoid hitting the [11586]rate limit. Alternately, you can generate a
    certificate through enableACME. Note that this option does not create any certificates, nor
    it does add subdomains to existing ones – you will need to create them manually using [11587]
    security.acme.certs.

    Type: null or string

    Default: null

    Declared by:

    [11588]<nixpkgs/nixos/modules/services/monitoring/nagios.nix>

[11589]services.namecoind.enable

    Whether to enable namecoind, Namecoin client.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11590]<nixpkgs/nixos/modules/services/networking/namecoind.nix>

[11591]services.namecoind.extraNodes

    List of additional peer IP addresses to connect to.

    Type: list of strings

    Default: [ ]

    Declared by:

    [11592]<nixpkgs/nixos/modules/services/networking/namecoind.nix>

[11593]services.namecoind.generate

    Whether to generate (mine) Namecoins.

    Type: boolean

    Default: false

    Declared by:

    [11594]<nixpkgs/nixos/modules/services/networking/namecoind.nix>

[11595]services.namecoind.rpc.address

    IP address the RPC server will bind to.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [11596]<nixpkgs/nixos/modules/services/networking/namecoind.nix>

[11597]services.namecoind.rpc.allowFrom

    List of IP address ranges allowed to use the RPC API. Wiledcards (*) can be user to specify a
    range.

    Type: list of strings

    Default: [ "127.0.0.1" ]

    Declared by:

    [11598]<nixpkgs/nixos/modules/services/networking/namecoind.nix>

[11599]services.namecoind.rpc.certificate

    Certificate file for securing RPC connections.

    Type: null or path

    Default: null

    Example: "/var/lib/namecoind/server.cert"

    Declared by:

    [11600]<nixpkgs/nixos/modules/services/networking/namecoind.nix>

[11601]services.namecoind.rpc.key

    Key file for securing RPC connections.

    Type: null or path

    Default: null

    Example: "/var/lib/namecoind/server.pem"

    Declared by:

    [11602]<nixpkgs/nixos/modules/services/networking/namecoind.nix>

[11603]services.namecoind.rpc.password

    Password for RPC connections.

    Type: null or string

    Default: null

    Declared by:

    [11604]<nixpkgs/nixos/modules/services/networking/namecoind.nix>

[11605]services.namecoind.rpc.port

    Port the RPC server will bind to.

    Type: signed integer

    Default: 8332

    Declared by:

    [11606]<nixpkgs/nixos/modules/services/networking/namecoind.nix>

[11607]services.namecoind.rpc.user

    User name for RPC connections.

    Type: null or string

    Default: null

    Declared by:

    [11608]<nixpkgs/nixos/modules/services/networking/namecoind.nix>

[11609]services.namecoind.trustedNodes

    List of the only peer IP addresses to connect to. If specified no other connection will be
    made.

    Type: list of strings

    Default: [ ]

    Declared by:

    [11610]<nixpkgs/nixos/modules/services/networking/namecoind.nix>

[11611]services.namecoind.wallet

    Wallet file. The ownership of the file has to be namecoin:namecoin, and the permissions must
    be 0640.

    Type: path

    Default: "/var/lib/namecoind/wallet.dat"

    Declared by:

    [11612]<nixpkgs/nixos/modules/services/networking/namecoind.nix>

[11613]services.nar-serve.enable

    Whether to enable Serve NAR file contents via HTTP.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11614]<nixpkgs/nixos/modules/services/networking/nar-serve.nix>

[11615]services.nar-serve.cacheURL

    Binary cache URL to connect to.

    The URL format is compatible with the nix remote url style, such as: - http://, https:// for
    binary caches via HTTP or HTTPS - s3:// for binary caches stored in Amazon S3 - gs:// for
    binary caches stored in Google Cloud Storage

    Type: string

    Default: "https://cache.nixos.org/"

    Declared by:

    [11616]<nixpkgs/nixos/modules/services/networking/nar-serve.nix>

[11617]services.nar-serve.port

    Port number where nar-serve will listen on.

    Type: signed integer

    Default: 8383

    Declared by:

    [11618]<nixpkgs/nixos/modules/services/networking/nar-serve.nix>

[11619]services.ncdns.enable

    Whether to enable ncdns, a Go daemon to bridge Namecoin to DNS. To resolve .bit domains set
    services.namecoind.enable = true; and an RPC username/password .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11620]<nixpkgs/nixos/modules/services/networking/ncdns.nix>

[11621]services.ncdns.address

    The IP address the ncdns resolver will bind to. Leave this unchanged if you do not wish to
    directly expose the resolver.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [11622]<nixpkgs/nixos/modules/services/networking/ncdns.nix>

[11623]services.ncdns.dnssec.enable

    Whether to enable DNSSEC support in ncdns. This will generate KSK and ZSK keypairs (unless
    provided via the options services.ncdns.dnssec.publicKey, services.ncdns.dnssec.privateKey
    etc.) and add a trust anchor to recursive resolvers .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11624]<nixpkgs/nixos/modules/services/networking/ncdns.nix>

[11625]services.ncdns.dnssec.keys.private

    Path to the file containing the KSK private key.

    Type: path

    Default: "/var/lib/ncdns/bit.private"

    Declared by:

    [11626]<nixpkgs/nixos/modules/services/networking/ncdns.nix>

[11627]services.ncdns.dnssec.keys.public

    Path to the file containing the KSK public key. The key can be generated using the
    dnssec-keygen command, provided by the package bind as follows:

    $ dnssec-keygen -a RSASHA256 -3 -b 2048 -f KSK bit

    Type: path

    Default: "/var/lib/ncdns/bit.key"

    Declared by:

    [11628]<nixpkgs/nixos/modules/services/networking/ncdns.nix>

[11629]services.ncdns.dnssec.keys.zonePrivate

    Path to the file containing the ZSK private key.

    Type: path

    Default: "/var/lib/ncdns/bit-zone.private"

    Declared by:

    [11630]<nixpkgs/nixos/modules/services/networking/ncdns.nix>

[11631]services.ncdns.dnssec.keys.zonePublic

    Path to the file containing the ZSK public key. The key can be generated using the
    dnssec-keygen command, provided by the package bind as follows:

    $ dnssec-keygen -a RSASHA256 -3 -b 2048 bit

    Type: path

    Default: "/var/lib/ncdns/bit-zone.key"

    Declared by:

    [11632]<nixpkgs/nixos/modules/services/networking/ncdns.nix>

[11633]services.ncdns.identity.address

    The IP address the hostname specified in services.ncdns.identity.hostname should resolve to.
    If you are only using ncdns locally you can ignore this.

    Type: string

    Default: "127.127.127.127"

    Declared by:

    [11634]<nixpkgs/nixos/modules/services/networking/ncdns.nix>

[11635]services.ncdns.identity.hostmaster

    An email address for the SOA record at the bit zone. If you are only using ncdns locally you
    can ignore this.

    Type: string

    Default: ""

    Example: "root@example.com"

    Declared by:

    [11636]<nixpkgs/nixos/modules/services/networking/ncdns.nix>

[11637]services.ncdns.identity.hostname

    The hostname of this ncdns instance, which defaults to the machine hostname. If specified,
    ncdns lists the hostname as an NS record at the zone apex:

    bit. IN NS ns1.example.com.

    If unset ncdns will generate an internal psuedo-hostname under the zone, which will resolve
    to the value of services.ncdns.identity.address. If you are only using ncdns locally you can
    ignore this.

    Type: string

    Default: "nixos"

    Example: "example.com"

    Declared by:

    [11638]<nixpkgs/nixos/modules/services/networking/ncdns.nix>

[11639]services.ncdns.port

    The port the ncdns resolver will bind to.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 5333

    Declared by:

    [11640]<nixpkgs/nixos/modules/services/networking/ncdns.nix>

[11641]services.ncdns.settings

    ncdns settings. Use this option to configure ncds settings not exposed in a NixOS option or
    to bypass one. See the example ncdns.conf file at [11642] https://git.io/JfX7g for the
    available options.

    Type: ncdns.conf configuration type. The format consists of an attribute set of settings.
    Each setting can be either `null`, a value or an attribute set. The allowed values are
    integers, strings, booleans or paths.

    Default: { }

    Example:

    { # enable webserver
      ncdns.httplistenaddr = ":8202";

      # synchronize TLS certs
      certstore.nss = true;
      # note: all paths are relative to the config file
      certstore.nsscertdir =  "../../var/lib/ncdns";
      certstore.nssdbdir = "../../home/alice/.pki/nssdb";
    }

    Declared by:

    [11643]<nixpkgs/nixos/modules/services/networking/ncdns.nix>

[11644]services.ndppd.enable

    Whether to enable daemon that proxies NDP (Neighbor Discovery Protocol) messages between
    interfaces.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11645]<nixpkgs/nixos/modules/services/networking/ndppd.nix>

[11646]services.ndppd.configFile

    Path to configuration file.

    Type: null or path

    Default: null

    Declared by:

    [11647]<nixpkgs/nixos/modules/services/networking/ndppd.nix>

[11648]services.ndppd.interface

    Interface which is on link-level with router. (Legacy option, use services.ndppd.proxies.
    <interface>.rules.<network> instead)

    Type: null or string

    Default: null

    Example: "eth0"

    Declared by:

    [11649]<nixpkgs/nixos/modules/services/networking/ndppd.nix>

[11650]services.ndppd.network

    Network that we proxy. (Legacy option, use services.ndppd.proxies.<interface>.rules.<network>
    instead)

    Type: null or string

    Default: null

    Example: "1111::/64"

    Declared by:

    [11651]<nixpkgs/nixos/modules/services/networking/ndppd.nix>

[11652]services.ndppd.proxies

    This sets up a listener, that will listen for any Neighbor Solicitation messages, and respond
    to them according to a set of rules.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      eth0.rules."1111::/64" = {};
    }

    Declared by:

    [11653]<nixpkgs/nixos/modules/services/networking/ndppd.nix>

[11654]services.ndppd.proxies.<name>.interface

    Listen for any Neighbor Solicitation messages on this interface, and respond to them
    according to a set of rules. Defaults to the name of the attrset.

    Type: null or string

    Default: null

    Declared by:

    [11655]<nixpkgs/nixos/modules/services/networking/ndppd.nix>

[11656]services.ndppd.proxies.<name>.router

    Turns on or off the router flag for Neighbor Advertisement Messages.

    Type: boolean

    Default: true

    Declared by:

    [11657]<nixpkgs/nixos/modules/services/networking/ndppd.nix>

[11658]services.ndppd.proxies.<name>.rules

    This is a rule that the target address is to match against. If no netmask is provided, /128
    is assumed. You may have several rule sections, and the addresses may or may not overlap.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [11659]<nixpkgs/nixos/modules/services/networking/ndppd.nix>

[11660]services.ndppd.proxies.<name>.rules.<name>.interface

    Interface to use when method is iface.

    Type: null or string

    Default: null

    Declared by:

    [11661]<nixpkgs/nixos/modules/services/networking/ndppd.nix>

[11662]services.ndppd.proxies.<name>.rules.<name>.method

    static: Immediately answer any Neighbor Solicitation Messages (if they match the IP rule).
    iface: Forward the Neighbor Solicitation Message through the specified interface and only
    respond if a matching Neighbor Advertisement Message is received. auto: Same as iface, but
    instead of manually specifying the outgoing interface, check for a matching route in /proc/
    net/ipv6_route.

    Type: one of "static", "iface", "auto"

    Default: "auto"

    Declared by:

    [11663]<nixpkgs/nixos/modules/services/networking/ndppd.nix>

[11664]services.ndppd.proxies.<name>.rules.<name>.network

    This is the target address is to match against. If no netmask is provided, /128 is assumed.
    The addresses of serveral rules may or may not overlap. Defaults to the name of the attrset.

    Type: null or string

    Default: null

    Declared by:

    [11665]<nixpkgs/nixos/modules/services/networking/ndppd.nix>

[11666]services.ndppd.proxies.<name>.timeout

    Controls how long to wait for a Neighbor Advertisment Message before invalidating the entry,
    in milliseconds.

    Type: signed integer

    Default: 500

    Declared by:

    [11667]<nixpkgs/nixos/modules/services/networking/ndppd.nix>

[11668]services.ndppd.proxies.<name>.ttl

    Controls how long a valid or invalid entry remains in the cache, in milliseconds.

    Type: signed integer

    Default: 30000

    Declared by:

    [11669]<nixpkgs/nixos/modules/services/networking/ndppd.nix>

[11670]services.ndppd.routeTTL

    This tells 'ndppd' how often to reload the route file /proc/net/ipv6_route, in milliseconds.

    Type: signed integer

    Default: 30000

    Declared by:

    [11671]<nixpkgs/nixos/modules/services/networking/ndppd.nix>

[11672]services.neard.enable

    Whether to enable neard, NFC daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11673]<nixpkgs/nixos/modules/services/desktops/neard.nix>

[11674]services.nebula.networks

    Nebula network definitions.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [11675]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11676]services.nebula.networks.<name>.enable

    Enable or disable this network.

    Type: boolean

    Default: true

    Declared by:

    [11677]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11678]services.nebula.networks.<name>.package

    Nebula derivation to use.

    Type: package

    Default: "pkgs.nebula"

    Declared by:

    [11679]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11680]services.nebula.networks.<name>.ca

    Path to the certificate authority certificate.

    Type: path

    Example: "/etc/nebula/ca.crt"

    Declared by:

    [11681]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11682]services.nebula.networks.<name>.cert

    Path to the host certificate.

    Type: path

    Example: "/etc/nebula/host.crt"

    Declared by:

    [11683]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11684]services.nebula.networks.<name>.firewall.inbound

    Firewall rules for inbound traffic.

    Type: list of attribute sets

    Default: [ ]

    Example: ''[ { port = "any"; proto = "any"; host = "any"; } ]''

    Declared by:

    [11685]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11686]services.nebula.networks.<name>.firewall.outbound

    Firewall rules for outbound traffic.

    Type: list of attribute sets

    Default: [ ]

    Example: ''[ { port = "any"; proto = "any"; host = "any"; } ]''

    Declared by:

    [11687]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11688]services.nebula.networks.<name>.isLighthouse

    Whether this node is a lighthouse.

    Type: boolean

    Default: false

    Declared by:

    [11689]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11690]services.nebula.networks.<name>.key

    Path to the host key.

    Type: path

    Example: "/etc/nebula/host.key"

    Declared by:

    [11691]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11692]services.nebula.networks.<name>.lighthouses

    List of IPs of lighthouse hosts this node should report to and query from. This should be
    empty on lighthouse nodes. The IPs should be the lighthouse's Nebula IPs, not their external
    IPs.

    Type: list of strings

    Default: [ ]

    Example: ''[ "192.168.100.1" ]''

    Declared by:

    [11693]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11694]services.nebula.networks.<name>.listen.host

    IP address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [11695]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11696]services.nebula.networks.<name>.listen.port

    Port number to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 4242

    Declared by:

    [11697]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11698]services.nebula.networks.<name>.settings

    Nebula configuration. Refer to [11699]https://github.com/slackhq/nebula/blob/master/examples/
    config.yml for details on supported values.

    Type: YAML value

    Default: { }

    Example:

    {
      lighthouse.dns = {
        host = "0.0.0.0";
        port = 53;
      };
    }

    Declared by:

    [11700]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11701]services.nebula.networks.<name>.staticHostMap

    The static host map defines a set of hosts with fixed IP addresses on the internet (or any
    network). A host can have multiple fixed IP addresses defined here, and nebula will try each
    when establishing a tunnel.

    Type: attribute set of list of stringss

    Default: { }

    Example:

    { "192.168.100.1" = [ "100.64.22.11:4242" ]; }

    Declared by:

    [11702]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11703]services.nebula.networks.<name>.tun.device

    Name of the tun device. Defaults to nebula.${networkName}.

    Type: null or string

    Default: null

    Declared by:

    [11704]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11705]services.nebula.networks.<name>.tun.disable

    When tun is disabled, a lighthouse can be started without a local tun interface (and
    therefore without root).

    Type: boolean

    Default: false

    Declared by:

    [11706]<nixpkgs/nixos/modules/services/networking/nebula.nix>

[11707]services.neo4j.enable

    Whether to enable Neo4j Community Edition.

    Type: boolean

    Default: false

    Declared by:

    [11708]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11709]services.neo4j.package

    Neo4j package to use.

    Type: package

    Default: "pkgs.neo4j"

    Declared by:

    [11710]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11711]services.neo4j.allowUpgrade

    Allow upgrade of Neo4j database files from an older version.

    Type: boolean

    Default: false

    Declared by:

    [11712]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11713]services.neo4j.bolt.enable

    Enable the BOLT connector for Neo4j. Setting this option to false will stop Neo4j from
    listening for incoming connections on the BOLT port (7687 by default).

    Type: boolean

    Default: true

    Declared by:

    [11714]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11715]services.neo4j.bolt.listenAddress

    Neo4j listen address for BOLT traffic. The listen address is expressed in the format
    <ip-address>:<port-number>.

    Type: string

    Default: ":7687"

    Declared by:

    [11716]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11717]services.neo4j.bolt.sslPolicy

    Neo4j SSL policy for BOLT traffic.

    The legacy policy is a special policy which is not defined in the policy configuration
    section, but rather derives from directories.certificates and associated files (by default:
    neo4j.key and neo4j.cert). Its use will be deprecated.

    Note: This connector must be configured to support/require SSL/TLS for the legacy policy to
    actually be utilized. See bolt.tlsLevel.

    Type: string

    Default: "legacy"

    Declared by:

    [11718]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11719]services.neo4j.bolt.tlsLevel

    SSL/TSL requirement level for BOLT traffic.

    Type: one of "REQUIRED", "OPTIONAL", "DISABLED"

    Default: "OPTIONAL"

    Declared by:

    [11720]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11721]services.neo4j.constrainLoadCsv

    Sets the root directory for file URLs used with the Cypher LOAD CSV clause to be that defined
    by directories.imports. It restricts access to only those files within that directory and its
    subdirectories.

    Setting this option to false introduces possible security problems.

    Type: boolean

    Default: true

    Declared by:

    [11722]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11723]services.neo4j.defaultListenAddress

    Default network interface to listen for incoming connections. To listen for connections on
    all interfaces, use "0.0.0.0".

    Specifies the default IP address and address part of connector specific listenAddress
    options. To bind specific connectors to a specific network interfaces, specify the entire
    listenAddress option for that connector.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [11724]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11725]services.neo4j.directories.certificates

    Directory for storing certificates to be used by Neo4j for TLS connections.

    When setting this directory to something other than its default, ensure the directory's
    existence, and that read/write permissions are given to the Neo4j daemon user neo4j.

    Note that changing this directory from its default will prevent the directory structure
    required for each SSL policy from being automatically generated. A policy's directory
    structure as defined by its baseDirectory,revokedDir and trustedDir must then be setup
    manually. The existence of these directories is mandatory, as well as the presence of the
    certificate file and the private key. Ensure the correct permissions are set on these
    directories and files.

    Type: path

    Default: "/var/lib/neo4j/certificates"

    Declared by:

    [11726]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11727]services.neo4j.directories.data

    Path of the data directory. You must not configure more than one Neo4j installation to use
    the same data directory.

    When setting this directory to something other than its default, ensure the directory's
    existence, and that read/write permissions are given to the Neo4j daemon user neo4j.

    Type: path

    Default: "/var/lib/neo4j/data"

    Declared by:

    [11728]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11729]services.neo4j.directories.home

    Path of the Neo4j home directory. Other default directories are subdirectories of this path.
    This directory will be created if non-existent, and its ownership will be chown to the Neo4j
    daemon user neo4j.

    Type: path

    Default: "/var/lib/neo4j"

    Declared by:

    [11730]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11731]services.neo4j.directories.imports

    The root directory for file URLs used with the Cypher LOAD CSV clause. Only meaningful when
    constrainLoadCvs is set to true.

    When setting this directory to something other than its default, ensure the directory's
    existence, and that read permission is given to the Neo4j daemon user neo4j.

    Type: path

    Default: "/var/lib/neo4j/import"

    Declared by:

    [11732]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11733]services.neo4j.directories.plugins

    Path of the database plugin directory. Compiled Java JAR files that contain database
    procedures will be loaded if they are placed in this directory.

    When setting this directory to something other than its default, ensure the directory's
    existence, and that read permission is given to the Neo4j daemon user neo4j.

    Type: path

    Default: "/var/lib/neo4j/plugins"

    Declared by:

    [11734]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11735]services.neo4j.extraServerConfig

    Extra configuration for Neo4j Community server. Refer to the [11736]complete reference of
    Neo4j configuration settings.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [11737]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11738]services.neo4j.http.enable

    The HTTP connector is required for Neo4j, and cannot be disabled. Setting this option to
    false will force the HTTP connector's listenAddress to the loopback interface to prevent
    connection of remote clients. To prevent all clients from connecting, block the HTTP port
    (7474 by default) by firewall.

    Type: boolean

    Default: true

    Declared by:

    [11739]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11740]services.neo4j.http.listenAddress

    Neo4j listen address for HTTP traffic. The listen address is expressed in the format
    <ip-address>:<port-number>.

    Type: string

    Default: ":7474"

    Declared by:

    [11741]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11742]services.neo4j.https.enable

    Enable the HTTPS connector for Neo4j. Setting this option to false will stop Neo4j from
    listening for incoming connections on the HTTPS port (7473 by default).

    Type: boolean

    Default: true

    Declared by:

    [11743]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11744]services.neo4j.https.listenAddress

    Neo4j listen address for HTTPS traffic. The listen address is expressed in the format
    <ip-address>:<port-number>.

    Type: string

    Default: ":7473"

    Declared by:

    [11745]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11746]services.neo4j.https.sslPolicy

    Neo4j SSL policy for HTTPS traffic.

    The legacy policy is a special policy which is not defined in the policy configuration
    section, but rather derives from directories.certificates and associated files (by default:
    neo4j.key and neo4j.cert). Its use will be deprecated.

    Type: string

    Default: "legacy"

    Declared by:

    [11747]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11748]services.neo4j.readOnly

    Only allow read operations from this Neo4j instance.

    Type: boolean

    Default: false

    Declared by:

    [11749]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11750]services.neo4j.shell.enable

    Enable a remote shell server which Neo4j Shell clients can log in to. Only applicable to 
    neo4j-shell.

    Type: boolean

    Default: false

    Declared by:

    [11751]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11752]services.neo4j.ssl.policies

    Defines the SSL policies for use with Neo4j connectors. Each attribute of this set defines a
    policy, with the attribute name defining the name of the policy and its namespace. Refer to
    the operations manual section on Neo4j's [11753]SSL Framework for further details.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [11754]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11755]services.neo4j.ssl.policies.<name>.allowKeyGeneration

    Allows the generation of a private key and associated self-signed certificate. Only performed
    when both objects cannot be found for this policy. It is recommended to turn this off again
    after keys have been generated.

    The public certificate is required to be duplicated to the directory holding trusted
    certificates as defined by the trustedDir option.

    Keys should in general be generated and distributed offline by a trusted certificate
    authority and not by utilizing this mode.

    Type: boolean

    Default: false

    Declared by:

    [11756]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11757]services.neo4j.ssl.policies.<name>.baseDirectory

    The mandatory base directory for cryptographic objects of this policy. This path is only
    automatically generated when this option as well as directories.certificates are left at
    their default. Ensure read/write permissions are given to the Neo4j daemon user neo4j.

    It is also possible to override each individual configuration with absolute paths. See the
    privateKey and publicCertificate policy options.

    Type: path

    Default: "/var/lib/neo4j/certificates/‹name›"

    Declared by:

    [11758]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11759]services.neo4j.ssl.policies.<name>.ciphers

    Restrict the allowed ciphers of this policy to those defined here. The default ciphers are
    those of the JVM platform.

    Type: null or list of strings

    Default: null

    Declared by:

    [11760]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11761]services.neo4j.ssl.policies.<name>.clientAuth

    The client authentication stance for this policy.

    Type: one of "NONE", "OPTIONAL", "REQUIRE"

    Default: "REQUIRE"

    Declared by:

    [11762]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11763]services.neo4j.ssl.policies.<name>.privateKey

    The name of private PKCS #8 key file for this policy to be found in the baseDirectory, or the
    absolute path to the key file. It is mandatory that a key can be found or generated.

    Type: string

    Default: "private.key"

    Declared by:

    [11764]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11765]services.neo4j.ssl.policies.<name>.publicCertificate

    The name of public X.509 certificate (chain) file in PEM format for this policy to be found
    in the baseDirectory, or the absolute path to the certificate file. It is mandatory that a
    certificate can be found or generated.

    The public certificate is required to be duplicated to the directory holding trusted
    certificates as defined by the trustedDir option.

    Type: string

    Default: "public.crt"

    Declared by:

    [11766]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11767]services.neo4j.ssl.policies.<name>.revokedDir

    Path to directory of CRLs (Certificate Revocation Lists) in PEM format. Must be an absolute
    path. The existence of this directory is mandatory and will need to be created manually when:
    setting this option to something other than its default; setting either this policy's
    baseDirectory or directories.certificates to something other than their default. Ensure read/
    write permissions are given to the Neo4j daemon user neo4j.

    Type: path

    Default: "/var/lib/neo4j/certificates/‹name›/revoked"

    Declared by:

    [11768]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11769]services.neo4j.ssl.policies.<name>.tlsVersions

    Restrict the TLS protocol versions of this policy to those defined here.

    Type: list of strings

    Default: [ "TLSv1.2" ]

    Declared by:

    [11770]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11771]services.neo4j.ssl.policies.<name>.trustAll

    Makes this policy trust all remote parties. Enabling this is not recommended and the policy's
    trusted directory will be ignored. Use of this mode is discouraged. It would offer encryption
    but no security.

    Type: boolean

    Default: false

    Declared by:

    [11772]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11773]services.neo4j.ssl.policies.<name>.trustedDir

    Path to directory of X.509 certificates in PEM format for trusted parties. Must be an
    absolute path. The existence of this directory is mandatory and will need to be created
    manually when: setting this option to something other than its default; setting either this
    policy's baseDirectory or directories.certificates to something other than their default.
    Ensure read/write permissions are given to the Neo4j daemon user neo4j.

    The public certificate as defined by publicCertificate is required to be duplicated to this
    directory.

    Type: path

    Default: "/var/lib/neo4j/certificates/‹name›/trusted"

    Declared by:

    [11774]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11775]services.neo4j.udc.enable

    Enable the Usage Data Collector which Neo4j uses to collect usage data. Refer to the
    operations manual section on the [11776]Usage Data Collector for more information.

    Type: boolean

    Default: false

    Declared by:

    [11777]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11778]services.neo4j.workerCount

    Number of Neo4j worker threads, where the default of 0 indicates a worker count equal to the
    number of available processors.

    Type: integer between 0 and 44738 (both inclusive)

    Default: 0

    Declared by:

    [11779]<nixpkgs/nixos/modules/services/databases/neo4j.nix>

[11780]services.netatalk.enable

    Whether to enable the Netatalk AFP fileserver.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11781]<nixpkgs/nixos/modules/services/network-filesystems/netatalk.nix>

[11782]services.netatalk.extmap

    File name extension mappings. See extmap.conf(5). for more information.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [11783]<nixpkgs/nixos/modules/services/network-filesystems/netatalk.nix>

[11784]services.netatalk.port

    TCP port to be used for AFP.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 548

    Declared by:

    [11785]<nixpkgs/nixos/modules/services/network-filesystems/netatalk.nix>

[11786]services.netatalk.settings

    Configuration for Netatalk. See afp.conf(5).

    Type: attribute set of attribute set of INI atom (null, bool, int, float or string)ss

    Default: { }

    Example: { Global = { uam list = "uams_guest.so"; } ; Homes = { basedir regex = "/home"; path
    = "afp-data"; } ; example-volume = { path = "/srv/volume"; read only = true; } ; }

    Declared by:

    [11787]<nixpkgs/nixos/modules/services/network-filesystems/netatalk.nix>

[11788]services.netdata.enable

    Whether to enable netdata.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11789]<nixpkgs/nixos/modules/services/monitoring/netdata.nix>

[11790]services.netdata.enableAnalyticsReporting

    Enable reporting of anonymous usage statistics to Netdata Inc. via either Google Analytics
    (in versions prior to 1.29.4), or Netdata Inc.'s self-hosted PostHog (in versions 1.29.4 and
    later). See: [11791]https://learn.netdata.cloud/docs/agent/anonymous-statistics

    Type: boolean

    Default: false

    Declared by:

    [11792]<nixpkgs/nixos/modules/services/monitoring/netdata.nix>

[11793]services.netdata.package

    Netdata package to use.

    Type: package

    Default: "pkgs.netdata"

    Declared by:

    [11794]<nixpkgs/nixos/modules/services/monitoring/netdata.nix>

[11795]services.netdata.config

    netdata.conf configuration as nix attributes. cannot be combined with configText.

    Type: attribute set of attribute sets

    Default: { }

    Example:

    global = {
      "debug log" = "syslog";
      "access log" = "syslog";
      "error log" = "syslog";
    };

    Declared by:

    [11796]<nixpkgs/nixos/modules/services/monitoring/netdata.nix>

[11797]services.netdata.configText

    Verbatim netdata.conf, cannot be combined with config.

    Type: null or strings concatenated with "\n"

    Default: null

    Example:

    ''
    [global]
    debug log = syslog
    access log = syslog
    error log = syslog
    ''

    Declared by:

    [11798]<nixpkgs/nixos/modules/services/monitoring/netdata.nix>

[11799]services.netdata.extraPluginPaths

    Extra paths to add to the netdata global "plugins directory" option. Useful for when you want
    to include your own collection scripts.

    Details about writing a custom netdata plugin are available at: [11800]https://
    docs.netdata.cloud/collectors/plugins.d/

    Cannot be combined with configText.

    Type: list of paths

    Default: [ ]

    Example:

    [ "/path/to/plugins.d" ]

    Declared by:

    [11801]<nixpkgs/nixos/modules/services/monitoring/netdata.nix>

[11802]services.netdata.group

    Group under which netdata runs.

    Type: string

    Default: "netdata"

    Declared by:

    [11803]<nixpkgs/nixos/modules/services/monitoring/netdata.nix>

[11804]services.netdata.python.enable

    Whether to enable python-based plugins

    Type: boolean

    Default: true

    Declared by:

    [11805]<nixpkgs/nixos/modules/services/monitoring/netdata.nix>

[11806]services.netdata.python.extraPackages

    Extra python packages available at runtime to enable additional python plugins.

    Type: function that evaluates to a(n) listOf

    Default: "ps: []"

    Example:

    ps: [
      ps.psycopg2
      ps.docker
      ps.dnspython
    ]

    Declared by:

    [11807]<nixpkgs/nixos/modules/services/monitoring/netdata.nix>

[11808]services.netdata.user

    User account under which netdata runs.

    Type: string

    Default: "netdata"

    Declared by:

    [11809]<nixpkgs/nixos/modules/services/monitoring/netdata.nix>

[11810]services.networking.websockify.enable

    Whether to enable websockify to forward websocket connections to TCP connections.

    Type: boolean

    Default: false

    Declared by:

    [11811]<nixpkgs/nixos/modules/services/networking/websockify.nix>

[11812]services.networking.websockify.portMap

    Ports to map by default.

    Type: attribute set of signed integers

    Default: { }

    Declared by:

    [11813]<nixpkgs/nixos/modules/services/networking/websockify.nix>

[11814]services.networking.websockify.sslCert

    Path to the SSL certificate.

    Type: path

    Declared by:

    [11815]<nixpkgs/nixos/modules/services/networking/websockify.nix>

[11816]services.networking.websockify.sslKey

    Path to the SSL key.

    Type: path

    Default: "config.services.networking.websockify.sslCert"

    Declared by:

    [11817]<nixpkgs/nixos/modules/services/networking/websockify.nix>

[11818]services.nextcloud.enable

    Whether to enable nextcloud.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11819]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11820]services.nextcloud.enableImagemagick

    Whether to enable Whether to load the ImageMagick module into PHP. This is used by the
    theming app and for generating previews of certain images (e.g. SVG and HEIF). You may want
    to disable it for increased security. In that case, previews will still be available for some
    images (e.g. JPEG and PNG). See https://github.com/nextcloud/server/issues/13099 .

    Type: boolean

    Default: true

    Example: true

    Declared by:

    [11821]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11822]services.nextcloud.package

    Which package to use for the Nextcloud instance.

    Type: package

    Related packages:

      □ pkgs.nextcloud19 (nextcloud-19.0.13) [UNAVAILABLE]: Sharing solution for files,
        calendars, contacts and more.

      □ pkgs.nextcloud20 (nextcloud-20.0.11): Sharing solution for files, calendars, contacts and
        more.

      □ pkgs.nextcloud21 (nextcloud-21.0.3): Sharing solution for files, calendars, contacts and
        more.

      □ pkgs.nextcloud22 (nextcloud-22.0.0): Sharing solution for files, calendars, contacts and
        more.

    Declared by:

    [11823]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11824]services.nextcloud.autoUpdateApps.enable

    Run regular auto update of all apps installed from the nextcloud app store.

    Type: boolean

    Default: false

    Declared by:

    [11825]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11826]services.nextcloud.autoUpdateApps.startAt

    When to run the update. See `systemd.services.<name>.startAt`.

    Type: string or list of strings

    Default: "05:00:00"

    Example: "Sun 14:00:00"

    Declared by:

    [11827]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11828]services.nextcloud.caching.apcu

    Whether to load the APCu module into PHP.

    Type: boolean

    Default: true

    Declared by:

    [11829]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11830]services.nextcloud.caching.memcached

    Whether to load the Memcached module into PHP. You still need to enable Memcached in your
    config.php. See https://docs.nextcloud.com/server/14/admin_manual/configuration_server/
    caching_configuration.html

    Type: boolean

    Default: false

    Declared by:

    [11831]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11832]services.nextcloud.caching.redis

    Whether to load the Redis module into PHP. You still need to enable Redis in your config.php.
    See https://docs.nextcloud.com/server/14/admin_manual/configuration_server/
    caching_configuration.html

    Type: boolean

    Default: false

    Declared by:

    [11833]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11834]services.nextcloud.config.adminpass

    Admin password. Use adminpassFile to avoid this being world-readable in the /nix/store.

    Type: null or string

    Default: null

    Declared by:

    [11835]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11836]services.nextcloud.config.adminpassFile

    The full path to a file that contains the admin's password. Must be readable by user
    nextcloud.

    Type: null or string

    Default: null

    Declared by:

    [11837]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11838]services.nextcloud.config.adminuser

    Admin username.

    Type: string

    Default: "root"

    Declared by:

    [11839]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11840]services.nextcloud.config.dbhost

    Database host.

    Note: for using Unix authentication with PostgreSQL, this should be set to /run/postgresql.

    Type: null or string

    Default: "localhost"

    Declared by:

    [11841]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11842]services.nextcloud.config.dbname

    Database name.

    Type: null or string

    Default: "nextcloud"

    Declared by:

    [11843]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11844]services.nextcloud.config.dbpass

    Database password. Use dbpassFile to avoid this being world-readable in the /nix/store.

    Type: null or string

    Default: null

    Declared by:

    [11845]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11846]services.nextcloud.config.dbpassFile

    The full path to a file that contains the database password.

    Type: null or string

    Default: null

    Declared by:

    [11847]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11848]services.nextcloud.config.dbport

    Database port.

    Type: null or signed integer or string

    Default: null

    Declared by:

    [11849]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11850]services.nextcloud.config.dbtableprefix

    Table prefix in Nextcloud database.

    Type: null or string

    Default: null

    Declared by:

    [11851]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11852]services.nextcloud.config.dbtype

    Database type.

    Type: one of "sqlite", "pgsql", "mysql"

    Default: "sqlite"

    Declared by:

    [11853]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11854]services.nextcloud.config.dbuser

    Database user.

    Type: null or string

    Default: "nextcloud"

    Declared by:

    [11855]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11856]services.nextcloud.config.defaultPhoneRegion
    Warning: This option exists since Nextcloud 21! If older versions are used, this will throw
    an eval-error!

    [11857]ISO 3611-1 country codes for automatic phone-number detection without a country code.

    With e.g. DE set, the +49 can be omitted for phone-numbers.

    Type: null or string

    Default: null

    Example: "DE"

    Declared by:

    [11858]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11859]services.nextcloud.config.extraTrustedDomains

    Trusted domains, from which the nextcloud installation will be acessible. You don't need to
    add services.nextcloud.hostname here.

    Type: list of strings

    Default: [ ]

    Declared by:

    [11860]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11861]services.nextcloud.config.overwriteProtocol

    Force Nextcloud to always use HTTPS i.e. for link generation. Nextcloud uses the currently
    used protocol by default, but when behind a reverse-proxy, it may use http for everything
    although Nextcloud may be served via HTTPS.

    Type: null or one of "http", "https"

    Default: null

    Example: "https"

    Declared by:

    [11862]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11863]services.nextcloud.config.trustedProxies

    Trusted proxies, to provide if the nextcloud installation is being proxied to secure against
    e.g. spoofing.

    Type: list of strings

    Default: [ ]

    Declared by:

    [11864]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11865]services.nextcloud.home

    Storage path of nextcloud.

    Type: string

    Default: "/var/lib/nextcloud"

    Declared by:

    [11866]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11867]services.nextcloud.hostName

    FQDN for the nextcloud instance.

    Type: string

    Declared by:

    [11868]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11869]services.nextcloud.https

    Use https for generated links.

    Type: boolean

    Default: false

    Declared by:

    [11870]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11871]services.nextcloud.logLevel

    Log level value between 0 (DEBUG) and 4 (FATAL).

    Type: integer between 0 and 4 (both inclusive)

    Default: 2

    Declared by:

    [11872]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11873]services.nextcloud.maxUploadSize

    Defines the upload limit for files. This changes the relevant options in php.ini and nginx if
    enabled.

    Type: string

    Default: "512M"

    Declared by:

    [11874]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11875]services.nextcloud.phpExtraExtensions

    Additional PHP extensions to use for nextcloud. By default, only extensions necessary for a
    vanilla nextcloud installation are enabled, but you may choose from the list of available
    extensions and add further ones. This is sometimes necessary to be able to install a certain
    nextcloud app that has additional requirements.

    Type: function that evaluates to a(n) listOf

    Default: "all: []"

    Example:

    all: [ all.pdlib all.bz2 ]

    Declared by:

    [11876]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11877]services.nextcloud.phpOptions

    Options for PHP's php.ini file for nextcloud.

    Type: attribute set of strings

    Default: { catch_workers_output = "yes"; display_errors = "stderr"; error_reporting = "E_ALL
    & ~E_DEPRECATED & ~E_STRICT"; expose_php = "Off"; opcache.enable_cli = "1";
    opcache.fast_shutdown = "1"; opcache.interned_strings_buffer = "8";
    opcache.max_accelerated_files = "10000"; opcache.memory_consumption = "128";
    opcache.revalidate_freq = "1"; openssl.cafile = "/etc/ssl/certs/ca-certificates.crt";
    short_open_tag = "Off"; }

    Declared by:

    [11878]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11879]services.nextcloud.poolConfig

    Options for nextcloud's PHP pool. See the documentation on php-fpm.conf for details on
    configuration directives.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [11880]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11881]services.nextcloud.poolSettings

    Options for nextcloud's PHP pool. See the documentation on php-fpm.conf for details on
    configuration directives.

    Type: attribute set of string or signed integer or booleans

    Default: { pm = "dynamic"; pm.max_children = "32"; pm.max_requests = "500";
    pm.max_spare_servers = "4"; pm.min_spare_servers = "2"; pm.start_servers = "2"; }

    Declared by:

    [11882]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11883]services.nextcloud.skeletonDirectory

    The directory where the skeleton files are located. These files will be copied to the data
    directory of new users. Leave empty to not copy any skeleton files.

    Type: string

    Default: ""

    Declared by:

    [11884]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11885]services.nextcloud.webfinger

    Enable this option if you plan on using the webfinger plugin. The appropriate nginx rewrite
    rules will be added to your configuration.

    Type: boolean

    Default: false

    Declared by:

    [11886]<nixpkgs/nixos/modules/services/web-apps/nextcloud.nix>

[11887]services.nextdns.enable

    Whether to enable the NextDNS DNS/53 to DoH Proxy service.

    Type: boolean

    Default: false

    Declared by:

    [11888]<nixpkgs/nixos/modules/services/networking/nextdns.nix>

[11889]services.nextdns.arguments

    Additional arguments to be passed to nextdns run.

    Type: list of strings

    Default: [ ]

    Example: [ "-config" "10.0.3.0/24=abcdef" ]

    Declared by:

    [11890]<nixpkgs/nixos/modules/services/networking/nextdns.nix>

[11891]services.nexus.enable

    Whether to enable Sonatype Nexus3 OSS service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11892]<nixpkgs/nixos/modules/services/web-apps/nexus.nix>

[11893]services.nexus.package

    Package which runs Nexus3

    Type: package

    Default: (build of nexus-3.30.0-01)

    Declared by:

    [11894]<nixpkgs/nixos/modules/services/web-apps/nexus.nix>

[11895]services.nexus.group

    Group which runs Nexus3.

    Type: string

    Default: "nexus"

    Declared by:

    [11896]<nixpkgs/nixos/modules/services/web-apps/nexus.nix>

[11897]services.nexus.home

    Home directory of the Nexus3 instance.

    Type: string

    Default: "/var/lib/sonatype-work"

    Declared by:

    [11898]<nixpkgs/nixos/modules/services/web-apps/nexus.nix>

[11899]services.nexus.jvmOpts

    Options for the JVM written to `nexus.jvmopts`. Please refer to the docs (https://
    help.sonatype.com/repomanager3/installation/configuring-the-runtime-environment) for further
    information.

    Type: strings concatenated with "\n"

    Default:

    ''
    -Xms1200M
    -Xmx1200M
    -XX:MaxDirectMemorySize=2G
    -XX:+UnlockDiagnosticVMOptions
    -XX:+UnsyncloadClass
    -XX:+LogVMOutput
    -XX:LogFile=/var/lib/sonatype-work/nexus3/log/jvm.log
    -XX:-OmitStackTraceInFastThrow
    -Djava.net.preferIPv4Stack=true
    -Dkaraf.home=''${pkgs.nexus}
    -Dkaraf.base=''${pkgs.nexus}
    -Dkaraf.etc=''${pkgs.nexus}/etc/karaf
    -Djava.util.logging.config.file=''${pkgs.nexus}/etc/karaf/java.util.logging.properties
    -Dkaraf.data=/var/lib/sonatype-work/nexus3
    -Djava.io.tmpdir=/var/lib/sonatype-work/nexus3/tmp
    -Dkaraf.startLocalConsole=false
    -Djava.endorsed.dirs=''${pkgs.nexus}/lib/endorsed
    ''

    Declared by:

    [11900]<nixpkgs/nixos/modules/services/web-apps/nexus.nix>

[11901]services.nexus.listenAddress

    Address to listen on.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [11902]<nixpkgs/nixos/modules/services/web-apps/nexus.nix>

[11903]services.nexus.listenPort

    Port to listen on.

    Type: signed integer

    Default: 8081

    Declared by:

    [11904]<nixpkgs/nixos/modules/services/web-apps/nexus.nix>

[11905]services.nexus.user

    User which runs Nexus3.

    Type: string

    Default: "nexus"

    Declared by:

    [11906]<nixpkgs/nixos/modules/services/web-apps/nexus.nix>

[11907]services.nfs.extraConfig

    Extra nfs-utils configuration.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [11908]<nixpkgs/nixos/modules/tasks/filesystems/nfs.nix>

[11909]services.nfs.idmapd.settings

    libnfsidmap configuration. Refer to [11910]https://linux.die.net/man/5/idmapd.conf for
    details.

    Type: attribute set of attribute set of INI atom (null, bool, int, float or string)ss

    Default: { }

    Example:

    {
      Translation = {
        GSS-Methods = "static,nsswitch";
      };
      Static = {
        "root/hostname.domain.com@REALM.COM" = "root";
      };
    }

    Declared by:

    [11911]<nixpkgs/nixos/modules/tasks/filesystems/nfs.nix>

[11912]services.nfs.server.enable

    Whether to enable the kernel's NFS server.

    Type: boolean

    Default: false

    Declared by:

    [11913]<nixpkgs/nixos/modules/services/network-filesystems/nfsd.nix>

[11914]services.nfs.server.createMountPoints

    Whether to create the mount points in the exports file at startup time.

    Type: boolean

    Default: false

    Declared by:

    [11915]<nixpkgs/nixos/modules/services/network-filesystems/nfsd.nix>

[11916]services.nfs.server.exports

    Contents of the /etc/exports file. See exports(5) for the format.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [11917]<nixpkgs/nixos/modules/services/network-filesystems/nfsd.nix>

[11918]services.nfs.server.extraNfsdConfig

    Extra configuration options for the [nfsd] section of /etc/nfs.conf.

    Type: string

    Default: ""

    Declared by:

    [11919]<nixpkgs/nixos/modules/services/network-filesystems/nfsd.nix>

[11920]services.nfs.server.hostName

    Hostname or address on which NFS requests will be accepted. Default is all. See the -H option
    in nfsd(8).

    Type: null or string

    Default: null

    Declared by:

    [11921]<nixpkgs/nixos/modules/services/network-filesystems/nfsd.nix>

[11922]services.nfs.server.lockdPort

    Use a fixed port for the NFS lock manager kernel module (lockd/nlockmgr). This is useful if
    the NFS server is behind a firewall.

    Type: null or signed integer

    Default: null

    Example: 4001

    Declared by:

    [11923]<nixpkgs/nixos/modules/services/network-filesystems/nfsd.nix>

[11924]services.nfs.server.mountdPort

    Use fixed port for rpc.mountd, useful if server is behind firewall.

    Type: null or signed integer

    Default: null

    Example: 4002

    Declared by:

    [11925]<nixpkgs/nixos/modules/services/network-filesystems/nfsd.nix>

[11926]services.nfs.server.nproc

    Number of NFS server threads. Defaults to the recommended value of 8.

    Type: signed integer

    Default: 8

    Declared by:

    [11927]<nixpkgs/nixos/modules/services/network-filesystems/nfsd.nix>

[11928]services.nfs.server.statdPort

    Use a fixed port for rpc.statd. This is useful if the NFS server is behind a firewall.

    Type: null or signed integer

    Default: null

    Example: 4000

    Declared by:

    [11929]<nixpkgs/nixos/modules/services/network-filesystems/nfsd.nix>

[11930]services.nghttpx.enable

    Whether to enable nghttpx.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11931]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11932]services.nghttpx.backend-address-family

    Specify address family of backend connections. If "auto" is given, both IPv4 and IPv6 are
    considered. If "IPv4" is given, only IPv4 address is considered. If "IPv6" is given, only
    IPv6 address is considered.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#
    cmdoption-nghttpx--backend-address-family

    Type: one of "auto", "IPv4", "IPv6"

    Default: "auto"

    Declared by:

    [11933]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11934]services.nghttpx.backends

    A list of backend specifications.

    Type: list of submodules

    Example: [ { params = { proto = "http/1.1"; redirect-if-not-tls = true; } ; patterns = [ "/"
    ] ; server = { host = "172.16.0.22"; port = 8443; } ; } ]

    Declared by:

    [11935]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11936]services.nghttpx.backends.*.params

    Parameters to configure a backend.

    Type: null or submodule

    Default: null

    Example: { proto = "h2"; tls = true; }

    Declared by:

    [11937]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11938]services.nghttpx.backends.*.params.affinity

    If "ip" is given, client IP based session affinity is enabled. If "none" is given, session
    affinity is disabled.

    Session affinity is enabled (by nghttpx) per-backend pattern. If at least one backend has a
    non-"none" affinity, then session affinity is enabled for all backend servers sharing the
    same pattern.

    It is advised to set affinity on all backends explicitly if session affinity is desired. The
    session affinity may break if one of the backend gets unreachable, or backend settings are
    reloaded or replaced by API.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b for more
    detail.

    Type: one of "ip", "none"

    Default: "none"

    Declared by:

    [11939]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11940]services.nghttpx.backends.*.params.dns

    Name resolution of a backends host name is done at start up, or configuration reload. If
    "dns" is true, name resolution takes place dynamically.

    This is useful if a backends address changes frequently. If "dns" is true, name resolution of
    a backend's host name at start up, or configuration reload is skipped.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b for more
    detail.

    Type: boolean

    Default: false

    Declared by:

    [11941]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11942]services.nghttpx.backends.*.params.fall

    If nghttpx cannot connect to the backend N times in a row, the backend is assumed to be
    offline and is excluded from load balancing. If N is 0 the backend is never excluded from
    load balancing.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b for more
    detail.

    Type: signed integer

    Default: 0

    Declared by:

    [11943]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11944]services.nghttpx.backends.*.params.proto

    This option configures the protocol the backend server expects to use.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b for more
    detail.

    Type: one of "h2", "http/1.1"

    Default: "http/1.1"

    Declared by:

    [11945]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11946]services.nghttpx.backends.*.params.redirect-if-not-tls

    If true, a backend match requires the frontend connection be TLS encrypted. If it is not,
    nghttpx responds to the request with a 308 status code and https URI the client should use
    instead in the Location header.

    The port number in the redirect URI is 443 by default and can be changed using
    'services.nghttpx.redirect-https-port' option.

    If at least one backend has "redirect-if-not-tls" set to true, this feature is enabled for
    all backend servers with the same pattern. It is advised to set "redirect-if-no-tls"
    parameter to all backends explicitly if this feature is desired.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b for more
    detail.

    Type: boolean

    Default: false

    Declared by:

    [11947]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11948]services.nghttpx.backends.*.params.rise

    If the backend is excluded from load balancing, nghttpx will periodically attempt to make a
    connection to the backend. If the connection is successful N times in a row the backend is
    re-included in load balancing. If N is 0 a backend is never reconsidered for load balancing
    once it falls.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b for more
    detail.

    Type: signed integer

    Default: 0

    Declared by:

    [11949]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11950]services.nghttpx.backends.*.params.sni

    Override the TLS SNI field value. This value (in nghttpx) defaults to the host value of the
    backend configuration.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b for more
    detail.

    Type: null or string

    Default: null

    Declared by:

    [11951]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11952]services.nghttpx.backends.*.params.tls

    This option determines whether nghttpx will negotiate its connection with a backend server
    using TLS or not. The burden is on the backend server to provide the TLS certificate!

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b for more
    detail.

    Type: boolean

    Default: false

    Declared by:

    [11953]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11954]services.nghttpx.backends.*.patterns

    List of nghttpx backend patterns.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-b for more
    information on the pattern syntax and nghttpxs behavior.

    Type: list of strings

    Default: [ ]

    Example: [ "*.host.net/v1/" "host.org/v2/mypath" "/somepath" ]

    Declared by:

    [11955]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11956]services.nghttpx.backends.*.server

    Backend server location specified as either a host:port pair or a unix domain docket.

    Type: submodule or path

    Default: { host = "127.0.0.1"; port = 80; }

    Example: { host = "127.0.0.1"; port = 8888; }

    Declared by:

    [11957]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11958]services.nghttpx.backlog

    Listen backlog size.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--backlog

    Type: signed integer

    Default: 65536

    Declared by:

    [11959]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11960]services.nghttpx.extraConfig

    Extra configuration options to be appended to the generated configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [11961]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11962]services.nghttpx.frontends

    A list of frontend listener specifications.

    Type: list of submodules

    Example: [ { params = { tls = "no-tls"; } ; server = { host = "*"; port = 80; } ; } ]

    Declared by:

    [11963]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11964]services.nghttpx.frontends.*.params

    Parameters to configure a backend.

    Type: null or submodule

    Default: null

    Example: { tls = "tls"; }

    Declared by:

    [11965]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11966]services.nghttpx.frontends.*.params.api

    Enable API access for this frontend. This enables you to dynamically modify nghttpx at
    run-time therefore this feature is disabled by default and should be turned on with care.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f for more
    detail.

    Type: boolean

    Default: false

    Declared by:

    [11967]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11968]services.nghttpx.frontends.*.params.healthmon

    Make this frontend a health monitor endpoint. Any request received on this frontend is
    responded to with a 200 OK.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f for more
    detail.

    Type: boolean

    Default: false

    Declared by:

    [11969]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11970]services.nghttpx.frontends.*.params.proxyproto

    Accept PROXY protocol version 1 on frontend connection.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f for more
    detail.

    Type: boolean

    Default: false

    Declared by:

    [11971]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11972]services.nghttpx.frontends.*.params.sni-fwd

    When performing a match to select a backend server, SNI host name received from the client is
    used instead of the request host. See --backend option about the pattern match.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f for more
    detail.

    Type: boolean

    Default: false

    Declared by:

    [11973]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11974]services.nghttpx.frontends.*.params.tls

    Enable or disable TLS. If true (enabled) the key and certificate must be configured for
    nghttpx.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-f for more
    detail.

    Type: one of "tls", "no-tls"

    Default: "tls"

    Declared by:

    [11975]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11976]services.nghttpx.frontends.*.server

    Frontend server interface binding specification as either a host:port pair or a unix domain
    docket.

    NB: a host of "*" listens on all interfaces and includes IPv6 addresses.

    Type: submodule or path

    Default: { host = "127.0.0.1"; port = 80; }

    Example: { host = "127.0.0.1"; port = 8888; }

    Declared by:

    [11977]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11978]services.nghttpx.rlimit-nofile

    Set maximum number of open files (RLIMIT_NOFILE) to <N>. If 0 is given, nghttpx does not set
    the limit.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--rlimit-nofile

    Type: signed integer

    Default: 0

    Declared by:

    [11979]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11980]services.nghttpx.single-process

    Run this program in a single process mode for debugging purpose. Without this option, nghttpx
    creates at least 2 processes: master and worker processes. If this option is used, master and
    worker are unified into a single process. nghttpx still spawns additional process if
    neverbleed is used. In the single process mode, the signal handling feature is disabled.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--single-process

    Type: boolean

    Default: false

    Declared by:

    [11981]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11982]services.nghttpx.single-thread

    Run everything in one thread inside the worker process. This feature is provided for better
    debugging experience, or for the platforms which lack thread support. If threading is
    disabled, this option is always enabled.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx--single-thread

    Type: boolean

    Default: false

    Declared by:

    [11983]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11984]services.nghttpx.tls

    TLS certificate and key paths. Note that this does not enable TLS for a frontend listener, to
    do so, a frontend specification must set params.tls to true.

    Type: null or submodule

    Default: null

    Example: { crt = "/etc/ssl/certs/server.crt"; key = "/etc/ssl/keys/server.key"; }

    Declared by:

    [11985]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11986]services.nghttpx.tls.crt

    Path to the TLS certificate file.

    Type: string

    Default: "/etc/ssl/certs/server.crt"

    Example: "/etc/ssl/certs/mycert.crt"

    Declared by:

    [11987]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11988]services.nghttpx.tls.key

    Path to the TLS key file.

    Type: string

    Default: "/etc/ssl/keys/server.key"

    Example: "/etc/ssl/keys/mykeyfile.key"

    Declared by:

    [11989]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11990]services.nghttpx.workers

    Set the number of worker threads.

    Please see https://nghttp2.org/documentation/nghttpx.1.html#cmdoption-nghttpx-n

    Type: signed integer

    Default: 1

    Declared by:

    [11991]<nixpkgs/nixos/modules/services/networking/nghttpx/nghttpx-options.nix>

[11992]services.nginx.enable

    Whether to enable Nginx Web Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [11993]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[11994]services.nginx.enableReload

    Reload nginx when configuration file changes (instead of restart). The configuration file is
    exposed at /etc/nginx/nginx.conf. See also systemd.services.*.restartIfChanged.

    Type: boolean

    Default: false

    Declared by:

    [11995]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[11996]services.nginx.package

    Nginx package to use. This defaults to the stable version. Note that the nginx team
    recommends to use the mainline version which available in nixpkgs as nginxMainline.

    Type: package

    Default: "pkgs.nginxStable"

    Declared by:

    [11997]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[11998]services.nginx.additionalModules

    Additional [11999]third-party nginx modules to install. Packaged modules are available in
    pkgs.nginxModules.

    Type: list of attribute set of anythingss

    Default: [ ]

    Example:

    [ pkgs.nginxModules.brotli ]

    Declared by:

    [12000]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12001]services.nginx.appendConfig

    Configuration lines appended to the generated Nginx configuration file. Commonly used by
    different modules providing http snippets. appendConfig can be specified more than once and
    it's value will be concatenated (contrary to config which can be set only once).

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12002]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12003]services.nginx.appendHttpConfig

    Configuration lines to be appended to the generated http block. This is mutually exclusive
    with using config and httpConfig for specifying the whole http block verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12004]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12005]services.nginx.clientMaxBodySize

    Set nginx global client_max_body_size.

    Type: string

    Default: "10m"

    Declared by:

    [12006]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12007]services.nginx.commonHttpConfig

    With nginx you must provide common http context definitions before they are used, e.g.
    log_format, resolver, etc. inside of server or location contexts. Use this attribute to set
    these definitions at the appropriate location.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    resolver 127.0.0.1 valid=5s;

    log_format myformat '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent"';
    ''

    Declared by:

    [12008]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12009]services.nginx.config

    Verbatim nginx.conf configuration. This is mutually exclusive to any other config option for
    nginx.conf except for

      □ [12010]services.nginx.appendConfig

      □ [12011]services.nginx.httpConfig

      □ [12012]services.nginx.logError

    If additional verbatim config in addition to other options is needed, [12013]
    services.nginx.appendConfig should be used instead.

    Type: string

    Default: ""

    Declared by:

    [12014]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12015]services.nginx.eventsConfig

    Configuration lines to be set inside the events block.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12016]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12017]services.nginx.gitweb.enable

    If true, enable gitweb in nginx.

    Type: boolean

    Default: false

    Declared by:

    [12018]<nixpkgs/nixos/modules/services/web-servers/nginx/gitweb.nix>

[12019]services.nginx.gitweb.group

    Group that the CGI process will belong to. (Set to config.services.gitolite.group if you are
    using gitolite.)

    Type: string

    Default: "nginx"

    Declared by:

    [12020]<nixpkgs/nixos/modules/services/web-servers/nginx/gitweb.nix>

[12021]services.nginx.gitweb.location

    Location to serve gitweb on.

    Type: string

    Default: "/gitweb"

    Declared by:

    [12022]<nixpkgs/nixos/modules/services/web-servers/nginx/gitweb.nix>

[12023]services.nginx.gitweb.user

    Existing user that the CGI process will belong to. (Default almost surely will do.)

    Type: string

    Default: "nginx"

    Declared by:

    [12024]<nixpkgs/nixos/modules/services/web-servers/nginx/gitweb.nix>

[12025]services.nginx.gitweb.virtualHost

    VirtualHost to serve gitweb on. Default is catch-all.

    Type: string

    Default: "_"

    Declared by:

    [12026]<nixpkgs/nixos/modules/services/web-servers/nginx/gitweb.nix>

[12027]services.nginx.group

    Group account under which nginx runs.

    Type: string

    Default: "nginx"

    Declared by:

    [12028]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12029]services.nginx.httpConfig

    Configuration lines to be set inside the http block. This is mutually exclusive with the
    structured configuration via virtualHosts and the recommendedXyzSettings configuration
    options. See appendHttpConfig for appending to the generated http block.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12030]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12031]services.nginx.logError

    Configures logging. The first parameter defines a file that will store the log. The special
    value stderr selects the standard error file. Logging to syslog can be configured by
    specifying the “syslog:” prefix. The second parameter determines the level of logging, and
    can be one of the following: debug, info, notice, warn, error, crit, alert, or emerg. Log
    levels above are listed in the order of increasing severity. Setting a certain log level will
    cause all messages of the specified and more severe log levels to be logged. If this
    parameter is omitted then error is used.

    Type: string

    Default: "stderr"

    Declared by:

    [12032]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12033]services.nginx.mapHashBucketSize

    Sets the bucket size for the map variables hash tables. Default value depends on the
    processor’s cache line size.

    Type: null or one of 32, 64, 128

    Default: null

    Declared by:

    [12034]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12035]services.nginx.mapHashMaxSize

    Sets the maximum size of the map variables hash tables.

    Type: null or positive integer, meaning >0

    Default: null

    Declared by:

    [12036]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12037]services.nginx.preStart

    Shell commands executed before the service's nginx is started.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12038]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12039]services.nginx.proxyResolveWhileRunning

    Resolves domains of proxyPass targets at runtime and not only at start, you have to set
    services.nginx.resolver, too.

    Type: boolean

    Default: false

    Declared by:

    [12040]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12041]services.nginx.proxyTimeout

    Change the proxy related timeouts in recommendedProxySettings.

    Type: string

    Default: "60s"

    Example: "20s"

    Declared by:

    [12042]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12043]services.nginx.recommendedGzipSettings

    Enable recommended gzip settings.

    Type: boolean

    Default: false

    Declared by:

    [12044]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12045]services.nginx.recommendedOptimisation

    Enable recommended optimisation settings.

    Type: boolean

    Default: false

    Declared by:

    [12046]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12047]services.nginx.recommendedProxySettings

    Enable recommended proxy settings.

    Type: boolean

    Default: false

    Declared by:

    [12048]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12049]services.nginx.recommendedTlsSettings

    Enable recommended TLS settings.

    Type: boolean

    Default: false

    Declared by:

    [12050]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12051]services.nginx.resolver

    Configures name servers used to resolve names of upstream servers into addresses

    Type: submodule

    Default: { }

    Declared by:

    [12052]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12053]services.nginx.resolver.addresses

    List of resolvers to use

    Type: list of strings

    Default: [ ]

    Example:

    [ "[::1]" "127.0.0.1:5353" ]

    Declared by:

    [12054]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12055]services.nginx.resolver.ipv6

    By default, nginx will look up both IPv4 and IPv6 addresses while resolving. If looking up of
    IPv6 addresses is not desired, the ipv6=off parameter can be specified.

    Type: boolean

    Default: true

    Declared by:

    [12056]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12057]services.nginx.resolver.valid

    By default, nginx caches answers using the TTL value of a response. An optional valid
    parameter allows overriding it

    Type: string

    Default: ""

    Example: "30s"

    Declared by:

    [12058]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12059]services.nginx.serverTokens

    Show nginx version in headers and error pages.

    Type: boolean

    Default: false

    Declared by:

    [12060]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12061]services.nginx.sslCiphers

    Ciphers to choose from when negotiating TLS handshakes.

    Type: null or string

    Default:
    "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"

    Declared by:

    [12062]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12063]services.nginx.sslDhparam

    Path to DH parameters file.

    Type: null or path

    Default: null

    Example: "/path/to/dhparams.pem"

    Declared by:

    [12064]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12065]services.nginx.sslProtocols

    Allowed TLS protocol versions.

    Type: string

    Default: "TLSv1.2 TLSv1.3"

    Example: "TLSv1 TLSv1.1 TLSv1.2 TLSv1.3"

    Declared by:

    [12066]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12067]services.nginx.sso.enable

    Whether to enable nginx-sso service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12068]<nixpkgs/nixos/modules/services/security/nginx-sso.nix>

[12069]services.nginx.sso.package

    The nginx-sso package that should be used.

    Type: package

    Default: "pkgs.nginx-sso"

    Declared by:

    [12070]<nixpkgs/nixos/modules/services/security/nginx-sso.nix>

[12071]services.nginx.sso.configuration

    nginx-sso configuration ([12072]documentation) as a Nix attribute set.

    Type: attribute set of unspecifieds

    Default: { }

    Example:

    {
      listen = { addr = "127.0.0.1"; port = 8080; };

      providers.token.tokens = {
        myuser = "MyToken";
      };

      acl = {
        rule_sets = [
          {
            rules = [ { field = "x-application"; equals = "MyApp"; } ];
            allow = [ "myuser" ];
          }
        ];
      };
    }

    Declared by:

    [12073]<nixpkgs/nixos/modules/services/security/nginx-sso.nix>

[12074]services.nginx.statusPage

    Enable status page reachable from localhost on http://127.0.0.1/nginx_status.

    Type: boolean

    Default: false

    Declared by:

    [12075]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12076]services.nginx.streamConfig

    Configuration lines to be set inside the stream block.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    server {
      listen 127.0.0.1:53 udp reuseport;
      proxy_timeout 20s;
      proxy_pass 192.168.0.1:53535;
    }
    ''

    Declared by:

    [12077]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12078]services.nginx.upstreams

    Defines a group of servers to use as proxy target.

    Type: attribute set of submodules

    Default: { }

    Example:

    "backend_server" = {
      servers = { "127.0.0.1:8000" = {}; };
      extraConfig = '''
        keepalive 16;
      ''';
    };

    Declared by:

    [12079]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12080]services.nginx.upstreams.<name>.extraConfig

    These lines go to the end of the upstream verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12081]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12082]services.nginx.upstreams.<name>.servers

    Defines the address and other parameters of the upstream servers.

    Type: attribute set of submodules

    Default: { }

    Example: { 127.0.0.1:8000 = { } ; }

    Declared by:

    [12083]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12084]services.nginx.upstreams.<name>.servers.<name>.backup

    Marks the server as a backup server. It will be passed requests when the primary servers are
    unavailable.

    Type: boolean

    Default: false

    Declared by:

    [12085]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12086]services.nginx.user

    User account under which nginx runs.

    Type: string

    Default: "nginx"

    Declared by:

    [12087]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12088]services.nginx.virtualHosts

    Declarative vhost config

    Type: attribute set of submodules

    Default: { localhost = { } ; }

    Example:

    {
      "hydra.example.com" = {
        forceSSL = true;
        enableACME = true;
        locations."/" = {
          proxyPass = "http://localhost:3000";
        };
      };
    };

    Declared by:

    [12089]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12090]services.nginx.virtualHosts.<name>.enableACME

    Whether to ask Let's Encrypt to sign a certificate for this vhost. Alternately, you can use
    an existing certificate through useACMEHost.

    Type: boolean

    Default: false

    Declared by:

    [12091]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12092]services.nginx.virtualHosts.<name>.acmeFallbackHost

    Host which to proxy requests to if acme challenge is not found. Useful if you want multiple
    hosts to be able to verify the same domain name.

    Type: null or string

    Default: null

    Declared by:

    [12093]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12094]services.nginx.virtualHosts.<name>.acmeRoot

    Directory for the acme challenge which is PUBLIC, don't put certs or keys in here

    Type: string

    Default: "/var/lib/acme/acme-challenge"

    Declared by:

    [12095]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12096]services.nginx.virtualHosts.<name>.addSSL

    Whether to enable HTTPS in addition to plain HTTP. This will set defaults for listen to
    listen on all interfaces on the respective default ports (80, 443).

    Type: boolean

    Default: false

    Declared by:

    [12097]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12098]services.nginx.virtualHosts.<name>.basicAuth

    Basic Auth protection for a vhost.

    WARNING: This is implemented to store the password in plain text in the Nix store.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      user = "password";
    };

    Declared by:

    [12099]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12100]services.nginx.virtualHosts.<name>.basicAuthFile

    Basic Auth password file for a vhost. Can be created via: htpasswd -c <filename> <username>.

    WARNING: The generate file contains the users' passwords in a non-cryptographically-securely
    hashed way.

    Type: null or path

    Default: null

    Declared by:

    [12101]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12102]services.nginx.virtualHosts.<name>.default

    Makes this vhost the default.

    Type: boolean

    Default: false

    Declared by:

    [12103]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12104]services.nginx.virtualHosts.<name>.extraConfig

    These lines go to the end of the vhost verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12105]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12106]services.nginx.virtualHosts.<name>.forceSSL

    Whether to add a separate nginx server block that permanently redirects (301) all plain HTTP
    traffic to HTTPS. This will set defaults for listen to listen on all interfaces on the
    respective default ports (80, 443), where the non-SSL listens are used for the redirect
    vhosts.

    Type: boolean

    Default: false

    Declared by:

    [12107]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12108]services.nginx.virtualHosts.<name>.globalRedirect

    If set, all requests for this host are redirected permanently to the given hostname.

    Type: null or string

    Default: null

    Example: "newserver.example.org"

    Declared by:

    [12109]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12110]services.nginx.virtualHosts.<name>.http2

    Whether to enable HTTP 2. Note that (as of writing) due to nginx's implementation, to disable
    HTTP 2 you have to disable it on all vhosts that use a given IP address / port. If there is
    one server block configured to enable http2,then it is enabled for all server blocks on this
    IP. See https://stackoverflow.com/a/39466948/263061.

    Type: boolean

    Default: true

    Declared by:

    [12111]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12112]services.nginx.virtualHosts.<name>.http3

    Whether to enable HTTP 3. This requires using pkgs.nginxQuic package which can be achived by
    setting services.nginx.package = pkgs.nginxQuic;. Note that HTTP 3 support is experimental
    and *not* yet recommended for production. Read more at https://quic.nginx.org/

    Type: boolean

    Default: false

    Declared by:

    [12113]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12114]services.nginx.virtualHosts.<name>.listen

    Listen addresses and ports for this virtual host. IPv6 addresses must be enclosed in square
    brackets. Note: this option overrides addSSL and onlySSL.

    Type: list of submodules

    Default: [ ]

    Example: [ { addr = "195.154.1.1"; port = 443; ssl = true; } { addr = "192.154.1.1"; port =
    80; } ]

    Declared by:

    [12115]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12116]services.nginx.virtualHosts.<name>.listen.*.addr

    IP address.

    Type: string

    Declared by:

    [12117]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12118]services.nginx.virtualHosts.<name>.listen.*.extraParameters

    Extra parameters of this listen directive.

    Type: list of strings

    Default: [ ]

    Example: [ "reuseport" "deferred" ]

    Declared by:

    [12119]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12120]services.nginx.virtualHosts.<name>.listen.*.port

    Port number.

    Type: signed integer

    Default: 80

    Declared by:

    [12121]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12122]services.nginx.virtualHosts.<name>.listen.*.ssl

    Enable SSL.

    Type: boolean

    Default: false

    Declared by:

    [12123]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12124]services.nginx.virtualHosts.<name>.locations

    Declarative location config

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "/" = {
        proxyPass = "http://localhost:3000";
      };
    };

    Declared by:

    [12125]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12126]services.nginx.virtualHosts.<name>.locations.<name>.alias

    Alias directory for requests.

    Type: null or path

    Default: null

    Example: "/your/alias/directory"

    Declared by:

    [12127]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12128]services.nginx.virtualHosts.<name>.locations.<name>.basicAuth

    Basic Auth protection for a vhost.

    WARNING: This is implemented to store the password in plain text in the Nix store.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      user = "password";
    };

    Declared by:

    [12129]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12130]services.nginx.virtualHosts.<name>.locations.<name>.basicAuthFile

    Basic Auth password file for a vhost. Can be created via: htpasswd -c <filename> <username>.

    WARNING: The generate file contains the users' passwords in a non-cryptographically-securely
    hashed way.

    Type: null or path

    Default: null

    Declared by:

    [12131]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12132]services.nginx.virtualHosts.<name>.locations.<name>.extraConfig

    These lines go to the end of the location verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12133]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12134]services.nginx.virtualHosts.<name>.locations.<name>.fastcgiParams

    FastCGI parameters to override. Unlike in the Nginx configuration file, overriding only some
    default parameters won't unset the default values for other parameters.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [12135]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12136]services.nginx.virtualHosts.<name>.locations.<name>.index

    Adds index directive.

    Type: null or string

    Default: null

    Example: "index.php index.html"

    Declared by:

    [12137]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12138]services.nginx.virtualHosts.<name>.locations.<name>.priority

    Order of this location block in relation to the others in the vhost. The semantics are the
    same as with `lib.mkOrder`. Smaller values have a greater priority.

    Type: signed integer

    Default: 1000

    Declared by:

    [12139]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12140]services.nginx.virtualHosts.<name>.locations.<name>.proxyPass

    Adds proxy_pass directive and sets recommended proxy headers if recommendedProxySettings is
    enabled.

    Type: null or string

    Default: null

    Example: "http://www.example.org/"

    Declared by:

    [12141]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12142]services.nginx.virtualHosts.<name>.locations.<name>.proxyWebsockets

    Whether to support proxying websocket connections with HTTP/1.1.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12143]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12144]services.nginx.virtualHosts.<name>.locations.<name>.return

    Adds a return directive, for e.g. redirections.

    Type: null or string

    Default: null

    Example: "301 http://example.com\$request_uri"

    Declared by:

    [12145]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12146]services.nginx.virtualHosts.<name>.locations.<name>.root

    Root directory for requests.

    Type: null or path

    Default: null

    Example: "/your/root/directory"

    Declared by:

    [12147]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12148]services.nginx.virtualHosts.<name>.locations.<name>.tryFiles

    Adds try_files directive.

    Type: null or string

    Default: null

    Example: "\$uri =404"

    Declared by:

    [12149]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12150]services.nginx.virtualHosts.<name>.onlySSL

    Whether to enable HTTPS and reject plain HTTP connections. This will set defaults for listen
    to listen on all interfaces on port 443.

    Type: boolean

    Default: false

    Declared by:

    [12151]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12152]services.nginx.virtualHosts.<name>.root

    The path of the web root directory.

    Type: null or path

    Default: null

    Example: "/data/webserver/docs"

    Declared by:

    [12153]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12154]services.nginx.virtualHosts.<name>.serverAliases

    Additional names of virtual hosts served by this virtual host configuration.

    Type: list of strings

    Default: [ ]

    Example: [ "www.example.org" "example.org" ]

    Declared by:

    [12155]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12156]services.nginx.virtualHosts.<name>.serverName

    Name of this virtual host. Defaults to attribute name in virtualHosts.

    Type: null or string

    Default: null

    Example: "example.org"

    Declared by:

    [12157]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12158]services.nginx.virtualHosts.<name>.sslCertificate

    Path to server SSL certificate.

    Type: path

    Example: "/var/host.cert"

    Declared by:

    [12159]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12160]services.nginx.virtualHosts.<name>.sslCertificateKey

    Path to server SSL certificate key.

    Type: path

    Example: "/var/host.key"

    Declared by:

    [12161]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12162]services.nginx.virtualHosts.<name>.sslTrustedCertificate

    Path to root SSL certificate for stapling and client certificates.

    Type: null or path

    Default: null

    Example: "/var/root.cert"

    Declared by:

    [12163]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12164]services.nginx.virtualHosts.<name>.useACMEHost

    A host of an existing Let's Encrypt certificate to use. This is useful if you have many
    subdomains and want to avoid hitting the [12165]rate limit. Alternately, you can generate a
    certificate through enableACME. Note that this option does not create any certificates, nor
    it does add subdomains to existing ones – you will need to create them manually using [12166]
    security.acme.certs.

    Type: null or string

    Default: null

    Declared by:

    [12167]<nixpkgs/nixos/modules/services/web-servers/nginx/default.nix>

[12168]services.ngircd.enable

    Whether to enable the ngircd IRC server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12169]<nixpkgs/nixos/modules/services/networking/ngircd.nix>

[12170]services.ngircd.package

    The ngircd package.

    Type: package

    Default: "pkgs.ngircd"

    Declared by:

    [12171]<nixpkgs/nixos/modules/services/networking/ngircd.nix>

[12172]services.ngircd.config

    The ngircd configuration (see ngircd.conf(5)).

    Type: strings concatenated with "\n"

    Declared by:

    [12173]<nixpkgs/nixos/modules/services/networking/ngircd.nix>

[12174]services.nix-serve.enable

    Whether to enable nix-serve, the standalone Nix binary cache server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12175]<nixpkgs/nixos/modules/services/networking/nix-serve.nix>

[12176]services.nix-serve.bindAddress

    IP address where nix-serve will bind its listening socket.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [12177]<nixpkgs/nixos/modules/services/networking/nix-serve.nix>

[12178]services.nix-serve.extraParams

    Extra command line parameters for nix-serve.

    Type: strings concatenated with " "

    Default: ""

    Declared by:

    [12179]<nixpkgs/nixos/modules/services/networking/nix-serve.nix>

[12180]services.nix-serve.port

    Port number where nix-serve will listen on.

    Type: signed integer

    Default: 5000

    Declared by:

    [12181]<nixpkgs/nixos/modules/services/networking/nix-serve.nix>

[12182]services.nix-serve.secretKeyFile

    The path to the file used for signing derivation data. Generate with:

    ``` nix-store --generate-binary-cache-key key-name secret-key-file public-key-file ```

    Make sure user `nix-serve` has read access to the private key file.

    For more details see nix-store(1).

    Type: null or string

    Default: null

    Declared by:

    [12183]<nixpkgs/nixos/modules/services/networking/nix-serve.nix>

[12184]services.nix-store-gcs-proxy

    An attribute set describing an HTTP to GCS proxy that allows us to use GCS bucket via HTTP
    protocol.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [12185]<nixpkgs/nixos/modules/services/networking/nix-store-gcs-proxy.nix>

[12186]services.nix-store-gcs-proxy.<name>.enable

    Whether to enable proxy for this bucket

    Type: boolean

    Default: true

    Example: true

    Declared by:

    [12187]<nixpkgs/nixos/modules/services/networking/nix-store-gcs-proxy.nix>

[12188]services.nix-store-gcs-proxy.<name>.address

    The address of the proxy.

    Type: string

    Example: "localhost:3000"

    Declared by:

    [12189]<nixpkgs/nixos/modules/services/networking/nix-store-gcs-proxy.nix>

[12190]services.nix-store-gcs-proxy.<name>.bucketName

    Name of Google storage bucket

    Type: string

    Default: "‹name›"

    Example: "my-bucket-name"

    Declared by:

    [12191]<nixpkgs/nixos/modules/services/networking/nix-store-gcs-proxy.nix>

[12192]services.nixops-dns.enable

    Whether to enable the nixops-dns resolution of NixOps virtual machines via dnsmasq and fake
    domain name.

    Type: boolean

    Default: false

    Declared by:

    [12193]<nixpkgs/nixos/modules/services/networking/nixops-dns.nix>

[12194]services.nixops-dns.dnsmasq

    Enable dnsmasq forwarding to nixops-dns. This allows to use nixops-dns for
    `services.nixops-dns.domain` resolution while forwarding the rest of the queries to original
    resolvers.

    Type: boolean

    Default: true

    Declared by:

    [12195]<nixpkgs/nixos/modules/services/networking/nixops-dns.nix>

[12196]services.nixops-dns.domain

    Fake domain name to resolve to NixOps virtual machines.

    For example "ops" will resolve "vm.ops".

    Type: string

    Default: "ops"

    Example: "ops"

    Declared by:

    [12197]<nixpkgs/nixos/modules/services/networking/nixops-dns.nix>

[12198]services.nixops-dns.user

    The user the nixops-dns daemon should run as. This should be the user, which is also used for
    nixops and have the .nixops directory in its home.

    Type: string

    Declared by:

    [12199]<nixpkgs/nixos/modules/services/networking/nixops-dns.nix>

[12200]services.nntp-proxy.enable

    Whether to enable NNTP-Proxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12201]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12202]services.nntp-proxy.listenAddress

    Proxy listen address (IPv6 literal addresses need to be enclosed in "[" and "]" characters)

    Type: string

    Default: "127.0.0.1"

    Example: "[::]"

    Declared by:

    [12203]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12204]services.nntp-proxy.port

    Proxy listen port

    Type: signed integer

    Default: 5555

    Declared by:

    [12205]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12206]services.nntp-proxy.prohibitPosting

    Whether to prohibit posting to the upstream server

    Type: boolean

    Default: true

    Declared by:

    [12207]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12208]services.nntp-proxy.sslCert

    Proxy ssl certificate path

    Type: string

    Default: "cert.pem"

    Example: "/path/to/your/cert.file"

    Declared by:

    [12209]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12210]services.nntp-proxy.sslKey

    Proxy ssl key path

    Type: string

    Default: "key.pem"

    Example: "/path/to/your/key.file"

    Declared by:

    [12211]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12212]services.nntp-proxy.upstreamMaxConnections

    Upstream server maximum allowed concurrent connections

    Type: signed integer

    Default: 20

    Declared by:

    [12213]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12214]services.nntp-proxy.upstreamPassword

    Upstream server password

    Type: string

    Default: ""

    Declared by:

    [12215]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12216]services.nntp-proxy.upstreamPort

    Upstream server port

    Type: signed integer

    Default: 563

    Declared by:

    [12217]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12218]services.nntp-proxy.upstreamServer

    Upstream server address

    Type: string

    Default: ""

    Example: "ssl-eu.astraweb.com"

    Declared by:

    [12219]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12220]services.nntp-proxy.upstreamUser

    Upstream server username

    Type: string

    Default: ""

    Declared by:

    [12221]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12222]services.nntp-proxy.users

    NNTP-Proxy user configuration

    Type: attribute set of submodules

    Default: { }

    Example:

    "user1" = {
      passwordHash = "$6$1l0t5Kn2Dk$appzivc./9l/kjq57eg5UCsBKlcfyCr0zNWYNerKoPsI1d7eAwiT0SVsOVx/CTgaBNT/u4fi2vN.iGlPfv1ek0";
      maxConnections = 5;
    };
    "anotheruser" = {
      passwordHash = "$6$6lwEsWB.TmsS$W7m1riUx4QrA8pKJz8hvff0dnF1NwtZXgdjmGqA1Dx2MDPj07tI9GNcb0SWlMglE.2/hBgynDdAd/XqqtRqVQ0";
      maxConnections = 7;
    };

    Declared by:

    [12223]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12224]services.nntp-proxy.users.<name>.maxConnections

    Maximum number of concurrent connections to the proxy for this user

    Type: signed integer

    Default: 1

    Declared by:

    [12225]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12226]services.nntp-proxy.users.<name>.passwordHash

    SHA-512 password hash (can be generated by mkpasswd -m sha-512 <password>)

    Type: string

    Default: null

    Example: "\$6\$GtzE7FrpE\$wwuVgFYU.TZH4Rz.Snjxk9XGua89IeVwPQ/
    fEUD8eujr40q5Y021yhn0aNcsQ2Ifw.BLclyzvzgegopgKcneL0"

    Declared by:

    [12227]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12228]services.nntp-proxy.users.<name>.username

    Username

    Type: string

    Default: null

    Declared by:

    [12229]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12230]services.nntp-proxy.verbosity

    Verbosity level

    Type: one of "error", "warning", "notice", "info", "debug"

    Default: "info"

    Example: "error"

    Declared by:

    [12231]<nixpkgs/nixos/modules/services/networking/nntp-proxy.nix>

[12232]services.nomad.enable

    Whether to enable Nomad, a distributed, highly available, datacenter-aware scheduler.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12233]<nixpkgs/nixos/modules/services/networking/nomad.nix>

[12234]services.nomad.enableDocker

    Enable Docker support. Needed for Nomad's docker driver.

    Note that the docker group membership is effectively equivalent to being root, see https://
    github.com/moby/moby/issues/9976.

    Type: boolean

    Default: true

    Declared by:

    [12235]<nixpkgs/nixos/modules/services/networking/nomad.nix>

[12236]services.nomad.package

    The package used for the Nomad agent and CLI.

    Type: package

    Default: "pkgs.nomad"

    Declared by:

    [12237]<nixpkgs/nixos/modules/services/networking/nomad.nix>

[12238]services.nomad.dropPrivileges

    Whether the nomad agent should be run as a non-root nomad user.

    Type: boolean

    Default: true

    Declared by:

    [12239]<nixpkgs/nixos/modules/services/networking/nomad.nix>

[12240]services.nomad.extraPackages

    Extra packages to add to PATH for the Nomad agent process.

    Type: list of packages

    Default: [ ]

    Example:

    with pkgs; [ cni-plugins ]

    Declared by:

    [12241]<nixpkgs/nixos/modules/services/networking/nomad.nix>

[12242]services.nomad.extraSettingsPaths

    Additional settings paths used to configure nomad. These can be files or directories.

    Type: list of paths

    Default: [ ]

    Example:

    [ "/etc/nomad-mutable.json" "/run/keys/nomad-with-secrets.json" "/etc/nomad/config.d" ]

    Declared by:

    [12243]<nixpkgs/nixos/modules/services/networking/nomad.nix>

[12244]services.nomad.settings

    Configuration for Nomad. See the [12245]documentation for supported values.

    Notes about data_dir:

    If data_dir is set to a value other than the default value of "/var/lib/nomad" it is the
    Nomad cluster manager's responsibility to make sure that this directory exists and has the
    appropriate permissions.

    Additionally, if dropPrivileges is true then data_dir cannot be customized. Setting
    dropPrivileges to true enables the DynamicUser feature of systemd which directly manages and
    operates on StateDirectory.

    Type: JSON value

    Default: { }

    Example:

    {
      # A minimal config example:
      server = {
        enabled = true;
        bootstrap_expect = 1; # for demo; no fault tolerance
      };
      client = {
        enabled = true;
      };
    }

    Declared by:

    [12246]<nixpkgs/nixos/modules/services/networking/nomad.nix>

[12247]services.novacomd.enable

    Whether to enable Novacom service for connecting to WebOS devices.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12248]<nixpkgs/nixos/modules/services/misc/novacomd.nix>

[12249]services.nscd.enable

    Whether to enable the Name Service Cache Daemon. Disabling this is strongly discouraged, as
    this effectively disables NSS Lookups from all non-glibc NSS modules, including the ones
    provided by systemd.

    Type: boolean

    Default: true

    Declared by:

    [12250]<nixpkgs/nixos/modules/services/system/nscd.nix>

[12251]services.nscd.config

    Configuration to use for Name Service Cache Daemon.

    Type: strings concatenated with "\n"

    Default:

    ''
    # We basically use nscd as a proxy for forwarding nss requests to appropriate
    # nss modules, as we run nscd with LD_LIBRARY_PATH set to the directory
    # containing all such modules
    # Note that we can not use `enable-cache no` As this will actually cause nscd
    # to just reject the nss requests it receives, which then causes glibc to
    # fallback to trying to handle the request by itself. Which won't work as glibc
    # is not aware of the path in which the nss modules live.  As a workaround, we
    # have `enable-cache yes` with an explicit ttl of 0
    server-user             nscd

    enable-cache            passwd          yes
    positive-time-to-live   passwd          0
    negative-time-to-live   passwd          0
    shared                  passwd          yes

    enable-cache            group           yes
    positive-time-to-live   group           0
    negative-time-to-live   group           0
    shared                  group           yes

    enable-cache            netgroup        yes
    positive-time-to-live   netgroup        0
    negative-time-to-live   netgroup        0
    shared                  netgroup        yes

    enable-cache            hosts           yes
    positive-time-to-live   hosts           0
    negative-time-to-live   hosts           0
    shared                  hosts           yes

    enable-cache            services        yes
    positive-time-to-live   services        0
    negative-time-to-live   services        0
    shared                  services        yes
    ''

    Declared by:

    [12252]<nixpkgs/nixos/modules/services/system/nscd.nix>

[12253]services.nsd.enable

    Whether to enable NSD authoritative DNS server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12254]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12255]services.nsd.bind8Stats

    Whether to enable BIND8 like statistics.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12256]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12257]services.nsd.dnssecInterval

    How often to check whether dnssec key rollover is required

    Type: string

    Default: "1h"

    Declared by:

    [12258]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12259]services.nsd.extraConfig

    Extra nsd config.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12260]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12261]services.nsd.hideVersion

    Whether NSD should answer VERSION.BIND and VERSION.SERVER CHAOS class queries.

    Type: boolean

    Default: true

    Declared by:

    [12262]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12263]services.nsd.identity

    Identify the server (CH TXT ID.SERVER entry).

    Type: string

    Default: "unidentified server"

    Declared by:

    [12264]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12265]services.nsd.interfaces

    What addresses the server should listen to.

    Type: list of strings

    Default: [ "127.0.0.0" "::1" ]

    Declared by:

    [12266]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12267]services.nsd.ipFreebind

    Whether to bind to nonlocal addresses and interfaces that are down. Similar to
    ip-transparent.

    Type: boolean

    Default: false

    Declared by:

    [12268]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12269]services.nsd.ipTransparent

    Allow binding to non local addresses.

    Type: boolean

    Default: false

    Declared by:

    [12270]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12271]services.nsd.ipv4

    Whether to listen on IPv4 connections.

    Type: boolean

    Default: true

    Declared by:

    [12272]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12273]services.nsd.ipv4EDNSSize

    Preferred EDNS buffer size for IPv4.

    Type: signed integer

    Default: 4096

    Declared by:

    [12274]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12275]services.nsd.ipv6

    Whether to listen on IPv6 connections.

    Type: boolean

    Default: true

    Declared by:

    [12276]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12277]services.nsd.ipv6EDNSSize

    Preferred EDNS buffer size for IPv6.

    Type: signed integer

    Default: 4096

    Declared by:

    [12278]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12279]services.nsd.keys

    Define your TSIG keys here.

    Type: attribute set of submodules

    Default: { }

    Example:

    { "tsig.example.org" = {
        algorithm = "hmac-md5";
        keyFile = "/path/to/my/key";
      };
    }

    Declared by:

    [12280]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12281]services.nsd.keys.<name>.algorithm

    Authentication algorithm for this key.

    Type: string

    Default: "hmac-sha256"

    Declared by:

    [12282]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12283]services.nsd.keys.<name>.keyFile

    Path to the file which contains the actual base64 encoded key. The key will be copied into "/
    var/lib/nsd/private" before NSD starts. The copied file is only accessibly by the NSD user.

    Type: path

    Declared by:

    [12284]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12285]services.nsd.logTimeAscii

    Log time in ascii, if false then in unix epoch seconds.

    Type: boolean

    Default: true

    Declared by:

    [12286]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12287]services.nsd.nsid

    NSID identity (hex string, or "ascii_somestring").

    Type: null or string

    Default: null

    Declared by:

    [12288]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12289]services.nsd.port

    Port the service should bind do.

    Type: signed integer

    Default: 53

    Declared by:

    [12290]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12291]services.nsd.ratelimit.enable

    Whether to enable ratelimit capabilities.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12292]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12293]services.nsd.ratelimit.ipv4PrefixLength

    IPv4 prefix length. Addresses are grouped by netblock.

    Type: null or signed integer

    Default: null

    Declared by:

    [12294]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12295]services.nsd.ratelimit.ipv6PrefixLength

    IPv6 prefix length. Addresses are grouped by netblock.

    Type: null or signed integer

    Default: null

    Declared by:

    [12296]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12297]services.nsd.ratelimit.ratelimit

    Max qps allowed from any query source. 0 means unlimited. With an verbosity of 2 blocked and
    unblocked subnets will be logged.

    Type: signed integer

    Default: 200

    Declared by:

    [12298]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12299]services.nsd.ratelimit.size

    Size of the hashtable. More buckets use more memory but lower the chance of hash hash
    collisions.

    Type: signed integer

    Default: 1000000

    Declared by:

    [12300]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12301]services.nsd.ratelimit.slip

    Number of packets that get discarded before replying a SLIP response. 0 disables SLIP
    responses. 1 will make every response a SLIP response.

    Type: null or signed integer

    Default: null

    Declared by:

    [12302]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12303]services.nsd.ratelimit.whitelistRatelimit

    Max qps allowed from whitelisted sources. 0 means unlimited. Set the rrl-whitelist option for
    specific queries to apply this limit instead of the default to them.

    Type: signed integer

    Default: 2000

    Declared by:

    [12304]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12305]services.nsd.remoteControl.enable

    Whether to enable remote control via nsd-control.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12306]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12307]services.nsd.remoteControl.controlCertFile

    Path to the client certificate signed with the server certificate. This file is used by
    nsd-control and generated by nsd-control-setup.

    Type: path

    Default: "/etc/nsd/nsd_control.pem"

    Declared by:

    [12308]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12309]services.nsd.remoteControl.controlKeyFile

    Path to the client private key, which is used by nsd-control but not by the server. This file
    is generated by nsd-control-setup.

    Type: path

    Default: "/etc/nsd/nsd_control.key"

    Declared by:

    [12310]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12311]services.nsd.remoteControl.interfaces

    Which interfaces NSD should bind to for remote control.

    Type: list of strings

    Default: [ "127.0.0.1" "::1" ]

    Declared by:

    [12312]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12313]services.nsd.remoteControl.port

    Port number for remote control operations (uses TLS over TCP).

    Type: signed integer

    Default: 8952

    Declared by:

    [12314]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12315]services.nsd.remoteControl.serverCertFile

    Path to the server self signed certificate, which is used by the server but and by
    nsd-control. This file is generated by nsd-control-setup.

    Type: path

    Default: "/etc/nsd/nsd_server.pem"

    Declared by:

    [12316]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12317]services.nsd.remoteControl.serverKeyFile

    Path to the server private key, which is used by the server but not by nsd-control. This file
    is generated by nsd-control-setup.

    Type: path

    Default: "/etc/nsd/nsd_server.key"

    Declared by:

    [12318]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12319]services.nsd.reuseport

    Whether to enable SO_REUSEPORT on all used sockets. This lets multiple processes bind to the
    same port. This speeds up operation especially if the server count is greater than one and
    makes fast restarts less prone to fail

    Type: boolean

    Default: true

    Declared by:

    [12320]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12321]services.nsd.rootServer

    Whether this server will be a root server (a DNS root server, you usually don't want that).

    Type: boolean

    Default: false

    Declared by:

    [12322]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12323]services.nsd.roundRobin

    Whether to enable round robin rotation of records.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12324]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12325]services.nsd.serverCount

    Number of NSD servers to fork. Put the number of CPUs to use here.

    Type: signed integer

    Default: 1

    Declared by:

    [12326]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12327]services.nsd.statistics

    Statistics are produced every number of seconds. Prints to log. If null no statistics are
    logged.

    Type: null or signed integer

    Default: null

    Declared by:

    [12328]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12329]services.nsd.tcpCount

    Maximum number of concurrent TCP connections per server.

    Type: signed integer

    Default: 100

    Declared by:

    [12330]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12331]services.nsd.tcpQueryCount

    Maximum number of queries served on a single TCP connection. 0 means no maximum.

    Type: signed integer

    Default: 0

    Declared by:

    [12332]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12333]services.nsd.tcpTimeout

    TCP timeout in seconds.

    Type: signed integer

    Default: 120

    Declared by:

    [12334]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12335]services.nsd.verbosity

    Verbosity level.

    Type: signed integer

    Default: 0

    Declared by:

    [12336]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12337]services.nsd.version

    The version string replied for CH TXT version.server and version.bind queries. Will use the
    compiled package version on null. See hideVersion for enabling/disabling this responses.

    Type: null or string

    Default: null

    Declared by:

    [12338]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12339]services.nsd.xfrdReloadTimeout

    Number of seconds between reloads triggered by xfrd.

    Type: signed integer

    Default: 1

    Declared by:

    [12340]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12341]services.nsd.zonefilesCheck

    Whether to check mtime of all zone files on start and sighup.

    Type: boolean

    Default: true

    Declared by:

    [12342]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12343]services.nsd.zones

    Define your zones here. Zones can cascade other zones and therefore inherit settings from
    parent zones. Look at the definition of children to learn about inheritance and child zones.
    The given example will define 3 zones (example.(com|org|net).). Both example.com. and
    example.org. inherit their configuration from serverGroup1.

    Type: attribute set of submodules

    Default: { }

    Example:

    { "serverGroup1" = {
        provideXFR = [ "10.1.2.3 NOKEY" ];
        children = {
          "example.com." = {
            data = ''
              $ORIGIN example.com.
              $TTL    86400
              @ IN SOA a.ns.example.com. admin.example.com. (
              ...
            '';
          };
          "example.org." = {
            data = ''
              $ORIGIN example.org.
              $TTL    86400
              @ IN SOA a.ns.example.com. admin.example.com. (
              ...
            '';
          };
        };
      };

      "example.net." = {
        provideXFR = [ "10.3.2.1 NOKEY" ];
        data = ''
          ...
        '';
      };
    }

    Declared by:

    [12344]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12345]services.nsd.zones.<name>.allowAXFRFallback

    If NSD as secondary server should be allowed to AXFR if the primary server does not allow
    IXFR.

    Type: boolean

    Default: true

    Declared by:

    [12346]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12347]services.nsd.zones.<name>.allowNotify

    Listed primary servers are allowed to notify this secondary server.

    Format: <ip> <key-name | NOKEY | BLOCKED>

    <ip> either a plain IPv4/IPv6 address or range. Valid patters for ranges:
    * 10.0.0.0/24            # via subnet size
    * 10.0.0.0&255.255.255.0 # via subnet mask
    * 10.0.0.1-10.0.0.254    # via range

    A optional port number could be added with a '@':
    * 2001:1234::1@1234

    <key-name | NOKEY | BLOCKED>
    * <key-name> will use the specified TSIG key
    * NOKEY      no TSIG signature is required
    * BLOCKED    notifies from non-listed or blocked IPs will be ignored
    *

    Type: list of strings

    Default: [ ]

    Example: [ "192.0.2.0/24 NOKEY" "10.0.0.1-10.0.0.5 my_tsig_key_name" "10.0.3.4&255.255.0.0
    BLOCKED" ]

    Declared by:

    [12348]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12349]services.nsd.zones.<name>.children

    Children zones inherit all options of their parents. Attributes defined in a child will
    overwrite the ones of its parent. Only leaf zones will be actually served. This way it's
    possible to define maybe zones which share most attributes without duplicating everything.
    This mechanism replaces nsd's patterns in a save and functional way.

    Type: unspecified

    Default: { }

    Declared by:

    [12350]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12351]services.nsd.zones.<name>.data

    The actual zone data. This is the content of your zone file. Use imports or pkgs.lib.readFile
    if you don't want this data in your config file.

    Type: strings concatenated with "\n"

    Default: ""

    Example: ""

    Declared by:

    [12352]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12353]services.nsd.zones.<name>.dnssec

    Whether to enable DNSSEC.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12354]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12355]services.nsd.zones.<name>.dnssecPolicy.algorithm

    Which algorithm to use for DNSSEC

    Type: string

    Default: "RSASHA256"

    Declared by:

    [12356]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12357]services.nsd.zones.<name>.dnssecPolicy.coverage

    The length of time to ensure that keys will be correct; no action will be taken to create new
    keys to be activated after this time.

    Type: string

    Default: "1y"

    Declared by:

    [12358]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12359]services.nsd.zones.<name>.dnssecPolicy.keyttl

    TTL for dnssec records

    Type: string

    Default: "1h"

    Declared by:

    [12360]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12361]services.nsd.zones.<name>.dnssecPolicy.ksk

    Key policy for key signing keys

    Type: submodule

    Default: { keySize = 4096; postPublish = "1mo"; prePublish = "1mo"; rollPeriod = "0"; }

    Declared by:

    [12362]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12363]services.nsd.zones.<name>.dnssecPolicy.ksk.keySize

    Key size in bits

    Type: signed integer

    Declared by:

    [12364]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12365]services.nsd.zones.<name>.dnssecPolicy.ksk.postPublish

    How long after deactivation to keep a key in the zone

    Type: string

    Declared by:

    [12366]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12367]services.nsd.zones.<name>.dnssecPolicy.ksk.prePublish

    How long in advance to publish new keys

    Type: string

    Declared by:

    [12368]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12369]services.nsd.zones.<name>.dnssecPolicy.ksk.rollPeriod

    How frequently to change keys

    Type: string

    Declared by:

    [12370]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12371]services.nsd.zones.<name>.dnssecPolicy.zsk

    Key policy for zone signing keys

    Type: submodule

    Default: { keySize = 2048; postPublish = "1w"; prePublish = "1w"; rollPeriod = "1mo"; }

    Declared by:

    [12372]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12373]services.nsd.zones.<name>.dnssecPolicy.zsk.keySize

    Key size in bits

    Type: signed integer

    Declared by:

    [12374]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12375]services.nsd.zones.<name>.dnssecPolicy.zsk.postPublish

    How long after deactivation to keep a key in the zone

    Type: string

    Declared by:

    [12376]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12377]services.nsd.zones.<name>.dnssecPolicy.zsk.prePublish

    How long in advance to publish new keys

    Type: string

    Declared by:

    [12378]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12379]services.nsd.zones.<name>.dnssecPolicy.zsk.rollPeriod

    How frequently to change keys

    Type: string

    Declared by:

    [12380]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12381]services.nsd.zones.<name>.maxRefreshSecs

    Limit refresh time for secondary zones. This is the timer which checks to see if the zone has
    to be refetched when it expires. Normally the value from the SOA record is used, but this
    option restricts that value.

    Type: null or signed integer

    Default: null

    Declared by:

    [12382]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12383]services.nsd.zones.<name>.maxRetrySecs

    Limit retry time for secondary zones. This is the timeout after a failed fetch attempt for
    the zone. Normally the value from the SOA record is used, but this option restricts that
    value.

    Type: null or signed integer

    Default: null

    Declared by:

    [12384]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12385]services.nsd.zones.<name>.minRefreshSecs

    Limit refresh time for secondary zones.

    Type: null or signed integer

    Default: null

    Declared by:

    [12386]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12387]services.nsd.zones.<name>.minRetrySecs

    Limit retry time for secondary zones.

    Type: null or signed integer

    Default: null

    Declared by:

    [12388]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12389]services.nsd.zones.<name>.notify

    This primary server will notify all given secondary servers about zone changes.

    Format: <ip> <key-name | NOKEY>

    <ip> a plain IPv4/IPv6 address with on optional port number (ip@port)

    <key-name | NOKEY>
    * <key-name> sign notifies with the specified key
    * NOKEY      don't sign notifies

    Type: list of strings

    Default: [ ]

    Example: [ "10.0.0.1@3721 my_key" "::5 NOKEY" ]

    Declared by:

    [12390]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12391]services.nsd.zones.<name>.notifyRetry

    Specifies the number of retries for failed notifies. Set this along with notify.

    Type: signed integer

    Default: 5

    Declared by:

    [12392]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12393]services.nsd.zones.<name>.outgoingInterface

    This address will be used for zone-transfere requests if configured as a secondary server or
    notifications in case of a primary server. Supply either a plain IPv4 or IPv6 address with an
    optional port number (ip@port).

    Type: null or string

    Default: null

    Example: "2000::1@1234"

    Declared by:

    [12394]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12395]services.nsd.zones.<name>.provideXFR

    Allow these IPs and TSIG to transfer zones, addr TSIG|NOKEY|BLOCKED address range 192.0.2.0/
    24, 1.2.3.4&255.255.0.0, 3.0.2.20-3.0.2.40

    Type: list of strings

    Default: [ ]

    Example: [ "192.0.2.0/24 NOKEY" "192.0.2.0/24 my_tsig_key_name" ]

    Declared by:

    [12396]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12397]services.nsd.zones.<name>.requestXFR

    Format: [AXFR|UDP] <ip-address> <key-name | NOKEY>

    Type: list of strings

    Default: [ ]

    Example: [ ]

    Declared by:

    [12398]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12399]services.nsd.zones.<name>.rrlWhitelist

    Whitelists the given rrl-types.

    Type: list of one of "nxdomain", "error", "referral", "any", "rrsig", "wildcard", "nodata",
    "dnskey", "positive", "all"s

    Default: [ ]

    Declared by:

    [12400]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12401]services.nsd.zones.<name>.zoneStats

    When set to something distinct to null NSD is able to collect statistics per zone. All
    statistics of this zone(s) will be added to the group specified by this given name. Use "%s"
    to use the zones name as the group. The groups are output from nsd-control stats and
    stats_noreset.

    Type: null or string

    Default: null

    Example: "%s"

    Declared by:

    [12402]<nixpkgs/nixos/modules/services/networking/nsd.nix>

[12403]services.ntopng.enable

    Enable ntopng, a high-speed web-based traffic analysis and flow collection tool.

    With the default configuration, ntopng monitors all network interfaces and displays its
    findings at http://localhost:3000. Default username and password is admin/admin.

    See the ntopng(8) manual page and http://www.ntop.org/products/ntop/ for more info.

    Note that enabling ntopng will also enable redis (key-value database server) for persistent
    data storage.

    Type: boolean

    Default: false

    Declared by:

    [12404]<nixpkgs/nixos/modules/services/networking/ntopng.nix>

[12405]services.ntopng.configText

    Overridable configuration file contents to use for ntopng. By default, use the contents
    automatically generated by NixOS.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    --interface=any
    --http-port=3000
    --disable-login
    ''

    Declared by:

    [12406]<nixpkgs/nixos/modules/services/networking/ntopng.nix>

[12407]services.ntopng.extraConfig

    Configuration lines that will be appended to the generated ntopng configuration file. Note
    that this mechanism does not work when the manual configText option is used.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12408]<nixpkgs/nixos/modules/services/networking/ntopng.nix>

[12409]services.ntopng.http-port

    Sets the HTTP port of the embedded web server.

    Type: signed integer

    Default: 3000

    Declared by:

    [12410]<nixpkgs/nixos/modules/services/networking/ntopng.nix>

[12411]services.ntopng.interfaces

    List of interfaces to monitor. Use "any" to monitor all interfaces.

    Type: list of strings

    Default: [ "any" ]

    Example: [ "eth0" "wlan0" ]

    Declared by:

    [12412]<nixpkgs/nixos/modules/services/networking/ntopng.nix>

[12413]services.ntp.enable

    Whether to synchronise your machine's time using ntpd, as a peer in the NTP network.

    Disables systemd.timesyncd if enabled.

    Type: boolean

    Default: false

    Declared by:

    [12414]<nixpkgs/nixos/modules/services/networking/ntp/ntpd.nix>

[12415]services.ntp.extraConfig

    Additional text appended to ntp.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    fudge 127.127.1.0 stratum 10
    ''

    Declared by:

    [12416]<nixpkgs/nixos/modules/services/networking/ntp/ntpd.nix>

[12417]services.ntp.extraFlags

    Extra flags passed to the ntpd command.

    Type: list of strings

    Default: [ ]

    Example:

    [ "--interface=eth0" ]

    Declared by:

    [12418]<nixpkgs/nixos/modules/services/networking/ntp/ntpd.nix>

[12419]services.ntp.restrictDefault

    The restriction flags to be set by default.

    The default flags prevent external hosts from using ntpd as a DDoS reflector, setting system
    time, and querying OS/ntpd version. As recommended in section 6.5.1.1.3, answer "No" of http:
    //support.ntp.org/bin/view/Support/AccessRestrictions

    Type: list of strings

    Default: [ "limited" "kod" "nomodify" "notrap" "noquery" "nopeer" ]

    Declared by:

    [12420]<nixpkgs/nixos/modules/services/networking/ntp/ntpd.nix>

[12421]services.ntp.restrictSource

    The restriction flags to be set on source.

    The default flags allow peers to be added by ntpd from configured pool(s), but not by other
    means.

    Type: list of strings

    Default: [ "limited" "kod" "nomodify" "notrap" "noquery" ]

    Declared by:

    [12422]<nixpkgs/nixos/modules/services/networking/ntp/ntpd.nix>

[12423]services.ntp.servers

    The set of NTP servers from which to synchronise.

    Type: list of strings

    Default: [ "0.nixos.pool.ntp.org" "1.nixos.pool.ntp.org" "2.nixos.pool.ntp.org"
    "3.nixos.pool.ntp.org" ]

    Declared by:

    [12424]<nixpkgs/nixos/modules/services/networking/ntp/ntpd.nix>

[12425]services.nullidentdmod.enable

    Whether to enable the nullidentdmod identd daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12426]<nixpkgs/nixos/modules/services/networking/nullidentdmod.nix>

[12427]services.nullidentdmod.userid

    User ID to return. Set to null to return a random string each time.

    Type: null or string

    Default: null

    Example: "alice"

    Declared by:

    [12428]<nixpkgs/nixos/modules/services/networking/nullidentdmod.nix>

[12429]services.nullmailer.enable

    Whether to enable nullmailer daemon.

    Type: boolean

    Default: false

    Declared by:

    [12430]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12431]services.nullmailer.config.adminaddr

    If set, all recipients to users at either "localhost" (the literal string) or the canonical
    host name (from the me control attribute) are remapped to this address. This is provided to
    allow local daemons to be able to send email to "somebody@localhost" and have it go somewhere
    sensible instead of being bounced by your relay host. To send to multiple addresses, put them
    all on one line separated by a comma.

    Type: null or string

    Default: null

    Declared by:

    [12432]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12433]services.nullmailer.config.allmailfrom

    If set, content will override the envelope sender on all messages.

    Type: null or string

    Default: null

    Declared by:

    [12434]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12435]services.nullmailer.config.defaultdomain

    The content of this attribute is appended to any host name that does not contain a period
    (except localhost), including defaulthost and idhost. Defaults to the value of the me
    attribute, if it exists, otherwise the literal name defauldomain.

    Type: null or string

    Default: null

    Declared by:

    [12436]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12437]services.nullmailer.config.defaulthost

    The content of this attribute is appended to any address that is missing a host name.
    Defaults to the value of the me control attribute, if it exists, otherwise the literal name
    defaulthost.

    Type: null or string

    Default: null

    Declared by:

    [12438]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12439]services.nullmailer.config.doublebounceto

    If the original sender was empty (the original message was a delivery status or disposition
    notification), the double bounce is sent to the address in this attribute.

    Type: null or string

    Default: null

    Declared by:

    [12440]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12441]services.nullmailer.config.helohost

    Sets the environment variable $HELOHOST which is used by the SMTP protocol module to set the
    parameter given to the HELO command. Defaults to the value of the me configuration attribute.

    Type: null or string

    Default: null

    Declared by:

    [12442]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12443]services.nullmailer.config.idhost

    The content of this attribute is used when building the message-id string for the message.
    Defaults to the canonicalized value of defaulthost.

    Type: null or string

    Default: null

    Declared by:

    [12444]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12445]services.nullmailer.config.maxpause

    The maximum time to pause between successive queue runs, in seconds. Defaults to 24 hours
    (86400).

    Type: null or string

    Default: null

    Declared by:

    [12446]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12447]services.nullmailer.config.me

    The fully-qualifiled host name of the computer running nullmailer. Defaults to the literal
    name me.

    Type: null or string

    Default: null

    Declared by:

    [12448]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12449]services.nullmailer.config.pausetime

    The minimum time to pause between successive queue runs when there are messages in the queue,
    in seconds. Defaults to 1 minute (60). Each time this timeout is reached, the timeout is
    doubled to a maximum of maxpause. After new messages are injected, the timeout is reset. If
    this is set to 0, nullmailer-send will exit immediately after going through the queue once
    (one-shot mode).

    Type: null or string

    Default: null

    Declared by:

    [12450]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12451]services.nullmailer.config.remotes

    A list of remote servers to which to send each message. Each line contains a remote host name
    or address followed by an optional protocol string, separated by white space.

    See man 8 nullmailer-send for syntax and available options.

    WARNING: This is stored world-readable in the nix store. If you need to specify any secret
    credentials here, consider using the remotesFile option instead.

    Type: null or string

    Default: null

    Declared by:

    [12452]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12453]services.nullmailer.config.sendtimeout

    The time to wait for a remote module listed above to complete sending a message before
    killing it and trying again, in seconds. Defaults to 1 hour (3600). If this is set to 0,
    nullmailer-send will wait forever for messages to complete sending.

    Type: null or string

    Default: null

    Declared by:

    [12454]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12455]services.nullmailer.group

    Group to use to run nullmailer-send.

    Type: string

    Default: "nullmailer"

    Declared by:

    [12456]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12457]services.nullmailer.remotesFile

    Path to the remotes control file. This file contains a list of remote servers to which to
    send each message.

    See man 8 nullmailer-send for syntax and available options.

    Type: null or string

    Default: null

    Declared by:

    [12458]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12459]services.nullmailer.setSendmail

    Whether to set the system sendmail to nullmailer's.

    Type: boolean

    Default: true

    Declared by:

    [12460]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12461]services.nullmailer.user

    User to use to run nullmailer-send.

    Type: string

    Default: "nullmailer"

    Declared by:

    [12462]<nixpkgs/nixos/modules/services/mail/nullmailer.nix>

[12463]services.nylon.<name>.enable

    Enables nylon as a running service upon activation.

    Type: boolean

    Default: false

    Declared by:

    [12464]<nixpkgs/nixos/modules/services/networking/nylon.nix>

[12465]services.nylon.<name>.acceptInterface

    Tell nylon which interface to listen for client requests on, default is "lo".

    Type: string

    Default: "lo"

    Declared by:

    [12466]<nixpkgs/nixos/modules/services/networking/nylon.nix>

[12467]services.nylon.<name>.allowedIPRanges

    Allowed client IP ranges are evaluated first, defaults to ARIN IPv4 private ranges: [
    "192.168.0.0/16" "127.0.0.0/8" "172.16.0.0/12" "10.0.0.0/8" ]

    Type: list of strings

    Default: [ "192.168.0.0/16" "127.0.0.1/8" "172.16.0.1/12" "10.0.0.0/8" ]

    Declared by:

    [12468]<nixpkgs/nixos/modules/services/networking/nylon.nix>

[12469]services.nylon.<name>.bindInterface

    Tell nylon which interface to use as an uplink, default is "enp3s0f0".

    Type: string

    Default: "enp3s0f0"

    Declared by:

    [12470]<nixpkgs/nixos/modules/services/networking/nylon.nix>

[12471]services.nylon.<name>.deniedIPRanges

    Denied client IP ranges, these gets evaluated after the allowed IP ranges, defaults to all
    IPv4 addresses: [ "0.0.0.0/0" ] To block all other access than the allowed.

    Type: list of strings

    Default: [ "0.0.0.0/0" ]

    Declared by:

    [12472]<nixpkgs/nixos/modules/services/networking/nylon.nix>

[12473]services.nylon.<name>.logging

    Enable logging, default is no logging.

    Type: boolean

    Default: false

    Declared by:

    [12474]<nixpkgs/nixos/modules/services/networking/nylon.nix>

[12475]services.nylon.<name>.name

    The name of this nylon instance.

    Type: string

    Default: ""

    Declared by:

    [12476]<nixpkgs/nixos/modules/services/networking/nylon.nix>

[12477]services.nylon.<name>.nrConnections

    The number of allowed simultaneous connections to the daemon, default 10.

    Type: signed integer

    Default: 10

    Declared by:

    [12478]<nixpkgs/nixos/modules/services/networking/nylon.nix>

[12479]services.nylon.<name>.port

    What port to listen for client requests, default is 1080.

    Type: signed integer

    Default: 1080

    Declared by:

    [12480]<nixpkgs/nixos/modules/services/networking/nylon.nix>

[12481]services.nylon.<name>.verbosity

    Enable verbose output, default is to not be verbose.

    Type: boolean

    Default: false

    Declared by:

    [12482]<nixpkgs/nixos/modules/services/networking/nylon.nix>

[12483]services.nzbget.enable

    Whether to enable NZBGet.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12484]<nixpkgs/nixos/modules/services/misc/nzbget.nix>

[12485]services.nzbget.group

    Group under which NZBGet runs

    Type: string

    Default: "nzbget"

    Declared by:

    [12486]<nixpkgs/nixos/modules/services/misc/nzbget.nix>

[12487]services.nzbget.user

    User account under which NZBGet runs

    Type: string

    Default: "nzbget"

    Declared by:

    [12488]<nixpkgs/nixos/modules/services/misc/nzbget.nix>

[12489]services.nzbhydra2.enable

    Whether to enable NZBHydra2.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12490]<nixpkgs/nixos/modules/services/misc/nzbhydra2.nix>

[12491]services.nzbhydra2.package

    NZBHydra2 package to use.

    Type: package

    Default: "pkgs.nzbhydra2"

    Declared by:

    [12492]<nixpkgs/nixos/modules/services/misc/nzbhydra2.nix>

[12493]services.nzbhydra2.dataDir

    The directory where NZBHydra2 stores its data files.

    Type: string

    Default: "/var/lib/nzbhydra2"

    Declared by:

    [12494]<nixpkgs/nixos/modules/services/misc/nzbhydra2.nix>

[12495]services.nzbhydra2.openFirewall

    Open ports in the firewall for the NZBHydra2 web interface.

    Type: boolean

    Default: false

    Declared by:

    [12496]<nixpkgs/nixos/modules/services/misc/nzbhydra2.nix>

[12497]services.oauth2_proxy.enable

    Whether to enable oauth2_proxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12498]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12499]services.oauth2_proxy.package

    The package that provides oauth2-proxy.

    Type: package

    Default: "pkgs.oauth2-proxy"

    Declared by:

    [12500]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12501]services.oauth2_proxy.approvalPrompt

    OAuth approval_prompt.

    Type: one of "force", "auto"

    Default: "force"

    Declared by:

    [12502]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12503]services.oauth2_proxy.azure.resource

    The resource that is protected.

    Type: string

    Declared by:

    [12504]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12505]services.oauth2_proxy.azure.tenant

    Go to a tenant-specific or common (tenant-independent) endpoint.

    Type: string

    Default: "common"

    Declared by:

    [12506]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12507]services.oauth2_proxy.basicAuthPassword

    The password to set when passing the HTTP Basic Auth header.

    Type: null or string

    Default: null

    Declared by:

    [12508]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12509]services.oauth2_proxy.clientID

    The OAuth Client ID.

    Type: null or string

    Example: "123456.apps.googleusercontent.com"

    Declared by:

    [12510]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12511]services.oauth2_proxy.clientSecret

    The OAuth Client Secret.

    Type: null or string

    Declared by:

    [12512]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12513]services.oauth2_proxy.cookie.domain

    Optional cookie domains to force cookies to (ie: `.yourcompany.com`). The longest domain
    matching the request's host will be used (or the shortest cookie domain if there is no
    match).

    Type: null or string

    Default: null

    Example: ".yourcompany.com"

    Declared by:

    [12514]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12515]services.oauth2_proxy.cookie.expire

    Expire timeframe for cookie.

    Type: string

    Default: "168h0m0s"

    Declared by:

    [12516]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12517]services.oauth2_proxy.cookie.httpOnly

    Set HttpOnly cookie flag.

    Type: boolean

    Default: true

    Declared by:

    [12518]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12519]services.oauth2_proxy.cookie.name

    The name of the cookie that the oauth_proxy creates.

    Type: string

    Default: "_oauth2_proxy"

    Declared by:

    [12520]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12521]services.oauth2_proxy.cookie.refresh

    Refresh the cookie after this duration; 0 to disable.

    Type: null or string

    Default: null

    Example: "168h0m0s"

    Declared by:

    [12522]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12523]services.oauth2_proxy.cookie.secret

    The seed string for secure cookies.

    Type: null or string

    Declared by:

    [12524]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12525]services.oauth2_proxy.cookie.secure

    Set secure (HTTPS) cookie flag.

    Type: boolean

    Default: true

    Declared by:

    [12526]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12527]services.oauth2_proxy.customTemplatesDir

    Path to custom HTML templates.

    Type: null or path

    Default: null

    Declared by:

    [12528]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12529]services.oauth2_proxy.email.addresses

    Line-separated email addresses that are allowed to authenticate.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [12530]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12531]services.oauth2_proxy.email.domains

    Authenticate emails with the specified domains. Use * to authenticate any email.

    Type: list of strings

    Default: [ ]

    Declared by:

    [12532]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12533]services.oauth2_proxy.extraConfig

    Extra config to pass to oauth2-proxy.

    Type: attribute set of anythings

    Default: { }

    Declared by:

    [12534]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12535]services.oauth2_proxy.github.org

    Restrict logins to members of this organisation.

    Type: null or string

    Default: null

    Declared by:

    [12536]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12537]services.oauth2_proxy.github.team

    Restrict logins to members of this team.

    Type: null or string

    Default: null

    Declared by:

    [12538]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12539]services.oauth2_proxy.google.adminEmail

    The Google Admin to impersonate for API calls.

    Only users with access to the Admin APIs can access the Admin SDK Directory API, thus the
    service account needs to impersonate one of those users to access the Admin SDK Directory
    API.

    See [12540]https://developers.google.com/admin-sdk/directory/v1/guides/delegation#
    delegate_domain-wide_authority_to_your_service_account.

    Type: string

    Declared by:

    [12541]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12542]services.oauth2_proxy.google.groups

    Restrict logins to members of these Google groups.

    Type: list of strings

    Default: [ ]

    Declared by:

    [12543]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12544]services.oauth2_proxy.google.serviceAccountJSON

    The path to the service account JSON credentials.

    Type: path

    Declared by:

    [12545]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12546]services.oauth2_proxy.htpasswd.displayForm

    Display username / password login form if an htpasswd file is provided.

    Type: boolean

    Default: true

    Declared by:

    [12547]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12548]services.oauth2_proxy.htpasswd.file

    Additionally authenticate against a htpasswd file. Entries must be created with htpasswd -s
    for SHA encryption.

    Type: null or path

    Default: null

    Declared by:

    [12549]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12550]services.oauth2_proxy.httpAddress

    HTTPS listening address. This module does not expose the port by default. If you want this
    URL to be accessible to other machines, please add the port to
    networking.firewall.allowedTCPPorts.

    Type: string

    Default: "http://127.0.0.1:4180"

    Declared by:

    [12551]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12552]services.oauth2_proxy.keyFile

    oauth2-proxy allows passing sensitive configuration via environment variables. Make a file
    that contains lines like OAUTH2_PROXY_CLIENT_SECRET=asdfasdfasdf.apps.googleuserscontent.com
    and specify the path here.

    Type: null or path

    Default: null

    Example: "/run/keys/oauth2_proxy"

    Declared by:

    [12553]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12554]services.oauth2_proxy.loginURL

    Authentication endpoint.

    You only need to set this if you are using a self-hosted provider (e.g. Github Enterprise).
    If you're using a publicly hosted provider (e.g github.com), then the default works.

    Type: null or string

    Default: null

    Example: "https://provider.example.com/oauth/authorize"

    Declared by:

    [12555]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12556]services.oauth2_proxy.nginx.proxy

    The address of the reverse proxy endpoint for oauth2_proxy

    Type: string

    Default: "http://127.0.0.1:4180"

    Declared by:

    [12557]<nixpkgs/nixos/modules/services/security/oauth2_proxy_nginx.nix>

[12558]services.oauth2_proxy.nginx.virtualHosts

    A list of nginx virtual hosts to put behind the oauth2 proxy

    Type: list of strings

    Default: [ ]

    Declared by:

    [12559]<nixpkgs/nixos/modules/services/security/oauth2_proxy_nginx.nix>

[12560]services.oauth2_proxy.passAccessToken

    Pass OAuth access_token to upstream via X-Forwarded-Access-Token header.

    Type: boolean

    Default: false

    Declared by:

    [12561]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12562]services.oauth2_proxy.passBasicAuth

    Pass HTTP Basic Auth, X-Forwarded-User and X-Forwarded-Email information to upstream.

    Type: boolean

    Default: true

    Declared by:

    [12563]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12564]services.oauth2_proxy.passHostHeader

    Pass the request Host Header to upstream.

    Type: boolean

    Default: true

    Declared by:

    [12565]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12566]services.oauth2_proxy.profileURL

    Profile access endpoint.

    Type: null or string

    Default: null

    Declared by:

    [12567]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12568]services.oauth2_proxy.provider

    OAuth provider.

    Type: one of "google", "azure", "facebook", "github", "keycloak", "gitlab", "linkedin",
    "login.gov", "bitbucket", "nextcloud", "digitalocean", "oidc"

    Default: "google"

    Declared by:

    [12569]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12570]services.oauth2_proxy.proxyPrefix

    The url root path that this proxy should be nested under.

    Type: string

    Default: "/oauth2"

    Declared by:

    [12571]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12572]services.oauth2_proxy.redeemURL

    Token redemption endpoint.

    You only need to set this if you are using a self-hosted provider (e.g. Github Enterprise).
    If you're using a publicly hosted provider (e.g github.com), then the default works.

    Type: null or string

    Default: null

    Example: "https://provider.example.com/oauth/token"

    Declared by:

    [12573]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12574]services.oauth2_proxy.redirectURL

    The OAuth2 redirect URL.

    Type: null or string

    Default: null

    Example: "https://internalapp.yourcompany.com/oauth2/callback"

    Declared by:

    [12575]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12576]services.oauth2_proxy.requestLogging

    Log requests to stdout.

    Type: boolean

    Default: true

    Declared by:

    [12577]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12578]services.oauth2_proxy.reverseProxy

    In case when running behind a reverse proxy, controls whether headers like X-Real-Ip are
    accepted. Usage behind a reverse proxy will require this flag to be set to avoid logging the
    reverse proxy IP address.

    Type: boolean

    Default: false

    Declared by:

    [12579]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12580]services.oauth2_proxy.scope

    OAuth scope specification.

    Type: null or string

    Default: null

    Declared by:

    [12581]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12582]services.oauth2_proxy.setXauthrequest

    Set X-Auth-Request-User and X-Auth-Request-Email response headers (useful in Nginx
    auth_request mode). Setting this to 'null' means using the upstream default (false).

    Type: null or boolean

    Default: false

    Declared by:

    [12583]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12584]services.oauth2_proxy.signatureKey

    GAP-Signature request signature key.

    Type: null or string

    Default: null

    Example: "sha1:secret0"

    Declared by:

    [12585]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12586]services.oauth2_proxy.skipAuthRegexes

    Skip authentication for requests matching any of these regular expressions.

    Type: list of strings

    Default: [ ]

    Declared by:

    [12587]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12588]services.oauth2_proxy.tls.enable

    Whether to serve over TLS.

    Type: boolean

    Default: false

    Declared by:

    [12589]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12590]services.oauth2_proxy.tls.certificate

    Path to certificate file.

    Type: path

    Declared by:

    [12591]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12592]services.oauth2_proxy.tls.httpsAddress

    addr:port to listen on for HTTPS clients.

    Remember to add port to allowedTCPPorts if you want other machines to be able to connect to
    it.

    Type: string

    Default: ":443"

    Declared by:

    [12593]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12594]services.oauth2_proxy.tls.key

    Path to private key file.

    Type: path

    Declared by:

    [12595]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12596]services.oauth2_proxy.upstream

    The http url(s) of the upstream endpoint or file:// paths for static files. Routing is based
    on the path.

    Type: list of strings or string convertible to it

    Default: [ ]

    Declared by:

    [12597]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12598]services.oauth2_proxy.validateURL

    Access token validation endpoint.

    You only need to set this if you are using a self-hosted provider (e.g. Github Enterprise).
    If you're using a publicly hosted provider (e.g github.com), then the default works.

    Type: null or string

    Default: null

    Example: "https://provider.example.com/user/emails"

    Declared by:

    [12599]<nixpkgs/nixos/modules/services/security/oauth2_proxy.nix>

[12600]services.ocserv.enable

    Whether to enable ocserv.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12601]<nixpkgs/nixos/modules/services/networking/ocserv.nix>

[12602]services.ocserv.config

    Configuration content to start an OCServ server.

    For a full configuration reference,please refer to the online documentation (https://
    ocserv.gitlab.io/www/manual.html), the openconnect recipes (https://github.com/openconnect/
    recipes) or `man ocserv`.

    Type: strings concatenated with "\n"

    Example:

    ''
    # configuration examples from $out/doc without explanatory comments.
    # for a full reference please look at the installed man pages.
    auth = "plain[passwd=./sample.passwd]"
    tcp-port = 443
    udp-port = 443
    run-as-user = nobody
    run-as-group = nogroup
    socket-file = /run/ocserv-socket
    server-cert = certs/server-cert.pem
    server-key = certs/server-key.pem
    keepalive = 32400
    dpd = 90
    mobile-dpd = 1800
    switch-to-tcp-timeout = 25
    try-mtu-discovery = false
    cert-user-oid = 0.9.2342.19200300.100.1.1
    tls-priorities = "NORMAL:%SERVER_PRECEDENCE:%COMPAT:-VERS-SSL3.0"
    auth-timeout = 240
    min-reauth-time = 300
    max-ban-score = 80
    ban-reset-time = 1200
    cookie-timeout = 300
    deny-roaming = false
    rekey-time = 172800
    rekey-method = ssl
    use-occtl = true
    pid-file = /run/ocserv.pid
    device = vpns
    predictable-ips = true
    default-domain = example.com
    ipv4-network = 192.168.1.0
    ipv4-netmask = 255.255.255.0
    dns = 192.168.1.2
    ping-leases = false
    route = 10.10.10.0/255.255.255.0
    route = 192.168.0.0/255.255.0.0
    no-route = 192.168.5.0/255.255.255.0
    cisco-client-compat = true
    dtls-legacy = true

    [vhost:www.example.com]
    auth = "certificate"
    ca-cert = certs/ca.pem
    server-cert = certs/server-cert-secp521r1.pem
    server-key = cersts/certs/server-key-secp521r1.pem
    ipv4-network = 192.168.2.0
    ipv4-netmask = 255.255.255.0
    cert-user-oid = 0.9.2342.19200300.100.1.1
    ''

    Declared by:

    [12603]<nixpkgs/nixos/modules/services/networking/ocserv.nix>

[12604]services.octoprint.enable

    Whether to enable OctoPrint, web interface for 3D printers.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12605]<nixpkgs/nixos/modules/services/misc/octoprint.nix>

[12606]services.octoprint.extraConfig

    Extra options which are added to OctoPrint's YAML configuration file.

    Type: attribute set

    Default: { }

    Declared by:

    [12607]<nixpkgs/nixos/modules/services/misc/octoprint.nix>

[12608]services.octoprint.group

    Group for the daemon.

    Type: string

    Default: "octoprint"

    Declared by:

    [12609]<nixpkgs/nixos/modules/services/misc/octoprint.nix>

[12610]services.octoprint.host

    Host to bind OctoPrint to.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [12611]<nixpkgs/nixos/modules/services/misc/octoprint.nix>

[12612]services.octoprint.plugins

    Additional plugins to be used. Available plugins are passed through the plugins input.

    Type: function that evaluates to a(n) listOf

    Default: "plugins: []"

    Example:

    plugins: with plugins; [ themeify stlviewer ]

    Declared by:

    [12613]<nixpkgs/nixos/modules/services/misc/octoprint.nix>

[12614]services.octoprint.port

    Port to bind OctoPrint to.

    Type: signed integer

    Default: 5000

    Declared by:

    [12615]<nixpkgs/nixos/modules/services/misc/octoprint.nix>

[12616]services.octoprint.stateDir

    State directory of the daemon.

    Type: path

    Default: "/var/lib/octoprint"

    Declared by:

    [12617]<nixpkgs/nixos/modules/services/misc/octoprint.nix>

[12618]services.octoprint.user

    User for the daemon.

    Type: string

    Default: "octoprint"

    Declared by:

    [12619]<nixpkgs/nixos/modules/services/misc/octoprint.nix>

[12620]services.offlineimap.enable

    Whether to enable OfflineIMAP, a software to dispose your mailbox(es) as a local Maildir(s).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12621]<nixpkgs/nixos/modules/services/mail/offlineimap.nix>

[12622]services.offlineimap.package

    Offlineimap derivation to use.

    Type: package

    Default: "pkgs.offlineimap"

    Declared by:

    [12623]<nixpkgs/nixos/modules/services/mail/offlineimap.nix>

[12624]services.offlineimap.install

    Whether to install a user service for Offlineimap. Once the service is started, emails will
    be fetched automatically.

    The service must be manually started for each user with "systemctl --user start offlineimap"
    or globally through services.offlineimap.enable.

    Type: boolean

    Default: false

    Declared by:

    [12625]<nixpkgs/nixos/modules/services/mail/offlineimap.nix>

[12626]services.offlineimap.onCalendar

    How often is offlineimap started. Default is '*:0/3' meaning every 3 minutes. See
    systemd.time(7) for more information about the format.

    Type: string

    Default: "*:0/3"

    Declared by:

    [12627]<nixpkgs/nixos/modules/services/mail/offlineimap.nix>

[12628]services.offlineimap.path

    List of derivations to put in Offlineimap's path.

    Type: list of paths

    Default: [ ]

    Example:

    [ pkgs.pass pkgs.bash pkgs.notmuch ]

    Declared by:

    [12629]<nixpkgs/nixos/modules/services/mail/offlineimap.nix>

[12630]services.offlineimap.timeoutStartSec

    How long waiting for offlineimap before killing it. Default is '120sec' meaning every 2
    minutes. See systemd.time(7) for more information about the format.

    Type: string

    Default: "120sec"

    Declared by:

    [12631]<nixpkgs/nixos/modules/services/mail/offlineimap.nix>

[12632]services.ofono.enable

    Whether to enable Ofono.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12633]<nixpkgs/nixos/modules/services/networking/ofono.nix>

[12634]services.ofono.plugins

    The list of plugins to install.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.modem-manager-gui ]

    Declared by:

    [12635]<nixpkgs/nixos/modules/services/networking/ofono.nix>

[12636]services.oidentd.enable

    Whether to enable ‘oidentd’, an implementation of the Ident protocol (RFC 1413). It allows
    remote systems to identify the name of the user associated with a TCP connection.

    Type: boolean

    Default: false

    Declared by:

    [12637]<nixpkgs/nixos/modules/services/networking/oidentd.nix>

[12638]services.ombi.enable

    Whether to enable Ombi. Optionally see [12639]https://docs.ombi.app/info/reverse-proxy on how
    to set up a reverse proxy .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12640]<nixpkgs/nixos/modules/services/misc/ombi.nix>

[12641]services.ombi.dataDir

    The directory where Ombi stores its data files.

    Type: string

    Default: "/var/lib/ombi"

    Declared by:

    [12642]<nixpkgs/nixos/modules/services/misc/ombi.nix>

[12643]services.ombi.group

    Group under which Ombi runs.

    Type: string

    Default: "ombi"

    Declared by:

    [12644]<nixpkgs/nixos/modules/services/misc/ombi.nix>

[12645]services.ombi.openFirewall

    Open ports in the firewall for the Ombi web interface.

    Type: boolean

    Default: false

    Declared by:

    [12646]<nixpkgs/nixos/modules/services/misc/ombi.nix>

[12647]services.ombi.port

    The port for the Ombi web interface.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 5000

    Declared by:

    [12648]<nixpkgs/nixos/modules/services/misc/ombi.nix>

[12649]services.ombi.user

    User account under which Ombi runs.

    Type: string

    Default: "ombi"

    Declared by:

    [12650]<nixpkgs/nixos/modules/services/misc/ombi.nix>

[12651]services.onedrive.enable

    Enable OneDrive service

    Type: boolean

    Default: false

    Declared by:

    [12652]<nixpkgs/nixos/modules/services/networking/onedrive.nix>

[12653]services.onedrive.package

    OneDrive package to use.

    Type: package

    Default: "pkgs.onedrive"

    Example:

    pkgs.onedrive

    Declared by:

    [12654]<nixpkgs/nixos/modules/services/networking/onedrive.nix>

[12655]services.openafsClient.enable

    Whether to enable the OpenAFS client.

    Type: boolean

    Default: false

    Declared by:

    [12656]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12657]services.openafsClient.packages.module

    OpenAFS kernel module package. MUST match the userland package!

    Type: package

    Default: "config.boot.kernelPackages.openafs"

    Declared by:

    [12658]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12659]services.openafsClient.packages.programs

    OpenAFS programs package. MUST match the kernel module package!

    Type: package

    Default: "getBin pkgs.openafs"

    Declared by:

    [12660]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12661]services.openafsClient.afsdb

    Resolve cells via AFSDB DNS records.

    Type: boolean

    Default: true

    Declared by:

    [12662]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12663]services.openafsClient.cache.blocks

    Cache size in 1KB blocks.

    Type: signed integer

    Default: 100000

    Declared by:

    [12664]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12665]services.openafsClient.cache.chunksize

    Size of each cache chunk given in powers of 2. 0 resets the chunk size to its default values
    (13 (8 KB) for memcache, 18-20 (256 KB to 1 MB) for diskcache). Maximum value is 30.
    Important performance parameter. Set to higher values when dealing with large files.

    Type: integer between 0 and 30 (both inclusive)

    Default: 0

    Declared by:

    [12666]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12667]services.openafsClient.cache.directory

    Cache directory.

    Type: string

    Default: "/var/cache/openafs"

    Declared by:

    [12668]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12669]services.openafsClient.cache.diskless

    Use in-memory cache for diskless machines. Has no real performance benefit anymore.

    Type: boolean

    Default: false

    Declared by:

    [12670]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12671]services.openafsClient.cellName

    Cell name.

    Type: string

    Default: ""

    Example: "grand.central.org"

    Declared by:

    [12672]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12673]services.openafsClient.cellServDB

    This cell's database server records, added to the global CellServDB. See CellServDB(5) man
    page for syntax. Ignored when afsdb is set to true.

    Type: list of submodules

    Default: [ ]

    Example:

    ''
    [ { ip = "1.2.3.4"; dnsname = "first.afsdb.server.dns.fqdn.org"; }
      { ip = "2.3.4.5"; dnsname = "second.afsdb.server.dns.fqdn.org"; }
    ]
    ''

    Declared by:

    [12674]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12675]services.openafsClient.cellServDB.*.dnsname

    DNS full-qualified domain name of a database server

    Type: string

    Default: ""

    Example: "afs.example.org"

    Declared by:

    [12676]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12677]services.openafsClient.cellServDB.*.ip

    IP Address of a database server

    Type: string

    Default: ""

    Example: "1.2.3.4"

    Declared by:

    [12678]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12679]services.openafsClient.crypt

    Whether to enable (weak) protocol encryption.

    Type: boolean

    Default: true

    Declared by:

    [12680]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12681]services.openafsClient.daemons

    Number of daemons to serve user requests. Numbers higher than 6 usually do no increase
    performance. Default is sufficient for up to five concurrent users.

    Type: signed integer

    Default: 2

    Declared by:

    [12682]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12683]services.openafsClient.fakestat

    Return fake data on stat() calls. If true, always do so. If false, only do so for cross-cell
    mounts (as these are potentially expensive).

    Type: boolean

    Default: false

    Declared by:

    [12684]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12685]services.openafsClient.inumcalc

    Inode calculation method. compat is computationally less expensive, but md5 greatly reduces
    the likelihood of inode collisions in larger scenarios involving multiple cells mounted into
    one AFS space.

    Type: string matching the pattern compat|md5

    Default: "compat"

    Declared by:

    [12686]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12687]services.openafsClient.mountPoint

    Mountpoint of the AFS file tree, conventionally /afs. When set to a different value, only
    cross-cells that use the same value can be accessed.

    Type: string

    Default: "/afs"

    Declared by:

    [12688]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12689]services.openafsClient.sparse

    Minimal cell list in /afs.

    Type: boolean

    Default: true

    Declared by:

    [12690]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12691]services.openafsClient.startDisconnected

    Start up in disconnected mode. You need to execute fs disco online (as root) to switch to
    connected mode. Useful for roaming devices.

    Type: boolean

    Default: false

    Declared by:

    [12692]<nixpkgs/nixos/modules/services/network-filesystems/openafs/client.nix>

[12693]services.openafsServer.enable

    Whether to enable the OpenAFS server. An OpenAFS server needs a complex setup. So, be aware
    that enabling this service and setting some options does not give you a turn-key-ready
    solution. You need at least a running Kerberos 5 setup, as OpenAFS relies on it for
    authentication. See the Guide "QuickStartUnix" coming with pkgs.openafs.doc for complete
    setup instructions.

    Type: boolean

    Default: false

    Declared by:

    [12694]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12695]services.openafsServer.package

    OpenAFS package for the server binaries

    Type: package

    Default: "pkgs.openafs.server or pkgs.openafs"

    Declared by:

    [12696]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12697]services.openafsServer.advertisedAddresses

    List of IP addresses this server is advertised under. See NetInfo(5)

    Type: list of strings

    Default: [ ]

    Declared by:

    [12698]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12699]services.openafsServer.cellName

    Cell name, this server will serve.

    Type: string

    Default: ""

    Example: "grand.central.org"

    Declared by:

    [12700]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12701]services.openafsServer.cellServDB

    Definition of all cell-local database server machines.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [12702]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12703]services.openafsServer.cellServDB.*.dnsname

    DNS full-qualified domain name of a database server

    Type: string

    Default: ""

    Example: "afs.example.org"

    Declared by:

    [12704]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12705]services.openafsServer.cellServDB.*.ip

    IP Address of a database server

    Type: string

    Default: ""

    Example: "1.2.3.4"

    Declared by:

    [12706]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12707]services.openafsServer.dottedPrincipals

    If enabled, allow principal names containing (.) dots. Enabling this has security
    implications!

    Type: boolean

    Default: false

    Declared by:

    [12708]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12709]services.openafsServer.roles.backup.enable

    Backup server role. Use in conjunction with the database role to maintain the Backup
    Database. Normally only used in conjunction with tape storage or IBM's Tivoli Storage
    Manager.

    Type: boolean

    Default: false

    Declared by:

    [12710]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12711]services.openafsServer.roles.backup.buserverArgs

    Arguments to the buserver process. See its man page.

    Type: string

    Default: ""

    Example: "-p 8"

    Declared by:

    [12712]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12713]services.openafsServer.roles.backup.cellServDB

    Definition of all cell-local backup database server machines. Use this when your cell uses
    less backup database servers than other database server machines.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [12714]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12715]services.openafsServer.roles.backup.cellServDB.*.dnsname

    DNS full-qualified domain name of a database server

    Type: string

    Default: ""

    Example: "afs.example.org"

    Declared by:

    [12716]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12717]services.openafsServer.roles.backup.cellServDB.*.ip

    IP Address of a database server

    Type: string

    Default: ""

    Example: "1.2.3.4"

    Declared by:

    [12718]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12719]services.openafsServer.roles.database.enable

    Database server role, maintains the Volume Location Database, Protection Database (and Backup
    Database, see backup role). There can be multiple servers in the database role for
    replication, which then need reliable network connection to each other.

    Servers in this role appear in AFSDB DNS records or the CellServDB.

    Type: boolean

    Default: true

    Declared by:

    [12720]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12721]services.openafsServer.roles.database.ptserverArgs

    Arguments to the ptserver process. See its man page.

    Type: string

    Default: ""

    Example: "-restricted -default_access S---- S-M---"

    Declared by:

    [12722]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12723]services.openafsServer.roles.database.vlserverArgs

    Arguments to the vlserver process. See its man page.

    Type: string

    Default: ""

    Example: "-rxbind"

    Declared by:

    [12724]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12725]services.openafsServer.roles.fileserver.enable

    Fileserver role, serves files and volumes from its local storage.

    Type: boolean

    Default: true

    Declared by:

    [12726]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12727]services.openafsServer.roles.fileserver.fileserverArgs

    Arguments to the dafileserver process. See its man page.

    Type: string

    Default: "-vattachpar 128 -vhashsize 11 -L -rxpck 400 -cb 1000000"

    Declared by:

    [12728]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12729]services.openafsServer.roles.fileserver.salvagerArgs

    Arguments to the dasalvager process. See its man page.

    Type: string

    Default: ""

    Example: "-showlog -showmounts"

    Declared by:

    [12730]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12731]services.openafsServer.roles.fileserver.salvageserverArgs

    Arguments to the salvageserver process. See its man page.

    Type: string

    Default: ""

    Example: "-showlog"

    Declared by:

    [12732]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12733]services.openafsServer.roles.fileserver.volserverArgs

    Arguments to the davolserver process. See its man page.

    Type: string

    Default: ""

    Example: "-sync never"

    Declared by:

    [12734]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12735]services.openafsServer.udpPacketSize

    UDP packet size to use in Bytes. Higher values can speed up communications. The default of 1
    MB is a sufficient in most cases. Make sure to increase the kernel's UDP buffer size
    accordingly via net.core(w|r|opt)mem_max sysctl.

    Type: signed integer

    Default: 1310720

    Declared by:

    [12736]<nixpkgs/nixos/modules/services/network-filesystems/openafs/server.nix>

[12737]services.openarena.enable

    Whether to enable OpenArena.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12738]<nixpkgs/nixos/modules/services/games/openarena.nix>

[12739]services.openarena.extraFlags

    Extra flags to pass to oa_ded

    Type: list of strings

    Default: [ ]

    Example: [ "+set dedicated 2" "+set sv_hostname 'My NixOS OpenArena Server'" "+map oa_dm1" ]

    Declared by:

    [12740]<nixpkgs/nixos/modules/services/games/openarena.nix>

[12741]services.openarena.openPorts

    Whether to open firewall ports for OpenArena

    Type: boolean

    Default: false

    Declared by:

    [12742]<nixpkgs/nixos/modules/services/games/openarena.nix>

[12743]services.opendkim.enable

    Whether to enable the OpenDKIM sender authentication system.

    Type: boolean

    Default: false

    Declared by:

    [12744]<nixpkgs/nixos/modules/services/mail/opendkim.nix>

[12745]services.opendkim.configFile

    Additional opendkim configuration.

    Type: null or path

    Default: null

    Declared by:

    [12746]<nixpkgs/nixos/modules/services/mail/opendkim.nix>

[12747]services.opendkim.domains

    Local domains set (see opendkim(8) for more information on datasets). Messages from them are
    signed, not verified.

    Type: string

    Default: "csl:nixos"

    Example: "csl:example.com,mydomain.net"

    Declared by:

    [12748]<nixpkgs/nixos/modules/services/mail/opendkim.nix>

[12749]services.opendkim.group

    Group for the daemon.

    Type: string

    Default: "opendkim"

    Declared by:

    [12750]<nixpkgs/nixos/modules/services/mail/opendkim.nix>

[12751]services.opendkim.keyPath

    The path that opendkim should put its generated private keys into. The DNS settings will be
    found in this directory with the name selector.txt.

    Type: path

    Default: "/var/lib/opendkim/keys"

    Declared by:

    [12752]<nixpkgs/nixos/modules/services/mail/opendkim.nix>

[12753]services.opendkim.selector

    Selector to use when signing.

    Type: string

    Declared by:

    [12754]<nixpkgs/nixos/modules/services/mail/opendkim.nix>

[12755]services.opendkim.socket

    Socket which is used for communication with OpenDKIM.

    Type: string

    Default: "local:/run/opendkim/opendkim.sock"

    Declared by:

    [12756]<nixpkgs/nixos/modules/services/mail/opendkim.nix>

[12757]services.opendkim.user

    User for the daemon.

    Type: string

    Default: "opendkim"

    Declared by:

    [12758]<nixpkgs/nixos/modules/services/mail/opendkim.nix>

[12759]services.openfire.enable

    Whether to enable OpenFire XMPP server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12760]<nixpkgs/nixos/modules/services/networking/openfire.nix>

[12761]services.openfire.usePostgreSQL

    Whether you use PostgreSQL service for your storage back-end.

    Type: boolean

    Default: true

    Declared by:

    [12762]<nixpkgs/nixos/modules/services/networking/openfire.nix>

[12763]services.openiscsi.enable

    Whether to enable the openiscsi iscsi daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12764]<nixpkgs/nixos/modules/services/networking/iscsi/initiator.nix>

[12765]services.openiscsi.enableAutoLoginOut

    Whether to enable automatic login and logout of all automatic targets. You probably do not
    want this. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12766]<nixpkgs/nixos/modules/services/networking/iscsi/initiator.nix>

[12767]services.openiscsi.package

    openiscsi package to use

    Type: package

    Default: "pkgs.openiscsi"

    Declared by:

    [12768]<nixpkgs/nixos/modules/services/networking/iscsi/initiator.nix>

[12769]services.openiscsi.discoverPortal

    Portal to discover targets on

    Type: null or string

    Default: null

    Declared by:

    [12770]<nixpkgs/nixos/modules/services/networking/iscsi/initiator.nix>

[12771]services.openiscsi.extraConfig

    Lines to append to default iscsid.conf

    Type: string

    Default: ""

    Declared by:

    [12772]<nixpkgs/nixos/modules/services/networking/iscsi/initiator.nix>

[12773]services.openiscsi.extraConfigFile

    Append an additional file's contents to /etc/iscsid.conf. Use a non-store path and store
    passwords in this file.

    Type: null or string

    Default: null

    Declared by:

    [12774]<nixpkgs/nixos/modules/services/networking/iscsi/initiator.nix>

[12775]services.openiscsi.name

    Name of this iscsi initiator

    Type: string

    Example: "iqn.2020-08.org.linux-iscsi.initiatorhost:example"

    Declared by:

    [12776]<nixpkgs/nixos/modules/services/networking/iscsi/initiator.nix>

[12777]services.openldap.enable

    Whether to enable the ldap server.

    Type: boolean

    Default: false

    Declared by:

    [12778]<nixpkgs/nixos/modules/services/databases/openldap.nix>

[12779]services.openldap.package

    OpenLDAP package to use.

    This can be used to, for example, set an OpenLDAP package with custom overrides to enable
    modules or other functionality.

    Type: package

    Default: (build of openldap-2.4.58)

    Declared by:

    [12780]<nixpkgs/nixos/modules/services/databases/openldap.nix>

[12781]services.openldap.configDir

    Use this config directory instead of generating one from the settings option. Overrides all
    NixOS settings. If you use this option,ensure `olcPidFile` is set to `/run/slapd/slapd.conf`.

    Type: null or path

    Default: null

    Example: "/var/db/slapd.d"

    Declared by:

    [12782]<nixpkgs/nixos/modules/services/databases/openldap.nix>

[12783]services.openldap.declarativeContents

    Declarative contents for the LDAP database, in LDIF format by suffix.

    All data will be erased when starting the LDAP server. Modifications to the database are not
    prevented, they are just dropped on the next reboot of the server. Performance-wise the
    database and indexes are rebuilt on each server startup, so this will slow down server
    startup, especially with large databases.

    Type: attribute set of strings concatenated with "\n"s

    Default: { }

    Example:

    {
      "dc=example,dc=org" = ''
        dn= dn: dc=example,dc=org
        objectClass: domain
        dc: example

        dn: ou=users,dc=example,dc=org
        objectClass = organizationalUnit
        ou: users

        # ...
      '';
    }

    Declared by:

    [12784]<nixpkgs/nixos/modules/services/databases/openldap.nix>

[12785]services.openldap.group

    Group account under which slapd runs.

    Type: string

    Default: "openldap"

    Declared by:

    [12786]<nixpkgs/nixos/modules/services/databases/openldap.nix>

[12787]services.openldap.settings

    Configuration for OpenLDAP, in OLC format

    Type: submodule

    Example:

    {
      attrs.olcLogLevel = [ "stats" ];
      children = {
        "cn=schema".includes = [
           "\${pkgs.openldap}/etc/schema/core.ldif"
           "\${pkgs.openldap}/etc/schema/cosine.ldif"
           "\${pkgs.openldap}/etc/schema/inetorgperson.ldif"
        ];
        "olcDatabase={-1}frontend" = {
          attrs = {
            objectClass = "olcDatabaseConfig";
            olcDatabase = "{-1}frontend";
            olcAccess = [ "{0}to * by dn.exact=uidNumber=0+gidNumber=0,cn=peercred,cn=external,cn=auth manage stop by * none stop" ];
          };
        };
        "olcDatabase={0}config" = {
          attrs = {
            objectClass = "olcDatabaseConfig";
            olcDatabase = "{0}config";
            olcAccess = [ "{0}to * by * none break" ];
          };
        };
        "olcDatabase={1}mdb" = {
          attrs = {
            objectClass = [ "olcDatabaseConfig" "olcMdbConfig" ];
            olcDatabase = "{1}mdb";
            olcDbDirectory = "/var/db/ldap";
            olcDbIndex = [
              "objectClass eq"
              "cn pres,eq"
              "uid pres,eq"
              "sn pres,eq,subany"
            ];
            olcSuffix = "dc=example,dc=com";
            olcAccess = [ "{0}to * by * read break" ];
          };
        };
      };
    };

    Declared by:

    [12788]<nixpkgs/nixos/modules/services/databases/openldap.nix>

[12789]services.openldap.settings.attrs

    Attributes of the parent entry.

    Type: attribute set of LDAP value or list of LDAP valuess

    Default: { }

    Declared by:

    [12790]<nixpkgs/nixos/modules/services/databases/openldap.nix>

[12791]services.openldap.settings.children

    Child entries of the current entry, with recursively the same structure.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
        "cn=schema" = {
        # The attribute used in the DN must be defined
        attrs = { cn = "schema"; };
        children = {
            # This entry's DN is expanded to "cn=foo,cn=schema"
            "cn=foo" = { ... };
        };
        # These includes are inserted after "cn=schema", but before "cn=foo,cn=schema"
        includes = [ ... ];
        };
    }

    Declared by:

    [12792]<nixpkgs/nixos/modules/services/databases/openldap.nix>

[12793]services.openldap.settings.includes

    LDIF files to include after the parent's attributes but before its children.

    Type: list of paths

    Default: [ ]

    Declared by:

    [12794]<nixpkgs/nixos/modules/services/databases/openldap.nix>

[12795]services.openldap.urlList

    URL list slapd should listen on.

    Type: list of strings

    Default: [ "ldap:///" ]

    Example: [ "ldaps:///" ]

    Declared by:

    [12796]<nixpkgs/nixos/modules/services/databases/openldap.nix>

[12797]services.openldap.user

    User account under which slapd runs.

    Type: string

    Default: "openldap"

    Declared by:

    [12798]<nixpkgs/nixos/modules/services/databases/openldap.nix>

[12799]services.openntpd.enable

    Whether to enable OpenNTP time synchronization server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12800]<nixpkgs/nixos/modules/services/networking/ntp/openntpd.nix>

[12801]services.openntpd.extraConfig

    Additional text appended to openntpd.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    listen on 127.0.0.1
    listen on ::1
    ''

    Declared by:

    [12802]<nixpkgs/nixos/modules/services/networking/ntp/openntpd.nix>

[12803]services.openntpd.extraOptions

    Extra options used when launching openntpd.

    Type: strings concatenated with " "

    Default: ""

    Example: "-s"

    Declared by:

    [12804]<nixpkgs/nixos/modules/services/networking/ntp/openntpd.nix>

[12805]services.openntpd.servers

    The set of NTP servers from which to synchronise.

    Type: list of strings

    Default: [ "0.nixos.pool.ntp.org" "1.nixos.pool.ntp.org" "2.nixos.pool.ntp.org"
    "3.nixos.pool.ntp.org" ]

    Declared by:

    [12806]<nixpkgs/nixos/modules/services/networking/ntp/openntpd.nix>

[12807]services.opensmtpd.enable

    Whether to enable the OpenSMTPD server.

    Type: boolean

    Default: false

    Declared by:

    [12808]<nixpkgs/nixos/modules/services/mail/opensmtpd.nix>

[12809]services.opensmtpd.package

    The OpenSMTPD package to use.

    Type: package

    Default: "pkgs.opensmtpd"

    Declared by:

    [12810]<nixpkgs/nixos/modules/services/mail/opensmtpd.nix>

[12811]services.opensmtpd.extraServerArgs

    Extra command line arguments provided when the smtpd process is started.

    Type: list of strings

    Default: [ ]

    Example: [ "-v" "-P mta" ]

    Declared by:

    [12812]<nixpkgs/nixos/modules/services/mail/opensmtpd.nix>

[12813]services.opensmtpd.procPackages

    Packages to search for filters, tables, queues, and schedulers.

    Add OpenSMTPD-extras here if you want to use the filters, etc. from that package.

    Type: list of packages

    Default: [ ]

    Declared by:

    [12814]<nixpkgs/nixos/modules/services/mail/opensmtpd.nix>

[12815]services.opensmtpd.serverConfiguration

    The contents of the smtpd.conf configuration file. See the OpenSMTPD documentation for syntax
    information.

    Type: strings concatenated with "\n"

    Example:

    ''
    listen on lo
    accept for any deliver to lmtp localhost:24
    ''

    Declared by:

    [12816]<nixpkgs/nixos/modules/services/mail/opensmtpd.nix>

[12817]services.opensmtpd.setSendmail

    Whether to set the system sendmail to OpenSMTPD's.

    Type: boolean

    Default: true

    Declared by:

    [12818]<nixpkgs/nixos/modules/services/mail/opensmtpd.nix>

[12819]services.openssh.enable

    Whether to enable the OpenSSH secure shell daemon, which allows secure remote logins.

    Type: boolean

    Default: false

    Declared by:

    [12820]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12821]services.openssh.allowSFTP

    Whether to enable the SFTP subsystem in the SSH daemon. This enables the use of commands such
    as sftp and sshfs.

    Type: boolean

    Default: true

    Declared by:

    [12822]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12823]services.openssh.authorizedKeysCommand

    Specifies a program to be used to look up the user's public keys. The program must be owned
    by root, not writable by group or others and specified by an absolute path.

    Type: string

    Default: "none"

    Declared by:

    [12824]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12825]services.openssh.authorizedKeysCommandUser

    Specifies the user under whose account the AuthorizedKeysCommand is run. It is recommended to
    use a dedicated user that has no other role on the host than running authorized keys
    commands.

    Type: string

    Default: "nobody"

    Declared by:

    [12826]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12827]services.openssh.authorizedKeysFiles

    Specify the rules for which files to read on the host.

    This is an advanced option. If you're looking to configure user keys, you can generally use 
    [12828]users.users.<name>.openssh.authorizedKeys.keys or [12829]users.users.
    <name>.openssh.authorizedKeys.keyFiles.

    These are paths relative to the host root file system or home directories and they are
    subject to certain token expansion rules. See AuthorizedKeysFile in man sshd_config for
    details.

    Type: list of strings

    Default: [ ]

    Declared by:

    [12830]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12831]services.openssh.banner

    Message to display to the remote user before authentication is allowed.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [12832]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12833]services.openssh.challengeResponseAuthentication

    Specifies whether challenge/response authentication is allowed.

    Type: boolean

    Default: true

    Declared by:

    [12834]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12835]services.openssh.ciphers

    Allowed ciphers

    Defaults to recommended settings from both [12836]https://stribika.github.io/2015/01/04/
    secure-secure-shell.html and [12837]https://infosec.mozilla.org/guidelines/openssh#
    modern-openssh-67

    Type: list of strings

    Default: [ "chacha20-poly1305@openssh.com" "aes256-gcm@openssh.com" "aes128-gcm@openssh.com"
    "aes256-ctr" "aes192-ctr" "aes128-ctr" ]

    Declared by:

    [12838]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12839]services.openssh.extraConfig

    Verbatim contents of sshd_config.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12840]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12841]services.openssh.forwardX11

    Whether to allow X11 connections to be forwarded.

    Type: boolean

    Default: false

    Declared by:

    [12842]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12843]services.openssh.gatewayPorts

    Specifies whether remote hosts are allowed to connect to ports forwarded for the client. See 
    sshd_config(5).

    Type: string

    Default: "no"

    Declared by:

    [12844]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12845]services.openssh.hostKeys

    NixOS can automatically generate SSH host keys. This option specifies the path, type and size
    of each key. See ssh-keygen(1) for supported types and sizes.

    Type: list of attribute sets

    Default: [ { bits = 4096; path = "/etc/ssh/ssh_host_rsa_key"; type = "rsa"; } { path = "/etc/
    ssh/ssh_host_ed25519_key"; type = "ed25519"; } ]

    Example: [ { bits = 4096; openSSHFormat = true; path = "/etc/ssh/ssh_host_rsa_key"; rounds =
    100; type = "rsa"; } { comment = "key comment"; path = "/etc/ssh/ssh_host_ed25519_key";
    rounds = 100; type = "ed25519"; } ]

    Declared by:

    [12846]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12847]services.openssh.kexAlgorithms

    Allowed key exchange algorithms

    Defaults to recommended settings from both [12848]https://stribika.github.io/2015/01/04/
    secure-secure-shell.html and [12849]https://infosec.mozilla.org/guidelines/openssh#
    modern-openssh-67

    Type: list of strings

    Default: [ "curve25519-sha256" "curve25519-sha256@libssh.org"
    "diffie-hellman-group-exchange-sha256" ]

    Declared by:

    [12850]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12851]services.openssh.knownHosts

    Alias of programs.ssh.knownHosts.

    Type: attribute set of submodules

    Declared by:

    [12852]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12853]services.openssh.knownHosts.<name>.certAuthority

    This public key is an SSH certificate authority, rather than an individual host's key.

    Type: boolean

    Default: false

    Declared by:

    [12854]<nixpkgs/nixos/modules/programs/ssh.nix>

[12855]services.openssh.knownHosts.<name>.hostNames

    A list of host names and/or IP numbers used for accessing the host's ssh service.

    Type: list of strings

    Default: [ ]

    Declared by:

    [12856]<nixpkgs/nixos/modules/programs/ssh.nix>

[12857]services.openssh.knownHosts.<name>.publicKey

    The public key data for the host. You can fetch a public key from a running SSH server with
    the ssh-keyscan command. The public key should not include any host names, only the key type
    and the key itself.

    Type: null or string

    Default: null

    Example: "ecdsa-sha2-nistp521 AAAAE2VjZHN...UEPg=="

    Declared by:

    [12858]<nixpkgs/nixos/modules/programs/ssh.nix>

[12859]services.openssh.knownHosts.<name>.publicKeyFile

    The path to the public key file for the host. The public key file is read at build time and
    saved in the Nix store. You can fetch a public key file from a running SSH server with the 
    ssh-keyscan command. The content of the file should follow the same format as described for
    the publicKey option.

    Type: null or path

    Default: null

    Declared by:

    [12860]<nixpkgs/nixos/modules/programs/ssh.nix>

[12861]services.openssh.listenAddresses

    List of addresses and ports to listen on (ListenAddress directive in config). If port is not
    specified for address sshd will listen on all ports specified by ports option. NOTE: this
    will override default listening on all local addresses and port 22. NOTE: setting this option
    won't automatically enable given ports in firewall configuration.

    Type: list of submodules

    Default: [ ]

    Example: [ { addr = "192.168.3.1"; port = 22; } { addr = "0.0.0.0"; port = 64022; } ]

    Declared by:

    [12862]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12863]services.openssh.listenAddresses.*.addr

    Host, IPv4 or IPv6 address to listen to.

    Type: null or string

    Default: null

    Declared by:

    [12864]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12865]services.openssh.listenAddresses.*.port

    Port to listen to.

    Type: null or signed integer

    Default: null

    Declared by:

    [12866]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12867]services.openssh.logLevel

    Gives the verbosity level that is used when logging messages from sshd(8). The possible
    values are: QUIET, FATAL, ERROR, INFO, VERBOSE, DEBUG, DEBUG1, DEBUG2, and DEBUG3. The
    default is VERBOSE. DEBUG and DEBUG1 are equivalent. DEBUG2 and DEBUG3 each specify higher
    levels of debugging output. Logging with a DEBUG level violates the privacy of users and is
    not recommended.

    LogLevel VERBOSE logs user's key fingerprint on login. Needed to have a clear audit track of
    which key was used to log in.

    Type: one of "QUIET", "FATAL", "ERROR", "INFO", "VERBOSE", "DEBUG", "DEBUG1", "DEBUG2",
    "DEBUG3"

    Default: "VERBOSE"

    Declared by:

    [12868]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12869]services.openssh.macs

    Allowed MACs

    Defaults to recommended settings from both [12870]https://stribika.github.io/2015/01/04/
    secure-secure-shell.html and [12871]https://infosec.mozilla.org/guidelines/openssh#
    modern-openssh-67

    Type: list of strings

    Default: [ "hmac-sha2-512-etm@openssh.com" "hmac-sha2-256-etm@openssh.com"
    "umac-128-etm@openssh.com" "hmac-sha2-512" "hmac-sha2-256" "umac-128@openssh.com" ]

    Declared by:

    [12872]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12873]services.openssh.moduliFile

    Path to moduli file to install in /etc/ssh/moduli. If this option is unset, then the moduli
    file shipped with OpenSSH will be used.

    Type: path

    Example: "/etc/my-local-ssh-moduli;"

    Declared by:

    [12874]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12875]services.openssh.openFirewall

    Whether to automatically open the specified ports in the firewall.

    Type: boolean

    Default: true

    Declared by:

    [12876]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12877]services.openssh.passwordAuthentication

    Specifies whether password authentication is allowed.

    Type: boolean

    Default: true

    Declared by:

    [12878]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12879]services.openssh.permitRootLogin

    Whether the root user can login using ssh.

    Type: one of "yes", "without-password", "prohibit-password", "forced-commands-only", "no"

    Default: "prohibit-password"

    Declared by:

    [12880]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12881]services.openssh.ports

    Specifies on which ports the SSH daemon listens.

    Type: list of 16 bit unsigned integer; between 0 and 65535 (both inclusive)s

    Default: [ 22 ]

    Declared by:

    [12882]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12883]services.openssh.sftpFlags

    Commandline flags to add to sftp-server.

    Type: list of strings

    Default: [ ]

    Example: [ "-f AUTHPRIV" "-l INFO" ]

    Declared by:

    [12884]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12885]services.openssh.startWhenNeeded

    If set, sshd is socket-activated; that is, instead of having it permanently running as a
    daemon, systemd will start an instance for each incoming connection.

    Type: boolean

    Default: false

    Declared by:

    [12886]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12887]services.openssh.useDns

    Specifies whether sshd(8) should look up the remote host name, and to check that the resolved
    host name for the remote IP address maps back to the very same IP address. If this option is
    set to no (the default) then only addresses and not host names may be used in ~/.ssh/
    authorized_keys from and sshd_config Match Host directives.

    Type: boolean

    Default: false

    Declared by:

    [12888]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[12889]services.opentracker.enable

    Whether to enable opentracker.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12890]<nixpkgs/nixos/modules/services/torrent/opentracker.nix>

[12891]services.opentracker.package

    opentracker package to use

    Type: package

    Default: "pkgs.opentracker"

    Declared by:

    [12892]<nixpkgs/nixos/modules/services/torrent/opentracker.nix>

[12893]services.opentracker.extraOptions

    Configuration Arguments for opentracker See https://erdgeist.org/arts/software/opentracker/
    for all params

    Type: strings concatenated with " "

    Default: ""

    Declared by:

    [12894]<nixpkgs/nixos/modules/services/torrent/opentracker.nix>

[12895]services.opentsdb.enable

    Whether to run OpenTSDB.

    Type: boolean

    Default: false

    Declared by:

    [12896]<nixpkgs/nixos/modules/services/databases/opentsdb.nix>

[12897]services.opentsdb.package

    OpenTSDB package to use.

    Type: package

    Default: "pkgs.opentsdb"

    Example:

    pkgs.opentsdb

    Declared by:

    [12898]<nixpkgs/nixos/modules/services/databases/opentsdb.nix>

[12899]services.opentsdb.config

    The contents of OpenTSDB's configuration file

    Type: strings concatenated with "\n"

    Default:

    ''
    tsd.core.auto_create_metrics = true
    tsd.http.request.enable_chunked  = true
    ''

    Declared by:

    [12900]<nixpkgs/nixos/modules/services/databases/opentsdb.nix>

[12901]services.opentsdb.group

    Group account under which OpenTSDB runs.

    Type: string

    Default: "opentsdb"

    Declared by:

    [12902]<nixpkgs/nixos/modules/services/databases/opentsdb.nix>

[12903]services.opentsdb.port

    Which port OpenTSDB listens on.

    Type: signed integer

    Default: 4242

    Declared by:

    [12904]<nixpkgs/nixos/modules/services/databases/opentsdb.nix>

[12905]services.opentsdb.user

    User account under which OpenTSDB runs.

    Type: string

    Default: "opentsdb"

    Declared by:

    [12906]<nixpkgs/nixos/modules/services/databases/opentsdb.nix>

[12907]services.openvpn.servers

    Each attribute of this option defines a systemd service that runs an OpenVPN instance. These
    can be OpenVPN servers or clients. The name of each systemd service is openvpn-name.service,
    where name is the corresponding attribute name.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      server = {
        config = ''
          # Simplest server configuration: https://community.openvpn.net/openvpn/wiki/StaticKeyMiniHowto
          # server :
          dev tun
          ifconfig 10.8.0.1 10.8.0.2
          secret /root/static.key
        '';
        up = "ip route add ...";
        down = "ip route del ...";
      };

      client = {
        config = ''
          client
          remote vpn.example.org
          dev tun
          proto tcp-client
          port 8080
          ca /root/.vpn/ca.crt
          cert /root/.vpn/alice.crt
          key /root/.vpn/alice.key
        '';
        up = "echo nameserver $nameserver | ${pkgs.openresolv}/sbin/resolvconf -m 0 -a $dev";
        down = "${pkgs.openresolv}/sbin/resolvconf -d $dev";
      };
    }

    Declared by:

    [12908]<nixpkgs/nixos/modules/services/networking/openvpn.nix>

[12909]services.openvpn.servers.<name>.authUserPass

    This option can be used to store the username / password credentials with the
    "auth-user-pass" authentication method.

    WARNING: Using this option will put the credentials WORLD-READABLE in the Nix store!

    Type: null or submodule

    Default: null

    Declared by:

    [12910]<nixpkgs/nixos/modules/services/networking/openvpn.nix>

[12911]services.openvpn.servers.<name>.authUserPass.password

    The password to store inside the credentials file.

    Type: string

    Declared by:

    [12912]<nixpkgs/nixos/modules/services/networking/openvpn.nix>

[12913]services.openvpn.servers.<name>.authUserPass.username

    The username to store inside the credentials file.

    Type: string

    Declared by:

    [12914]<nixpkgs/nixos/modules/services/networking/openvpn.nix>

[12915]services.openvpn.servers.<name>.autoStart

    Whether this OpenVPN instance should be started automatically.

    Type: boolean

    Default: true

    Declared by:

    [12916]<nixpkgs/nixos/modules/services/networking/openvpn.nix>

[12917]services.openvpn.servers.<name>.config

    Configuration of this OpenVPN instance. See openvpn(8) for details.

    To import an external config file, use the following definition: config = "config /path/to/
    config.ovpn"

    Type: strings concatenated with "\n"

    Declared by:

    [12918]<nixpkgs/nixos/modules/services/networking/openvpn.nix>

[12919]services.openvpn.servers.<name>.down

    Shell commands executed when the instance is shutting down.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12920]<nixpkgs/nixos/modules/services/networking/openvpn.nix>

[12921]services.openvpn.servers.<name>.up

    Shell commands executed when the instance is starting.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12922]<nixpkgs/nixos/modules/services/networking/openvpn.nix>

[12923]services.openvpn.servers.<name>.updateResolvConf

    Use the script from the update-resolv-conf package to automatically update resolv.conf with
    the DNS information provided by openvpn. The script will be run after the "up" commands and
    before the "down" commands.

    Type: boolean

    Default: false

    Declared by:

    [12924]<nixpkgs/nixos/modules/services/networking/openvpn.nix>

[12925]services.orangefs.client.enable

    Whether to enable OrangeFS client daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12926]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/client.nix>

[12927]services.orangefs.client.extraOptions

    Extra command line options for pvfs2-client.

    Type: list of strings

    Default: [ ]

    Declared by:

    [12928]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/client.nix>

[12929]services.orangefs.client.fileSystems

    The orangefs file systems to be mounted. This option is prefered over using fileSystems
    directly since the pvfs client service needs to be running for it to be mounted.

    Type: list of submodules

    Example: [ { mountPoint = "/orangefs"; target = "tcp://server:3334/orangefs"; } ]

    Declared by:

    [12930]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/client.nix>

[12931]services.orangefs.client.fileSystems.*.mountPoint

    Mount point.

    Type: string

    Default: "/orangefs"

    Declared by:

    [12932]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/client.nix>

[12933]services.orangefs.client.fileSystems.*.options

    Mount options

    Type: list of strings

    Default: [ ]

    Declared by:

    [12934]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/client.nix>

[12935]services.orangefs.client.fileSystems.*.target

    Target URL

    Type: string

    Default: null

    Example: "tcp://server:3334/orangefs"

    Declared by:

    [12936]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/client.nix>

[12937]services.orangefs.server.enable

    Whether to enable OrangeFS server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12938]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/server.nix>

[12939]services.orangefs.server.BMIModules

    List of BMI modules to load.

    Type: list of strings

    Default: [ "bmi_tcp" ]

    Example: [ "bmi_tcp" "bmi_ib" ]

    Declared by:

    [12940]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/server.nix>

[12941]services.orangefs.server.dataStorageSpace

    Directory for data storage.

    Type: null or string

    Default: null

    Example: "/data/storage"

    Declared by:

    [12942]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/server.nix>

[12943]services.orangefs.server.extraConfig

    Extra config for the global section.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12944]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/server.nix>

[12945]services.orangefs.server.extraDefaults

    Extra config for <Defaults> section.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12946]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/server.nix>

[12947]services.orangefs.server.fileSystems

    These options will create the <FileSystem> sections of config file.

    Type: attribute set of submodules

    Default: { orangefs = {}; }

    Example:

    {
      fs1 = {
        id = 101;
      };

      fs2 = {
        id = 102;
      };
    }

    Declared by:

    [12948]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/server.nix>

[12949]services.orangefs.server.fileSystems.<name>.extraConfig

    Extra config for <FileSystem> section.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12950]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/server.nix>

[12951]services.orangefs.server.fileSystems.<name>.extraStorageHints

    Extra config for <StorageHints> section.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [12952]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/server.nix>

[12953]services.orangefs.server.fileSystems.<name>.id

    File system ID (must be unique within configuration).

    Type: signed integer

    Default: 1

    Declared by:

    [12954]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/server.nix>

[12955]services.orangefs.server.fileSystems.<name>.rootHandle

    File system root ID.

    Type: signed integer

    Default: 3

    Declared by:

    [12956]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/server.nix>

[12957]services.orangefs.server.fileSystems.<name>.troveSyncData

    Sync data.

    Type: boolean

    Default: false

    Declared by:

    [12958]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/server.nix>

[12959]services.orangefs.server.fileSystems.<name>.troveSyncMeta

    Sync meta data.

    Type: boolean

    Default: true

    Declared by:

    [12960]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/server.nix>

[12961]services.orangefs.server.logType

    Destination for log messages.

    Type: one of "file", "syslog"

    Default: "syslog"

    Declared by:

    [12962]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/server.nix>

[12963]services.orangefs.server.metadataStorageSpace

    Directory for meta data storage.

    Type: null or string

    Default: null

    Example: "/data/meta"

    Declared by:

    [12964]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/server.nix>

[12965]services.orangefs.server.servers

    URLs for storage server including port. The attribute names define the server alias.

    Type: attribute set of strings

    Default: { }

    Example:

    ''
    {
      node1="tcp://node1:3334";
      node2="tcp://node2:3334";
    }
    ''

    Declared by:

    [12966]<nixpkgs/nixos/modules/services/network-filesystems/orangefs/server.nix>

[12967]services.osrm.enable

    Enable the OSRM service.

    Type: boolean

    Default: false

    Declared by:

    [12968]<nixpkgs/nixos/modules/services/misc/osrm.nix>

[12969]services.osrm.address

    IP address on which the web server will listen.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [12970]<nixpkgs/nixos/modules/services/misc/osrm.nix>

[12971]services.osrm.algorithm

    Algorithm to use for the data. Must be one of CH, CoreCH, MLD

    Type: one of "CH", "CoreCH", "MLD"

    Default: "MLD"

    Declared by:

    [12972]<nixpkgs/nixos/modules/services/misc/osrm.nix>

[12973]services.osrm.dataFile

    Data file location

    Type: path

    Example: "/var/lib/osrm/berlin-latest.osrm"

    Declared by:

    [12974]<nixpkgs/nixos/modules/services/misc/osrm.nix>

[12975]services.osrm.extraFlags

    Extra command line arguments passed to osrm-routed

    Type: list of strings

    Default: [ ]

    Example: [ "--max-table-size 1000" "--max-matching-size 1000" ]

    Declared by:

    [12976]<nixpkgs/nixos/modules/services/misc/osrm.nix>

[12977]services.osrm.port

    Port on which the web server will run.

    Type: signed integer

    Default: 5000

    Declared by:

    [12978]<nixpkgs/nixos/modules/services/misc/osrm.nix>

[12979]services.osrm.threads

    Number of threads to use.

    Type: signed integer

    Default: 4

    Declared by:

    [12980]<nixpkgs/nixos/modules/services/misc/osrm.nix>

[12981]services.ostinato.enable

    Whether to enable Ostinato agent-controller (Drone).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12982]<nixpkgs/nixos/modules/services/networking/ostinato.nix>

[12983]services.ostinato.port

    Port to listen on.

    Type: signed integer

    Default: 7878

    Declared by:

    [12984]<nixpkgs/nixos/modules/services/networking/ostinato.nix>

[12985]services.ostinato.portList.exclude

    A list of ports does not appear on the port list managed by drone.

    Type: list of strings

    Default: [ ]

    Example: ''[ "usbmon*" "eth0" ]''

    Declared by:

    [12986]<nixpkgs/nixos/modules/services/networking/ostinato.nix>

[12987]services.ostinato.portList.include

    For a port to pass the filter and appear on the port list managed by drone, it be allowed by
    this include list.

    Type: list of strings

    Default: [ ]

    Example: ''[ "eth*" "lo*" ]''

    Declared by:

    [12988]<nixpkgs/nixos/modules/services/networking/ostinato.nix>

[12989]services.ostinato.rateAccuracy

    To ensure that the actual transmit rate is as close as possible to the configured transmit
    rate, Drone runs a busy-wait loop. While this provides the maximum accuracy possible, the CPU
    utilization is 100% while the transmit is on. You can however, sacrifice the accuracy to
    reduce the CPU load.

    Type: one of "High", "Low"

    Default: "High"

    Declared by:

    [12990]<nixpkgs/nixos/modules/services/networking/ostinato.nix>

[12991]services.ostinato.rpcServer.address

    By default, the Drone RPC server will listen on all interfaces and local IPv4 adresses for
    incoming connections from clients. Specify a single IPv4 or IPv6 address if you want to
    restrict that. To listen on any IPv6 address, use ::

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [12992]<nixpkgs/nixos/modules/services/networking/ostinato.nix>

[12993]services.owamp.enable

    Whether to enable Enable OWAMP server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12994]<nixpkgs/nixos/modules/services/networking/owamp.nix>

[12995]services.oxidized.enable

    Whether to enable the oxidized configuration backup service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [12996]<nixpkgs/nixos/modules/services/admin/oxidized.nix>

[12997]services.oxidized.configFile

    Path to the oxidized configuration file.

    Type: path

    Example:

    pkgs.writeText "oxidized-config.yml" ''
      ---
      debug: true
      use_syslog: true
      input:
        default: ssh
        ssh:
          secure: true
      interval: 3600
      model_map:
        dell: powerconnect
        hp: procurve
      source:
        default: csv
        csv:
          delimiter: !ruby/regexp /:/
          file: "/var/lib/oxidized/.config/oxidized/router.db"
          map:
            name: 0
            model: 1
            username: 2
            password: 3
      pid: "/var/lib/oxidized/.config/oxidized/pid"
      rest: 127.0.0.1:8888
      retries: 3
      # ... additional config
    '';

    Declared by:

    [12998]<nixpkgs/nixos/modules/services/admin/oxidized.nix>

[12999]services.oxidized.dataDir

    State directory for the oxidized service.

    Type: path

    Default: "/var/lib/oxidized"

    Declared by:

    [13000]<nixpkgs/nixos/modules/services/admin/oxidized.nix>

[13001]services.oxidized.group

    Group under which the oxidized service runs.

    Type: string

    Default: "oxidized"

    Declared by:

    [13002]<nixpkgs/nixos/modules/services/admin/oxidized.nix>

[13003]services.oxidized.routerDB

    Path to the file/database which contains the targets for oxidized.

    Type: path

    Example:

    pkgs.writeText "oxidized-router.db" ''
      hostname-sw1:powerconnect:username1:password2
      hostname-sw2:procurve:username2:password2
      # ... additional hosts
    ''

    Declared by:

    [13004]<nixpkgs/nixos/modules/services/admin/oxidized.nix>

[13005]services.oxidized.user

    User under which the oxidized service runs.

    Type: string

    Default: "oxidized"

    Declared by:

    [13006]<nixpkgs/nixos/modules/services/admin/oxidized.nix>

[13007]services.pantheon.apps.enable

    Whether to enable Pantheon default applications.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13008]<nixpkgs/nixos/modules/services/x11/desktop-managers/pantheon.nix>

[13009]services.pantheon.contractor.enable

    Whether to enable contractor, a desktop-wide extension service used by Pantheon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13010]<nixpkgs/nixos/modules/services/x11/desktop-managers/pantheon.nix>

[13011]services.paperless.enable

    Enable Paperless.

    When started, the Paperless database is automatically created if it doesn't exist and updated
    if the Paperless package has changed. Both tasks are achieved by running a Django migration.

    Type: boolean

    Default: false

    Declared by:

    [13012]<nixpkgs/nixos/modules/services/misc/paperless.nix>

[13013]services.paperless.package

    The Paperless package to use.

    Type: package

    Default: "pkgs.paperless"

    Declared by:

    [13014]<nixpkgs/nixos/modules/services/misc/paperless.nix>

[13015]services.paperless.address

    Server listening address.

    Type: string

    Default: "localhost"

    Declared by:

    [13016]<nixpkgs/nixos/modules/services/misc/paperless.nix>

[13017]services.paperless.consumptionDir

    Directory from which new documents are imported.

    Type: string

    Default: "\${dataDir}/consume"

    Declared by:

    [13018]<nixpkgs/nixos/modules/services/misc/paperless.nix>

[13019]services.paperless.consumptionDirIsPublic

    Whether all users can write to the consumption dir.

    Type: boolean

    Default: false

    Declared by:

    [13020]<nixpkgs/nixos/modules/services/misc/paperless.nix>

[13021]services.paperless.dataDir

    Directory to store the Paperless data.

    Type: string

    Default: "/var/lib/paperless"

    Declared by:

    [13022]<nixpkgs/nixos/modules/services/misc/paperless.nix>

[13023]services.paperless.extraConfig

    Extra paperless config options.

    The config values are evaluated as double-quoted Bash string literals.

    See paperless-src/paperless.conf.example for available options.

    To enable user authentication, set PAPERLESS_DISABLE_LOGIN = "false" and run the shell
    command $dataDir/paperless-manage createsuperuser.

    To define secret options without storing them in /nix/store, use the following pattern:
    PAPERLESS_PASSPHRASE = "$(< /etc/my_passphrase_file)"

    Type: attribute set

    Default: { }

    Example:

    {
      PAPERLESS_OCR_LANGUAGE = "deu";
    }

    Declared by:

    [13024]<nixpkgs/nixos/modules/services/misc/paperless.nix>

[13025]services.paperless.manage

    A script to manage the Paperless instance. It wraps Django's manage.py and is also available
    at $dataDir/manage-paperless

    Type: package (read only)

    Default: (build of paperless)

    Declared by:

    [13026]<nixpkgs/nixos/modules/services/misc/paperless.nix>

[13027]services.paperless.ocrLanguages

    Languages available for OCR via Tesseract, specified as ISO 639-2/T language codes. If unset,
    defaults to all available languages.

    Type: null or list of strings

    Default: null

    Example: [ "eng" "spa" "jpn" ]

    Declared by:

    [13028]<nixpkgs/nixos/modules/services/misc/paperless.nix>

[13029]services.paperless.port

    Server port to listen on.

    Type: signed integer

    Default: 28981

    Declared by:

    [13030]<nixpkgs/nixos/modules/services/misc/paperless.nix>

[13031]services.paperless.user

    User under which Paperless runs.

    Type: string

    Default: "paperless"

    Declared by:

    [13032]<nixpkgs/nixos/modules/services/misc/paperless.nix>

[13033]services.parsoid.enable

    Whether to enable Parsoid -- bidirectional wikitext parser.

    Type: boolean

    Default: false

    Declared by:

    [13034]<nixpkgs/nixos/modules/services/misc/parsoid.nix>

[13035]services.parsoid.extraConfig

    Extra configuration to add to parsoid configuration.

    Type: attribute set

    Default: { }

    Declared by:

    [13036]<nixpkgs/nixos/modules/services/misc/parsoid.nix>

[13037]services.parsoid.interface

    Interface to listen on.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [13038]<nixpkgs/nixos/modules/services/misc/parsoid.nix>

[13039]services.parsoid.port

    Port to listen on.

    Type: signed integer

    Default: 8000

    Declared by:

    [13040]<nixpkgs/nixos/modules/services/misc/parsoid.nix>

[13041]services.parsoid.wikis

    Used MediaWiki API endpoints.

    Type: list of string or attribute sets

    Example: [ "http://localhost/api.php" ]

    Declared by:

    [13042]<nixpkgs/nixos/modules/services/misc/parsoid.nix>

[13043]services.parsoid.workers

    Number of Parsoid workers.

    Type: signed integer

    Default: 2

    Declared by:

    [13044]<nixpkgs/nixos/modules/services/misc/parsoid.nix>

[13045]services.pcscd.enable

    Whether to enable PCSC-Lite daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13046]<nixpkgs/nixos/modules/services/hardware/pcscd.nix>

[13047]services.pcscd.plugins

    Plugin packages to be used for PCSC-Lite.

    Type: list of packages

    Default: "[ pkgs.ccid ]"

    Example:

    [ pkgs.pcsc-cyberjack ]

    Declared by:

    [13048]<nixpkgs/nixos/modules/services/hardware/pcscd.nix>

[13049]services.pcscd.readerConfig

    Configuration for devices that aren't hotpluggable.

    See reader.conf(5) for valid options.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    FRIENDLYNAME      "Some serial reader"
    DEVICENAME        /dev/ttyS0
    LIBPATH           /path/to/serial_reader.so
    CHANNELID         1
    ''

    Declared by:

    [13050]<nixpkgs/nixos/modules/services/hardware/pcscd.nix>

[13051]services.pdns-recursor.enable

    Whether to enable PowerDNS Recursor, a recursive DNS server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13052]<nixpkgs/nixos/modules/services/networking/pdns-recursor.nix>

[13053]services.pdns-recursor.api.address

    IP address Recursor REST API server will bind to.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [13054]<nixpkgs/nixos/modules/services/networking/pdns-recursor.nix>

[13055]services.pdns-recursor.api.allowFrom

    IP address ranges of clients allowed to make API requests.

    Type: list of strings

    Default: [ "0.0.0.0/0" ]

    Declared by:

    [13056]<nixpkgs/nixos/modules/services/networking/pdns-recursor.nix>

[13057]services.pdns-recursor.api.port

    Port number Recursor REST API server will bind to.

    Type: signed integer

    Default: 8082

    Declared by:

    [13058]<nixpkgs/nixos/modules/services/networking/pdns-recursor.nix>

[13059]services.pdns-recursor.dns.address

    IP address Recursor DNS server will bind to.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [13060]<nixpkgs/nixos/modules/services/networking/pdns-recursor.nix>

[13061]services.pdns-recursor.dns.allowFrom

    IP address ranges of clients allowed to make DNS queries.

    Type: list of strings

    Default: [ "10.0.0.0/8" "172.16.0.0/12" "192.168.0.0/16" ]

    Example: [ "0.0.0.0/0" ]

    Declared by:

    [13062]<nixpkgs/nixos/modules/services/networking/pdns-recursor.nix>

[13063]services.pdns-recursor.dns.port

    Port number Recursor DNS server will bind to.

    Type: signed integer

    Default: 53

    Declared by:

    [13064]<nixpkgs/nixos/modules/services/networking/pdns-recursor.nix>

[13065]services.pdns-recursor.dnssecValidation

    Controls the level of DNSSEC processing done by the PowerDNS Recursor. See https://
    doc.powerdns.com/md/recursor/dnssec/ for a detailed explanation.

    Type: one of "off", "process-no-validate", "process", "log-fail", "validate"

    Default: "validate"

    Declared by:

    [13066]<nixpkgs/nixos/modules/services/networking/pdns-recursor.nix>

[13067]services.pdns-recursor.exportHosts

    Whether to export names and IP addresses defined in /etc/hosts.

    Type: boolean

    Default: false

    Declared by:

    [13068]<nixpkgs/nixos/modules/services/networking/pdns-recursor.nix>

[13069]services.pdns-recursor.forwardZones

    DNS zones to be forwarded to other authoritative servers.

    Type: attribute set

    Default: { }

    Declared by:

    [13070]<nixpkgs/nixos/modules/services/networking/pdns-recursor.nix>

[13071]services.pdns-recursor.forwardZonesRecurse

    DNS zones to be forwarded to other recursive servers.

    Type: attribute set

    Default: { }

    Example: { eth = "127.0.0.1:5353"; }

    Declared by:

    [13072]<nixpkgs/nixos/modules/services/networking/pdns-recursor.nix>

[13073]services.pdns-recursor.luaConfig

    The content Lua configuration file for PowerDNS Recursor. See [13074]https://doc.powerdns.com
    /recursor/lua-config/index.html.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13075]<nixpkgs/nixos/modules/services/networking/pdns-recursor.nix>

[13076]services.pdns-recursor.resolveNamecoin

    Resolve .bit top-level domains using ncdns and namecoin.

    Type: boolean

    Default: false

    Declared by:

    [13077]<nixpkgs/nixos/modules/services/networking/ncdns.nix>

[13078]services.pdns-recursor.serveRFC1918

    Whether to directly resolve the RFC1918 reverse-mapping domains: 10.in-addr.arpa,
    168.192.in-addr.arpa, 16-31.172.in-addr.arpa This saves load on the AS112 servers.

    Type: boolean

    Default: true

    Declared by:

    [13079]<nixpkgs/nixos/modules/services/networking/pdns-recursor.nix>

[13080]services.pdns-recursor.settings

    PowerDNS Recursor settings. Use this option to configure Recursor settings not exposed in a
    NixOS option or to bypass one. See the full documentation at [13081]https://doc.powerdns.com/
    recursor/settings.html for the available options.

    Type: attribute set of null or signed integer or string or boolean or path or list of signed
    integer or string or boolean or pathss

    Default: { }

    Example:

    {
      loglevel = 8;
      log-common-errors = true;
    }

    Declared by:

    [13082]<nixpkgs/nixos/modules/services/networking/pdns-recursor.nix>

[13083]services.pdnsd.enable

    Whether to enable pdnsd.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13084]<nixpkgs/nixos/modules/services/networking/pdnsd.nix>

[13085]services.pdnsd.cacheDir

    Directory holding the pdnsd cache

    Type: string

    Default: "/var/cache/pdnsd"

    Declared by:

    [13086]<nixpkgs/nixos/modules/services/networking/pdnsd.nix>

[13087]services.pdnsd.extraConfig

    Extra configuration directives that should be added to pdnsd.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13088]<nixpkgs/nixos/modules/services/networking/pdnsd.nix>

[13089]services.pdnsd.globalConfig

    Global configuration that should be added to the global directory of pdnsd.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13090]<nixpkgs/nixos/modules/services/networking/pdnsd.nix>

[13091]services.pdnsd.serverConfig

    Server configuration that should be added to the server directory of pdnsd.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13092]<nixpkgs/nixos/modules/services/networking/pdnsd.nix>

[13093]services.peerflix.enable

    Whether to enable peerflix service.

    Type: boolean

    Default: false

    Declared by:

    [13094]<nixpkgs/nixos/modules/services/torrent/peerflix.nix>

[13095]services.peerflix.downloadDir

    Peerflix temporary download directory.

    Type: path

    Default: "/var/lib/peerflix/torrents"

    Declared by:

    [13096]<nixpkgs/nixos/modules/services/torrent/peerflix.nix>

[13097]services.peerflix.stateDir

    Peerflix state directory.

    Type: path

    Default: "/var/lib/peerflix"

    Declared by:

    [13098]<nixpkgs/nixos/modules/services/torrent/peerflix.nix>

[13099]services.pfix-srsd.enable

    Whether to run the postfix sender rewriting scheme daemon.

    Type: boolean

    Default: false

    Declared by:

    [13100]<nixpkgs/nixos/modules/services/mail/pfix-srsd.nix>

[13101]services.pfix-srsd.domain

    The domain for which to enable srs

    Type: string

    Example: "example.com"

    Declared by:

    [13102]<nixpkgs/nixos/modules/services/mail/pfix-srsd.nix>

[13103]services.pfix-srsd.secretsFile

    The secret data used to encode the SRS address. to generate, use a command like: for n in $
    (seq 5); do dd if=/dev/urandom count=1 bs=1024 status=none | sha256sum | sed 's/ -$//' | sed
    's/^/ /'; done

    Type: path

    Default: "/var/lib/pfix-srsd/secrets"

    Declared by:

    [13104]<nixpkgs/nixos/modules/services/mail/pfix-srsd.nix>

[13105]services.pgmanage.enable

    Whether to enable PostgreSQL Administration for the web.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13106]<nixpkgs/nixos/modules/services/databases/pgmanage.nix>

[13107]services.pgmanage.package

    The pgmanage package to use.

    Type: package

    Default: "pkgs.pgmanage"

    Declared by:

    [13108]<nixpkgs/nixos/modules/services/databases/pgmanage.nix>

[13109]services.pgmanage.allowCustomConnections

    This tells pgmanage whether or not to allow anyone to use a custom connection from the login
    screen.

    Type: boolean

    Default: false

    Declared by:

    [13110]<nixpkgs/nixos/modules/services/databases/pgmanage.nix>

[13111]services.pgmanage.connections

    pgmanage requires at least one PostgreSQL server be defined.

    Detailed information about PostgreSQL connection strings is available at: [13112]http://
    www.postgresql.org/docs/current/static/libpq-connect.html

    Note that you should not specify your user name or password. That information will be entered
    on the login screen. If you specify a username or password, it will be removed by pgmanage
    before attempting to connect to a database.

    Type: attribute set of strings

    Default: { }

    Example: { mini-server = "hostaddr=127.0.0.1 port=5432 dbname=postgres sslmode=require";
    nuc-server = "hostaddr=192.168.0.100 port=5432 dbname=postgres"; }

    Declared by:

    [13113]<nixpkgs/nixos/modules/services/databases/pgmanage.nix>

[13114]services.pgmanage.localOnly

    This tells pgmanage whether or not to set the listening socket to local addresses only.

    Type: boolean

    Default: true

    Declared by:

    [13115]<nixpkgs/nixos/modules/services/databases/pgmanage.nix>

[13116]services.pgmanage.logLevel

    Verbosity of logs

    Type: one of "error", "warn", "notice", "info"

    Default: "error"

    Declared by:

    [13117]<nixpkgs/nixos/modules/services/databases/pgmanage.nix>

[13118]services.pgmanage.loginGroup

    This tells pgmanage to only allow users in a certain PostgreSQL group to login to pgmanage.
    Note that a connection will be made to PostgreSQL in order to test if the user is a member of
    the login group.

    Type: null or string

    Default: null

    Declared by:

    [13119]<nixpkgs/nixos/modules/services/databases/pgmanage.nix>

[13120]services.pgmanage.loginTimeout

    Number of seconds of inactivity before user is automatically logged out.

    Type: signed integer

    Default: 3600

    Declared by:

    [13121]<nixpkgs/nixos/modules/services/databases/pgmanage.nix>

[13122]services.pgmanage.port

    This tells pgmanage what port to listen on for browser requests.

    Type: signed integer

    Default: 8080

    Declared by:

    [13123]<nixpkgs/nixos/modules/services/databases/pgmanage.nix>

[13124]services.pgmanage.sqlRoot

    This tells pgmanage where to put the SQL file history. All tabs are saved to this location so
    that if you get disconnected from pgmanage you don't lose your work.

    Type: string

    Default: "/var/lib/pgmanage"

    Declared by:

    [13125]<nixpkgs/nixos/modules/services/databases/pgmanage.nix>

[13126]services.pgmanage.superOnly

    This tells pgmanage whether or not to only allow super users to login. The recommended value
    is true and will restrict users who are not super users from logging in to any PostgreSQL
    instance through pgmanage. Note that a connection will be made to PostgreSQL in order to test
    if the user is a superuser.

    Type: boolean

    Default: true

    Declared by:

    [13127]<nixpkgs/nixos/modules/services/databases/pgmanage.nix>

[13128]services.pgmanage.tls

    These options tell pgmanage where the TLS Certificate and Key files reside. If you use these
    options then you'll only be able to access pgmanage through a secure TLS connection. These
    options are only necessary if you wish to connect directly to pgmanage using a secure TLS
    connection. As an alternative, you can set up pgmanage in a reverse proxy configuration. This
    allows your web server to terminate the secure connection and pass on the request to
    pgmanage. You can find help to set up this configuration in: [13129]https://github.com/
    pgManage/pgManage/blob/master/INSTALL_NGINX.md

    Type: null or submodule

    Default: null

    Declared by:

    [13130]<nixpkgs/nixos/modules/services/databases/pgmanage.nix>

[13131]services.pgmanage.tls.cert

    TLS certificate

    Type: string

    Declared by:

    [13132]<nixpkgs/nixos/modules/services/databases/pgmanage.nix>

[13133]services.pgmanage.tls.key

    TLS key

    Type: string

    Declared by:

    [13134]<nixpkgs/nixos/modules/services/databases/pgmanage.nix>

[13135]services.pgpkeyserver-lite.enable

    Whether to enable pgpkeyserver-lite on a nginx vHost proxying to a gpg keyserver.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13136]<nixpkgs/nixos/modules/services/web-apps/pgpkeyserver-lite.nix>

[13137]services.pgpkeyserver-lite.package

    Which webgui derivation to use.

    Type: package

    Default: "pkgs.pgpkeyserver-lite"

    Declared by:

    [13138]<nixpkgs/nixos/modules/services/web-apps/pgpkeyserver-lite.nix>

[13139]services.pgpkeyserver-lite.hkpAddress

    Wich ip address the sks-keyserver is listening on.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [13140]<nixpkgs/nixos/modules/services/web-apps/pgpkeyserver-lite.nix>

[13141]services.pgpkeyserver-lite.hkpPort

    Which port the sks-keyserver is listening on.

    Type: signed integer

    Default: 11371

    Declared by:

    [13142]<nixpkgs/nixos/modules/services/web-apps/pgpkeyserver-lite.nix>

[13143]services.pgpkeyserver-lite.hostname

    Which hostname to set the vHost to that is proxying to sks.

    Type: string

    Declared by:

    [13144]<nixpkgs/nixos/modules/services/web-apps/pgpkeyserver-lite.nix>

[13145]services.phpfpm.extraConfig

    Extra configuration that should be put in the global section of the PHP-FPM configuration
    file. Do not specify the options error_log or daemonize here, since they are generated by
    NixOS.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [13146]<nixpkgs/nixos/modules/services/web-servers/phpfpm/default.nix>

[13147]services.phpfpm.phpOptions

    Options appended to the PHP configuration file php.ini.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    date.timezone = "CET"
    ''

    Declared by:

    [13148]<nixpkgs/nixos/modules/services/web-servers/phpfpm/default.nix>

[13149]services.phpfpm.phpPackage

    The PHP package to use for running the PHP-FPM service.

    Type: package

    Default: "pkgs.php"

    Declared by:

    [13150]<nixpkgs/nixos/modules/services/web-servers/phpfpm/default.nix>

[13151]services.phpfpm.pools

    PHP-FPM pools. If no pools are defined, the PHP-FPM service is disabled.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      mypool = {
        user = "php";
        group = "php";
        phpPackage = pkgs.php;
        settings = {
          "pm" = "dynamic";
          "pm.max_children" = 75;
          "pm.start_servers" = 10;
          "pm.min_spare_servers" = 5;
          "pm.max_spare_servers" = 20;
          "pm.max_requests" = 500;
        };
      }
    }

    Declared by:

    [13152]<nixpkgs/nixos/modules/services/web-servers/phpfpm/default.nix>

[13153]services.phpfpm.pools.<name>.extraConfig

    Extra lines that go into the pool configuration. See the documentation on php-fpm.conf for
    details on configuration directives.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [13154]<nixpkgs/nixos/modules/services/web-servers/phpfpm/default.nix>

[13155]services.phpfpm.pools.<name>.group

    Group account under which this pool runs.

    Type: string

    Declared by:

    [13156]<nixpkgs/nixos/modules/services/web-servers/phpfpm/default.nix>

[13157]services.phpfpm.pools.<name>.listen

    The address on which to accept FastCGI requests.

    Type: string

    Default: ""

    Example: "/path/to/unix/socket"

    Declared by:

    [13158]<nixpkgs/nixos/modules/services/web-servers/phpfpm/default.nix>

[13159]services.phpfpm.pools.<name>.phpEnv

    Environment variables used for this PHP-FPM pool.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      HOSTNAME = "$HOSTNAME";
      TMP = "/tmp";
      TMPDIR = "/tmp";
      TEMP = "/tmp";
    }

    Declared by:

    [13160]<nixpkgs/nixos/modules/services/web-servers/phpfpm/default.nix>

[13161]services.phpfpm.pools.<name>.phpOptions

    "Options appended to the PHP configuration file php.ini used for this PHP-FPM pool."

    Type: strings concatenated with "\n"

    Declared by:

    [13162]<nixpkgs/nixos/modules/services/web-servers/phpfpm/default.nix>

[13163]services.phpfpm.pools.<name>.phpPackage

    The PHP package to use for running this PHP-FPM pool.

    Type: package

    Default: "config.services.phpfpm.phpPackage"

    Declared by:

    [13164]<nixpkgs/nixos/modules/services/web-servers/phpfpm/default.nix>

[13165]services.phpfpm.pools.<name>.settings

    PHP-FPM pool directives. Refer to the "List of pool directives" section of [13166]https://
    www.php.net/manual/en/install.fpm.configuration.php for details. Note that settings names
    must be enclosed in quotes (e.g. "pm.max_children" instead of pm.max_children).

    Type: attribute set of string or signed integer or booleans

    Default: { }

    Example:

    {
      "pm" = "dynamic";
      "pm.max_children" = 75;
      "pm.start_servers" = 10;
      "pm.min_spare_servers" = 5;
      "pm.max_spare_servers" = 20;
      "pm.max_requests" = 500;
    }

    Declared by:

    [13167]<nixpkgs/nixos/modules/services/web-servers/phpfpm/default.nix>

[13168]services.phpfpm.pools.<name>.socket

    Path to the unix socket file on which to accept FastCGI requests.

    Note: This option is read-only and managed by NixOS.

    Type: string (read only)

    Example: "/run/phpfpm/<name>.sock"

    Declared by:

    [13169]<nixpkgs/nixos/modules/services/web-servers/phpfpm/default.nix>

[13170]services.phpfpm.pools.<name>.user

    User account under which this pool runs.

    Type: string

    Declared by:

    [13171]<nixpkgs/nixos/modules/services/web-servers/phpfpm/default.nix>

[13172]services.phpfpm.settings

    PHP-FPM global directives. Refer to the "List of global php-fpm.conf directives" section of 
    [13173]https://www.php.net/manual/en/install.fpm.configuration.php for details. Note that
    settings names must be enclosed in quotes (e.g. "pm.max_children" instead of
    pm.max_children). You need not specify the options error_log or daemonize here, since they
    are generated by NixOS.

    Type: attribute set of string or signed integer or booleans

    Default: { }

    Declared by:

    [13174]<nixpkgs/nixos/modules/services/web-servers/phpfpm/default.nix>

[13175]services.physlock.enable

    Whether to enable the physlock screen locking mechanism.

    Enable this and then run systemctl start physlock to securely lock the screen.

    This will switch to a new virtual terminal, turn off console switching and disable SysRq
    mechanism (when services.physlock.disableSysRq is set) until the root or user password is
    given.

    Type: boolean

    Default: false

    Declared by:

    [13176]<nixpkgs/nixos/modules/services/security/physlock.nix>

[13177]services.physlock.allowAnyUser

    Whether to allow any user to lock the screen. This will install a setuid wrapper to allow any
    user to start physlock as root, which is a minor security risk. Call the physlock binary to
    use this instead of using the systemd service.

    Note that you might need to relog to have the correct binary in your PATH upon changing this
    option.

    Type: boolean

    Default: false

    Declared by:

    [13178]<nixpkgs/nixos/modules/services/security/physlock.nix>

[13179]services.physlock.disableSysRq

    Whether to disable SysRq when locked with physlock.

    Type: boolean

    Default: true

    Declared by:

    [13180]<nixpkgs/nixos/modules/services/security/physlock.nix>

[13181]services.physlock.lockMessage

    Message to show on physlock login terminal.

    Type: string

    Default: ""

    Declared by:

    [13182]<nixpkgs/nixos/modules/services/security/physlock.nix>

[13183]services.physlock.lockOn.extraTargets

    Other targets to lock the screen just before.

    Useful if you want to e.g. both autologin to X11 so that your ~/.xsession gets executed and
    still to have the screen locked so that the system can be booted relatively unattended.

    Type: list of strings

    Default: [ ]

    Example: [ "display-manager.service" ]

    Declared by:

    [13184]<nixpkgs/nixos/modules/services/security/physlock.nix>

[13185]services.physlock.lockOn.hibernate

    Whether to lock screen with physlock just before hibernate.

    Type: boolean

    Default: true

    Declared by:

    [13186]<nixpkgs/nixos/modules/services/security/physlock.nix>

[13187]services.physlock.lockOn.suspend

    Whether to lock screen with physlock just before suspend.

    Type: boolean

    Default: true

    Declared by:

    [13188]<nixpkgs/nixos/modules/services/security/physlock.nix>

[13189]services.picom.enable

    Whether or not to enable Picom as the X.org composite manager.

    Type: boolean

    Default: false

    Declared by:

    [13190]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13191]services.picom.activeOpacity

    Opacity of active windows.

    Type: a floating point number in range [0, 1]

    Default:

    Example:

    Declared by:

    [13192]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13193]services.picom.backend

    Backend to use: glx, xrender or xr_glx_hybrid.

    Type: one of "glx", "xrender", "xr_glx_hybrid"

    Default: "xrender"

    Declared by:

    [13194]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13195]services.picom.experimentalBackends

    Whether to use the unstable new reimplementation of the backends.

    Type: boolean

    Default: false

    Declared by:

    [13196]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13197]services.picom.fade

    Fade windows in and out.

    Type: boolean

    Default: false

    Declared by:

    [13198]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13199]services.picom.fadeDelta

    Time between fade animation step (in ms).

    Type: positive integer, meaning >0

    Default: 10

    Example: 5

    Declared by:

    [13200]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13201]services.picom.fadeExclude

    List of conditions of windows that should not be faded. See picom(1) man page for more
    examples.

    Type: list of strings

    Default: [ ]

    Example: [ "window_type *= 'menu'" "name ~= 'Firefox\$'" "focused = 1" ]

    Declared by:

    [13202]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13203]services.picom.fadeSteps

    Opacity change between fade steps (in and out).

    Type: pair of a floating point number in range [0.01, 1]

    Default: [ ]

    Example: [ ]

    Declared by:

    [13204]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13205]services.picom.inactiveOpacity

    Opacity of inactive windows.

    Type: a floating point number in range [0.1, 1]

    Default:

    Example:

    Declared by:

    [13206]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13207]services.picom.menuOpacity

    Opacity of dropdown and popup menu.

    Type: a floating point number in range [0, 1]

    Default:

    Example:

    Declared by:

    [13208]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13209]services.picom.opacityRules

    Rules that control the opacity of windows, in format PERCENT:PATTERN.

    Type: list of strings

    Default: [ ]

    Example: [ "95:class_g = 'URxvt' && !_NET_WM_STATE@:32a" "0:_NET_WM_STATE@:32a *=
    '_NET_WM_STATE_HIDDEN'" ]

    Declared by:

    [13210]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13211]services.picom.refreshRate

    Screen refresh rate (0 = automatically detect).

    Type: unsigned integer, meaning >=0

    Default: 0

    Example: 60

    Declared by:

    [13212]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13213]services.picom.settings

    Picom settings. Use this option to configure Picom settings not exposed in a NixOS option or
    to bypass one. For the available options see the CONFIGURATION FILES section at picom(1).

    Type: libconfig configuration. The format consists of an attributes set (called a group) of
    settings. Each setting can be a scalar type (boolean, integer, floating point number or
    string), a list of scalars or a group itself

    Default: { }

    Example:

    blur =
      { method = "gaussian";
        size = 10;
        deviation = 5.0;
      };

    Declared by:

    [13214]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13215]services.picom.shadow

    Draw window shadows.

    Type: boolean

    Default: false

    Declared by:

    [13216]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13217]services.picom.shadowExclude

    List of conditions of windows that should have no shadow. See picom(1) man page for more
    examples.

    Type: list of strings

    Default: [ ]

    Example: [ "window_type *= 'menu'" "name ~= 'Firefox\$'" "focused = 1" ]

    Declared by:

    [13218]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13219]services.picom.shadowOffsets

    Left and right offset for shadows (in pixels).

    Type: pair of signed integer

    Default: [ -15 -15 ]

    Example: [ -10 -15 ]

    Declared by:

    [13220]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13221]services.picom.shadowOpacity

    Window shadows opacity.

    Type: a floating point number in range [0, 1]

    Default:

    Example:

    Declared by:

    [13222]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13223]services.picom.vSync

    Enable vertical synchronization. Chooses the best method (drm, opengl, opengl-oml,
    opengl-swc, opengl-mswc) automatically. The bool value should be used, the others are just
    for backwards compatibility.

    Type: boolean or one of "none", "drm", "opengl", "opengl-oml", "opengl-swc", "opengl-mswc"

    Default: false

    Declared by:

    [13224]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13225]services.picom.wintypes

    Rules for specific window types.

    Type: attribute set

    Default: { dropdown_menu = { opacity = ; } ; popup_menu = { opacity = ; } ; }

    Example: { }

    Declared by:

    [13226]<nixpkgs/nixos/modules/services/x11/picom.nix>

[13227]services.pinnwand.enable

    Whether to enable Pinnwand.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13228]<nixpkgs/nixos/modules/services/misc/pinnwand.nix>

[13229]services.pinnwand.port

    The port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8000

    Declared by:

    [13230]<nixpkgs/nixos/modules/services/misc/pinnwand.nix>

[13231]services.pinnwand.settings

    Your pinnwand.toml as a Nix attribute set. Look up possible options in the [13232]
    pinnwand.toml-example.

    Type: TOML value

    Default: { }

    Declared by:

    [13233]<nixpkgs/nixos/modules/services/misc/pinnwand.nix>

[13234]services.pipewire.enable

    Whether to enable pipewire service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13235]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire.nix>

[13236]services.pipewire.package

    The pipewire derivation to use.

    Type: package

    Default: "pkgs.pipewire"

    Example:

    pkgs.pipewire

    Declared by:

    [13237]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire.nix>

[13238]services.pipewire.alsa.enable

    Whether to enable ALSA support.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13239]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire.nix>

[13240]services.pipewire.alsa.support32Bit

    Whether to enable 32-bit ALSA support on 64-bit systems.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13241]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire.nix>

[13242]services.pipewire.config.client

    Configuration for pipewire clients. For details see https://gitlab.freedesktop.org/pipewire/
    pipewire/-/blob/0.3.30/src/daemon/client.conf.in

    Type: JSON value

    Default: { }

    Declared by:

    [13243]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire.nix>

[13244]services.pipewire.config.client-rt

    Configuration for realtime pipewire clients. For details see https://gitlab.freedesktop.org/
    pipewire/pipewire/-/blob/0.3.30/src/daemon/client-rt.conf.in

    Type: JSON value

    Default: { }

    Declared by:

    [13245]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire.nix>

[13246]services.pipewire.config.jack

    Configuration for the pipewire daemon's jack module. For details see https://
    gitlab.freedesktop.org/pipewire/pipewire/-/blob/0.3.30/src/daemon/jack.conf.in

    Type: JSON value

    Default: { }

    Declared by:

    [13247]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire.nix>

[13248]services.pipewire.config.pipewire

    Configuration for the pipewire daemon. For details see https://gitlab.freedesktop.org/
    pipewire/pipewire/-/blob/0.3.30/src/daemon/pipewire.conf.in

    Type: JSON value

    Default: { }

    Declared by:

    [13249]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire.nix>

[13250]services.pipewire.config.pipewire-pulse

    Configuration for the pipewire-pulse daemon. For details see https://gitlab.freedesktop.org/
    pipewire/pipewire/-/blob/0.3.30/src/daemon/pipewire-pulse.conf.in

    Type: JSON value

    Default: { }

    Declared by:

    [13251]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire.nix>

[13252]services.pipewire.jack.enable

    Whether to enable JACK audio emulation.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13253]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire.nix>

[13254]services.pipewire.media-session.enable

    Example pipewire session manager

    Type: boolean

    Default: "config.services.pipewire.enable"

    Declared by:

    [13255]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire-media-session.nix>

[13256]services.pipewire.media-session.package

    The pipewire-media-session derivation to use.

    Type: package

    Default: (build of pipewire-0.3.30)

    Example:

    pkgs.pipewire.mediaSession

    Declared by:

    [13257]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire-media-session.nix>

[13258]services.pipewire.media-session.config.alsa-monitor

    Configuration for the alsa monitor. For details see https://gitlab.freedesktop.org/pipewire/
    pipewire/-/blob/0.3.30/src/daemon/media-session.d/alsa-monitor.conf

    Type: JSON value

    Default: { }

    Declared by:

    [13259]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire-media-session.nix>

[13260]services.pipewire.media-session.config.bluez-monitor

    Configuration for the bluez5 monitor. For details see https://gitlab.freedesktop.org/pipewire
    /pipewire/-/blob/0.3.30/src/daemon/media-session.d/bluez-monitor.conf

    Type: JSON value

    Default: { }

    Declared by:

    [13261]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire-media-session.nix>

[13262]services.pipewire.media-session.config.media-session

    Configuration for the media session core. For details see https://gitlab.freedesktop.org/
    pipewire/pipewire/-/blob/0.3.30/src/daemon/media-session.d/media-session.conf

    Type: JSON value

    Default: { }

    Declared by:

    [13263]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire-media-session.nix>

[13264]services.pipewire.media-session.config.v4l2-monitor

    Configuration for the V4L2 monitor. For details see https://gitlab.freedesktop.org/pipewire/
    pipewire/-/blob/0.3.30/src/daemon/media-session.d/v4l2-monitor.conf

    Type: JSON value

    Default: { }

    Declared by:

    [13265]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire-media-session.nix>

[13266]services.pipewire.pulse.enable

    Whether to enable PulseAudio server emulation.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13267]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire.nix>

[13268]services.pipewire.socketActivation

    Automatically run pipewire when connections are made to the pipewire socket.

    Type: boolean

    Default: true

    Declared by:

    [13269]<nixpkgs/nixos/modules/services/desktops/pipewire/pipewire.nix>

[13270]services.pixiecore.enable

    Whether to enable Pixiecore.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13271]<nixpkgs/nixos/modules/services/networking/pixiecore.nix>

[13272]services.pixiecore.apiServer

    host:port to connect to the API. Ignored unless mode is set to 'api'

    Type: string

    Example: "localhost:8080"

    Declared by:

    [13273]<nixpkgs/nixos/modules/services/networking/pixiecore.nix>

[13274]services.pixiecore.cmdLine

    Kernel commandline arguments. Ignored unless mode is set to 'boot'

    Type: string

    Default: ""

    Declared by:

    [13275]<nixpkgs/nixos/modules/services/networking/pixiecore.nix>

[13276]services.pixiecore.debug

    Log more things that aren't directly related to booting a recognized client

    Type: boolean

    Default: false

    Declared by:

    [13277]<nixpkgs/nixos/modules/services/networking/pixiecore.nix>

[13278]services.pixiecore.dhcpNoBind

    Handle DHCP traffic without binding to the DHCP server port

    Type: boolean

    Default: false

    Declared by:

    [13279]<nixpkgs/nixos/modules/services/networking/pixiecore.nix>

[13280]services.pixiecore.extraArguments

    Additional command line arguments to pass to Pixiecore

    Type: list of strings

    Default: [ ]

    Declared by:

    [13281]<nixpkgs/nixos/modules/services/networking/pixiecore.nix>

[13282]services.pixiecore.initrd

    Initrd path. Ignored unless mode is set to 'boot'

    Type: string

    Default: ""

    Declared by:

    [13283]<nixpkgs/nixos/modules/services/networking/pixiecore.nix>

[13284]services.pixiecore.kernel

    Kernel path. Ignored unless mode is set to 'boot'

    Type: string

    Default: ""

    Declared by:

    [13285]<nixpkgs/nixos/modules/services/networking/pixiecore.nix>

[13286]services.pixiecore.listen

    IPv4 address to listen on

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [13287]<nixpkgs/nixos/modules/services/networking/pixiecore.nix>

[13288]services.pixiecore.mode

    Which mode to use

    Type: one of "api", "boot"

    Default: "boot"

    Declared by:

    [13289]<nixpkgs/nixos/modules/services/networking/pixiecore.nix>

[13290]services.pixiecore.openFirewall

    Open ports (67, 69 UDP and 4011, 'port', 'statusPort' TCP) in the firewall for Pixiecore.

    Type: boolean

    Default: false

    Declared by:

    [13291]<nixpkgs/nixos/modules/services/networking/pixiecore.nix>

[13292]services.pixiecore.port

    Port to listen on for HTTP

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 80

    Declared by:

    [13293]<nixpkgs/nixos/modules/services/networking/pixiecore.nix>

[13294]services.pixiecore.statusPort

    HTTP port for status information (can be the same as --port)

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 80

    Declared by:

    [13295]<nixpkgs/nixos/modules/services/networking/pixiecore.nix>

[13296]services.plantuml-server.enable

    Whether to enable PlantUML server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13297]<nixpkgs/nixos/modules/services/web-apps/plantuml-server.nix>

[13298]services.plantuml-server.package

    PlantUML server package to use

    Type: package

    Default: (build of plantuml-server-1.2021.6)

    Declared by:

    [13299]<nixpkgs/nixos/modules/services/web-apps/plantuml-server.nix>

[13300]services.plantuml-server.allowPlantumlInclude

    Enables !include processing which can read files from the server into diagrams. Files are
    read relative to the current working directory.

    Type: boolean

    Default: false

    Declared by:

    [13301]<nixpkgs/nixos/modules/services/web-apps/plantuml-server.nix>

[13302]services.plantuml-server.graphvizPackage

    Package containing the dot executable.

    Type: package

    Default: (build of graphviz-2.32.0)

    Declared by:

    [13303]<nixpkgs/nixos/modules/services/web-apps/plantuml-server.nix>

[13304]services.plantuml-server.group

    Group which runs PlantUML server.

    Type: string

    Default: "plantuml"

    Declared by:

    [13305]<nixpkgs/nixos/modules/services/web-apps/plantuml-server.nix>

[13306]services.plantuml-server.home

    Home directory of the PlantUML server instance.

    Type: string

    Default: "/var/lib/plantuml"

    Declared by:

    [13307]<nixpkgs/nixos/modules/services/web-apps/plantuml-server.nix>

[13308]services.plantuml-server.httpAuthorization

    When calling the proxy endpoint, the value of HTTP_AUTHORIZATION will be used to set the HTTP
    Authorization header.

    Type: null or string

    Default: null

    Declared by:

    [13309]<nixpkgs/nixos/modules/services/web-apps/plantuml-server.nix>

[13310]services.plantuml-server.listenHost

    Host to listen on.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [13311]<nixpkgs/nixos/modules/services/web-apps/plantuml-server.nix>

[13312]services.plantuml-server.listenPort

    Port to listen on.

    Type: signed integer

    Default: 8080

    Declared by:

    [13313]<nixpkgs/nixos/modules/services/web-apps/plantuml-server.nix>

[13314]services.plantuml-server.plantumlLimitSize

    Limits image width and height.

    Type: signed integer

    Default: 4096

    Declared by:

    [13315]<nixpkgs/nixos/modules/services/web-apps/plantuml-server.nix>

[13316]services.plantuml-server.plantumlStats

    Set it to on to enable statistics report (https://plantuml.com/statistics-report).

    Type: boolean

    Default: false

    Declared by:

    [13317]<nixpkgs/nixos/modules/services/web-apps/plantuml-server.nix>

[13318]services.plantuml-server.user

    User which runs PlantUML server.

    Type: string

    Default: "plantuml"

    Declared by:

    [13319]<nixpkgs/nixos/modules/services/web-apps/plantuml-server.nix>

[13320]services.pleroma.enable

    Whether to enable pleroma.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13321]<nixpkgs/nixos/modules/services/networking/pleroma.nix>

[13322]services.pleroma.package

    Pleroma package to use.

    Type: package

    Default: (build of pleroma-otp-2.3.0)

    Declared by:

    [13323]<nixpkgs/nixos/modules/services/networking/pleroma.nix>

[13324]services.pleroma.configs

    Pleroma public configuration.

    This list gets appended from left to right into /etc/pleroma/config.exs. Elixir evaluates its
    configuration imperatively, meaning you can override a setting by appending a new str to this
    NixOS option list.

    DO NOT STORE ANY PLEROMA SECRET HERE, use [13325]services.pleroma.secretConfigFile instead.

    This setting is going to be stored in a file part of the Nix store. The Nix store being
    world-readable, it's not the right place to store any secret

    Have a look to Pleroma section in the NixOS manual for more informations.

    Type: list of strings

    Declared by:

    [13326]<nixpkgs/nixos/modules/services/networking/pleroma.nix>

[13327]services.pleroma.group

    Group account under which pleroma runs.

    Type: string

    Default: "pleroma"

    Declared by:

    [13328]<nixpkgs/nixos/modules/services/networking/pleroma.nix>

[13329]services.pleroma.secretConfigFile

    Path to the file containing your secret pleroma configuration.

    DO NOT POINT THIS OPTION TO THE NIX STORE, the store being world-readable, it'll compromise
    all your secrets.

    Type: string

    Default: "/var/lib/pleroma/secrets.exs"

    Declared by:

    [13330]<nixpkgs/nixos/modules/services/networking/pleroma.nix>

[13331]services.pleroma.stateDir

    Directory where the pleroma service will save the uploads and static files.

    Type: string (read only)

    Default: "/var/lib/pleroma"

    Declared by:

    [13332]<nixpkgs/nixos/modules/services/networking/pleroma.nix>

[13333]services.pleroma.user

    User account under which pleroma runs.

    Type: string

    Default: "pleroma"

    Declared by:

    [13334]<nixpkgs/nixos/modules/services/networking/pleroma.nix>

[13335]services.plex.enable

    Whether to enable Plex Media Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13336]<nixpkgs/nixos/modules/services/misc/plex.nix>

[13337]services.plex.package

    The Plex package to use. Plex subscribers may wish to use their own package here, pointing to
    subscriber-only server versions.

    Type: package

    Default: "pkgs.plex"

    Declared by:

    [13338]<nixpkgs/nixos/modules/services/misc/plex.nix>

[13339]services.plex.dataDir

    The directory where Plex stores its data files.

    Type: string

    Default: "/var/lib/plex"

    Declared by:

    [13340]<nixpkgs/nixos/modules/services/misc/plex.nix>

[13341]services.plex.extraPlugins

    A list of paths to extra plugin bundles to install in Plex's plugin directory. Every time the
    systemd unit for Plex starts up, all of the symlinks in Plex's plugin directory will be
    cleared and this module will symlink all of the paths specified here to that directory. If
    this behavior is undesired, set managePlugins to false.

    Type: list of paths

    Default: [ ]

    Declared by:

    [13342]<nixpkgs/nixos/modules/services/misc/plex.nix>

[13343]services.plex.group

    Group under which Plex runs.

    Type: string

    Default: "plex"

    Declared by:

    [13344]<nixpkgs/nixos/modules/services/misc/plex.nix>

[13345]services.plex.managePlugins

    If set to true, this option will cause all of the symlinks in Plex's plugin directory to be
    removed and symlinks for paths specified in extraPlugins to be added.

    Type: boolean

    Default: true

    Declared by:

    [13346]<nixpkgs/nixos/modules/services/misc/plex.nix>

[13347]services.plex.openFirewall

    Open ports in the firewall for the media server.

    Type: boolean

    Default: false

    Declared by:

    [13348]<nixpkgs/nixos/modules/services/misc/plex.nix>

[13349]services.plex.user

    User account under which Plex runs.

    Type: string

    Default: "plex"

    Declared by:

    [13350]<nixpkgs/nixos/modules/services/misc/plex.nix>

[13351]services.plikd.enable

    Whether to enable the plikd server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13352]<nixpkgs/nixos/modules/services/misc/plikd.nix>

[13353]services.plikd.openFirewall

    Open ports in the firewall for the plikd.

    Type: boolean

    Default: false

    Declared by:

    [13354]<nixpkgs/nixos/modules/services/misc/plikd.nix>

[13355]services.plikd.settings

    Configuration for plikd, see [13356]https://github.com/root-gg/plik/blob/master/server/
    plikd.cfg for supported values.

    Type: TOML value

    Default: { }

    Declared by:

    [13357]<nixpkgs/nixos/modules/services/misc/plikd.nix>

[13358]services.podgrab.enable

    Whether to enable Podgrab, a self-hosted podcast manager.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13359]<nixpkgs/nixos/modules/services/misc/podgrab.nix>

[13360]services.podgrab.passwordFile

    The path to a file containing the PASSWORD environment variable definition for Podgrab's
    authentification.

    Type: null or string

    Default: null

    Example: "/run/secrets/password.env"

    Declared by:

    [13361]<nixpkgs/nixos/modules/services/misc/podgrab.nix>

[13362]services.podgrab.port

    The port on which Podgrab will listen for incoming HTTP traffic.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8080

    Example: 4242

    Declared by:

    [13363]<nixpkgs/nixos/modules/services/misc/podgrab.nix>

[13364]services.polipo.enable

    Whether to run the polipo caching web proxy.

    Type: boolean

    Default: false

    Declared by:

    [13365]<nixpkgs/nixos/modules/services/networking/polipo.nix>

[13366]services.polipo.allowedClients

    List of IP addresses or network addresses that may connect to Polipo.

    Type: list of strings

    Default: [ "127.0.0.1" "::1" ]

    Example: [ "127.0.0.1" "::1" "134.157.168.0/24" "2001:660:116::/48" ]

    Declared by:

    [13367]<nixpkgs/nixos/modules/services/networking/polipo.nix>

[13368]services.polipo.extraConfig

    Polio configuration. Contents will be added verbatim to the configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13369]<nixpkgs/nixos/modules/services/networking/polipo.nix>

[13370]services.polipo.parentProxy

    Hostname and port number of an HTTP parent proxy; it should have the form ‘host:port’.

    Type: string

    Default: ""

    Example: "localhost:8124"

    Declared by:

    [13371]<nixpkgs/nixos/modules/services/networking/polipo.nix>

[13372]services.polipo.proxyAddress

    IP address on which Polipo will listen.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [13373]<nixpkgs/nixos/modules/services/networking/polipo.nix>

[13374]services.polipo.proxyPort

    TCP port on which Polipo will listen.

    Type: signed integer

    Default: 8123

    Declared by:

    [13375]<nixpkgs/nixos/modules/services/networking/polipo.nix>

[13376]services.polipo.socksParentProxy

    Hostname and port number of an SOCKS parent proxy; it should have the form ‘host:port’.

    Type: string

    Default: ""

    Example: "localhost:9050"

    Declared by:

    [13377]<nixpkgs/nixos/modules/services/networking/polipo.nix>

[13378]services.pomerium.enable

    Whether to enable the Pomerium authenticating reverse proxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13379]<nixpkgs/nixos/modules/services/web-servers/pomerium.nix>

[13380]services.pomerium.configFile

    Path to Pomerium config YAML. If set, overrides services.pomerium.settings.

    Type: null or path

    Default: null

    Declared by:

    [13381]<nixpkgs/nixos/modules/services/web-servers/pomerium.nix>

[13382]services.pomerium.secretsFile

    Path to file containing secrets for Pomerium, in systemd EnvironmentFile format. See the
    systemd.exec(5) man page.

    Type: null or path

    Default: null

    Declared by:

    [13383]<nixpkgs/nixos/modules/services/web-servers/pomerium.nix>

[13384]services.pomerium.settings

    The contents of Pomerium's config.yaml, in Nix expressions.

    Specifying configFile will override this in its entirety.

    See [13385]the Pomerium configuration reference for more information about what to put here.

    Type: YAML value

    Default: { }

    Declared by:

    [13386]<nixpkgs/nixos/modules/services/web-servers/pomerium.nix>

[13387]services.pomerium.useACMEHost

    If set, use a NixOS-generated ACME certificate with the specified name.

    Note that this will require you to use a non-HTTP-based challenge, or disable Pomerium's
    in-built HTTP redirect server by setting http_redirect_addr to null and use a different HTTP
    server for serving the challenge response.

    If you're using an HTTP-based challenge, you should use the Pomerium-native autocert option
    instead.

    Type: null or string

    Default: null

    Declared by:

    [13388]<nixpkgs/nixos/modules/services/web-servers/pomerium.nix>

[13389]services.postfix.enable

    Whether to run the Postfix mail server.

    Type: boolean

    Default: false

    Declared by:

    [13390]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13391]services.postfix.enableHeaderChecks

    Whether to enable postfix header checks

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13392]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13393]services.postfix.enableSmtp

    Whether to enable smtp in master.cf.

    Type: boolean

    Default: true

    Declared by:

    [13394]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13395]services.postfix.enableSubmission

    Whether to enable smtp submission.

    Type: boolean

    Default: false

    Declared by:

    [13396]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13397]services.postfix.enableSubmissions

    Whether to enable smtp submission via smtps.

    According to RFC 8314 this should be preferred over STARTTLS for submission of messages by
    end user clients.

    Type: boolean

    Default: false

    Declared by:

    [13398]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13399]services.postfix.aliasFiles

    Aliases' tables to be compiled and placed into /var/lib/postfix/conf.

    Type: attribute set of paths

    Default: { }

    Declared by:

    [13400]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13401]services.postfix.aliasMapType

    The format the alias map should have. Use regexp if you want to use regular expressions.

    Type: one of "hash", "regexp", "pcre"

    Default: "hash"

    Example: "regexp"

    Declared by:

    [13402]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13403]services.postfix.canonical

    Entries for the canonical(5) table.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13404]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13405]services.postfix.config

    The main.cf configuration file as key value set.

    Type: attribute set of boolean or string or list of stringss

    Example: { mail_owner = "postfix"; smtp_tls_security_level = "may"; }

    Declared by:

    [13406]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13407]services.postfix.destination

    Full (!) list of domains we deliver locally. Leave blank for acceptable Postfix default.

    Type: null or list of strings

    Default: null

    Example: [ "localhost" ]

    Declared by:

    [13408]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13409]services.postfix.dnsBlacklistOverrides

    contents of check_client_access for overriding dnsBlacklists

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13410]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13411]services.postfix.dnsBlacklists

    dns blacklist servers to use with smtpd_client_restrictions

    Type: list of strings

    Default: [ ]

    Declared by:

    [13412]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13413]services.postfix.domain

    Domain to use. Leave blank to use hostname minus first component.

    Type: string

    Default: ""

    Declared by:

    [13414]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13415]services.postfix.extraAliases

    Additional entries to put verbatim into aliases file, cf. man-page aliases(8).

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13416]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13417]services.postfix.extraConfig

    Extra lines to be added verbatim to the main.cf configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13418]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13419]services.postfix.extraHeaderChecks

    Extra lines to /etc/postfix/header_checks file.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "/^X-Spam-Flag:/ REDIRECT spam@example.com"

    Declared by:

    [13420]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13421]services.postfix.extraMasterConf

    Extra lines to append to the generated master.cf file.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "submission inet n - n - - smtpd"

    Declared by:

    [13422]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13423]services.postfix.group

    What to call the Postfix group (must be used only for postfix).

    Type: string

    Default: "postfix"

    Declared by:

    [13424]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13425]services.postfix.headerChecks

    Postfix header checks.

    Type: list of submodules

    Default: [ ]

    Example: [ { action = "REDIRECT spam@example.com"; pattern = "/^X-Spam-Flag:/"; } ]

    Declared by:

    [13426]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13427]services.postfix.headerChecks.*.action

    The action to be executed when the pattern is matched

    Type: string

    Default: "DUNNO"

    Example: "BCC mail@example.com"

    Declared by:

    [13428]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13429]services.postfix.headerChecks.*.pattern

    A regexp pattern matching the header

    Type: string

    Default: "/^.*/"

    Example: "/^X-Mailer:/"

    Declared by:

    [13430]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13431]services.postfix.hostname

    Hostname to use. Leave blank to use just the hostname of machine. It should be FQDN.

    Type: string

    Default: ""

    Declared by:

    [13432]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13433]services.postfix.localRecipients

    List of accepted local users. Specify a bare username, an "@domain.tld" wild-card, or a
    complete "user@domain.tld" address. If set, these names end up in the local recipient map --
    see the local(8) man-page -- and effectively replace the system user database lookup that's
    otherwise used by default.

    Type: null or list of strings

    Default: null

    Declared by:

    [13434]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13435]services.postfix.lookupMX

    Whether relay specified is just domain whose MX must be used.

    Type: boolean

    Default: false

    Declared by:

    [13436]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13437]services.postfix.mapFiles

    Maps to be compiled and placed into /var/lib/postfix/conf.

    Type: attribute set of paths

    Default: { }

    Declared by:

    [13438]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13439]services.postfix.masterConfig

    An attribute set of service options, which correspond to the service definitions usually done
    within the Postfix master.cf file.

    Type: attribute set of submodules

    Default: { }

    Example: { submission = { args = [ "-o" "smtpd_tls_security_level=encrypt" ] ; type = "inet";
    } ; }

    Declared by:

    [13440]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13441]services.postfix.masterConfig.<name>.args

    Arguments to pass to the command. There is no shell processing involved and shell syntax is
    passed verbatim to the process.

    Type: list of strings

    Default: [ ]

    Example: [ "-o" "smtp_helo_timeout=5" ]

    Declared by:

    [13442]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13443]services.postfix.masterConfig.<name>.chroot

    Whether the service is chrooted to have only access to the services.postfix.queueDir and the
    closure of store paths specified by the program option.

    Type: boolean

    Example: true

    Declared by:

    [13444]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13445]services.postfix.masterConfig.<name>.command

    A program name specifying a Postfix service/daemon process. By default it's the attribute
    name.

    Type: string

    Default: "‹name›"

    Example: "smtpd"

    Declared by:

    [13446]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13447]services.postfix.masterConfig.<name>.maxproc

    The maximum number of processes to spawn for this service. If the value is 0 it doesn't have
    any limit. If null is given it uses the postfix default of 100.

    Type: signed integer

    Example: 1

    Declared by:

    [13448]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13449]services.postfix.masterConfig.<name>.name

    The name of the service to run. Defaults to the attribute set key.

    Type: string

    Default: "‹name›"

    Example: "smtp"

    Declared by:

    [13450]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13451]services.postfix.masterConfig.<name>.private

    Whether the service's sockets and storage directory is restricted to be only available via
    the mail system. If null is given it uses the postfix default true.

    Type: boolean

    Example: false

    Declared by:

    [13452]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13453]services.postfix.masterConfig.<name>.privileged

    Type: boolean

    Example: true

    Declared by:

    [13454]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13455]services.postfix.masterConfig.<name>.type

    The type of the service

    Type: one of "inet", "unix", "unix-dgram", "fifo", "pass"

    Default: "unix"

    Example: "inet"

    Declared by:

    [13456]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13457]services.postfix.masterConfig.<name>.wakeup

    Automatically wake up the service after the specified number of seconds. If 0 is given, never
    wake the service up.

    Type: signed integer

    Example: 60

    Declared by:

    [13458]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13459]services.postfix.masterConfig.<name>.wakeupUnusedComponent

    If set to false the component will only be woken up if it is used. This is equivalent to
    postfix' notion of adding a question mark behind the wakeup time in master.cf

    Type: boolean

    Example: false

    Declared by:

    [13460]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13461]services.postfix.networks

    Net masks for trusted - allowed to relay mail to third parties - hosts. Leave empty to use
    mynetworks_style configuration or use default (localhost-only).

    Type: null or list of strings

    Default: null

    Example: [ "192.168.0.1/24" ]

    Declared by:

    [13462]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13463]services.postfix.networksStyle

    Name of standard way of trusted network specification to use, leave blank if you specify it
    explicitly or if you want to use default (localhost-only).

    Type: string

    Default: ""

    Declared by:

    [13464]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13465]services.postfix.origin

    Origin to use in outgoing e-mail. Leave blank to use hostname.

    Type: string

    Default: ""

    Declared by:

    [13466]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13467]services.postfix.postmasterAlias

    Who should receive postmaster e-mail. Multiple values can be added by separating values with
    comma.

    Type: string

    Default: "root"

    Declared by:

    [13468]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13469]services.postfix.recipientDelimiter

    Delimiter for address extension: so mail to user+test can be handled by ~user/.forward+test

    Type: string

    Default: ""

    Example: "+"

    Declared by:

    [13470]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13471]services.postfix.relayDomains

    List of domains we agree to relay to. Default is empty.

    Type: null or list of strings

    Default: null

    Example: [ "localdomain" ]

    Declared by:

    [13472]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13473]services.postfix.relayHost

    Mail relay for outbound mail.

    Type: string

    Default: ""

    Declared by:

    [13474]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13475]services.postfix.relayPort

    SMTP port for relay mail relay.

    Type: signed integer

    Default: 25

    Declared by:

    [13476]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13477]services.postfix.rootAlias

    Who should receive root e-mail. Blank for no redirection. Multiple values can be added by
    separating values with comma.

    Type: string

    Default: ""

    Declared by:

    [13478]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13479]services.postfix.setSendmail

    Whether to set the system sendmail to postfix's.

    Type: boolean

    Default: true

    Declared by:

    [13480]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13481]services.postfix.setgidGroup

    How to call postfix setgid group (for postdrop). Should be uniquely used group.

    Type: string

    Default: "postdrop"

    Declared by:

    [13482]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13483]services.postfix.sslCert

    SSL certificate to use.

    Type: string

    Default: ""

    Declared by:

    [13484]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13485]services.postfix.sslKey

    SSL key to use.

    Type: string

    Default: ""

    Declared by:

    [13486]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13487]services.postfix.submissionOptions

    Options for the submission config in master.cf

    Type: attribute set

    Default: { milter_macro_daemon_name = "ORIGINATING"; smtpd_client_restrictions =
    "permit_sasl_authenticated,reject"; smtpd_sasl_auth_enable = "yes"; smtpd_tls_security_level
    = "encrypt"; }

    Example: { milter_macro_daemon_name = "ORIGINATING"; smtpd_client_restrictions =
    "permit_sasl_authenticated,reject"; smtpd_sasl_auth_enable = "yes"; smtpd_sasl_type =
    "dovecot"; smtpd_tls_security_level = "encrypt"; }

    Declared by:

    [13488]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13489]services.postfix.submissionsOptions

    Options for the submission config via smtps in master.cf.

    smtpd_tls_security_level will be set to encrypt, if it is missing or has one of the values
    "may" or "none".

    smtpd_tls_wrappermode with value "yes" will be added automatically.

    Type: attribute set

    Default: { milter_macro_daemon_name = "ORIGINATING"; smtpd_client_restrictions =
    "permit_sasl_authenticated,reject"; smtpd_sasl_auth_enable = "yes"; }

    Example: { milter_macro_daemon_name = "ORIGINATING"; smtpd_client_restrictions =
    "permit_sasl_authenticated,reject"; smtpd_sasl_auth_enable = "yes"; smtpd_sasl_type =
    "dovecot"; }

    Declared by:

    [13490]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13491]services.postfix.tlsTrustedAuthorities

    File containing trusted certification authorities (CA) to verify certificates of mailservers
    contacted for mail delivery. This basically sets smtp_tls_CAfile and enables opportunistic
    tls. Defaults to NixOS trusted certification authorities.

    Type: string

    Default: "\${pkgs.cacert}/etc/ssl/certs/ca-bundle.crt"

    Declared by:

    [13492]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13493]services.postfix.transport

    Entries for the transport map, cf. man-page transport(8).

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13494]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13495]services.postfix.useSrs

    Whether to enable sender rewriting scheme

    Type: boolean

    Default: false

    Declared by:

    [13496]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13497]services.postfix.user

    What to call the Postfix user (must be used only for postfix).

    Type: string

    Default: "postfix"

    Declared by:

    [13498]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13499]services.postfix.virtual

    Entries for the virtual alias map, cf. man-page virtual(8).

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13500]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13501]services.postfix.virtualMapType

    What type of virtual alias map file to use. Use "regexp" for regular expressions.

    Type: one of "hash", "regexp", "pcre"

    Default: "hash"

    Declared by:

    [13502]<nixpkgs/nixos/modules/services/mail/postfix.nix>

[13503]services.postgresql.enable

    Whether to enable PostgreSQL Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13504]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13505]services.postgresql.enableTCPIP

    Whether PostgreSQL should listen on all network interfaces. If disabled, the database can
    only be accessed via its Unix domain socket or via TCP connections to localhost.

    Type: boolean

    Default: false

    Declared by:

    [13506]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13507]services.postgresql.package

    PostgreSQL package to use.

    Type: package

    Example:

    pkgs.postgresql_11

    Declared by:

    [13508]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13509]services.postgresql.authentication

    Defines how users authenticate themselves to the server. See the [13510] PostgreSQL
    documentation for pg_hba.conf for details on the expected format of this option. By default,
    peer based authentication will be used for users connecting via the Unix socket, and md5
    password authentication will be used for users connecting via TCP. Any added rules will be
    inserted above the default rules. If you'd like to replace the default rules entirely, you
    can use lib.mkForce in your module.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13511]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13512]services.postgresql.checkConfig

    Check the syntax of the configuration file at compile time

    Type: boolean

    Default: true

    Declared by:

    [13513]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13514]services.postgresql.dataDir

    The data directory for PostgreSQL. If left as the default value this directory will
    automatically be created before the PostgreSQL server starts, otherwise the sysadmin is
    responsible for ensuring the directory exists with appropriate ownership and permissions.

    Type: path

    Default: "/var/lib/postgresql/\${config.services.postgresql.package.psqlSchema}"

    Example: "/var/lib/postgresql/11"

    Declared by:

    [13515]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13516]services.postgresql.ensureDatabases

    Ensures that the specified databases exist. This option will never delete existing databases,
    especially not when the value of this option is changed. This means that databases created
    once through this option or otherwise have to be removed manually.

    Type: list of strings

    Default: [ ]

    Example: [ "gitea" "nextcloud" ]

    Declared by:

    [13517]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13518]services.postgresql.ensureUsers

    Ensures that the specified users exist and have at least the ensured permissions. The
    PostgreSQL users will be identified using peer authentication. This authenticates the Unix
    user with the same name only, and that without the need for a password. This option will
    never delete existing users or remove permissions, especially not when the value of this
    option is changed. This means that users created and permissions assigned once through this
    option or otherwise have to be removed manually.

    Type: list of submodules

    Default: [ ]

    Example:

    [
      {
        name = "nextcloud";
        ensurePermissions = {
          "DATABASE nextcloud" = "ALL PRIVILEGES";
        };
      }
      {
        name = "superuser";
        ensurePermissions = {
          "ALL TABLES IN SCHEMA public" = "ALL PRIVILEGES";
        };
      }
    ]

    Declared by:

    [13519]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13520]services.postgresql.ensureUsers.*.ensurePermissions

    Permissions to ensure for the user, specified as an attribute set. The attribute names
    specify the database and tables to grant the permissions for. The attribute values specify
    the permissions to grant. You may specify one or multiple comma-separated SQL privileges
    here.

    For more information on how to specify the target and on which privileges exist, see the 
    [13521]GRANT syntax. The attributes are used as GRANT ${attrValue} ON ${attrName}.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      "DATABASE \"nextcloud\"" = "ALL PRIVILEGES";
      "ALL TABLES IN SCHEMA public" = "ALL PRIVILEGES";
    }

    Declared by:

    [13522]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13523]services.postgresql.ensureUsers.*.name

    Name of the user to ensure.

    Type: string

    Declared by:

    [13524]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13525]services.postgresql.extraPlugins

    List of PostgreSQL plugins. PostgreSQL version for each plugin should match version for
    services.postgresql.package value.

    Type: list of paths

    Default: [ ]

    Example:

    with pkgs.postgresql_11.pkgs; [ postgis pg_repack ]

    Declared by:

    [13526]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13527]services.postgresql.identMap

    Defines the mapping from system users to database users.

    The general form is:

    map-name system-username database-username

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13528]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13529]services.postgresql.initdbArgs

    Additional arguments passed to initdb during data dir initialisation.

    Type: list of strings

    Default: [ ]

    Example: [ "--data-checksums" "--allow-group-access" ]

    Declared by:

    [13530]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13531]services.postgresql.initialScript

    A file containing SQL statements to execute on first startup.

    Type: null or path

    Default: null

    Declared by:

    [13532]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13533]services.postgresql.logLinePrefix

    A printf-style string that is output at the beginning of each log line. Upstream default is
    '%m [%p] ', i.e. it includes the timestamp. We do not include the timestamp, because journal
    has it anyway.

    Type: string

    Default: "[%p] "

    Example: "%m [%p] "

    Declared by:

    [13534]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13535]services.postgresql.port

    The port on which PostgreSQL listens.

    Type: signed integer

    Default: 5432

    Declared by:

    [13536]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13537]services.postgresql.recoveryConfig

    Contents of the recovery.conf file.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [13538]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13539]services.postgresql.settings

    PostgreSQL configuration. Refer to [13540]https://www.postgresql.org/docs/11/
    config-setting.html#CONFIG-SETTING-CONFIGURATION-FILE for an overview of postgresql.conf.

    Note: String values will automatically be enclosed in single quotes. Single quotes will be
    escaped with two single quotes as described by the upstream documentation linked above.

    Type: attribute set of boolean or floating point number or signed integer or strings

    Default: { }

    Example:

    {
      log_connections = true;
      log_statement = "all";
      logging_collector = true
      log_disconnections = true
      log_destination = lib.mkForce "syslog";
    }

    Declared by:

    [13541]<nixpkgs/nixos/modules/services/databases/postgresql.nix>

[13542]services.postgresqlBackup.enable

    Whether to enable PostgreSQL dumps.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13543]<nixpkgs/nixos/modules/services/backup/postgresql-backup.nix>

[13544]services.postgresqlBackup.backupAll

    Backup all databases using pg_dumpall. This option is mutual exclusive to
    services.postgresqlBackup.databases. The resulting backup dump will have the name all.sql.gz.
    This option is the default if no databases are specified.

    Type: boolean

    Default: "services.postgresqlBackup.databases == []"

    Declared by:

    [13545]<nixpkgs/nixos/modules/services/backup/postgresql-backup.nix>

[13546]services.postgresqlBackup.databases

    List of database names to dump.

    Type: list of strings

    Default: [ ]

    Declared by:

    [13547]<nixpkgs/nixos/modules/services/backup/postgresql-backup.nix>

[13548]services.postgresqlBackup.location

    Location to put the gzipped PostgreSQL database dumps.

    Type: path

    Default: "/var/backup/postgresql"

    Declared by:

    [13549]<nixpkgs/nixos/modules/services/backup/postgresql-backup.nix>

[13550]services.postgresqlBackup.pgdumpOptions

    Command line options for pg_dump. This options is not used if
    config.services.postgresqlBackup.backupAll is enabled. Note that
    config.services.postgresqlBackup.backupAll is also active, when no databases where specified.

    Type: strings concatenated with " "

    Default: "-C"

    Declared by:

    [13551]<nixpkgs/nixos/modules/services/backup/postgresql-backup.nix>

[13552]services.postgresqlBackup.startAt

    This option defines (see systemd.time for format) when the databases should be dumped. The
    default is to update at 01:15 (at night) every day.

    Type: list of strings or string

    Default: "*-*-* 01:15:00"

    Declared by:

    [13553]<nixpkgs/nixos/modules/services/backup/postgresql-backup.nix>

[13554]services.postgresqlWalReceiver.receivers

    PostgreSQL WAL receivers. Stream write-ahead logs from a PostgreSQL server using 
    pg_receivewal (formerly pg_receivexlog). See [13555]the man page for more information.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      main = {
        postgresqlPackage = pkgs.postgresql_11;
        directory = /mnt/pg_wal/main/;
        slot = "main_wal_receiver";
        connection = "postgresql://user@somehost";
      };
    }

    Declared by:

    [13556]<nixpkgs/nixos/modules/services/backup/postgresql-wal-receiver.nix>

[13557]services.postgresqlWalReceiver.receivers.<name>.compress

    Enables gzip compression of write-ahead logs, and specifies the compression level (0 through
    9, 0 being no compression and 9 being best compression). The suffix .gz will automatically be
    added to all filenames.

    This option requires PostgreSQL >= 10.

    Type: integer between 0 and 9 (both inclusive)

    Default: 0

    Declared by:

    [13558]<nixpkgs/nixos/modules/services/backup/postgresql-wal-receiver.nix>

[13559]services.postgresqlWalReceiver.receivers.<name>.connection

    Specifies parameters used to connect to the server, as a connection string. See [13560]
    Section 34.1.1 of the PostgreSQL manual for more information.

    Because pg_receivewal doesn't connect to any particular database in the cluster, database
    name in the connection string will be ignored.

    Type: string

    Example: "postgresql://user@somehost"

    Declared by:

    [13561]<nixpkgs/nixos/modules/services/backup/postgresql-wal-receiver.nix>

[13562]services.postgresqlWalReceiver.receivers.<name>.directory

    Directory to write the output to.

    Type: path

    Example:

    /mnt/pg_wal/main/

    Declared by:

    [13563]<nixpkgs/nixos/modules/services/backup/postgresql-wal-receiver.nix>

[13564]services.postgresqlWalReceiver.receivers.<name>.environment

    Environment variables passed to the service. Usable parameters are listed in [13565]Section
    34.14 of the PostgreSQL manual.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      PGPASSFILE = "/private/passfile";
      PGSSLMODE = "require";
    }

    Declared by:

    [13566]<nixpkgs/nixos/modules/services/backup/postgresql-wal-receiver.nix>

[13567]services.postgresqlWalReceiver.receivers.<name>.extraArgs

    A list of extra arguments to pass to the pg_receivewal command.

    Type: list of strings

    Default: [ ]

    Example:

    [
      "--no-sync"
    ]

    Declared by:

    [13568]<nixpkgs/nixos/modules/services/backup/postgresql-wal-receiver.nix>

[13569]services.postgresqlWalReceiver.receivers.<name>.postgresqlPackage

    PostgreSQL package to use.

    Type: package

    Example:

    pkgs.postgresql_11

    Declared by:

    [13570]<nixpkgs/nixos/modules/services/backup/postgresql-wal-receiver.nix>

[13571]services.postgresqlWalReceiver.receivers.<name>.slot

    Require pg_receivewal to use an existing replication slot (see [13572]Section 26.2.6 of the
    PostgreSQL manual). When this option is used, pg_receivewal will report a flush position to
    the server, indicating when each segment has been synchronized to disk so that the server can
    remove that segment if it is not otherwise needed.

    When the replication client of pg_receivewal is configured on the server as a synchronous
    standby, then using a replication slot will report the flush position to the server, but only
    when a WAL file is closed. Therefore, that configuration will cause transactions on the
    primary to wait for a long time and effectively not work satisfactorily. The option
    synchronous must be specified in addition to make this work correctly.

    Type: string

    Default: ""

    Example: "some_slot_name"

    Declared by:

    [13573]<nixpkgs/nixos/modules/services/backup/postgresql-wal-receiver.nix>

[13574]services.postgresqlWalReceiver.receivers.<name>.statusInterval

    Specifies the number of seconds between status packets sent back to the server. This allows
    for easier monitoring of the progress from server. A value of zero disables the periodic
    status updates completely, although an update will still be sent when requested by the
    server, to avoid timeout disconnect.

    Type: signed integer

    Default: 10

    Declared by:

    [13575]<nixpkgs/nixos/modules/services/backup/postgresql-wal-receiver.nix>

[13576]services.postgresqlWalReceiver.receivers.<name>.synchronous

    Flush the WAL data to disk immediately after it has been received. Also send a status packet
    back to the server immediately after flushing, regardless of statusInterval.

    This option should be specified if the replication client of pg_receivewal is configured on
    the server as a synchronous standby, to ensure that timely feedback is sent to the server.

    Type: boolean

    Default: false

    Declared by:

    [13577]<nixpkgs/nixos/modules/services/backup/postgresql-wal-receiver.nix>

[13578]services.postgrey.enable

    Whether to run the Postgrey daemon

    Type: boolean

    Default: false

    Declared by:

    [13579]<nixpkgs/nixos/modules/services/mail/postgrey.nix>

[13580]services.postgrey.IPv4CIDR

    Strip N bits from IPv4 addresses if lookupBySubnet is true

    Type: signed integer

    Default: 24

    Declared by:

    [13581]<nixpkgs/nixos/modules/services/mail/postgrey.nix>

[13582]services.postgrey.IPv6CIDR

    Strip N bits from IPv6 addresses if lookupBySubnet is true

    Type: signed integer

    Default: 64

    Declared by:

    [13583]<nixpkgs/nixos/modules/services/mail/postgrey.nix>

[13584]services.postgrey.autoWhitelist

    Whitelist clients after successful delivery of N messages

    Type: null or signed integer

    Default: 5

    Declared by:

    [13585]<nixpkgs/nixos/modules/services/mail/postgrey.nix>

[13586]services.postgrey.delay

    Greylist for N seconds

    Type: signed integer

    Default: 300

    Declared by:

    [13587]<nixpkgs/nixos/modules/services/mail/postgrey.nix>

[13588]services.postgrey.greylistAction

    Response status for greylisted messages (see access(5))

    Type: string

    Default: "DEFER_IF_PERMIT"

    Declared by:

    [13589]<nixpkgs/nixos/modules/services/mail/postgrey.nix>

[13590]services.postgrey.greylistHeader

    Prepend header to greylisted mails; use %%t for seconds delayed due to greylisting, %%v for
    the version of postgrey, %%d for the date, and %%h for the host

    Type: string

    Default: "X-Greylist: delayed %%t seconds by postgrey-%%v at %%h; %%d"

    Declared by:

    [13591]<nixpkgs/nixos/modules/services/mail/postgrey.nix>

[13592]services.postgrey.greylistText

    Response status text for greylisted messages; use %%s for seconds left until greylisting is
    over and %%r for mail domain of recipient

    Type: string

    Default: "Greylisted for %%s seconds"

    Declared by:

    [13593]<nixpkgs/nixos/modules/services/mail/postgrey.nix>

[13594]services.postgrey.lookupBySubnet

    Strip the last N bits from IP addresses, determined by IPv4CIDR and IPv6CIDR

    Type: boolean

    Default: true

    Declared by:

    [13595]<nixpkgs/nixos/modules/services/mail/postgrey.nix>

[13596]services.postgrey.maxAge

    Delete entries from whitelist if they haven't been seen for N days

    Type: signed integer

    Default: 35

    Declared by:

    [13597]<nixpkgs/nixos/modules/services/mail/postgrey.nix>

[13598]services.postgrey.privacy

    Store data using one-way hash functions (SHA1)

    Type: boolean

    Default: true

    Declared by:

    [13599]<nixpkgs/nixos/modules/services/mail/postgrey.nix>

[13600]services.postgrey.retryWindow

    Allow N days for the first retry. Use string with appended 'h' to specify time in hours

    Type: string or signed integer

    Default: 2

    Example: "12h"

    Declared by:

    [13601]<nixpkgs/nixos/modules/services/mail/postgrey.nix>

[13602]services.postgrey.socket

    Socket to bind to

    Type: submodule or submodule

    Default: { mode = "0777"; path = "/run/postgrey.sock"; }

    Example: { addr = "127.0.0.1"; port = 10030; }

    Declared by:

    [13603]<nixpkgs/nixos/modules/services/mail/postgrey.nix>

[13604]services.postgrey.whitelistClients

    Client address whitelist files (see postgrey(8))

    Type: list of paths

    Default: [ ]

    Declared by:

    [13605]<nixpkgs/nixos/modules/services/mail/postgrey.nix>

[13606]services.postgrey.whitelistRecipients

    Recipient address whitelist files (see postgrey(8))

    Type: list of paths

    Default: [ ]

    Declared by:

    [13607]<nixpkgs/nixos/modules/services/mail/postgrey.nix>

[13608]services.postsrsd.enable

    Whether to enable the postsrsd SRS server for Postfix.

    Type: boolean

    Default: false

    Declared by:

    [13609]<nixpkgs/nixos/modules/services/mail/postsrsd.nix>

[13610]services.postsrsd.domain

    Domain name for rewrite

    Type: string

    Declared by:

    [13611]<nixpkgs/nixos/modules/services/mail/postsrsd.nix>

[13612]services.postsrsd.excludeDomains

    Origin domains to exclude from rewriting in addition to primary domain

    Type: list of strings

    Default: [ ]

    Declared by:

    [13613]<nixpkgs/nixos/modules/services/mail/postsrsd.nix>

[13614]services.postsrsd.forwardPort

    Port for the forward SRS lookup

    Type: signed integer

    Default: 10001

    Declared by:

    [13615]<nixpkgs/nixos/modules/services/mail/postsrsd.nix>

[13616]services.postsrsd.group

    Group for the daemon

    Type: string

    Default: "postsrsd"

    Declared by:

    [13617]<nixpkgs/nixos/modules/services/mail/postsrsd.nix>

[13618]services.postsrsd.reversePort

    Port for the reverse SRS lookup

    Type: signed integer

    Default: 10002

    Declared by:

    [13619]<nixpkgs/nixos/modules/services/mail/postsrsd.nix>

[13620]services.postsrsd.secretsFile

    Secret keys used for signing and verification

    Type: path

    Default: "/var/lib/postsrsd/postsrsd.secret"

    Declared by:

    [13621]<nixpkgs/nixos/modules/services/mail/postsrsd.nix>

[13622]services.postsrsd.separator

    First separator character in generated addresses

    Type: one of "-", "=", "+"

    Default: "="

    Declared by:

    [13623]<nixpkgs/nixos/modules/services/mail/postsrsd.nix>

[13624]services.postsrsd.timeout

    Timeout for idle client connections in seconds

    Type: signed integer

    Default: 1800

    Declared by:

    [13625]<nixpkgs/nixos/modules/services/mail/postsrsd.nix>

[13626]services.postsrsd.user

    User for the daemon

    Type: string

    Default: "postsrsd"

    Declared by:

    [13627]<nixpkgs/nixos/modules/services/mail/postsrsd.nix>

[13628]services.power-profiles-daemon.enable

    Whether to enable power-profiles-daemon, a DBus daemon that allows changing system behavior
    based upon user-selected power profiles.

    Type: boolean

    Default: false

    Declared by:

    [13629]<nixpkgs/nixos/modules/services/hardware/power-profiles-daemon.nix>

[13630]services.powerdns.enable

    Whether to enable PowerDNS domain name server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13631]<nixpkgs/nixos/modules/services/networking/powerdns.nix>

[13632]services.powerdns.extraConfig

    PowerDNS configuration. Refer to [13633]https://doc.powerdns.com/authoritative/settings.html
    for details on supported values.

    Type: strings concatenated with "\n"

    Default: "launch=bind"

    Declared by:

    [13634]<nixpkgs/nixos/modules/services/networking/powerdns.nix>

[13635]services.pppd.enable

    Whether to enable pppd.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13636]<nixpkgs/nixos/modules/services/networking/pppd.nix>

[13637]services.pppd.package

    pppd package to use.

    Type: package

    Default: "pkgs.ppp"

    Declared by:

    [13638]<nixpkgs/nixos/modules/services/networking/pppd.nix>

[13639]services.pppd.peers

    pppd peers.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [13640]<nixpkgs/nixos/modules/services/networking/pppd.nix>

[13641]services.pppd.peers.<name>.enable

    Whether to enable this PPP peer.

    Type: boolean

    Default: true

    Example: false

    Declared by:

    [13642]<nixpkgs/nixos/modules/services/networking/pppd.nix>

[13643]services.pppd.peers.<name>.autostart

    Whether the PPP session is automatically started at boot time.

    Type: boolean

    Default: true

    Example: false

    Declared by:

    [13644]<nixpkgs/nixos/modules/services/networking/pppd.nix>

[13645]services.pppd.peers.<name>.config

    pppd configuration for this peer, see the pppd(8) man page.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13646]<nixpkgs/nixos/modules/services/networking/pppd.nix>

[13647]services.pppd.peers.<name>.name

    Name of the PPP peer.

    Type: string

    Default: "‹name›"

    Example: "dialup"

    Declared by:

    [13648]<nixpkgs/nixos/modules/services/networking/pppd.nix>

[13649]services.pptpd.enable

    Whether to enable pptpd, the Point-to-Point Tunneling Protocol daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13650]<nixpkgs/nixos/modules/services/networking/pptpd.nix>

[13651]services.pptpd.clientIpRange

    The range from which client IPs are drawn.

    Type: string

    Default: "10.124.124.2-11"

    Declared by:

    [13652]<nixpkgs/nixos/modules/services/networking/pptpd.nix>

[13653]services.pptpd.extraPppdOptions

    Adds extra lines to the pppd options file.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    ms-dns 8.8.8.8
    ms-dns 8.8.4.4
    ''

    Declared by:

    [13654]<nixpkgs/nixos/modules/services/networking/pptpd.nix>

[13655]services.pptpd.extraPptpdOptions

    Adds extra lines to the pptpd configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13656]<nixpkgs/nixos/modules/services/networking/pptpd.nix>

[13657]services.pptpd.maxClients

    The maximum number of simultaneous connections.

    Type: signed integer

    Default: 10

    Declared by:

    [13658]<nixpkgs/nixos/modules/services/networking/pptpd.nix>

[13659]services.pptpd.serverIp

    The server-side IP address.

    Type: string

    Default: "10.124.124.1"

    Declared by:

    [13660]<nixpkgs/nixos/modules/services/networking/pptpd.nix>

[13661]services.prayer.enable

    Whether to enable the prayer webmail http server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13662]<nixpkgs/nixos/modules/services/networking/prayer.nix>

[13663]services.prayer.extraConfig

    Extra configuration. Contents will be added verbatim to the configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13664]<nixpkgs/nixos/modules/services/networking/prayer.nix>

[13665]services.prayer.port

    Port the prayer http server is listening to.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 2080

    Declared by:

    [13666]<nixpkgs/nixos/modules/services/networking/prayer.nix>

[13667]services.printing.enable

    Whether to enable printing support through the CUPS daemon.

    Type: boolean

    Default: false

    Declared by:

    [13668]<nixpkgs/nixos/modules/services/printing/cupsd.nix>

[13669]services.printing.allowFrom

    From which hosts to allow unconditional access.

    Type: list of strings

    Default: [ "localhost" ]

    Example: [ "all" ]

    Declared by:

    [13670]<nixpkgs/nixos/modules/services/printing/cupsd.nix>

[13671]services.printing.browsedConf

    The contents of the configuration. file of the CUPS Browsed daemon (cups-browsed.conf)

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    BrowsePoll cups.example.com
    ''

    Declared by:

    [13672]<nixpkgs/nixos/modules/services/printing/cupsd.nix>

[13673]services.printing.browsing

    Specifies whether shared printers are advertised.

    Type: boolean

    Default: false

    Declared by:

    [13674]<nixpkgs/nixos/modules/services/printing/cupsd.nix>

[13675]services.printing.clientConf

    The contents of the client configuration. (client.conf)

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    ServerName server.example.com
    Encryption Never
    ''

    Declared by:

    [13676]<nixpkgs/nixos/modules/services/printing/cupsd.nix>

[13677]services.printing.defaultShared

    Specifies whether local printers are shared by default.

    Type: boolean

    Default: false

    Declared by:

    [13678]<nixpkgs/nixos/modules/services/printing/cupsd.nix>

[13679]services.printing.drivers

    CUPS drivers to use. Drivers provided by CUPS, cups-filters, Ghostscript and Samba are added
    unconditionally. If this list contains Gutenprint (i.e. a derivation with meta.isGutenprint =
    true) the PPD files in /var/lib/cups/ppd will be updated automatically to avoid errors due to
    incompatible versions.

    Type: list of paths

    Default: [ ]

    Example:

    with pkgs; [ gutenprint hplip splix ]

    Declared by:

    [13680]<nixpkgs/nixos/modules/services/printing/cupsd.nix>

[13681]services.printing.extraConf

    Extra contents of the configuration file of the CUPS daemon (cupsd.conf).

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    BrowsePoll cups.example.com
    MaxCopies 42
    ''

    Declared by:

    [13682]<nixpkgs/nixos/modules/services/printing/cupsd.nix>

[13683]services.printing.extraFilesConf

    Extra contents of the configuration file of the CUPS daemon (cups-files.conf).

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13684]<nixpkgs/nixos/modules/services/printing/cupsd.nix>

[13685]services.printing.listenAddresses

    A list of addresses and ports on which to listen.

    Type: list of strings

    Default: [ "localhost:631" ]

    Example: [ "*:631" ]

    Declared by:

    [13686]<nixpkgs/nixos/modules/services/printing/cupsd.nix>

[13687]services.printing.logLevel

    Specifies the cupsd logging verbosity.

    Type: string

    Default: "info"

    Example: "debug"

    Declared by:

    [13688]<nixpkgs/nixos/modules/services/printing/cupsd.nix>

[13689]services.printing.snmpConf

    The contents of /etc/cups/snmp.conf. See "man cups-snmp.conf" for a complete description.

    Type: strings concatenated with "\n"

    Default:

    ''
    Address @LOCAL
    ''

    Declared by:

    [13690]<nixpkgs/nixos/modules/services/printing/cupsd.nix>

[13691]services.printing.startWhenNeeded

    If set, CUPS is socket-activated; that is, instead of having it permanently running as a
    daemon, systemd will start it on the first incoming connection.

    Type: boolean

    Default: true

    Declared by:

    [13692]<nixpkgs/nixos/modules/services/printing/cupsd.nix>

[13693]services.printing.tempDir

    CUPSd temporary directory.

    Type: path

    Default: "/tmp"

    Example: "/tmp/cups"

    Declared by:

    [13694]<nixpkgs/nixos/modules/services/printing/cupsd.nix>

[13695]services.printing.webInterface

    Specifies whether the web interface is enabled.

    Type: boolean

    Default: true

    Declared by:

    [13696]<nixpkgs/nixos/modules/services/printing/cupsd.nix>

[13697]services.privacyidea.enable

    Whether to enable PrivacyIDEA.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13698]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13699]services.privacyidea.adminEmail

    Mail address for the admin user

    Type: string

    Example: "admin@example.com"

    Declared by:

    [13700]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13701]services.privacyidea.adminPasswordFile

    File containing password for the admin user

    Type: path

    Declared by:

    [13702]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13703]services.privacyidea.auditKeyPrivate

    Private Key for signing the audit log.

    Type: string

    Default: "/var/lib/privacyidea/private.pem"

    Declared by:

    [13704]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13705]services.privacyidea.auditKeyPublic

    Public key for checking signatures of the audit log.

    Type: string

    Default: "/var/lib/privacyidea/public.pem"

    Declared by:

    [13706]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13707]services.privacyidea.encFile

    This is used to encrypt the token data and token passwords

    Type: string

    Default: "/var/lib/privacyidea/enckey"

    Declared by:

    [13708]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13709]services.privacyidea.environmentFile

    File to load as environment file. Environment variables from this file will be interpolated
    into the config file using envsubst which is helpful for specifying secrets:

    { [13710]services.privacyidea.secretKey = "$SECRET"; }

    The environment-file can now specify the actual secret key:

    SECRET=veryverytopsecret

    Type: null or path

    Default: null

    Example: "/root/privacyidea.env"

    Declared by:

    [13711]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13712]services.privacyidea.extraConfig

    Extra configuration options for pi.cfg.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13713]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13714]services.privacyidea.group

    Group account under which PrivacyIDEA runs.

    Type: string

    Default: "privacyidea"

    Declared by:

    [13715]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13716]services.privacyidea.ldap-proxy.enable

    Whether to enable PrivacyIDEA LDAP Proxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13717]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13718]services.privacyidea.ldap-proxy.configFile

    Path to PrivacyIDEA LDAP Proxy configuration (proxy.ini).

    Type: path

    Default: ""

    Declared by:

    [13719]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13720]services.privacyidea.ldap-proxy.group

    Group account under which PrivacyIDEA LDAP proxy runs.

    Type: string

    Default: "pi-ldap-proxy"

    Declared by:

    [13721]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13722]services.privacyidea.ldap-proxy.user

    User account under which PrivacyIDEA LDAP proxy runs.

    Type: string

    Default: "pi-ldap-proxy"

    Declared by:

    [13723]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13724]services.privacyidea.pepper

    This is used to encrypt the admin passwords.

    Type: string

    Example: "Never know..."

    Declared by:

    [13725]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13726]services.privacyidea.secretKey

    This is used to encrypt the auth_token.

    Type: string

    Example: "t0p s3cr3t"

    Declared by:

    [13727]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13728]services.privacyidea.stateDir

    Directory where all PrivacyIDEA files will be placed by default.

    Type: string

    Default: "/var/lib/privacyidea"

    Declared by:

    [13729]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13730]services.privacyidea.superuserRealm

    The realm where users are allowed to login as administrators.

    Type: list of strings

    Default: [ "super" "administrators" ]

    Declared by:

    [13731]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13732]services.privacyidea.user

    User account under which PrivacyIDEA runs.

    Type: string

    Default: "privacyidea"

    Declared by:

    [13733]<nixpkgs/nixos/modules/services/security/privacyidea.nix>

[13734]services.privoxy.enable

    Whether to enable Privoxy, non-caching filtering proxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13735]<nixpkgs/nixos/modules/services/networking/privoxy.nix>

[13736]services.privoxy.enableTor

    Whether to configure Privoxy to use Tor's faster SOCKS port, suitable for HTTP.

    Type: boolean

    Default: false

    Declared by:

    [13737]<nixpkgs/nixos/modules/services/networking/privoxy.nix>

[13738]services.privoxy.certsLifetime

    If inspectHttps is enabled, the time generated HTTPS certificates will be stored in a
    temporary directory for reuse. Once the lifetime has expired the directory will cleared and
    the certificate will have to be generated again, on-demand.

    Depending on the traffic, you may want to reduce the lifetime to limit the disk usage, since
    Privoxy itself never deletes the certificates.

    Note: The format is that of the tmpfiles.d(5) Age parameter.

    Type: tmpfiles.d(5) age format

    Default: "10d"

    Example: "12h"

    Declared by:

    [13739]<nixpkgs/nixos/modules/services/networking/privoxy.nix>

[13740]services.privoxy.inspectHttps

    Whether to configure Privoxy to inspect HTTPS requests, meaning all encrypted traffic will be
    filtered as well. This works by decrypting and re-encrypting the requests using a per-domain
    generated certificate.

    To issue per-domain certificates, Privoxy must be provided with a CA certificate, using the
    ca-cert-file, ca-key-file settings.

    Warning: The CA certificate must also be added to the system trust roots, otherwise browsers
    will reject all Privoxy certificates as invalid. You can do so by using the option
    security.pki.certificateFiles.

    Type: boolean

    Default: false

    Declared by:

    [13741]<nixpkgs/nixos/modules/services/networking/privoxy.nix>

[13742]services.privoxy.settings

    This option is mapped to the main Privoxy configuration file. Check out the Privoxy user
    manual at [13743]https://www.privoxy.org/user-manual/config.html for available settings and
    documentation.

    Note: Repeated settings can be represented by using a list.

    Type: privoxy configuration type. The format consists of an attribute set of settings. Each
    setting can be either a value (integer, string, boolean or path) or a list of such values.

    Default: { }

    Example:

    { # Listen on IPv6 only
      listen-address = "[::]:8118";

      # Forward .onion requests to Tor
      forward-socks5 = ".onion localhost:9050 .";

      # Log redirects and filters
      debug = [ 128 64 ];
      # This is equivalent to writing these lines
      # in the Privoxy configuration file:
      # debug 128
      # debug 64
    }

    Declared by:

    [13744]<nixpkgs/nixos/modules/services/networking/privoxy.nix>

[13745]services.privoxy.settings.enable-edit-actions

    Whether the web-based actions file editor may be used.

    Type: boolean

    Default: false

    Declared by:

    [13746]<nixpkgs/nixos/modules/services/networking/privoxy.nix>

[13747]services.privoxy.settings.actionsfile

    List of paths to Privoxy action files. These paths may either be absolute or relative to the
    privoxy configuration directory.

    Type: list of strings

    Default: [ "match-all.action" "default.action" ]

    Declared by:

    [13748]<nixpkgs/nixos/modules/services/networking/privoxy.nix>

[13749]services.privoxy.settings.filterfile

    List of paths to Privoxy filter files. These paths may either be absolute or relative to the
    privoxy configuration directory.

    Type: list of strings

    Default: [ "default.filter" ]

    Declared by:

    [13750]<nixpkgs/nixos/modules/services/networking/privoxy.nix>

[13751]services.privoxy.settings.listen-address

    Pair of address:port the proxy server is listening to.

    Type: string

    Default: "127.0.0.1:8118"

    Declared by:

    [13752]<nixpkgs/nixos/modules/services/networking/privoxy.nix>

[13753]services.privoxy.userActions

    Actions to be included in a user.action file. This will have a higher priority and can be
    used to override all other actions.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13754]<nixpkgs/nixos/modules/services/networking/privoxy.nix>

[13755]services.privoxy.userFilters

    Filters to be included in a user.filter file. This will have a higher priority and can be
    used to override all other filters definitions.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [13756]<nixpkgs/nixos/modules/services/networking/privoxy.nix>

[13757]services.prometheus.enable

    Enable the Prometheus monitoring daemon.

    Type: boolean

    Default: false

    Declared by:

    [13758]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[13759]services.prometheus.package

    The prometheus package that should be used.

    Type: package

    Default: "pkgs.prometheus"

    Declared by:

    [13760]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[13761]services.prometheus.alertmanager.enable

    Whether to enable Prometheus Alertmanager.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13762]<nixpkgs/nixos/modules/services/monitoring/prometheus/alertmanager.nix>

[13763]services.prometheus.alertmanager.package

    Package that should be used for alertmanager.

    Type: package

    Default: "pkgs.alertmanager"

    Declared by:

    [13764]<nixpkgs/nixos/modules/services/monitoring/prometheus/alertmanager.nix>

[13765]services.prometheus.alertmanager.clusterPeers

    Initial peers for HA cluster.

    Type: list of strings

    Default: [ ]

    Declared by:

    [13766]<nixpkgs/nixos/modules/services/monitoring/prometheus/alertmanager.nix>

[13767]services.prometheus.alertmanager.configText

    Alertmanager configuration as YAML text. If non-null, this option defines the text that is
    written to alertmanager.yml. If null, the contents of alertmanager.yml is generated from the
    structured config options.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [13768]<nixpkgs/nixos/modules/services/monitoring/prometheus/alertmanager.nix>

[13769]services.prometheus.alertmanager.configuration

    Alertmanager configuration as nix attribute set.

    Type: null or attribute set

    Default: null

    Declared by:

    [13770]<nixpkgs/nixos/modules/services/monitoring/prometheus/alertmanager.nix>

[13771]services.prometheus.alertmanager.environmentFile

    File to load as environment file. Environment variables from this file will be interpolated
    into the config file using envsubst with this syntax: $ENVIRONMENT ${VARIABLE}

    Type: null or path

    Default: null

    Example: "/root/alertmanager.env"

    Declared by:

    [13772]<nixpkgs/nixos/modules/services/monitoring/prometheus/alertmanager.nix>

[13773]services.prometheus.alertmanager.extraFlags

    Extra commandline options when launching the Alertmanager.

    Type: list of strings

    Default: [ ]

    Declared by:

    [13774]<nixpkgs/nixos/modules/services/monitoring/prometheus/alertmanager.nix>

[13775]services.prometheus.alertmanager.listenAddress

    Address to listen on for the web interface and API. Empty string will listen on all
    interfaces. "localhost" will listen on 127.0.0.1 (but not ::1).

    Type: string

    Default: ""

    Declared by:

    [13776]<nixpkgs/nixos/modules/services/monitoring/prometheus/alertmanager.nix>

[13777]services.prometheus.alertmanager.logFormat

    If set use a syslog logger or JSON logging.

    Type: null or string

    Default: null

    Declared by:

    [13778]<nixpkgs/nixos/modules/services/monitoring/prometheus/alertmanager.nix>

[13779]services.prometheus.alertmanager.logLevel

    Only log messages with the given severity or above.

    Type: one of "debug", "info", "warn", "error", "fatal"

    Default: "warn"

    Declared by:

    [13780]<nixpkgs/nixos/modules/services/monitoring/prometheus/alertmanager.nix>

[13781]services.prometheus.alertmanager.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [13782]<nixpkgs/nixos/modules/services/monitoring/prometheus/alertmanager.nix>

[13783]services.prometheus.alertmanager.port

    Port to listen on for the web interface and API.

    Type: signed integer

    Default: 9093

    Declared by:

    [13784]<nixpkgs/nixos/modules/services/monitoring/prometheus/alertmanager.nix>

[13785]services.prometheus.alertmanager.webExternalUrl

    The URL under which Alertmanager is externally reachable (for example, if Alertmanager is
    served via a reverse proxy). Used for generating relative and absolute links back to
    Alertmanager itself. If the URL has a path portion, it will be used to prefix all HTTP
    endoints served by Alertmanager. If omitted, relevant URL components will be derived
    automatically.

    Type: null or string

    Default: null

    Declared by:

    [13786]<nixpkgs/nixos/modules/services/monitoring/prometheus/alertmanager.nix>

[13787]services.prometheus.alertmanagerNotificationQueueCapacity

    The capacity of the queue for pending alert manager notifications.

    Type: signed integer

    Default: 10000

    Declared by:

    [13788]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[13789]services.prometheus.alertmanagerTimeout

    Alert manager HTTP API timeout (in seconds).

    Type: signed integer

    Default: 10

    Declared by:

    [13790]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[13791]services.prometheus.alertmanagers

    A list of alertmanagers to send alerts to. See [13792]the official documentation for more
    information.

    Type: list of attribute sets

    Default: [ ]

    Example:

    [ {
      scheme = "https";
      path_prefix = "/alertmanager";
      static_configs = [ {
        targets = [
          "prometheus.domain.tld"
        ];
      } ];
    } ]

    Declared by:

    [13793]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[13794]services.prometheus.checkConfig

    Check configuration with promtool check. The call to promtool is subject to sandboxing by
    Nix. When credentials are stored in external files (password_file, bearer_token_file, etc),
    they will not be visible to promtool and it will report errors, despite a correct
    configuration.

    Type: boolean

    Default: true

    Declared by:

    [13795]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[13796]services.prometheus.configText

    If non-null, this option defines the text that is written to prometheus.yml. If null, the
    contents of prometheus.yml is generated from the structured config options.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [13797]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[13798]services.prometheus.environmentFile

    Environment file as defined in systemd.exec(5).

    Secrets may be passed to the service without adding them to the world-readable Nix store, by
    specifying placeholder variables as the option value in Nix and setting these variables
    accordingly in the environment file.

    Environment variables from this file will be interpolated into the config file using envsubst
    with this syntax: $ENVIRONMENT ${VARIABLE}

      # Example scrape config entry handling an OAuth bearer token
      {
        job_name = "home_assistant";
        metrics_path = "/api/prometheus";
        scheme = "https";
        bearer_token = "\${HOME_ASSISTANT_BEARER_TOKEN}";
        [...]
      }

      # Content of the environment file
      HOME_ASSISTANT_BEARER_TOKEN=someoauthbearertoken

    Note that this file needs to be available on the host on which Prometheus is running.

    Type: null or path

    Default: null

    Example: "/root/prometheus.env"

    Declared by:

    [13799]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[13800]services.prometheus.exporters

    Prometheus exporter configuration

    Type: submodule

    Default: { }

    Example:

    {
      node = {
        enable = true;
        enabledCollectors = [ "systemd" ];
      };
      varnish.enable = true;
    }

    Declared by:

    [13801]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13802]services.prometheus.exporters.apcupsd.enable

    Whether to enable the prometheus apcupsd exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13803]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13804]services.prometheus.exporters.apcupsd.apcupsdAddress

    Address of the apcupsd Network Information Server (NIS).

    Type: string

    Default: ":3551"

    Declared by:

    [13805]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13806]services.prometheus.exporters.apcupsd.apcupsdNetwork

    Network of the apcupsd Network Information Server (NIS): one of "tcp", "tcp4", or "tcp6".

    Type: one of "tcp", "tcp4", "tcp6"

    Default: "tcp"

    Declared by:

    [13807]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13808]services.prometheus.exporters.apcupsd.extraFlags

    Extra commandline options to pass to the apcupsd exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [13809]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13810]services.prometheus.exporters.apcupsd.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.apcupsd.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9162"

    Declared by:

    [13811]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13812]services.prometheus.exporters.apcupsd.group

    Group under which the apcupsd exporter shall be run.

    Type: string

    Default: "apcupsd-exporter"

    Declared by:

    [13813]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13814]services.prometheus.exporters.apcupsd.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [13815]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13816]services.prometheus.exporters.apcupsd.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [13817]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13818]services.prometheus.exporters.apcupsd.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9162

    Declared by:

    [13819]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13820]services.prometheus.exporters.apcupsd.user

    User name under which the apcupsd exporter shall be run.

    Type: string

    Default: "apcupsd-exporter"

    Declared by:

    [13821]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13822]services.prometheus.exporters.artifactory.enable

    Whether to enable the prometheus artifactory exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13823]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13824]services.prometheus.exporters.artifactory.artiAccessToken

    Access token for authentication against JFrog Artifactory API. One of the password or access
    token needs to be set.

    Type: string

    Default: ""

    Declared by:

    [13825]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13826]services.prometheus.exporters.artifactory.artiPassword

    Password for authentication against JFrog Artifactory API. One of the password or access
    token needs to be set.

    Type: string

    Default: ""

    Declared by:

    [13827]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13828]services.prometheus.exporters.artifactory.artiUsername

    Username for authentication against JFrog Artifactory API.

    Type: string

    Declared by:

    [13829]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13830]services.prometheus.exporters.artifactory.extraFlags

    Extra commandline options to pass to the artifactory exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [13831]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13832]services.prometheus.exporters.artifactory.firewallFilter

    Specify a filter for iptables to use when
    services.prometheus.exporters.artifactory.openFirewall is true. It is used as `ip46tables -I
    nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9531"

    Declared by:

    [13833]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13834]services.prometheus.exporters.artifactory.group

    Group under which the artifactory exporter shall be run.

    Type: string

    Default: "artifactory-exporter"

    Declared by:

    [13835]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13836]services.prometheus.exporters.artifactory.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [13837]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13838]services.prometheus.exporters.artifactory.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [13839]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13840]services.prometheus.exporters.artifactory.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9531

    Declared by:

    [13841]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13842]services.prometheus.exporters.artifactory.scrapeUri

    URI on which to scrape JFrog Artifactory.

    Type: string

    Default: "http://localhost:8081/artifactory"

    Declared by:

    [13843]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13844]services.prometheus.exporters.artifactory.user

    User name under which the artifactory exporter shall be run.

    Type: string

    Default: "artifactory-exporter"

    Declared by:

    [13845]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13846]services.prometheus.exporters.bind.enable

    Whether to enable the prometheus bind exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13847]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13848]services.prometheus.exporters.bind.bindGroups

    List of statistics to collect. Available: [server, view, tasks]

    Type: list of one of "server", "view", "tasks"s

    Default: [ "server" "view" ]

    Declared by:

    [13849]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13850]services.prometheus.exporters.bind.bindTimeout

    Timeout for trying to get stats from Bind.

    Type: string

    Default: "10s"

    Declared by:

    [13851]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13852]services.prometheus.exporters.bind.bindURI

    HTTP XML API address of an Bind server.

    Type: string

    Default: "http://localhost:8053/"

    Declared by:

    [13853]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13854]services.prometheus.exporters.bind.bindVersion

    BIND statistics version. Can be detected automatically.

    Type: one of "xml.v2", "xml.v3", "auto"

    Default: "auto"

    Declared by:

    [13855]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13856]services.prometheus.exporters.bind.extraFlags

    Extra commandline options to pass to the bind exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [13857]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13858]services.prometheus.exporters.bind.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.bind.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9119"

    Declared by:

    [13859]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13860]services.prometheus.exporters.bind.group

    Group under which the bind exporter shall be run.

    Type: string

    Default: "bind-exporter"

    Declared by:

    [13861]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13862]services.prometheus.exporters.bind.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [13863]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13864]services.prometheus.exporters.bind.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [13865]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13866]services.prometheus.exporters.bind.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9119

    Declared by:

    [13867]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13868]services.prometheus.exporters.bind.user

    User name under which the bind exporter shall be run.

    Type: string

    Default: "bind-exporter"

    Declared by:

    [13869]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13870]services.prometheus.exporters.bird.enable

    Whether to enable the prometheus bird exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13871]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13872]services.prometheus.exporters.bird.birdSocket

    Path to BIRD2 (or BIRD1 v4) socket.

    Type: path

    Default: "/var/run/bird.ctl"

    Declared by:

    [13873]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13874]services.prometheus.exporters.bird.birdVersion

    Specifies whether BIRD1 or BIRD2 is in use.

    Type: one of 1, 2

    Default: 2

    Declared by:

    [13875]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13876]services.prometheus.exporters.bird.extraFlags

    Extra commandline options to pass to the bird exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [13877]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13878]services.prometheus.exporters.bird.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.bird.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9324"

    Declared by:

    [13879]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13880]services.prometheus.exporters.bird.group

    Group under which the bird exporter shall be run.

    Type: string

    Default: "bird-exporter"

    Declared by:

    [13881]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13882]services.prometheus.exporters.bird.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [13883]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13884]services.prometheus.exporters.bird.newMetricFormat

    Enable the new more-generic metric format.

    Type: boolean

    Default: true

    Declared by:

    [13885]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13886]services.prometheus.exporters.bird.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [13887]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13888]services.prometheus.exporters.bird.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9324

    Declared by:

    [13889]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13890]services.prometheus.exporters.bird.user

    User name under which the bird exporter shall be run.

    Type: string

    Default: "bird-exporter"

    Declared by:

    [13891]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13892]services.prometheus.exporters.bitcoin.enable

    Whether to enable the prometheus bitcoin exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13893]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13894]services.prometheus.exporters.bitcoin.extraEnv

    Extra environment variables for the exporter.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [13895]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13896]services.prometheus.exporters.bitcoin.extraFlags

    Extra commandline options to pass to the bitcoin exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [13897]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13898]services.prometheus.exporters.bitcoin.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.bitcoin.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9332"

    Declared by:

    [13899]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13900]services.prometheus.exporters.bitcoin.group

    Group under which the bitcoin exporter shall be run.

    Type: string

    Default: "bitcoin-exporter"

    Declared by:

    [13901]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13902]services.prometheus.exporters.bitcoin.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [13903]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13904]services.prometheus.exporters.bitcoin.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [13905]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13906]services.prometheus.exporters.bitcoin.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9332

    Declared by:

    [13907]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13908]services.prometheus.exporters.bitcoin.refreshSeconds

    How often to ask bitcoind for metrics.

    Type: unsigned integer, meaning >=0

    Default: 300

    Declared by:

    [13909]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13910]services.prometheus.exporters.bitcoin.rpcHost

    RPC host.

    Type: string

    Default: "localhost"

    Declared by:

    [13911]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13912]services.prometheus.exporters.bitcoin.rpcPasswordFile

    File containing RPC password.

    Type: path

    Declared by:

    [13913]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13914]services.prometheus.exporters.bitcoin.rpcPort

    RPC port number.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8332

    Declared by:

    [13915]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13916]services.prometheus.exporters.bitcoin.rpcScheme

    Whether to connect to bitcoind over http or https.

    Type: one of "http", "https"

    Default: "http"

    Declared by:

    [13917]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13918]services.prometheus.exporters.bitcoin.rpcUser

    RPC user name.

    Type: string

    Default: "bitcoinrpc"

    Declared by:

    [13919]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13920]services.prometheus.exporters.bitcoin.user

    User name under which the bitcoin exporter shall be run.

    Type: string

    Default: "bitcoin-exporter"

    Declared by:

    [13921]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13922]services.prometheus.exporters.blackbox.enable

    Whether to enable the prometheus blackbox exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13923]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13924]services.prometheus.exporters.blackbox.enableConfigCheck

    Whether to run a correctness check for the configuration file. This depends on the
    configuration file residing in the nix-store. Paths passed as string will be copied to the
    store.

    Type: boolean

    Default: true

    Declared by:

    [13925]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13926]services.prometheus.exporters.blackbox.configFile

    Path to configuration file.

    Type: path

    Declared by:

    [13927]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13928]services.prometheus.exporters.blackbox.extraFlags

    Extra commandline options to pass to the blackbox exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [13929]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13930]services.prometheus.exporters.blackbox.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.blackbox.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9115"

    Declared by:

    [13931]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13932]services.prometheus.exporters.blackbox.group

    Group under which the blackbox exporter shall be run.

    Type: string

    Default: "blackbox-exporter"

    Declared by:

    [13933]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13934]services.prometheus.exporters.blackbox.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [13935]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13936]services.prometheus.exporters.blackbox.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [13937]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13938]services.prometheus.exporters.blackbox.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9115

    Declared by:

    [13939]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13940]services.prometheus.exporters.blackbox.user

    User name under which the blackbox exporter shall be run.

    Type: string

    Default: "blackbox-exporter"

    Declared by:

    [13941]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13942]services.prometheus.exporters.collectd.enable

    Whether to enable the prometheus collectd exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13943]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13944]services.prometheus.exporters.collectd.collectdBinary.enable

    Whether to enable collectd binary protocol receiver.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13945]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13946]services.prometheus.exporters.collectd.collectdBinary.authFile

    File mapping user names to pre-shared keys (passwords).

    Type: null or path

    Default: null

    Declared by:

    [13947]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13948]services.prometheus.exporters.collectd.collectdBinary.listenAddress

    Address to listen on for binary network packets.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [13949]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13950]services.prometheus.exporters.collectd.collectdBinary.port

    Network address on which to accept collectd binary network packets.

    Type: signed integer

    Default: 25826

    Declared by:

    [13951]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13952]services.prometheus.exporters.collectd.collectdBinary.securityLevel

    Minimum required security level for accepted packets.

    Type: one of "None", "Sign", "Encrypt"

    Default: "None"

    Declared by:

    [13953]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13954]services.prometheus.exporters.collectd.extraFlags

    Extra commandline options to pass to the collectd exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [13955]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13956]services.prometheus.exporters.collectd.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.collectd.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9103"

    Declared by:

    [13957]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13958]services.prometheus.exporters.collectd.group

    Group under which the collectd exporter shall be run.

    Type: string

    Default: "collectd-exporter"

    Declared by:

    [13959]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13960]services.prometheus.exporters.collectd.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [13961]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13962]services.prometheus.exporters.collectd.logFormat

    Set the log format.

    Type: one of "logfmt", "json"

    Default: "logfmt"

    Example: "json"

    Declared by:

    [13963]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13964]services.prometheus.exporters.collectd.logLevel

    Only log messages with the given severity or above.

    Type: one of "debug", "info", "warn", "error", "fatal"

    Default: "info"

    Declared by:

    [13965]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13966]services.prometheus.exporters.collectd.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [13967]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13968]services.prometheus.exporters.collectd.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9103

    Declared by:

    [13969]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13970]services.prometheus.exporters.collectd.user

    User name under which the collectd exporter shall be run.

    Type: string

    Default: "collectd-exporter"

    Declared by:

    [13971]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13972]services.prometheus.exporters.dnsmasq.enable

    Whether to enable the prometheus dnsmasq exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13973]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13974]services.prometheus.exporters.dnsmasq.dnsmasqListenAddress

    Address on which dnsmasq listens.

    Type: string

    Default: "localhost:53"

    Declared by:

    [13975]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13976]services.prometheus.exporters.dnsmasq.extraFlags

    Extra commandline options to pass to the dnsmasq exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [13977]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13978]services.prometheus.exporters.dnsmasq.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.dnsmasq.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9153"

    Declared by:

    [13979]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13980]services.prometheus.exporters.dnsmasq.group

    Group under which the dnsmasq exporter shall be run.

    Type: string

    Default: "dnsmasq-exporter"

    Declared by:

    [13981]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13982]services.prometheus.exporters.dnsmasq.leasesPath

    Path to the dnsmasq.leases file.

    Type: path

    Default: "/var/lib/misc/dnsmasq.leases"

    Example: "/var/lib/dnsmasq/dnsmasq.leases"

    Declared by:

    [13983]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13984]services.prometheus.exporters.dnsmasq.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [13985]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13986]services.prometheus.exporters.dnsmasq.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [13987]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13988]services.prometheus.exporters.dnsmasq.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9153

    Declared by:

    [13989]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13990]services.prometheus.exporters.dnsmasq.user

    User name under which the dnsmasq exporter shall be run.

    Type: string

    Default: "dnsmasq-exporter"

    Declared by:

    [13991]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13992]services.prometheus.exporters.domain.enable

    Whether to enable the prometheus domain exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [13993]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13994]services.prometheus.exporters.domain.extraFlags

    Extra commandline options to pass to the domain exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [13995]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13996]services.prometheus.exporters.domain.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.domain.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9222"

    Declared by:

    [13997]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[13998]services.prometheus.exporters.domain.group

    Group under which the domain exporter shall be run.

    Type: string

    Default: "domain-exporter"

    Declared by:

    [13999]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14000]services.prometheus.exporters.domain.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14001]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14002]services.prometheus.exporters.domain.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14003]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14004]services.prometheus.exporters.domain.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9222

    Declared by:

    [14005]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14006]services.prometheus.exporters.domain.user

    User name under which the domain exporter shall be run.

    Type: string

    Default: "domain-exporter"

    Declared by:

    [14007]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14008]services.prometheus.exporters.dovecot.enable

    Whether to enable the prometheus dovecot exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14009]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14010]services.prometheus.exporters.dovecot.extraFlags

    Extra commandline options to pass to the dovecot exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14011]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14012]services.prometheus.exporters.dovecot.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.dovecot.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9166"

    Declared by:

    [14013]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14014]services.prometheus.exporters.dovecot.group

    Group under which the dovecot exporter shall be run.

    Type: string

    Default: "dovecot-exporter"

    Declared by:

    [14015]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14016]services.prometheus.exporters.dovecot.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14017]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14018]services.prometheus.exporters.dovecot.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14019]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14020]services.prometheus.exporters.dovecot.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9166

    Declared by:

    [14021]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14022]services.prometheus.exporters.dovecot.scopes

    Stats scopes to query.

    Type: list of strings

    Default: [ "user" ]

    Example: [ "user" "global" ]

    Declared by:

    [14023]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14024]services.prometheus.exporters.dovecot.socketPath

    Path under which the stats socket is placed. The user/group under which the exporter runs,
    should be able to access the socket in order to scrape the metrics successfully.

    Please keep in mind that the stats module has changed in [14025]Dovecot 2.3+ which is not 
    [14026]compatible with this exporter.

    The following extra config has to be passed to Dovecot to ensure that recent versions work
    with this exporter:

    {
      [14027]services.prometheus.exporters.dovecot.enable = true;
      [14028]services.prometheus.exporters.dovecot.socketPath = "/var/run/dovecot2/old-stats";
      [14029]services.dovecot2.mailPlugins.globally.enable = [ "old_stats" ];
      [14030]services.dovecot2.extraConfig = ''
        service old-stats {
          unix_listener old-stats {
            user = dovecot-exporter
            group = dovecot-exporter
            mode = 0660
          }
          fifo_listener old-stats-mail {
            mode = 0660
            user = dovecot
            group = dovecot
          }
          fifo_listener old-stats-user {
            mode = 0660
            user = dovecot
            group = dovecot
          }
        }
        plugin {
          old_stats_refresh = 30 secs
          old_stats_track_cmds = yes
        }
      '';
    }

    Type: path

    Default: "/var/run/dovecot/stats"

    Example: "/var/run/dovecot2/old-stats"

    Declared by:

    [14031]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14032]services.prometheus.exporters.dovecot.telemetryPath

    Path under which to expose metrics.

    Type: string

    Default: "/metrics"

    Declared by:

    [14033]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14034]services.prometheus.exporters.dovecot.user

    User name under which the dovecot exporter shall be run.

    Type: string

    Default: "dovecot-exporter"

    Declared by:

    [14035]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14036]services.prometheus.exporters.flow.enable

    Whether to enable the prometheus flow exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14037]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14038]services.prometheus.exporters.flow.asn

    The ASN being monitored.

    Type: positive integer, meaning >0

    Example: 65542

    Declared by:

    [14039]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14040]services.prometheus.exporters.flow.brokers

    List of Kafka brokers to connect to.

    Type: list of strings

    Example:

    [ "kafka.example.org:19092" ]

    Declared by:

    [14041]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14042]services.prometheus.exporters.flow.extraFlags

    Extra commandline options to pass to the flow exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14043]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14044]services.prometheus.exporters.flow.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.flow.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9590"

    Declared by:

    [14045]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14046]services.prometheus.exporters.flow.group

    Group under which the flow exporter shall be run.

    Type: string

    Default: "flow-exporter"

    Declared by:

    [14047]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14048]services.prometheus.exporters.flow.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14049]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14050]services.prometheus.exporters.flow.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14051]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14052]services.prometheus.exporters.flow.partitions

    The number of the partitions to consume, none means all.

    Type: list of signed integers

    Default: [ ]

    Declared by:

    [14053]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14054]services.prometheus.exporters.flow.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9590

    Declared by:

    [14055]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14056]services.prometheus.exporters.flow.topic

    The Kafka topic to consume from.

    Type: string

    Example: "pmacct.acct"

    Declared by:

    [14057]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14058]services.prometheus.exporters.flow.user

    User name under which the flow exporter shall be run.

    Type: string

    Default: "flow-exporter"

    Declared by:

    [14059]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14060]services.prometheus.exporters.fritzbox.enable

    Whether to enable the prometheus fritzbox exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14061]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14062]services.prometheus.exporters.fritzbox.extraFlags

    Extra commandline options to pass to the fritzbox exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14063]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14064]services.prometheus.exporters.fritzbox.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.fritzbox.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9133"

    Declared by:

    [14065]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14066]services.prometheus.exporters.fritzbox.gatewayAddress

    The hostname or IP of the FRITZ!Box.

    Type: string

    Default: "fritz.box"

    Declared by:

    [14067]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14068]services.prometheus.exporters.fritzbox.gatewayPort

    The port of the FRITZ!Box UPnP service.

    Type: signed integer

    Default: 49000

    Declared by:

    [14069]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14070]services.prometheus.exporters.fritzbox.group

    Group under which the fritzbox exporter shall be run.

    Type: string

    Default: "fritzbox-exporter"

    Declared by:

    [14071]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14072]services.prometheus.exporters.fritzbox.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14073]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14074]services.prometheus.exporters.fritzbox.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14075]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14076]services.prometheus.exporters.fritzbox.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9133

    Declared by:

    [14077]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14078]services.prometheus.exporters.fritzbox.user

    User name under which the fritzbox exporter shall be run.

    Type: string

    Default: "fritzbox-exporter"

    Declared by:

    [14079]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14080]services.prometheus.exporters.jitsi.enable

    Whether to enable the prometheus jitsi exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14081]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14082]services.prometheus.exporters.jitsi.extraFlags

    Extra commandline options to pass to the jitsi exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14083]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14084]services.prometheus.exporters.jitsi.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.jitsi.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9700"

    Declared by:

    [14085]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14086]services.prometheus.exporters.jitsi.group

    Group under which the jitsi exporter shall be run.

    Type: string

    Default: "jitsi-exporter"

    Declared by:

    [14087]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14088]services.prometheus.exporters.jitsi.interval

    How often to scrape new data

    Type: string

    Default: "30s"

    Example: "1min"

    Declared by:

    [14089]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14090]services.prometheus.exporters.jitsi.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14091]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14092]services.prometheus.exporters.jitsi.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14093]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14094]services.prometheus.exporters.jitsi.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9700

    Declared by:

    [14095]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14096]services.prometheus.exporters.jitsi.url

    Jitsi Videobridge metrics URL to monitor. This is usually /colibri/stats on port 8080 of the
    jitsi videobridge host.

    Type: string

    Default: "http://localhost:8080/colibri/stats"

    Declared by:

    [14097]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14098]services.prometheus.exporters.jitsi.user

    User name under which the jitsi exporter shall be run.

    Type: string

    Default: "jitsi-exporter"

    Declared by:

    [14099]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14100]services.prometheus.exporters.json.enable

    Whether to enable the prometheus json exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14101]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14102]services.prometheus.exporters.json.configFile

    Path to configuration file.

    Type: path

    Declared by:

    [14103]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14104]services.prometheus.exporters.json.extraFlags

    Extra commandline options to pass to the json exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14105]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14106]services.prometheus.exporters.json.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.json.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 7979"

    Declared by:

    [14107]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14108]services.prometheus.exporters.json.group

    Group under which the json exporter shall be run.

    Type: string

    Default: "json-exporter"

    Declared by:

    [14109]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14110]services.prometheus.exporters.json.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14111]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14112]services.prometheus.exporters.json.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14113]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14114]services.prometheus.exporters.json.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 7979

    Declared by:

    [14115]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14116]services.prometheus.exporters.json.user

    User name under which the json exporter shall be run.

    Type: string

    Default: "json-exporter"

    Declared by:

    [14117]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14118]services.prometheus.exporters.kea.enable

    Whether to enable the prometheus kea exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14119]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14120]services.prometheus.exporters.kea.controlSocketPaths

    Paths to kea control sockets

    Type: list of strings

    Example:

    [
      "/run/kea/kea-dhcp4.socket"
      "/run/kea/kea-dhcp6.socket"
    ]

    Declared by:

    [14121]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14122]services.prometheus.exporters.kea.extraFlags

    Extra commandline options to pass to the kea exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14123]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14124]services.prometheus.exporters.kea.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.kea.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9547"

    Declared by:

    [14125]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14126]services.prometheus.exporters.kea.group

    Group under which the kea exporter shall be run.

    Type: string

    Default: "kea-exporter"

    Declared by:

    [14127]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14128]services.prometheus.exporters.kea.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14129]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14130]services.prometheus.exporters.kea.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14131]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14132]services.prometheus.exporters.kea.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9547

    Declared by:

    [14133]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14134]services.prometheus.exporters.kea.user

    User name under which the kea exporter shall be run.

    Type: string

    Default: "kea-exporter"

    Declared by:

    [14135]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14136]services.prometheus.exporters.keylight.enable

    Whether to enable the prometheus keylight exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14137]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14138]services.prometheus.exporters.keylight.extraFlags

    Extra commandline options to pass to the keylight exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14139]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14140]services.prometheus.exporters.keylight.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.keylight.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9288"

    Declared by:

    [14141]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14142]services.prometheus.exporters.keylight.group

    Group under which the keylight exporter shall be run.

    Type: string

    Default: "keylight-exporter"

    Declared by:

    [14143]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14144]services.prometheus.exporters.keylight.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14145]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14146]services.prometheus.exporters.keylight.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14147]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14148]services.prometheus.exporters.keylight.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9288

    Declared by:

    [14149]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14150]services.prometheus.exporters.keylight.user

    User name under which the keylight exporter shall be run.

    Type: string

    Default: "keylight-exporter"

    Declared by:

    [14151]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14152]services.prometheus.exporters.knot.enable

    Whether to enable the prometheus knot exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14153]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14154]services.prometheus.exporters.knot.extraFlags

    Extra commandline options to pass to the knot exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14155]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14156]services.prometheus.exporters.knot.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.knot.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9433"

    Declared by:

    [14157]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14158]services.prometheus.exporters.knot.group

    Group under which the knot exporter shall be run.

    Type: string

    Default: "knot-exporter"

    Declared by:

    [14159]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14160]services.prometheus.exporters.knot.knotLibraryPath

    Path to the library of knot-dns.

    Type: string

    Default: "\${pkgs.knot-dns}/lib/libknot.so"

    Declared by:

    [14161]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14162]services.prometheus.exporters.knot.knotSocketPath

    Socket path of knotd(8).

    Type: string

    Default: "/run/knot/knot.sock"

    Declared by:

    [14163]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14164]services.prometheus.exporters.knot.knotSocketTimeout

    Timeout in seconds.

    Type: signed integer

    Default: 2000

    Declared by:

    [14165]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14166]services.prometheus.exporters.knot.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14167]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14168]services.prometheus.exporters.knot.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14169]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14170]services.prometheus.exporters.knot.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9433

    Declared by:

    [14171]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14172]services.prometheus.exporters.knot.user

    User name under which the knot exporter shall be run.

    Type: string

    Default: "knot-exporter"

    Declared by:

    [14173]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14174]services.prometheus.exporters.lnd.enable

    Whether to enable the prometheus lnd exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14175]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14176]services.prometheus.exporters.lnd.extraFlags

    Extra commandline options to pass to the lnd exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14177]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14178]services.prometheus.exporters.lnd.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.lnd.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9092"

    Declared by:

    [14179]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14180]services.prometheus.exporters.lnd.group

    Group under which the lnd exporter shall be run.

    Type: string

    Default: "lnd-exporter"

    Declared by:

    [14181]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14182]services.prometheus.exporters.lnd.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14183]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14184]services.prometheus.exporters.lnd.lndHost

    lnd instance gRPC address:port.

    Type: string

    Default: "localhost:10009"

    Declared by:

    [14185]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14186]services.prometheus.exporters.lnd.lndMacaroonDir

    Path to lnd macaroons.

    Type: path

    Declared by:

    [14187]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14188]services.prometheus.exporters.lnd.lndTlsPath

    Path to lnd TLS certificate.

    Type: path

    Declared by:

    [14189]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14190]services.prometheus.exporters.lnd.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14191]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14192]services.prometheus.exporters.lnd.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9092

    Declared by:

    [14193]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14194]services.prometheus.exporters.lnd.user

    User name under which the lnd exporter shall be run.

    Type: string

    Default: "lnd-exporter"

    Declared by:

    [14195]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14196]services.prometheus.exporters.mail.enable

    Whether to enable the prometheus mail exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14197]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14198]services.prometheus.exporters.mail.configFile

    Specify the mailexporter configuration file to use.

    Type: null or path

    Default: null

    Declared by:

    [14199]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14200]services.prometheus.exporters.mail.configuration

    Specify the mailexporter configuration file to use.

    Type: null or submodule

    Default: null

    Declared by:

    [14201]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14202]services.prometheus.exporters.mail.configuration.disableFileDeletion

    Disables the exporter's function to delete probing mails.

    Type: boolean

    Default: false

    Declared by:

    [14203]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14204]services.prometheus.exporters.mail.configuration.mailCheckTimeout

    Timeout until mails are considered "didn't make it".

    Type: string

    Declared by:

    [14205]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14206]services.prometheus.exporters.mail.configuration.monitoringInterval

    Time interval between two probe attempts.

    Type: string

    Example: "10s"

    Declared by:

    [14207]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14208]services.prometheus.exporters.mail.configuration.servers

    List of servers that should be probed.

    Note: if your mailserver has rspamd(8) configured, it can happen that emails from this
    exporter are marked as spam.

    It's possible to work around the issue with a config like this:

    {
      [14209]services.rspamd.locals."multimap.conf".text = ''
        ALLOWLIST_PROMETHEUS {
          filter = "email:domain:tld";
          type = "from";
          map = "${pkgs.writeText "allowmap" "domain.tld"}";
          score = -100.0;
        }
      '';
    }

    Type: list of submodules

    Default: [ ]

    Example:

    [ {
      name = "testserver";
      server = "smtp.domain.tld";
      port = 587;
      from = "exporteruser@domain.tld";
      to = "exporteruser@domain.tld";
      detectionDir = "/path/to/Maildir/new";
    } ]

    Declared by:

    [14210]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14211]services.prometheus.exporters.mail.configuration.servers.*.detectionDir

    Directory in which new mails for the exporter user are placed. Note that this needs to exist
    when the exporter starts.

    Type: path

    Example: "/var/spool/mail/exporteruser/new"

    Declared by:

    [14212]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14213]services.prometheus.exporters.mail.configuration.servers.*.from

    Content of 'From' Header for probing mails.

    Type: string

    Example: "exporteruser@domain.tld"

    Declared by:

    [14214]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14215]services.prometheus.exporters.mail.configuration.servers.*.login

    Username to use for SMTP authentication.

    Type: null or string

    Default: null

    Example: "exporteruser@domain.tld"

    Declared by:

    [14216]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14217]services.prometheus.exporters.mail.configuration.servers.*.name

    Value for label 'configname' which will be added to all metrics.

    Type: string

    Declared by:

    [14218]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14219]services.prometheus.exporters.mail.configuration.servers.*.passphrase

    Password to use for SMTP authentication.

    Type: null or string

    Default: null

    Declared by:

    [14220]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14221]services.prometheus.exporters.mail.configuration.servers.*.port

    Port to use for SMTP.

    Type: signed integer

    Example: 587

    Declared by:

    [14222]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14223]services.prometheus.exporters.mail.configuration.servers.*.server

    Hostname of the server that should be probed.

    Type: string

    Declared by:

    [14224]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14225]services.prometheus.exporters.mail.configuration.servers.*.to

    Content of 'To' Header for probing mails.

    Type: string

    Example: "exporteruser@domain.tld"

    Declared by:

    [14226]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14227]services.prometheus.exporters.mail.extraFlags

    Extra commandline options to pass to the mail exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14228]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14229]services.prometheus.exporters.mail.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.mail.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9225"

    Declared by:

    [14230]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14231]services.prometheus.exporters.mail.group

    Group under which the mail exporter shall be run.

    Type: string

    Default: "mail-exporter"

    Declared by:

    [14232]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14233]services.prometheus.exporters.mail.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14234]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14235]services.prometheus.exporters.mail.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14236]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14237]services.prometheus.exporters.mail.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9225

    Declared by:

    [14238]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14239]services.prometheus.exporters.mail.telemetryPath

    Path under which to expose metrics.

    Type: string

    Default: "/metrics"

    Declared by:

    [14240]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14241]services.prometheus.exporters.mail.user

    User name under which the mail exporter shall be run.

    Type: string

    Default: "mail-exporter"

    Declared by:

    [14242]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14243]services.prometheus.exporters.mikrotik.enable

    Whether to enable the prometheus mikrotik exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14244]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14245]services.prometheus.exporters.mikrotik.configFile

    Path to a mikrotik exporter configuration file. Mutually exclusive with configuration option.

    Type: null or path

    Default: null

    Example:

    ./mikrotik.yml

    Declared by:

    [14246]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14247]services.prometheus.exporters.mikrotik.configuration

    Mikrotik exporter configuration as nix attribute set. Mutually exclusive with configFile
    option.

    See [14248]https://github.com/nshttpd/mikrotik-exporter/blob/master/README.md for the
    description of the configuration file format.

    Type: null or attribute set

    Default: null

    Example:

    {
      devices = [
        {
          name = "my_router";
          address = "10.10.0.1";
          user = "prometheus";
          password = "changeme";
        }
      ];
      features = {
        bgp = true;
        dhcp = true;
        routes = true;
        optics = true;
      };
    }

    Declared by:

    [14249]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14250]services.prometheus.exporters.mikrotik.extraFlags

    Extra commandline options to pass to the mikrotik exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14251]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14252]services.prometheus.exporters.mikrotik.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.mikrotik.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9436"

    Declared by:

    [14253]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14254]services.prometheus.exporters.mikrotik.group

    Group under which the mikrotik exporter shall be run.

    Type: string

    Default: "mikrotik-exporter"

    Declared by:

    [14255]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14256]services.prometheus.exporters.mikrotik.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14257]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14258]services.prometheus.exporters.mikrotik.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14259]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14260]services.prometheus.exporters.mikrotik.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9436

    Declared by:

    [14261]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14262]services.prometheus.exporters.mikrotik.user

    User name under which the mikrotik exporter shall be run.

    Type: string

    Default: "mikrotik-exporter"

    Declared by:

    [14263]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14264]services.prometheus.exporters.minio.enable

    Whether to enable the prometheus minio exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14265]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14266]services.prometheus.exporters.minio.extraFlags

    Extra commandline options to pass to the minio exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14267]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14268]services.prometheus.exporters.minio.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.minio.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9290"

    Declared by:

    [14269]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14270]services.prometheus.exporters.minio.group

    Group under which the minio exporter shall be run.

    Type: string

    Default: "minio-exporter"

    Declared by:

    [14271]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14272]services.prometheus.exporters.minio.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14273]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14274]services.prometheus.exporters.minio.minioAccessKey

    The value of the Minio access key. It is required in order to connect to the server. By
    default this uses the one from the local minio server if enabled and
    config.services.minio.accessKey.

    Type: string

    Example: "yourMinioAccessKey"

    Declared by:

    [14275]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14276]services.prometheus.exporters.minio.minioAccessSecret

    The value of the Minio access secret. It is required in order to connect to the server. By
    default this uses the one from the local minio server if enabled and
    config.services.minio.secretKey.

    Type: string

    Declared by:

    [14277]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14278]services.prometheus.exporters.minio.minioAddress

    The URL of the minio server. Use HTTPS if Minio accepts secure connections only. By default
    this connects to the local minio server if enabled.

    Type: string

    Example: "https://10.0.0.1:9000"

    Declared by:

    [14279]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14280]services.prometheus.exporters.minio.minioBucketStats

    Collect statistics about the buckets and files in buckets. It requires more computation, use
    it carefully in case of large buckets..

    Type: boolean

    Default: false

    Declared by:

    [14281]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14282]services.prometheus.exporters.minio.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14283]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14284]services.prometheus.exporters.minio.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9290

    Declared by:

    [14285]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14286]services.prometheus.exporters.minio.user

    User name under which the minio exporter shall be run.

    Type: string

    Default: "minio-exporter"

    Declared by:

    [14287]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14288]services.prometheus.exporters.modemmanager.enable

    Whether to enable the prometheus modemmanager exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14289]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14290]services.prometheus.exporters.modemmanager.extraFlags

    Extra commandline options to pass to the modemmanager exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14291]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14292]services.prometheus.exporters.modemmanager.firewallFilter

    Specify a filter for iptables to use when
    services.prometheus.exporters.modemmanager.openFirewall is true. It is used as `ip46tables -I
    nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9539"

    Declared by:

    [14293]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14294]services.prometheus.exporters.modemmanager.group

    Group under which the modemmanager exporter shall be run.

    Type: string

    Default: "modemmanager-exporter"

    Declared by:

    [14295]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14296]services.prometheus.exporters.modemmanager.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14297]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14298]services.prometheus.exporters.modemmanager.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14299]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14300]services.prometheus.exporters.modemmanager.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9539

    Declared by:

    [14301]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14302]services.prometheus.exporters.modemmanager.refreshRate

    How frequently ModemManager will refresh the extended signal quality information for each
    modem. The duration should be specified in seconds ("5s"), minutes ("1m"), or hours ("1h").

    Type: string

    Default: "5s"

    Declared by:

    [14303]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14304]services.prometheus.exporters.modemmanager.user

    User name under which the modemmanager exporter shall be run.

    Type: string

    Default: "modemmanager-exporter"

    Declared by:

    [14305]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14306]services.prometheus.exporters.nextcloud.enable

    Whether to enable the prometheus nextcloud exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14307]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14308]services.prometheus.exporters.nextcloud.extraFlags

    Extra commandline options to pass to the nextcloud exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14309]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14310]services.prometheus.exporters.nextcloud.firewallFilter

    Specify a filter for iptables to use when
    services.prometheus.exporters.nextcloud.openFirewall is true. It is used as `ip46tables -I
    nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9205"

    Declared by:

    [14311]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14312]services.prometheus.exporters.nextcloud.group

    Group under which the nextcloud exporter shall be run.

    Type: string

    Default: "nextcloud-exporter"

    Declared by:

    [14313]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14314]services.prometheus.exporters.nextcloud.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14315]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14316]services.prometheus.exporters.nextcloud.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14317]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14318]services.prometheus.exporters.nextcloud.passwordFile

    File containing the password for connecting to Nextcloud. Make sure that this file is
    readable by the exporter user.

    Type: path

    Example: "/path/to/password-file"

    Declared by:

    [14319]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14320]services.prometheus.exporters.nextcloud.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9205

    Declared by:

    [14321]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14322]services.prometheus.exporters.nextcloud.timeout

    Timeout for getting server info document.

    Type: string

    Default: "5s"

    Declared by:

    [14323]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14324]services.prometheus.exporters.nextcloud.url

    URL to the Nextcloud serverinfo page. Adding the path to the serverinfo API is optional, it
    defaults to /ocs/v2.php/apps/serverinfo/api/v1/info.

    Type: string

    Example: "https://domain.tld"

    Declared by:

    [14325]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14326]services.prometheus.exporters.nextcloud.user

    User name under which the nextcloud exporter shall be run.

    Type: string

    Default: "nextcloud-exporter"

    Declared by:

    [14327]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14328]services.prometheus.exporters.nextcloud.username

    Username for connecting to Nextcloud. Note that this account needs to have admin privileges
    in Nextcloud.

    Type: string

    Default: "nextcloud-exporter"

    Declared by:

    [14329]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14330]services.prometheus.exporters.nginx.enable

    Whether to enable the prometheus nginx exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14331]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14332]services.prometheus.exporters.nginx.constLabels

    A list of constant labels that will be used in every metric.

    Type: list of strings

    Default: [ ]

    Example: [ "label1=value1" "label2=value2" ]

    Declared by:

    [14333]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14334]services.prometheus.exporters.nginx.extraFlags

    Extra commandline options to pass to the nginx exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14335]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14336]services.prometheus.exporters.nginx.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.nginx.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9113"

    Declared by:

    [14337]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14338]services.prometheus.exporters.nginx.group

    Group under which the nginx exporter shall be run.

    Type: string

    Default: "nginx-exporter"

    Declared by:

    [14339]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14340]services.prometheus.exporters.nginx.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14341]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14342]services.prometheus.exporters.nginx.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14343]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14344]services.prometheus.exporters.nginx.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9113

    Declared by:

    [14345]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14346]services.prometheus.exporters.nginx.scrapeUri

    Address to access the nginx status page. Can be enabled with services.nginx.statusPage =
    true.

    Type: string

    Default: "http://localhost/nginx_status"

    Declared by:

    [14347]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14348]services.prometheus.exporters.nginx.sslVerify

    Whether to perform certificate verification for https.

    Type: boolean

    Default: true

    Declared by:

    [14349]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14350]services.prometheus.exporters.nginx.telemetryPath

    Path under which to expose metrics.

    Type: string

    Default: "/metrics"

    Declared by:

    [14351]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14352]services.prometheus.exporters.nginx.user

    User name under which the nginx exporter shall be run.

    Type: string

    Default: "nginx-exporter"

    Declared by:

    [14353]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14354]services.prometheus.exporters.nginxlog.enable

    Whether to enable the prometheus nginxlog exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14355]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14356]services.prometheus.exporters.nginxlog.extraFlags

    Extra commandline options to pass to the nginxlog exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14357]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14358]services.prometheus.exporters.nginxlog.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.nginxlog.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9117"

    Declared by:

    [14359]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14360]services.prometheus.exporters.nginxlog.group

    Group under which the nginxlog exporter shall be run.

    Type: string

    Default: "nginxlog-exporter"

    Declared by:

    [14361]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14362]services.prometheus.exporters.nginxlog.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14363]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14364]services.prometheus.exporters.nginxlog.metricsEndpoint

    Path under which to expose metrics.

    Type: string

    Default: "/metrics"

    Declared by:

    [14365]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14366]services.prometheus.exporters.nginxlog.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14367]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14368]services.prometheus.exporters.nginxlog.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9117

    Declared by:

    [14369]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14370]services.prometheus.exporters.nginxlog.settings

    All settings of nginxlog expressed as an Nix attrset.

    Check the official documentation for the corresponding YAML settings that can all be used
    here: https://github.com/martin-helmich/prometheus-nginxlog-exporter

    The `listen` object is already generated by `port`, `listenAddress` and `metricsEndpoint` and
    will be merged with the value of `settings` before writting it as JSON.

    Type: attribute set

    Default: { }

    Declared by:

    [14371]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14372]services.prometheus.exporters.nginxlog.user

    User name under which the nginxlog exporter shall be run.

    Type: string

    Default: "nginxlog-exporter"

    Declared by:

    [14373]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14374]services.prometheus.exporters.node.enable

    Whether to enable the prometheus node exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14375]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14376]services.prometheus.exporters.node.enabledCollectors

    Collectors to enable. The collectors listed here are enabled in addition to the default ones.

    Type: list of strings

    Default: [ ]

    Example: ''[ "systemd" ]''

    Declared by:

    [14377]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14378]services.prometheus.exporters.node.disabledCollectors

    Collectors to disable which are enabled by default.

    Type: list of strings

    Default: [ ]

    Example: ''[ "timex" ]''

    Declared by:

    [14379]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14380]services.prometheus.exporters.node.extraFlags

    Extra commandline options to pass to the node exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14381]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14382]services.prometheus.exporters.node.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.node.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9100"

    Declared by:

    [14383]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14384]services.prometheus.exporters.node.group

    Group under which the node exporter shall be run.

    Type: string

    Default: "node-exporter"

    Declared by:

    [14385]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14386]services.prometheus.exporters.node.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14387]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14388]services.prometheus.exporters.node.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14389]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14390]services.prometheus.exporters.node.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9100

    Declared by:

    [14391]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14392]services.prometheus.exporters.node.user

    User name under which the node exporter shall be run.

    Type: string

    Default: "node-exporter"

    Declared by:

    [14393]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14394]services.prometheus.exporters.openldap.enable

    Whether to enable the prometheus openldap exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14395]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14396]services.prometheus.exporters.openldap.extraFlags

    Extra commandline options to pass to the openldap exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14397]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14398]services.prometheus.exporters.openldap.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.openldap.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9330"

    Declared by:

    [14399]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14400]services.prometheus.exporters.openldap.group

    Group under which the openldap exporter shall be run.

    Type: string

    Default: "openldap-exporter"

    Declared by:

    [14401]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14402]services.prometheus.exporters.openldap.interval

    Scrape interval of the exporter.

    Type: string

    Default: "30s"

    Example: "1m"

    Declared by:

    [14403]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14404]services.prometheus.exporters.openldap.ldapAddr

    Address of the openldap-instance.

    Type: string

    Default: "localhost:389"

    Declared by:

    [14405]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14406]services.prometheus.exporters.openldap.ldapCredentialFile

    Environment file to contain the credentials to authenticate against openldap.

    The file should look like this:

    ---
    ldapUser: "cn=monitoring,cn=Monitor"
    ldapPass: "secret"

    Type: path

    Example: "/run/keys/ldap_pass"

    Declared by:

    [14407]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14408]services.prometheus.exporters.openldap.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14409]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14410]services.prometheus.exporters.openldap.metricsPath

    URL path where metrics should be exposed.

    Type: string

    Default: "/metrics"

    Declared by:

    [14411]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14412]services.prometheus.exporters.openldap.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14413]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14414]services.prometheus.exporters.openldap.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9330

    Declared by:

    [14415]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14416]services.prometheus.exporters.openldap.protocol

    Which protocol to use to connect against openldap.

    Type: string

    Default: "tcp"

    Example: "udp"

    Declared by:

    [14417]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14418]services.prometheus.exporters.openldap.user

    User name under which the openldap exporter shall be run.

    Type: string

    Default: "openldap-exporter"

    Declared by:

    [14419]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14420]services.prometheus.exporters.openvpn.enable

    Whether to enable the prometheus openvpn exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14421]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14422]services.prometheus.exporters.openvpn.extraFlags

    Extra commandline options to pass to the openvpn exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14423]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14424]services.prometheus.exporters.openvpn.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.openvpn.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9176"

    Declared by:

    [14425]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14426]services.prometheus.exporters.openvpn.group

    Group under which the openvpn exporter shall be run.

    Type: string

    Default: "openvpn-exporter"

    Declared by:

    [14427]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14428]services.prometheus.exporters.openvpn.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14429]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14430]services.prometheus.exporters.openvpn.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14431]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14432]services.prometheus.exporters.openvpn.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9176

    Declared by:

    [14433]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14434]services.prometheus.exporters.openvpn.statusPaths

    Paths to OpenVPN status files. Please configure the OpenVPN option status accordingly.

    Type: list of strings

    Declared by:

    [14435]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14436]services.prometheus.exporters.openvpn.telemetryPath

    Path under which to expose metrics.

    Type: string

    Default: "/metrics"

    Declared by:

    [14437]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14438]services.prometheus.exporters.openvpn.user

    User name under which the openvpn exporter shall be run.

    Type: string

    Default: "openvpn-exporter"

    Declared by:

    [14439]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14440]services.prometheus.exporters.postfix.enable

    Whether to enable the prometheus postfix exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14441]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14442]services.prometheus.exporters.postfix.extraFlags

    Extra commandline options to pass to the postfix exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14443]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14444]services.prometheus.exporters.postfix.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.postfix.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9154"

    Declared by:

    [14445]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14446]services.prometheus.exporters.postfix.group

    Group under which the postfix exporter shall be run. It should match the group that is
    allowed to access the showq socket in the queue/public/ directory. Defaults to
    services.postfix.setgidGroup when postfix is enabled.

    Type: string

    Declared by:

    [14447]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14448]services.prometheus.exporters.postfix.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14449]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14450]services.prometheus.exporters.postfix.logfilePath

    Path where Postfix writes log entries. This file will be truncated by this exporter!

    Type: path

    Default: "/var/log/postfix_exporter_input.log"

    Example: "/var/log/mail.log"

    Declared by:

    [14451]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14452]services.prometheus.exporters.postfix.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14453]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14454]services.prometheus.exporters.postfix.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9154

    Declared by:

    [14455]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14456]services.prometheus.exporters.postfix.showqPath

    Path where Postfix places its showq socket.

    Type: path

    Default: "/var/lib/postfix/queue/public/showq"

    Example: "/var/spool/postfix/public/showq"

    Declared by:

    [14457]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14458]services.prometheus.exporters.postfix.systemd.enable

    Whether to enable reading metrics from the systemd journal instead of from a logfile

    Type: boolean

    Default: true

    Declared by:

    [14459]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14460]services.prometheus.exporters.postfix.systemd.journalPath

    Path to the systemd journal.

    Type: null or path

    Default: null

    Declared by:

    [14461]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14462]services.prometheus.exporters.postfix.systemd.slice

    Name of the postfix systemd slice. This overrides the systemd.unit.

    Type: null or string

    Default: null

    Declared by:

    [14463]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14464]services.prometheus.exporters.postfix.systemd.unit

    Name of the postfix systemd unit.

    Type: string

    Default: "postfix.service"

    Declared by:

    [14465]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14466]services.prometheus.exporters.postfix.telemetryPath

    Path under which to expose metrics.

    Type: string

    Default: "/metrics"

    Declared by:

    [14467]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14468]services.prometheus.exporters.postfix.user

    User name under which the postfix exporter shall be run.

    Type: string

    Default: "postfix-exporter"

    Declared by:

    [14469]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14470]services.prometheus.exporters.postgres.enable

    Whether to enable the prometheus postgres exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14471]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14472]services.prometheus.exporters.postgres.dataSourceName

    Accepts PostgreSQL URI form and key=value form arguments.

    Type: string

    Default: "user=postgres database=postgres host=/run/postgresql sslmode=disable"

    Example: "postgresql://username:password@localhost:5432/postgres?sslmode=disable"

    Declared by:

    [14473]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14474]services.prometheus.exporters.postgres.environmentFile

    Environment file as defined in systemd.exec(5).

    Secrets may be passed to the service without adding them to the world-readable Nix store, by
    specifying placeholder variables as the option value in Nix and setting these variables
    accordingly in the environment file.

    Environment variables from this file will be interpolated into the config file using envsubst
    with this syntax: $ENVIRONMENT ${VARIABLE}

    The main use is to set the DATA_SOURCE_NAME that contains the postgres password

    note that contents from this file will override dataSourceName if you have set it from nix.

      # Content of the environment file
      DATA_SOURCE_NAME=postgresql://username:password@localhost:5432/postgres?sslmode=disable

    Note that this file needs to be available on the host on which this exporter is running.

    Type: null or path

    Default: null

    Example: "/root/prometheus-postgres-exporter.env"

    Declared by:

    [14475]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14476]services.prometheus.exporters.postgres.extraFlags

    Extra commandline options to pass to the postgres exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14477]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14478]services.prometheus.exporters.postgres.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.postgres.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9187"

    Declared by:

    [14479]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14480]services.prometheus.exporters.postgres.group

    Group under which the postgres exporter shall be run.

    Type: string

    Default: "postgres-exporter"

    Declared by:

    [14481]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14482]services.prometheus.exporters.postgres.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14483]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14484]services.prometheus.exporters.postgres.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14485]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14486]services.prometheus.exporters.postgres.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9187

    Declared by:

    [14487]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14488]services.prometheus.exporters.postgres.runAsLocalSuperUser

    Whether to run the exporter as the local 'postgres' super user.

    Type: boolean

    Default: false

    Declared by:

    [14489]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14490]services.prometheus.exporters.postgres.telemetryPath

    Path under which to expose metrics.

    Type: string

    Default: "/metrics"

    Declared by:

    [14491]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14492]services.prometheus.exporters.postgres.user

    User name under which the postgres exporter shall be run.

    Type: string

    Default: "postgres-exporter"

    Declared by:

    [14493]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14494]services.prometheus.exporters.py-air-control.enable

    Whether to enable the prometheus py-air-control exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14495]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14496]services.prometheus.exporters.py-air-control.deviceHostname

    The hostname of the air purification device from which to scrape the metrics.

    Type: string

    Example: "192.168.1.123"

    Declared by:

    [14497]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14498]services.prometheus.exporters.py-air-control.extraFlags

    Extra commandline options to pass to the py-air-control exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14499]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14500]services.prometheus.exporters.py-air-control.firewallFilter

    Specify a filter for iptables to use when
    services.prometheus.exporters.py-air-control.openFirewall is true. It is used as `ip46tables
    -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9896"

    Declared by:

    [14501]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14502]services.prometheus.exporters.py-air-control.group

    Group under which the py-air-control exporter shall be run.

    Type: string

    Default: "py-air-control-exporter"

    Declared by:

    [14503]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14504]services.prometheus.exporters.py-air-control.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14505]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14506]services.prometheus.exporters.py-air-control.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14507]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14508]services.prometheus.exporters.py-air-control.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9896

    Declared by:

    [14509]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14510]services.prometheus.exporters.py-air-control.protocol

    The protocol to use when communicating with the air purification device. Available: [http,
    coap, plain_coap]

    Type: string

    Default: "http"

    Declared by:

    [14511]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14512]services.prometheus.exporters.py-air-control.stateDir

    Directory below /var/lib to store runtime data. This directory will be created automatically
    using systemd's StateDirectory mechanism.

    Type: string

    Default: "prometheus-py-air-control-exporter"

    Declared by:

    [14513]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14514]services.prometheus.exporters.py-air-control.user

    User name under which the py-air-control exporter shall be run.

    Type: string

    Default: "py-air-control-exporter"

    Declared by:

    [14515]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14516]services.prometheus.exporters.redis.enable

    Whether to enable the prometheus redis exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14517]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14518]services.prometheus.exporters.redis.extraFlags

    Extra commandline options to pass to the redis exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14519]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14520]services.prometheus.exporters.redis.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.redis.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9121"

    Declared by:

    [14521]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14522]services.prometheus.exporters.redis.group

    Group under which the redis exporter shall be run.

    Type: string

    Default: "redis-exporter"

    Declared by:

    [14523]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14524]services.prometheus.exporters.redis.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14525]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14526]services.prometheus.exporters.redis.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14527]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14528]services.prometheus.exporters.redis.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9121

    Declared by:

    [14529]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14530]services.prometheus.exporters.redis.user

    User name under which the redis exporter shall be run.

    Type: string

    Default: "redis-exporter"

    Declared by:

    [14531]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14532]services.prometheus.exporters.rspamd.enable

    Whether to enable the prometheus rspamd exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14533]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14534]services.prometheus.exporters.rspamd.extraFlags

    Extra commandline options to pass to the rspamd exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14535]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14536]services.prometheus.exporters.rspamd.extraLabels

    Set of labels added to each metric.

    Type: attribute set of strings

    Default: "{ host = config.networking.hostName; }"

    Example:

    {
      host = config.networking.hostName;
      custom_label = "some_value";
    }

    Declared by:

    [14537]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14538]services.prometheus.exporters.rspamd.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.rspamd.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 7980"

    Declared by:

    [14539]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14540]services.prometheus.exporters.rspamd.group

    Group under which the rspamd exporter shall be run.

    Type: string

    Default: "rspamd-exporter"

    Declared by:

    [14541]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14542]services.prometheus.exporters.rspamd.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14543]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14544]services.prometheus.exporters.rspamd.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14545]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14546]services.prometheus.exporters.rspamd.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 7980

    Declared by:

    [14547]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14548]services.prometheus.exporters.rspamd.user

    User name under which the rspamd exporter shall be run.

    Type: string

    Default: "rspamd-exporter"

    Declared by:

    [14549]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14550]services.prometheus.exporters.rtl_433.enable

    Whether to enable the prometheus rtl_433 exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14551]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14552]services.prometheus.exporters.rtl_433.channels

    List of channel matchers to export.

    Type: list of submodules

    Default: [ ]

    Example: [ { channel = 6543; location = "Kitchen"; name = "Acurite"; } ]

    Declared by:

    [14553]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14554]services.prometheus.exporters.rtl_433.channels.*.channel

    Channel to match.

    Type: signed integer

    Declared by:

    [14555]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14556]services.prometheus.exporters.rtl_433.channels.*.location

    Location to match.

    Type: string

    Declared by:

    [14557]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14558]services.prometheus.exporters.rtl_433.channels.*.name

    Name to match.

    Type: string

    Declared by:

    [14559]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14560]services.prometheus.exporters.rtl_433.extraFlags

    Extra commandline options to pass to the rtl_433 exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14561]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14562]services.prometheus.exporters.rtl_433.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.rtl_433.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9550"

    Declared by:

    [14563]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14564]services.prometheus.exporters.rtl_433.group

    Group under which the rtl_433 exporter shall be run.

    Type: string

    Default: "rtl_433-exporter"

    Declared by:

    [14565]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14566]services.prometheus.exporters.rtl_433.ids

    List of ID matchers to export.

    Type: list of submodules

    Default: [ ]

    Example: [ { id = 1; location = "Bedroom"; name = "Nexus"; } ]

    Declared by:

    [14567]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14568]services.prometheus.exporters.rtl_433.ids.*.id

    ID to match.

    Type: signed integer

    Declared by:

    [14569]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14570]services.prometheus.exporters.rtl_433.ids.*.location

    Location to match.

    Type: string

    Declared by:

    [14571]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14572]services.prometheus.exporters.rtl_433.ids.*.name

    Name to match.

    Type: string

    Declared by:

    [14573]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14574]services.prometheus.exporters.rtl_433.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14575]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14576]services.prometheus.exporters.rtl_433.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14577]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14578]services.prometheus.exporters.rtl_433.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9550

    Declared by:

    [14579]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14580]services.prometheus.exporters.rtl_433.rtl433Flags

    Flags passed verbatim to rtl_433 binary. Having -C si (the default) is recommended since only
    Celsius temperatures are parsed.

    Type: string

    Default: "-C si"

    Example: "-C si -R 19"

    Declared by:

    [14581]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14582]services.prometheus.exporters.rtl_433.user

    User name under which the rtl_433 exporter shall be run.

    Type: string

    Default: "rtl_433-exporter"

    Declared by:

    [14583]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14584]services.prometheus.exporters.smokeping.enable

    Whether to enable the prometheus smokeping exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14585]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14586]services.prometheus.exporters.smokeping.buckets

    List of buckets to use for the response duration histogram.

    Type: strings concatenated with ","

    Default:
    "5e-05,0.0001,0.0002,0.0004,0.0008,0.0016,0.0032,0.0064,0.0128,0.0256,0.0512,0.1024,0.2048,0.4096,0.8192,1.6384,3.2768,6.5536,13.1072,26.2144"

    Declared by:

    [14587]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14588]services.prometheus.exporters.smokeping.extraFlags

    Extra commandline options to pass to the smokeping exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14589]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14590]services.prometheus.exporters.smokeping.firewallFilter

    Specify a filter for iptables to use when
    services.prometheus.exporters.smokeping.openFirewall is true. It is used as `ip46tables -I
    nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9374"

    Declared by:

    [14591]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14592]services.prometheus.exporters.smokeping.group

    Group under which the smokeping exporter shall be run.

    Type: string

    Default: "smokeping-exporter"

    Declared by:

    [14593]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14594]services.prometheus.exporters.smokeping.hosts

    List of endpoints to probe.

    Type: list of strings

    Declared by:

    [14595]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14596]services.prometheus.exporters.smokeping.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14597]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14598]services.prometheus.exporters.smokeping.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14599]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14600]services.prometheus.exporters.smokeping.pingInterval

    Interval between pings.

    Type: Go duration (https://golang.org/pkg/time/#ParseDuration)

    Default: "1s"

    Declared by:

    [14601]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14602]services.prometheus.exporters.smokeping.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9374

    Declared by:

    [14603]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14604]services.prometheus.exporters.smokeping.telemetryPath

    Path under which to expose metrics.

    Type: string

    Default: "/metrics"

    Declared by:

    [14605]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14606]services.prometheus.exporters.smokeping.user

    User name under which the smokeping exporter shall be run.

    Type: string

    Default: "smokeping-exporter"

    Declared by:

    [14607]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14608]services.prometheus.exporters.snmp.enable

    Whether to enable the prometheus snmp exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14609]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14610]services.prometheus.exporters.snmp.configuration

    Snmp exporter configuration as nix attribute set. Mutually exclusive with 'configurationPath'
    option.

    Type: null or attribute set

    Default: null

    Example:

    ''
    {
      "default" = {
        "version" = 2;
        "auth" = {
          "community" = "public";
        };
      };
    };
    ''

    Declared by:

    [14611]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14612]services.prometheus.exporters.snmp.configurationPath

    Path to a snmp exporter configuration file. Mutually exclusive with 'configuration' option.

    Type: null or path

    Default: null

    Example: "./snmp.yml"

    Declared by:

    [14613]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14614]services.prometheus.exporters.snmp.extraFlags

    Extra commandline options to pass to the snmp exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14615]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14616]services.prometheus.exporters.snmp.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.snmp.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9116"

    Declared by:

    [14617]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14618]services.prometheus.exporters.snmp.group

    Group under which the snmp exporter shall be run.

    Type: string

    Default: "snmp-exporter"

    Declared by:

    [14619]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14620]services.prometheus.exporters.snmp.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14621]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14622]services.prometheus.exporters.snmp.logFormat

    Output format of log messages.

    Type: one of "logfmt", "json"

    Default: "logfmt"

    Declared by:

    [14623]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14624]services.prometheus.exporters.snmp.logLevel

    Only log messages with the given severity or above.

    Type: one of "debug", "info", "warn", "error"

    Default: "info"

    Declared by:

    [14625]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14626]services.prometheus.exporters.snmp.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14627]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14628]services.prometheus.exporters.snmp.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9116

    Declared by:

    [14629]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14630]services.prometheus.exporters.snmp.user

    User name under which the snmp exporter shall be run.

    Type: string

    Default: "snmp-exporter"

    Declared by:

    [14631]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14632]services.prometheus.exporters.sql.enable

    Whether to enable the prometheus sql exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14633]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14634]services.prometheus.exporters.sql.configFile

    Path to configuration file.

    Type: null or path

    Default: null

    Declared by:

    [14635]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14636]services.prometheus.exporters.sql.configuration

    Exporter configuration as nix attribute set. Mutually exclusive with 'configFile' option.

    Type: null or submodule

    Default: null

    Declared by:

    [14637]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14638]services.prometheus.exporters.sql.configuration.jobs

    An attrset of metrics scraping jobs to run.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [14639]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14640]services.prometheus.exporters.sql.configuration.jobs.<name>.connections

    A list of connection strings of the SQL servers to scrape metrics from

    Type: list of strings

    Declared by:

    [14641]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14642]services.prometheus.exporters.sql.configuration.jobs.<name>.interval

    How often to run this job, specified in [14643]Go duration format.

    Type: string

    Declared by:

    [14644]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14645]services.prometheus.exporters.sql.configuration.jobs.<name>.queries

    SQL queries to run.

    Type: attribute set of submodules

    Declared by:

    [14646]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14647]services.prometheus.exporters.sql.configuration.jobs.<name>.queries.<name>.help

    A human-readable description of this metric.

    Type: null or string

    Default: null

    Declared by:

    [14648]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14649]services.prometheus.exporters.sql.configuration.jobs.<name>.queries.<name>.labels

    A set of columns that will be used as Prometheus labels.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14650]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14651]services.prometheus.exporters.sql.configuration.jobs.<name>.queries.<name>.query

    The SQL query to run.

    Type: string

    Declared by:

    [14652]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14653]services.prometheus.exporters.sql.configuration.jobs.<name>.queries.<name>.values

    A set of columns that will be used as values of this metric.

    Type: list of strings

    Declared by:

    [14654]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14655]services.prometheus.exporters.sql.configuration.jobs.<name>.startupSql

    A list of SQL statements to execute once after making a connection.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14656]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14657]services.prometheus.exporters.sql.extraFlags

    Extra commandline options to pass to the sql exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14658]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14659]services.prometheus.exporters.sql.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.sql.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9237"

    Declared by:

    [14660]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14661]services.prometheus.exporters.sql.group

    Group under which the sql exporter shall be run.

    Type: string

    Default: "sql-exporter"

    Declared by:

    [14662]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14663]services.prometheus.exporters.sql.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14664]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14665]services.prometheus.exporters.sql.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14666]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14667]services.prometheus.exporters.sql.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9237

    Declared by:

    [14668]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14669]services.prometheus.exporters.sql.user

    User name under which the sql exporter shall be run.

    Type: string

    Default: "sql-exporter"

    Declared by:

    [14670]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14671]services.prometheus.exporters.surfboard.enable

    Whether to enable the prometheus surfboard exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14672]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14673]services.prometheus.exporters.surfboard.extraFlags

    Extra commandline options to pass to the surfboard exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14674]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14675]services.prometheus.exporters.surfboard.firewallFilter

    Specify a filter for iptables to use when
    services.prometheus.exporters.surfboard.openFirewall is true. It is used as `ip46tables -I
    nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9239"

    Declared by:

    [14676]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14677]services.prometheus.exporters.surfboard.group

    Group under which the surfboard exporter shall be run.

    Type: string

    Default: "surfboard-exporter"

    Declared by:

    [14678]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14679]services.prometheus.exporters.surfboard.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14680]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14681]services.prometheus.exporters.surfboard.modemAddress

    The hostname or IP of the cable modem.

    Type: string

    Default: "192.168.100.1"

    Declared by:

    [14682]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14683]services.prometheus.exporters.surfboard.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14684]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14685]services.prometheus.exporters.surfboard.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9239

    Declared by:

    [14686]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14687]services.prometheus.exporters.surfboard.user

    User name under which the surfboard exporter shall be run.

    Type: string

    Default: "surfboard-exporter"

    Declared by:

    [14688]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14689]services.prometheus.exporters.systemd.enable

    Whether to enable the prometheus systemd exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14690]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14691]services.prometheus.exporters.systemd.extraFlags

    Extra commandline options to pass to the systemd exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14692]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14693]services.prometheus.exporters.systemd.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.systemd.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9558"

    Declared by:

    [14694]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14695]services.prometheus.exporters.systemd.group

    Group under which the systemd exporter shall be run.

    Type: string

    Default: "systemd-exporter"

    Declared by:

    [14696]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14697]services.prometheus.exporters.systemd.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14698]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14699]services.prometheus.exporters.systemd.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14700]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14701]services.prometheus.exporters.systemd.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9558

    Declared by:

    [14702]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14703]services.prometheus.exporters.systemd.user

    User name under which the systemd exporter shall be run.

    Type: string

    Default: "systemd-exporter"

    Declared by:

    [14704]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14705]services.prometheus.exporters.tor.enable

    Whether to enable the prometheus tor exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14706]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14707]services.prometheus.exporters.tor.extraFlags

    Extra commandline options to pass to the tor exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14708]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14709]services.prometheus.exporters.tor.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.tor.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9130"

    Declared by:

    [14710]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14711]services.prometheus.exporters.tor.group

    Group under which the tor exporter shall be run.

    Type: string

    Default: "tor-exporter"

    Declared by:

    [14712]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14713]services.prometheus.exporters.tor.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14714]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14715]services.prometheus.exporters.tor.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14716]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14717]services.prometheus.exporters.tor.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9130

    Declared by:

    [14718]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14719]services.prometheus.exporters.tor.torControlAddress

    Tor control IP address or hostname.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [14720]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14721]services.prometheus.exporters.tor.torControlPort

    Tor control port.

    Type: signed integer

    Default: 9051

    Declared by:

    [14722]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14723]services.prometheus.exporters.tor.user

    User name under which the tor exporter shall be run.

    Type: string

    Default: "tor-exporter"

    Declared by:

    [14724]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14725]services.prometheus.exporters.unbound.enable

    Whether to enable the prometheus unbound exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14726]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14727]services.prometheus.exporters.unbound.controlInterface

    Path to the unbound socket for uds mode or the control interface port for tcp mode.

    Example: uds-mode: /run/unbound/unbound.socket tcp-mode: 127.0.0.1:8953

    Type: null or string

    Default: null

    Example: "/run/unbound/unbound.socket"

    Declared by:

    [14728]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14729]services.prometheus.exporters.unbound.extraFlags

    Extra commandline options to pass to the unbound exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14730]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14731]services.prometheus.exporters.unbound.fetchType

    Which methods the exporter uses to get the information from unbound.

    Type: one of "tcp", "uds"

    Default: "uds"

    Declared by:

    [14732]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14733]services.prometheus.exporters.unbound.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.unbound.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9167"

    Declared by:

    [14734]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14735]services.prometheus.exporters.unbound.group

    Group under which the unbound exporter shall be run.

    Type: string

    Default: "unbound-exporter"

    Declared by:

    [14736]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14737]services.prometheus.exporters.unbound.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14738]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14739]services.prometheus.exporters.unbound.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14740]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14741]services.prometheus.exporters.unbound.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9167

    Declared by:

    [14742]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14743]services.prometheus.exporters.unbound.telemetryPath

    Path under which to expose metrics.

    Type: string

    Default: "/metrics"

    Declared by:

    [14744]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14745]services.prometheus.exporters.unbound.user

    User name under which the unbound exporter shall be run.

    Type: string

    Default: "unbound-exporter"

    Declared by:

    [14746]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14747]services.prometheus.exporters.unifi.enable

    Whether to enable the prometheus unifi exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14748]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14749]services.prometheus.exporters.unifi.extraFlags

    Extra commandline options to pass to the unifi exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14750]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14751]services.prometheus.exporters.unifi.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.unifi.openFirewall is
    true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9130"

    Declared by:

    [14752]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14753]services.prometheus.exporters.unifi.group

    Group under which the unifi exporter shall be run.

    Type: string

    Default: "unifi-exporter"

    Declared by:

    [14754]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14755]services.prometheus.exporters.unifi.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14756]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14757]services.prometheus.exporters.unifi.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14758]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14759]services.prometheus.exporters.unifi.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9130

    Declared by:

    [14760]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14761]services.prometheus.exporters.unifi.unifiAddress

    URL of the UniFi Controller API.

    Type: string

    Example: "https://10.0.0.1:8443"

    Declared by:

    [14762]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14763]services.prometheus.exporters.unifi.unifiInsecure

    If enabled skip the verification of the TLS certificate of the UniFi Controller API. Use with
    caution.

    Type: boolean

    Default: false

    Declared by:

    [14764]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14765]services.prometheus.exporters.unifi.unifiPassword

    Password for authentication against UniFi Controller API.

    Type: string

    Declared by:

    [14766]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14767]services.prometheus.exporters.unifi.unifiTimeout

    Timeout including unit for UniFi Controller API requests.

    Type: string

    Default: "5s"

    Example: "2m"

    Declared by:

    [14768]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14769]services.prometheus.exporters.unifi.unifiUsername

    username for authentication against UniFi Controller API.

    Type: string

    Example: "ReadOnlyUser"

    Declared by:

    [14770]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14771]services.prometheus.exporters.unifi.user

    User name under which the unifi exporter shall be run.

    Type: string

    Default: "unifi-exporter"

    Declared by:

    [14772]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14773]services.prometheus.exporters.unifi-poller.enable

    Whether to enable the prometheus unifi-poller exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14774]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14775]services.prometheus.exporters.unifi-poller.controllers

    List of Unifi controllers to poll. Use defaults if empty.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [14776]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14777]services.prometheus.exporters.unifi-poller.controllers.*.hash_pii

    Hash, with md5, client names and MAC addresses. This attempts to protect personally
    identifiable information.

    Type: boolean

    Default: false

    Declared by:

    [14778]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[14779]services.prometheus.exporters.unifi-poller.controllers.*.pass

    Path of a file containing the password for the unifi service user. This file needs to be
    readable by the unifi-poller user.

    Type: path

    Default: "unifi-poller-unifi-default.password"

    Declared by:

    [14780]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[14781]services.prometheus.exporters.unifi-poller.controllers.*.save_dpi

    Collect and save data from deep packet inspection. Adds around 150 data points and impacts
    performance.

    Type: boolean

    Default: false

    Declared by:

    [14782]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[14783]services.prometheus.exporters.unifi-poller.controllers.*.save_ids

    Collect and save data from the intrusion detection system to influxdb.

    Type: boolean

    Default: false

    Declared by:

    [14784]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[14785]services.prometheus.exporters.unifi-poller.controllers.*.save_sites

    Collect and save site data.

    Type: boolean

    Default: true

    Declared by:

    [14786]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[14787]services.prometheus.exporters.unifi-poller.controllers.*.sites

    List of site names for which statistics should be exported. Or the string "default" for the
    default site or the string "all" for all sites.

    Type: one of "default", "all" or list of strings

    Default: "all"

    Declared by:

    [14788]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[14789]services.prometheus.exporters.unifi-poller.controllers.*.url

    URL of the Unifi controller.

    Type: string

    Default: "https://unifi:8443"

    Declared by:

    [14790]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[14791]services.prometheus.exporters.unifi-poller.controllers.*.user

    Unifi service user name.

    Type: string

    Default: "unifi"

    Declared by:

    [14792]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[14793]services.prometheus.exporters.unifi-poller.controllers.*.verify_ssl

    Verify the Unifi controller's certificate.

    Type: boolean

    Default: true

    Declared by:

    [14794]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[14795]services.prometheus.exporters.unifi-poller.extraFlags

    Extra commandline options to pass to the unifi-poller exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14796]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14797]services.prometheus.exporters.unifi-poller.firewallFilter

    Specify a filter for iptables to use when
    services.prometheus.exporters.unifi-poller.openFirewall is true. It is used as `ip46tables -I
    nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9130"

    Declared by:

    [14798]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14799]services.prometheus.exporters.unifi-poller.group

    Group under which the unifi-poller exporter shall be run.

    Type: string

    Default: "unifi-poller-exporter"

    Declared by:

    [14800]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14801]services.prometheus.exporters.unifi-poller.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14802]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14803]services.prometheus.exporters.unifi-poller.log.debug

    Whether to enable debug logging including line numbers, high resolution timestamps,
    per-device logs..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14804]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14805]services.prometheus.exporters.unifi-poller.log.prometheusErrors

    Whether to enable emitting errors to prometheus..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14806]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14807]services.prometheus.exporters.unifi-poller.log.quiet

    Whether to enable startup and error logs only..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14808]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14809]services.prometheus.exporters.unifi-poller.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14810]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14811]services.prometheus.exporters.unifi-poller.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9130

    Declared by:

    [14812]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14813]services.prometheus.exporters.unifi-poller.user

    User name under which the unifi-poller exporter shall be run.

    Type: string

    Default: "unifi-poller-exporter"

    Declared by:

    [14814]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14815]services.prometheus.exporters.varnish.enable

    Whether to enable the prometheus varnish exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14816]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14817]services.prometheus.exporters.varnish.extraFlags

    Extra commandline options to pass to the varnish exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14818]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14819]services.prometheus.exporters.varnish.firewallFilter

    Specify a filter for iptables to use when services.prometheus.exporters.varnish.openFirewall
    is true. It is used as `ip46tables -I nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9131"

    Declared by:

    [14820]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14821]services.prometheus.exporters.varnish.group

    Group under which the varnish exporter shall be run.

    Type: string

    Default: "varnish-exporter"

    Declared by:

    [14822]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14823]services.prometheus.exporters.varnish.healthPath

    Path under which to expose healthcheck. Disabled unless configured.

    Type: null or string

    Default: null

    Declared by:

    [14824]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14825]services.prometheus.exporters.varnish.instance

    varnishstat -n value.

    Type: null or string

    Default: null

    Declared by:

    [14826]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14827]services.prometheus.exporters.varnish.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14828]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14829]services.prometheus.exporters.varnish.noExit

    Do not exit server on Varnish scrape errors.

    Type: boolean

    Default: false

    Declared by:

    [14830]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14831]services.prometheus.exporters.varnish.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14832]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14833]services.prometheus.exporters.varnish.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9131

    Declared by:

    [14834]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14835]services.prometheus.exporters.varnish.raw

    Enable raw stdout logging without timestamps.

    Type: boolean

    Default: false

    Declared by:

    [14836]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14837]services.prometheus.exporters.varnish.telemetryPath

    Path under which to expose metrics.

    Type: string

    Default: "/metrics"

    Declared by:

    [14838]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14839]services.prometheus.exporters.varnish.user

    User name under which the varnish exporter shall be run.

    Type: string

    Default: "varnish-exporter"

    Declared by:

    [14840]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14841]services.prometheus.exporters.varnish.varnishStatPath

    Path to varnishstat.

    Type: string

    Default: "varnishstat"

    Declared by:

    [14842]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14843]services.prometheus.exporters.varnish.verbose

    Enable verbose logging.

    Type: boolean

    Default: false

    Declared by:

    [14844]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14845]services.prometheus.exporters.varnish.withGoMetrics

    Export go runtime and http handler metrics.

    Type: boolean

    Default: false

    Declared by:

    [14846]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14847]services.prometheus.exporters.wireguard.enable

    Whether to enable the prometheus wireguard exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14848]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14849]services.prometheus.exporters.wireguard.extraFlags

    Extra commandline options to pass to the wireguard exporter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14850]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14851]services.prometheus.exporters.wireguard.firewallFilter

    Specify a filter for iptables to use when
    services.prometheus.exporters.wireguard.openFirewall is true. It is used as `ip46tables -I
    nixos-fw firewallFilter -j nixos-fw-accept`.

    Type: null or string

    Default: null

    Example:

    "-i eth0 -p tcp -m tcp --dport 9586"

    Declared by:

    [14852]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14853]services.prometheus.exporters.wireguard.group

    Group under which the wireguard exporter shall be run.

    Type: string

    Default: "wireguard-exporter"

    Declared by:

    [14854]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14855]services.prometheus.exporters.wireguard.listenAddress

    Address to listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14856]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14857]services.prometheus.exporters.wireguard.openFirewall

    Open port in firewall for incoming connections.

    Type: boolean

    Default: false

    Declared by:

    [14858]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14859]services.prometheus.exporters.wireguard.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9586

    Declared by:

    [14860]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14861]services.prometheus.exporters.wireguard.singleSubnetPerField

    By default, all allowed IPs and subnets are comma-separated in the allowed_ips field. With
    this option enabled, a single IP and subnet will be listed in fields like allowed_ip_0,
    allowed_ip_1 and so on.

    Type: boolean

    Default: false

    Declared by:

    [14862]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14863]services.prometheus.exporters.wireguard.user

    User name under which the wireguard exporter shall be run.

    Type: string

    Default: "wireguard-exporter"

    Declared by:

    [14864]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14865]services.prometheus.exporters.wireguard.verbose

    Whether to enable Verbose logging mode for prometheus-wireguard-exporter.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14866]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14867]services.prometheus.exporters.wireguard.wireguardConfig

    Path to the Wireguard Config to [14868]add the peer's name to the stats of a peer.

    Please note that networking.wg-quick is required for this feature as networking.wireguard
    uses wg(8) to set the peers up.

    Type: null or path or string

    Default: null

    Declared by:

    [14869]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14870]services.prometheus.exporters.wireguard.withRemoteIp

    Whether or not the remote IP of a WireGuard peer should be exposed via prometheus.

    Type: boolean

    Default: false

    Declared by:

    [14871]<nixpkgs/nixos/modules/services/monitoring/prometheus/exporters.nix>

[14872]services.prometheus.extraFlags

    Extra commandline options when launching Prometheus.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14873]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14874]services.prometheus.globalConfig

    Parameters that are valid in all configuration contexts. They also serve as defaults for
    other configuration sections

    Type: submodule

    Default: { }

    Declared by:

    [14875]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14876]services.prometheus.globalConfig.evaluation_interval

    How frequently to evaluate rules by default.

    Defaults to 1m in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [14877]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14878]services.prometheus.globalConfig.external_labels

    The labels to add to any time series or alerts when communicating with external systems
    (federation, remote storage, Alertmanager).

    Type: null or attribute set of strings

    Default: null

    Declared by:

    [14879]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14880]services.prometheus.globalConfig.scrape_interval

    How frequently to scrape targets by default.

    Defaults to 1m in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [14881]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14882]services.prometheus.globalConfig.scrape_timeout

    How long until a scrape request times out.

    Defaults to 10s in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [14883]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14884]services.prometheus.listenAddress

    Address to listen on for the web interface, API, and telemetry.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [14885]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14886]services.prometheus.port

    Port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9090

    Declared by:

    [14887]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14888]services.prometheus.pushgateway.enable

    Whether to enable Prometheus Pushgateway.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [14889]<nixpkgs/nixos/modules/services/monitoring/prometheus/pushgateway.nix>

[14890]services.prometheus.pushgateway.package

    Package that should be used for the prometheus pushgateway.

    Type: package

    Default: "pkgs.prometheus-pushgateway"

    Declared by:

    [14891]<nixpkgs/nixos/modules/services/monitoring/prometheus/pushgateway.nix>

[14892]services.prometheus.pushgateway.extraFlags

    Extra commandline options when launching the Pushgateway.

    Type: list of strings

    Default: [ ]

    Declared by:

    [14893]<nixpkgs/nixos/modules/services/monitoring/prometheus/pushgateway.nix>

[14894]services.prometheus.pushgateway.log.format

    Set the log target and format.

    null will default to logger:stderr.

    Type: null or string

    Default: null

    Example: "logger:syslog?appname=bob&local=7"

    Declared by:

    [14895]<nixpkgs/nixos/modules/services/monitoring/prometheus/pushgateway.nix>

[14896]services.prometheus.pushgateway.log.level

    Only log messages with the given severity or above.

    null will default to info.

    Type: null or one of "debug", "info", "warn", "error", "fatal"

    Default: null

    Declared by:

    [14897]<nixpkgs/nixos/modules/services/monitoring/prometheus/pushgateway.nix>

[14898]services.prometheus.pushgateway.persistMetrics

    Whether to persist metrics to a file.

    When enabled metrics will be saved to a file called metrics in the directory /var/lib/
    pushgateway. The directory below /var/lib can be set using
    services.prometheus.pushgateway.stateDir.

    Type: boolean

    Default: false

    Declared by:

    [14899]<nixpkgs/nixos/modules/services/monitoring/prometheus/pushgateway.nix>

[14900]services.prometheus.pushgateway.persistence.interval

    The minimum interval at which to write out the persistence file.

    null will default to 5m.

    Type: null or string

    Default: null

    Example: "10m"

    Declared by:

    [14901]<nixpkgs/nixos/modules/services/monitoring/prometheus/pushgateway.nix>

[14902]services.prometheus.pushgateway.stateDir

    Directory below /var/lib to store metrics.

    This directory will be created automatically using systemd's StateDirectory mechanism when
    services.prometheus.pushgateway.persistMetrics is enabled.

    Type: string

    Default: "pushgateway"

    Declared by:

    [14903]<nixpkgs/nixos/modules/services/monitoring/prometheus/pushgateway.nix>

[14904]services.prometheus.pushgateway.web.external-url

    The URL under which Pushgateway is externally reachable.

    Type: null or string

    Default: null

    Declared by:

    [14905]<nixpkgs/nixos/modules/services/monitoring/prometheus/pushgateway.nix>

[14906]services.prometheus.pushgateway.web.listen-address

    Address to listen on for the web interface, API and telemetry.

    null will default to :9091.

    Type: null or string

    Default: null

    Declared by:

    [14907]<nixpkgs/nixos/modules/services/monitoring/prometheus/pushgateway.nix>

[14908]services.prometheus.pushgateway.web.route-prefix

    Prefix for the internal routes of web endpoints.

    Defaults to the path of services.prometheus.pushgateway.web.external-url.

    Type: null or string

    Default: null

    Declared by:

    [14909]<nixpkgs/nixos/modules/services/monitoring/prometheus/pushgateway.nix>

[14910]services.prometheus.pushgateway.web.telemetry-path

    Path under which to expose metrics.

    null will default to /metrics.

    Type: null or string

    Default: null

    Declared by:

    [14911]<nixpkgs/nixos/modules/services/monitoring/prometheus/pushgateway.nix>

[14912]services.prometheus.remoteRead

    Parameters of the endpoints to query from. See [14913]the official documentation for more
    information.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [14914]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14915]services.prometheus.remoteRead.*.basic_auth

    Sets the `Authorization` header on every remote read request with the configured username and
    password. password and password_file are mutually exclusive.

    Type: null or submodule

    Default: null

    Declared by:

    [14916]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14917]services.prometheus.remoteRead.*.basic_auth.password

    HTTP password

    Type: null or string

    Default: null

    Declared by:

    [14918]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14919]services.prometheus.remoteRead.*.basic_auth.password_file

    HTTP password file

    Type: null or string

    Default: null

    Declared by:

    [14920]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14921]services.prometheus.remoteRead.*.basic_auth.username

    HTTP username

    Type: string

    Declared by:

    [14922]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14923]services.prometheus.remoteRead.*.bearer_token

    Sets the `Authorization` header on every remote read request with the configured bearer
    token. It is mutually exclusive with `bearer_token_file`.

    Type: null or string

    Default: null

    Declared by:

    [14924]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14925]services.prometheus.remoteRead.*.bearer_token_file

    Sets the `Authorization` header on every remote read request with the bearer token read from
    the configured file. It is mutually exclusive with `bearer_token`.

    Type: null or string

    Default: null

    Declared by:

    [14926]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14927]services.prometheus.remoteRead.*.name

    Name of the remote read config, which if specified must be unique among remote read configs.
    The name will be used in metrics and logging in place of a generated value to help users
    distinguish between remote read configs.

    Type: null or string

    Default: null

    Declared by:

    [14928]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14929]services.prometheus.remoteRead.*.proxy_url

    Optional Proxy URL.

    Type: null or string

    Default: null

    Declared by:

    [14930]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14931]services.prometheus.remoteRead.*.read_recent

    Whether reads should be made for queries for time ranges that the local storage should have
    complete data for.

    Type: null or boolean

    Default: null

    Declared by:

    [14932]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14933]services.prometheus.remoteRead.*.remote_timeout

    Timeout for requests to the remote read endpoint.

    Type: null or string

    Default: null

    Declared by:

    [14934]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14935]services.prometheus.remoteRead.*.required_matchers

    An optional list of equality matchers which have to be present in a selector to query the
    remote read endpoint.

    Type: null or attribute set of strings

    Default: null

    Declared by:

    [14936]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14937]services.prometheus.remoteRead.*.tls_config

    Configures the remote read request's TLS settings.

    Type: null or submodule

    Default: null

    Declared by:

    [14938]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14939]services.prometheus.remoteRead.*.tls_config.ca_file

    CA certificate to validate API server certificate with.

    Type: null or string

    Default: null

    Declared by:

    [14940]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14941]services.prometheus.remoteRead.*.tls_config.cert_file

    Certificate file for client cert authentication to the server.

    Type: null or string

    Default: null

    Declared by:

    [14942]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14943]services.prometheus.remoteRead.*.tls_config.insecure_skip_verify

    Disable validation of the server certificate.

    Type: null or boolean

    Default: null

    Declared by:

    [14944]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14945]services.prometheus.remoteRead.*.tls_config.key_file

    Key file for client cert authentication to the server.

    Type: null or string

    Default: null

    Declared by:

    [14946]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14947]services.prometheus.remoteRead.*.tls_config.server_name

    ServerName extension to indicate the name of the server. http://tools.ietf.org/html/rfc4366#
    section-3.1

    Type: null or string

    Default: null

    Declared by:

    [14948]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14949]services.prometheus.remoteRead.*.url

    ServerName extension to indicate the name of the server. http://tools.ietf.org/html/rfc4366#
    section-3.1

    Type: string

    Declared by:

    [14950]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14951]services.prometheus.remoteWrite

    Parameters of the endpoints to send samples to. See [14952]the official documentation for
    more information.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [14953]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14954]services.prometheus.remoteWrite.*.basic_auth

    Sets the `Authorization` header on every remote write request with the configured username
    and password. password and password_file are mutually exclusive.

    Type: null or submodule

    Default: null

    Declared by:

    [14955]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14956]services.prometheus.remoteWrite.*.basic_auth.password

    HTTP password

    Type: null or string

    Default: null

    Declared by:

    [14957]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14958]services.prometheus.remoteWrite.*.basic_auth.password_file

    HTTP password file

    Type: null or string

    Default: null

    Declared by:

    [14959]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14960]services.prometheus.remoteWrite.*.basic_auth.username

    HTTP username

    Type: string

    Declared by:

    [14961]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14962]services.prometheus.remoteWrite.*.bearer_token

    Sets the `Authorization` header on every remote write request with the configured bearer
    token. It is mutually exclusive with `bearer_token_file`.

    Type: null or string

    Default: null

    Declared by:

    [14963]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14964]services.prometheus.remoteWrite.*.bearer_token_file

    Sets the `Authorization` header on every remote write request with the bearer token read from
    the configured file. It is mutually exclusive with `bearer_token`.

    Type: null or string

    Default: null

    Declared by:

    [14965]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14966]services.prometheus.remoteWrite.*.metadata_config

    Configures the sending of series metadata to remote storage. Metadata configuration is
    subject to change at any point or be removed in future releases.

    Type: null or submodule

    Default: null

    Declared by:

    [14967]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14968]services.prometheus.remoteWrite.*.metadata_config.send

    Whether metric metadata is sent to remote storage or not.

    Type: null or boolean

    Default: null

    Declared by:

    [14969]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14970]services.prometheus.remoteWrite.*.metadata_config.send_interval

    How frequently metric metadata is sent to remote storage.

    Type: null or string

    Default: null

    Declared by:

    [14971]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14972]services.prometheus.remoteWrite.*.name

    Name of the remote write config, which if specified must be unique among remote write
    configs. The name will be used in metrics and logging in place of a generated value to help
    users distinguish between remote write configs.

    Type: null or string

    Default: null

    Declared by:

    [14973]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14974]services.prometheus.remoteWrite.*.proxy_url

    Optional Proxy URL.

    Type: null or string

    Default: null

    Declared by:

    [14975]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14976]services.prometheus.remoteWrite.*.queue_config

    Configures the queue used to write to remote storage.

    Type: null or submodule

    Default: null

    Declared by:

    [14977]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14978]services.prometheus.remoteWrite.*.queue_config.batch_send_deadline

    Maximum time a sample will wait in buffer.

    Type: null or string

    Default: null

    Declared by:

    [14979]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14980]services.prometheus.remoteWrite.*.queue_config.capacity

    Number of samples to buffer per shard before we block reading of more samples from the WAL.
    It is recommended to have enough capacity in each shard to buffer several requests to keep
    throughput up while processing occasional slow remote requests.

    Type: null or signed integer

    Default: null

    Declared by:

    [14981]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14982]services.prometheus.remoteWrite.*.queue_config.max_backoff

    Maximum retry delay.

    Type: null or string

    Default: null

    Declared by:

    [14983]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14984]services.prometheus.remoteWrite.*.queue_config.max_samples_per_send

    Maximum number of samples per send.

    Type: null or signed integer

    Default: null

    Declared by:

    [14985]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14986]services.prometheus.remoteWrite.*.queue_config.max_shards

    Maximum number of shards, i.e. amount of concurrency.

    Type: null or signed integer

    Default: null

    Declared by:

    [14987]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14988]services.prometheus.remoteWrite.*.queue_config.min_backoff

    Initial retry delay. Gets doubled for every retry.

    Type: null or string

    Default: null

    Declared by:

    [14989]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14990]services.prometheus.remoteWrite.*.queue_config.min_shards

    Minimum number of shards, i.e. amount of concurrency.

    Type: null or signed integer

    Default: null

    Declared by:

    [14991]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14992]services.prometheus.remoteWrite.*.remote_timeout

    Timeout for requests to the remote write endpoint.

    Type: null or string

    Default: null

    Declared by:

    [14993]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14994]services.prometheus.remoteWrite.*.tls_config

    Configures the remote write request's TLS settings.

    Type: null or submodule

    Default: null

    Declared by:

    [14995]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14996]services.prometheus.remoteWrite.*.tls_config.ca_file

    CA certificate to validate API server certificate with.

    Type: null or string

    Default: null

    Declared by:

    [14997]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[14998]services.prometheus.remoteWrite.*.tls_config.cert_file

    Certificate file for client cert authentication to the server.

    Type: null or string

    Default: null

    Declared by:

    [14999]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15000]services.prometheus.remoteWrite.*.tls_config.insecure_skip_verify

    Disable validation of the server certificate.

    Type: null or boolean

    Default: null

    Declared by:

    [15001]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15002]services.prometheus.remoteWrite.*.tls_config.key_file

    Key file for client cert authentication to the server.

    Type: null or string

    Default: null

    Declared by:

    [15003]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15004]services.prometheus.remoteWrite.*.tls_config.server_name

    ServerName extension to indicate the name of the server. http://tools.ietf.org/html/rfc4366#
    section-3.1

    Type: null or string

    Default: null

    Declared by:

    [15005]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15006]services.prometheus.remoteWrite.*.url

    ServerName extension to indicate the name of the server. http://tools.ietf.org/html/rfc4366#
    section-3.1

    Type: string

    Declared by:

    [15007]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15008]services.prometheus.remoteWrite.*.write_relabel_configs

    List of remote write relabel configurations.

    Type: null or list of submodules

    Default: null

    Declared by:

    [15009]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15010]services.prometheus.remoteWrite.*.write_relabel_configs.*.action

    Action to perform based on regex matching.

    Defaults to replace in prometheus when set to null.

    Type: null or one of "replace", "keep", "drop", "hashmod", "labelmap", "labeldrop",
    "labelkeep"

    Default: null

    Declared by:

    [15011]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15012]services.prometheus.remoteWrite.*.write_relabel_configs.*.modulus

    Modulus to take of the hash of the source label values.

    Type: null or signed integer

    Default: null

    Declared by:

    [15013]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15014]services.prometheus.remoteWrite.*.write_relabel_configs.*.regex

    Regular expression against which the extracted value is matched.

    Defaults to (.*) in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15015]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15016]services.prometheus.remoteWrite.*.write_relabel_configs.*.replacement

    Replacement value against which a regex replace is performed if the regular expression
    matches.

    Defaults to $1 in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15017]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15018]services.prometheus.remoteWrite.*.write_relabel_configs.*.separator

    Separator placed between concatenated source label values.

    Defaults to ; in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15019]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15020]services.prometheus.remoteWrite.*.write_relabel_configs.*.source_labels

    The source labels select values from existing labels. Their content is concatenated using the
    configured separator and matched against the configured regular expression.

    Type: null or list of strings

    Default: null

    Declared by:

    [15021]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15022]services.prometheus.remoteWrite.*.write_relabel_configs.*.target_label

    Label to which the resulting value is written in a replace action. It is mandatory for
    replace actions.

    Type: null or string

    Default: null

    Declared by:

    [15023]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15024]services.prometheus.retentionTime

    How long to retain samples in storage.

    Type: null or string

    Default: null

    Example: "15d"

    Declared by:

    [15025]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15026]services.prometheus.ruleFiles

    Any additional rules files to include in this configuration.

    Type: list of paths

    Default: [ ]

    Declared by:

    [15027]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15028]services.prometheus.rules

    Alerting and/or Recording rules to evaluate at runtime.

    Type: list of strings

    Default: [ ]

    Declared by:

    [15029]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15030]services.prometheus.scrapeConfigs

    A list of scrape configurations.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [15031]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15032]services.prometheus.scrapeConfigs.*.basic_auth

    Optional http login credentials for metrics scraping.

    Type: null or submodule

    Default: null

    Declared by:

    [15033]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15034]services.prometheus.scrapeConfigs.*.basic_auth.password

    HTTP password

    Type: string

    Declared by:

    [15035]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15036]services.prometheus.scrapeConfigs.*.basic_auth.username

    HTTP username

    Type: string

    Declared by:

    [15037]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15038]services.prometheus.scrapeConfigs.*.bearer_token

    Sets the `Authorization` header on every scrape request with the configured bearer token. It
    is mutually exclusive with bearer_token_file.

    Type: null or string

    Default: null

    Declared by:

    [15039]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15040]services.prometheus.scrapeConfigs.*.bearer_token_file

    Sets the `Authorization` header on every scrape request with the bearer token read from the
    configured file. It is mutually exclusive with bearer_token.

    Type: null or string

    Default: null

    Declared by:

    [15041]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15042]services.prometheus.scrapeConfigs.*.consul_sd_configs

    List of Consul service discovery configurations.

    Type: null or list of submodules

    Default: null

    Declared by:

    [15043]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15044]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.allow_stale

    Allow stale Consul results (see [15045]https://www.consul.io/api/index.html#consistency-modes
    ).

    Will reduce load on Consul.

    Type: null or boolean

    Default: null

    Declared by:

    [15046]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15047]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.datacenter

    Consul datacenter

    Type: null or string

    Default: null

    Declared by:

    [15048]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15049]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.node_meta

    Node metadata used to filter nodes for a given service.

    Type: null or attribute set of strings

    Default: null

    Declared by:

    [15050]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15051]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.password

    Consul password

    Type: null or string

    Default: null

    Declared by:

    [15052]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15053]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.refresh_interval

    The time after which the provided names are refreshed.

    On large setup it might be a good idea to increase this value because the catalog will change
    all the time.

    Defaults to 30s in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15054]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15055]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.scheme

    Consul scheme Defaults to http in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15056]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15057]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.server

    Consul server to query.

    Defaults to localhost:8500 in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15058]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15059]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.services

    A list of services for which targets are retrieved.

    Type: null or list of strings

    Default: null

    Declared by:

    [15060]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15061]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.tag_separator

    The string by which Consul tags are joined into the tag label.

    Defaults to , in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15062]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15063]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.tags

    An optional list of tags used to filter nodes for a given service. Services must contain all
    tags in the list.

    Type: null or list of strings

    Default: null

    Declared by:

    [15064]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15065]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.tls_config

    Configures the Consul request's TLS settings.

    Type: null or submodule

    Default: null

    Declared by:

    [15066]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15067]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.tls_config.ca_file

    CA certificate to validate API server certificate with.

    Type: null or string

    Default: null

    Declared by:

    [15068]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15069]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.tls_config.cert_file

    Certificate file for client cert authentication to the server.

    Type: null or string

    Default: null

    Declared by:

    [15070]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15071]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.tls_config.insecure_skip_verify

    Disable validation of the server certificate.

    Type: null or boolean

    Default: null

    Declared by:

    [15072]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15073]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.tls_config.key_file

    Key file for client cert authentication to the server.

    Type: null or string

    Default: null

    Declared by:

    [15074]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15075]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.tls_config.server_name

    ServerName extension to indicate the name of the server. http://tools.ietf.org/html/rfc4366#
    section-3.1

    Type: null or string

    Default: null

    Declared by:

    [15076]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15077]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.token

    Consul token

    Type: null or string

    Default: null

    Declared by:

    [15078]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15079]services.prometheus.scrapeConfigs.*.consul_sd_configs.*.username

    Consul username

    Type: null or string

    Default: null

    Declared by:

    [15080]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15081]services.prometheus.scrapeConfigs.*.dns_sd_configs

    List of DNS service discovery configurations.

    Type: null or list of submodules

    Default: null

    Declared by:

    [15082]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15083]services.prometheus.scrapeConfigs.*.dns_sd_configs.*.names

    A list of DNS SRV record names to be queried.

    Type: list of strings

    Declared by:

    [15084]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15085]services.prometheus.scrapeConfigs.*.dns_sd_configs.*.refresh_interval

    The time after which the provided names are refreshed.

    Defaults to 30s in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15086]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15087]services.prometheus.scrapeConfigs.*.ec2_sd_configs

    List of EC2 service discovery configurations.

    Type: null or list of submodules

    Default: null

    Declared by:

    [15088]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15089]services.prometheus.scrapeConfigs.*.ec2_sd_configs.*.access_key

    The AWS API key id. If blank, the environment variable AWS_ACCESS_KEY_ID is used.

    Type: null or string

    Default: null

    Declared by:

    [15090]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15091]services.prometheus.scrapeConfigs.*.ec2_sd_configs.*.endpoint

    Custom endpoint to be used.

    Type: null or string

    Default: null

    Declared by:

    [15092]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15093]services.prometheus.scrapeConfigs.*.ec2_sd_configs.*.filters

    Filters can be used optionally to filter the instance list by other criteria.

    Type: null or list of submodules

    Default: null

    Declared by:

    [15094]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15095]services.prometheus.scrapeConfigs.*.ec2_sd_configs.*.filters.*.name

    See [15096]this list for the available filters.

    Type: string

    Declared by:

    [15097]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15098]services.prometheus.scrapeConfigs.*.ec2_sd_configs.*.filters.*.values

    Value of the filter.

    Type: list of strings

    Default: [ ]

    Declared by:

    [15099]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15100]services.prometheus.scrapeConfigs.*.ec2_sd_configs.*.port

    The port to scrape metrics from. If using the public IP address, this must instead be
    specified in the relabeling rule.

    Defaults to 80 in prometheus when set to null.

    Type: null or signed integer

    Default: null

    Declared by:

    [15101]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15102]services.prometheus.scrapeConfigs.*.ec2_sd_configs.*.profile

    Named AWS profile used to connect to the API.

    Type: null or string

    Default: null

    Declared by:

    [15103]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15104]services.prometheus.scrapeConfigs.*.ec2_sd_configs.*.refresh_interval

    Refresh interval to re-read the instance list.

    Defaults to 60s in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15105]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15106]services.prometheus.scrapeConfigs.*.ec2_sd_configs.*.region

    The AWS Region.

    Type: string

    Declared by:

    [15107]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15108]services.prometheus.scrapeConfigs.*.ec2_sd_configs.*.role_arn

    AWS Role ARN, an alternative to using AWS API keys.

    Type: null or string

    Default: null

    Declared by:

    [15109]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15110]services.prometheus.scrapeConfigs.*.ec2_sd_configs.*.secret_key

    The AWS API key secret. If blank, the environment variable AWS_SECRET_ACCESS_KEY is used.

    Type: null or string

    Default: null

    Declared by:

    [15111]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15112]services.prometheus.scrapeConfigs.*.file_sd_configs

    List of file service discovery configurations.

    Type: null or list of submodules

    Default: null

    Declared by:

    [15113]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15114]services.prometheus.scrapeConfigs.*.file_sd_configs.*.files

    Patterns for files from which target groups are extracted. Refer to the Prometheus
    documentation for permitted filename patterns and formats.

    Type: list of strings

    Declared by:

    [15115]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15116]services.prometheus.scrapeConfigs.*.file_sd_configs.*.refresh_interval

    Refresh interval to re-read the files.

    Defaults to 5m in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15117]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15118]services.prometheus.scrapeConfigs.*.gce_sd_configs

    List of Google Compute Engine service discovery configurations.

    See [15119]the relevant Prometheus configuration docs for more detail.

    Type: null or list of submodules

    Default: null

    Declared by:

    [15120]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15121]services.prometheus.scrapeConfigs.*.gce_sd_configs.*.filter

    Filter can be used optionally to filter the instance list by other criteria Syntax of this
    filter string is described here in the filter query parameter section: [15122]https://
    cloud.google.com/compute/docs/reference/latest/instances/list.

    Type: null or string

    Default: null

    Declared by:

    [15123]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15124]services.prometheus.scrapeConfigs.*.gce_sd_configs.*.port

    The port to scrape metrics from. If using the public IP address, this must instead be
    specified in the relabeling rule.

    Defaults to 80 in prometheus when set to null.

    Type: null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: null

    Declared by:

    [15125]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15126]services.prometheus.scrapeConfigs.*.gce_sd_configs.*.project

    The GCP Project.

    Type: string

    Declared by:

    [15127]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15128]services.prometheus.scrapeConfigs.*.gce_sd_configs.*.refresh_interval

    Refresh interval to re-read the cloud instance list.

    Defaults to 60s in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15129]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15130]services.prometheus.scrapeConfigs.*.gce_sd_configs.*.tag_separator

    The tag separator used to separate concatenated GCE instance network tags.

    See the GCP documentation on network tags for more information: [15131]https://
    cloud.google.com/vpc/docs/add-remove-network-tags

    Defaults to , in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15132]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15133]services.prometheus.scrapeConfigs.*.gce_sd_configs.*.zone

    The zone of the scrape targets. If you need multiple zones use multiple gce_sd_configs.

    Type: string

    Declared by:

    [15134]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15135]services.prometheus.scrapeConfigs.*.honor_labels

    Controls how Prometheus handles conflicts between labels that are already present in scraped
    data and labels that Prometheus would attach server-side ("job" and "instance" labels,
    manually configured target labels, and labels generated by service discovery
    implementations).

    If honor_labels is set to "true", label conflicts are resolved by keeping label values from
    the scraped data and ignoring the conflicting server-side labels.

    If honor_labels is set to "false", label conflicts are resolved by renaming conflicting
    labels in the scraped data to "exported_<original-label>" (for example "exported_instance",
    "exported_job") and then attaching server-side labels. This is useful for use cases such as
    federation, where all labels specified in the target should be preserved.

    Defaults to false in prometheus when set to null.

    Type: null or boolean

    Default: null

    Declared by:

    [15136]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15137]services.prometheus.scrapeConfigs.*.honor_timestamps

    honor_timestamps controls whether Prometheus respects the timestamps present in scraped data.

    If honor_timestamps is set to true, the timestamps of the metrics exposed by the target will
    be used.

    If honor_timestamps is set to false, the timestamps of the metrics exposed by the target will
    be ignored.

    Defaults to true in prometheus when set to null.

    Type: null or boolean

    Default: null

    Declared by:

    [15138]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15139]services.prometheus.scrapeConfigs.*.job_name

    The job name assigned to scraped metrics by default.

    Type: string

    Declared by:

    [15140]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15141]services.prometheus.scrapeConfigs.*.metric_relabel_configs

    List of metric relabel configurations.

    Type: null or list of submodules

    Default: null

    Declared by:

    [15142]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15143]services.prometheus.scrapeConfigs.*.metric_relabel_configs.*.action

    Action to perform based on regex matching.

    Defaults to replace in prometheus when set to null.

    Type: null or one of "replace", "keep", "drop", "hashmod", "labelmap", "labeldrop",
    "labelkeep"

    Default: null

    Declared by:

    [15144]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15145]services.prometheus.scrapeConfigs.*.metric_relabel_configs.*.modulus

    Modulus to take of the hash of the source label values.

    Type: null or signed integer

    Default: null

    Declared by:

    [15146]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15147]services.prometheus.scrapeConfigs.*.metric_relabel_configs.*.regex

    Regular expression against which the extracted value is matched.

    Defaults to (.*) in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15148]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15149]services.prometheus.scrapeConfigs.*.metric_relabel_configs.*.replacement

    Replacement value against which a regex replace is performed if the regular expression
    matches.

    Defaults to $1 in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15150]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15151]services.prometheus.scrapeConfigs.*.metric_relabel_configs.*.separator

    Separator placed between concatenated source label values.

    Defaults to ; in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15152]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15153]services.prometheus.scrapeConfigs.*.metric_relabel_configs.*.source_labels

    The source labels select values from existing labels. Their content is concatenated using the
    configured separator and matched against the configured regular expression.

    Type: null or list of strings

    Default: null

    Declared by:

    [15154]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15155]services.prometheus.scrapeConfigs.*.metric_relabel_configs.*.target_label

    Label to which the resulting value is written in a replace action. It is mandatory for
    replace actions.

    Type: null or string

    Default: null

    Declared by:

    [15156]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15157]services.prometheus.scrapeConfigs.*.metrics_path

    The HTTP resource path on which to fetch metrics from targets.

    Defaults to /metrics in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15158]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15159]services.prometheus.scrapeConfigs.*.params

    Optional HTTP URL parameters.

    Type: null or attribute set of list of stringss

    Default: null

    Declared by:

    [15160]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15161]services.prometheus.scrapeConfigs.*.proxy_url

    Optional proxy URL.

    Type: null or string

    Default: null

    Declared by:

    [15162]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15163]services.prometheus.scrapeConfigs.*.relabel_configs

    List of relabel configurations.

    Type: null or list of submodules

    Default: null

    Declared by:

    [15164]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15165]services.prometheus.scrapeConfigs.*.relabel_configs.*.action

    Action to perform based on regex matching.

    Defaults to replace in prometheus when set to null.

    Type: null or one of "replace", "keep", "drop", "hashmod", "labelmap", "labeldrop",
    "labelkeep"

    Default: null

    Declared by:

    [15166]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15167]services.prometheus.scrapeConfigs.*.relabel_configs.*.modulus

    Modulus to take of the hash of the source label values.

    Type: null or signed integer

    Default: null

    Declared by:

    [15168]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15169]services.prometheus.scrapeConfigs.*.relabel_configs.*.regex

    Regular expression against which the extracted value is matched.

    Defaults to (.*) in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15170]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15171]services.prometheus.scrapeConfigs.*.relabel_configs.*.replacement

    Replacement value against which a regex replace is performed if the regular expression
    matches.

    Defaults to $1 in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15172]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15173]services.prometheus.scrapeConfigs.*.relabel_configs.*.separator

    Separator placed between concatenated source label values.

    Defaults to ; in prometheus when set to null.

    Type: null or string

    Default: null

    Declared by:

    [15174]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15175]services.prometheus.scrapeConfigs.*.relabel_configs.*.source_labels

    The source labels select values from existing labels. Their content is concatenated using the
    configured separator and matched against the configured regular expression.

    Type: null or list of strings

    Default: null

    Declared by:

    [15176]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15177]services.prometheus.scrapeConfigs.*.relabel_configs.*.target_label

    Label to which the resulting value is written in a replace action. It is mandatory for
    replace actions.

    Type: null or string

    Default: null

    Declared by:

    [15178]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15179]services.prometheus.scrapeConfigs.*.sample_limit

    Per-scrape limit on number of scraped samples that will be accepted. If more than this number
    of samples are present after metric relabelling the entire scrape will be treated as failed.
    0 means no limit.

    Defaults to 0 in prometheus when set to null.

    Type: null or signed integer

    Default: null

    Declared by:

    [15180]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15181]services.prometheus.scrapeConfigs.*.scheme

    The URL scheme with which to fetch metrics from targets.

    Defaults to http in prometheus when set to null.

    Type: null or one of "http", "https"

    Default: null

    Declared by:

    [15182]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15183]services.prometheus.scrapeConfigs.*.scrape_interval

    How frequently to scrape targets from this job. Defaults to the globally configured default.

    Type: null or string

    Default: null

    Declared by:

    [15184]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15185]services.prometheus.scrapeConfigs.*.scrape_timeout

    Per-target timeout when scraping this job. Defaults to the globally configured default.

    Type: null or string

    Default: null

    Declared by:

    [15186]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15187]services.prometheus.scrapeConfigs.*.static_configs

    List of labeled target groups for this job.

    Type: null or list of submodules

    Default: null

    Declared by:

    [15188]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15189]services.prometheus.scrapeConfigs.*.static_configs.*.labels

    Labels assigned to all metrics scraped from the targets.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [15190]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15191]services.prometheus.scrapeConfigs.*.static_configs.*.targets

    The targets specified by the target group.

    Type: list of strings

    Declared by:

    [15192]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15193]services.prometheus.scrapeConfigs.*.tls_config

    Configures the scrape request's TLS settings.

    Type: null or submodule

    Default: null

    Declared by:

    [15194]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15195]services.prometheus.scrapeConfigs.*.tls_config.ca_file

    CA certificate to validate API server certificate with.

    Type: null or string

    Default: null

    Declared by:

    [15196]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15197]services.prometheus.scrapeConfigs.*.tls_config.cert_file

    Certificate file for client cert authentication to the server.

    Type: null or string

    Default: null

    Declared by:

    [15198]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15199]services.prometheus.scrapeConfigs.*.tls_config.insecure_skip_verify

    Disable validation of the server certificate.

    Type: null or boolean

    Default: null

    Declared by:

    [15200]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15201]services.prometheus.scrapeConfigs.*.tls_config.key_file

    Key file for client cert authentication to the server.

    Type: null or string

    Default: null

    Declared by:

    [15202]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15203]services.prometheus.scrapeConfigs.*.tls_config.server_name

    ServerName extension to indicate the name of the server. http://tools.ietf.org/html/rfc4366#
    section-3.1

    Type: null or string

    Default: null

    Declared by:

    [15204]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15205]services.prometheus.stateDir

    Directory below /var/lib to store Prometheus metrics data. This directory will be created
    automatically using systemd's StateDirectory mechanism.

    Type: string

    Default: "prometheus2"

    Declared by:

    [15206]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15207]services.prometheus.webExternalUrl

    The URL under which Prometheus is externally reachable (for example, if Prometheus is served
    via a reverse proxy).

    Type: null or string

    Default: null

    Example: "https://example.com/"

    Declared by:

    [15208]<nixpkgs/nixos/modules/services/monitoring/prometheus/default.nix>

[15209]services.prometheus.xmpp-alerts.enable

    Whether to enable XMPP Web hook service for Alertmanager.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15210]<nixpkgs/nixos/modules/services/monitoring/prometheus/xmpp-alerts.nix>

[15211]services.prometheus.xmpp-alerts.settings

    Configuration for prometheus xmpp-alerts, see [15212]https://github.com/jelmer/
    prometheus-xmpp-alerts/blob/master/xmpp-alerts.yml.example for supported values.

    Type: YAML value

    Default: { }

    Declared by:

    [15213]<nixpkgs/nixos/modules/services/monitoring/prometheus/xmpp-alerts.nix>

[15214]services.promtail.enable

    Whether to enable the Promtail ingresser.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15215]<nixpkgs/nixos/modules/services/logging/promtail.nix>

[15216]services.promtail.configuration

    Specify the configuration for Promtail in Nix.

    Type: JSON value

    Declared by:

    [15217]<nixpkgs/nixos/modules/services/logging/promtail.nix>

[15218]services.promtail.extraFlags

    Specify a list of additional command line flags, which get escaped and are then passed to
    Loki.

    Type: list of strings

    Default: [ ]

    Example: [ "--server.http-listen-port=3101" ]

    Declared by:

    [15219]<nixpkgs/nixos/modules/services/logging/promtail.nix>

[15220]services.prosody.enable

    Whether to enable the prosody server

    Type: boolean

    Default: false

    Declared by:

    [15221]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15222]services.prosody.package

    Prosody package to use

    Type: package

    Default: "pkgs.prosody"

    Example:

    pkgs.prosody.override {
      withExtraLibs = [ pkgs.luaPackages.lpty ];
      withCommunityModules = [ "auth_external" ];
    };

    Declared by:

    [15223]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15224]services.prosody.admins

    List of administrators of the current host

    Type: list of strings

    Default: [ ]

    Example: [ "admin1@example.com" "admin2@example.com" ]

    Declared by:

    [15225]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15226]services.prosody.allowRegistration

    Allow account creation

    Type: boolean

    Default: false

    Declared by:

    [15227]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15228]services.prosody.authentication

    Authentication mechanism used for logins.

    Type: one of "internal_plain", "internal_hashed", "cyrus", "anonymous"

    Default: "internal_hashed"

    Example: "internal_plain"

    Declared by:

    [15229]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15230]services.prosody.c2sRequireEncryption

    Force clients to use encrypted connections? This option will prevent clients from
    authenticating unless they are using encryption.

    Type: boolean

    Default: true

    Declared by:

    [15231]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15232]services.prosody.dataDir

    Directory where Prosody stores its data

    Type: path

    Default: "/var/lib/prosody"

    Declared by:

    [15233]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15234]services.prosody.disco_items

    List of discoverable items you want to advertise.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [15235]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15236]services.prosody.disco_items.*.description

    A short description of the endpoint you want to advertise

    Type: string

    Declared by:

    [15237]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15238]services.prosody.disco_items.*.url

    URL of the endpoint you want to make discoverable

    Type: string

    Declared by:

    [15239]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15240]services.prosody.extraConfig

    Additional prosody configuration

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [15241]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15242]services.prosody.extraModules

    Enable custom modules

    Type: list of strings

    Default: [ ]

    Declared by:

    [15243]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15244]services.prosody.extraPluginPaths

    Addtional path in which to look find plugins/modules

    Type: list of paths

    Default: [ ]

    Declared by:

    [15245]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15246]services.prosody.group

    Group account under which prosody runs.

    Type: string

    Default: "prosody"

    Declared by:

    [15247]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15248]services.prosody.httpInterfaces

    Interfaces on which the HTTP server will listen on.

    Type: list of strings

    Default: [ "*" "::" ]

    Declared by:

    [15249]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15250]services.prosody.httpPorts

    Listening HTTP ports list for this service.

    Type: list of signed integers

    Default: [ 5280 ]

    Declared by:

    [15251]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15252]services.prosody.httpsInterfaces

    Interfaces on which the HTTPS server will listen on.

    Type: list of strings

    Default: [ "*" "::" ]

    Declared by:

    [15253]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15254]services.prosody.httpsPorts

    Listening HTTPS ports list for this service.

    Type: list of signed integers

    Default: [ 5281 ]

    Declared by:

    [15255]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15256]services.prosody.modules.admin_adhoc

    Allows administration via an XMPP client that supports ad-hoc commands

    Type: boolean

    Default: true

    Declared by:

    [15257]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15258]services.prosody.modules.admin_telnet

    Opens telnet console interface on localhost port 5582

    Type: boolean

    Default: false

    Declared by:

    [15259]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15260]services.prosody.modules.announce

    Send announcement to all online users

    Type: boolean

    Default: false

    Declared by:

    [15261]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15262]services.prosody.modules.blocklist

    Allow users to block communications with other users

    Type: boolean

    Default: true

    Declared by:

    [15263]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15264]services.prosody.modules.bookmarks

    Allows interop between older clients that use XEP-0048: Bookmarks in its 1.0 version and
    recent clients which use it in PEP

    Type: boolean

    Default: true

    Declared by:

    [15265]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15266]services.prosody.modules.bosh

    Enable BOSH clients, aka 'Jabber over HTTP'

    Type: boolean

    Default: false

    Declared by:

    [15267]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15268]services.prosody.modules.carbons

    Keep multiple clients in sync

    Type: boolean

    Default: true

    Declared by:

    [15269]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15270]services.prosody.modules.cloud_notify

    Push notifications to inform users of new messages or other pertinent information even when
    they have no XMPP clients online

    Type: boolean

    Default: true

    Declared by:

    [15271]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15272]services.prosody.modules.csi

    Implements the CSI protocol that allows clients to report their active/inactive state to the
    server

    Type: boolean

    Default: true

    Declared by:

    [15273]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15274]services.prosody.modules.dialback

    s2s dialback support

    Type: boolean

    Default: true

    Declared by:

    [15275]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15276]services.prosody.modules.disco

    Service discovery

    Type: boolean

    Default: true

    Declared by:

    [15277]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15278]services.prosody.modules.groups

    Shared roster support

    Type: boolean

    Default: false

    Declared by:

    [15279]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15280]services.prosody.modules.http_files

    Serve static files from a directory over HTTP

    Type: boolean

    Default: true

    Declared by:

    [15281]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15282]services.prosody.modules.legacyauth

    Legacy authentication. Only used by some old clients and bots

    Type: boolean

    Default: false

    Declared by:

    [15283]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15284]services.prosody.modules.limits

    Enable bandwidth limiting for XMPP connections

    Type: boolean

    Default: false

    Declared by:

    [15285]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15286]services.prosody.modules.mam

    Store messages in an archive and allow users to access it

    Type: boolean

    Default: true

    Declared by:

    [15287]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15288]services.prosody.modules.motd

    Send a message to users when they log in

    Type: boolean

    Default: false

    Declared by:

    [15289]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15290]services.prosody.modules.pep

    Enables users to publish their mood, activity, playing music and more

    Type: boolean

    Default: true

    Declared by:

    [15291]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15292]services.prosody.modules.ping

    Replies to XMPP pings with pongs

    Type: boolean

    Default: true

    Declared by:

    [15293]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15294]services.prosody.modules.private

    Private XML storage (for room bookmarks, etc.)

    Type: boolean

    Default: true

    Declared by:

    [15295]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15296]services.prosody.modules.proxy65

    Enables a file transfer proxy service which clients behind NAT can use

    Type: boolean

    Default: true

    Declared by:

    [15297]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15298]services.prosody.modules.register

    Allow users to register on this server using a client and change passwords

    Type: boolean

    Default: true

    Declared by:

    [15299]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15300]services.prosody.modules.roster

    Allow users to have a roster

    Type: boolean

    Default: true

    Declared by:

    [15301]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15302]services.prosody.modules.saslauth

    Authentication for clients and servers. Recommended if you want to log in.

    Type: boolean

    Default: true

    Declared by:

    [15303]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15304]services.prosody.modules.server_contact_info

    Publish contact information for this service

    Type: boolean

    Default: false

    Declared by:

    [15305]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15306]services.prosody.modules.smacks

    Allow a client to resume a disconnected session, and prevent message loss

    Type: boolean

    Default: true

    Declared by:

    [15307]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15308]services.prosody.modules.time

    Let others know the time here on this server

    Type: boolean

    Default: true

    Declared by:

    [15309]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15310]services.prosody.modules.tls

    Add support for secure TLS on c2s/s2s connections

    Type: boolean

    Default: true

    Declared by:

    [15311]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15312]services.prosody.modules.uptime

    Report how long server has been running

    Type: boolean

    Default: true

    Declared by:

    [15313]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15314]services.prosody.modules.vcard

    Allow users to set vCards

    Type: boolean

    Default: false

    Declared by:

    [15315]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15316]services.prosody.modules.vcard_legacy

    Converts users profiles and Avatars between old and new formats

    Type: boolean

    Default: true

    Declared by:

    [15317]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15318]services.prosody.modules.version

    Replies to server version requests

    Type: boolean

    Default: true

    Declared by:

    [15319]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15320]services.prosody.modules.watchregistrations

    Alert admins of registrations

    Type: boolean

    Default: false

    Declared by:

    [15321]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15322]services.prosody.modules.websocket

    Enable WebSocket support

    Type: boolean

    Default: false

    Declared by:

    [15323]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15324]services.prosody.modules.welcome

    Welcome users who register accounts

    Type: boolean

    Default: false

    Declared by:

    [15325]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15326]services.prosody.muc

    Multi User Chat (MUC) configuration

    Type: list of submodules

    Default: [ ]

    Example: [ { domain = "conference.my-xmpp-example-host.org"; } ]

    Declared by:

    [15327]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15328]services.prosody.muc.*.domain

    Domain name of the MUC

    Type: string

    Declared by:

    [15329]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15330]services.prosody.muc.*.extraConfig

    Additional MUC specific configuration

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [15331]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15332]services.prosody.muc.*.maxHistoryMessages

    Specifies a limit on what each room can be configured to keep

    Type: signed integer

    Default: 20

    Declared by:

    [15333]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15334]services.prosody.muc.*.name

    The name to return in service discovery responses for the MUC service itself

    Type: string

    Default: "Prosody Chatrooms"

    Declared by:

    [15335]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15336]services.prosody.muc.*.restrictRoomCreation

    Restrict room creation to server admins

    Type: one of true, false, "admin", "local"

    Default: false

    Declared by:

    [15337]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15338]services.prosody.muc.*.roomDefaultChangeSubject

    If set, the rooms will display the public JIDs by default.

    Type: boolean

    Default: false

    Declared by:

    [15339]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15340]services.prosody.muc.*.roomDefaultHistoryLength

    Number of history message sent to participants by default.

    Type: signed integer

    Default: 20

    Declared by:

    [15341]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15342]services.prosody.muc.*.roomDefaultLanguage

    Default room language.

    Type: string

    Default: "en"

    Declared by:

    [15343]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15344]services.prosody.muc.*.roomDefaultMembersOnly

    If set, the MUC rooms will only be accessible to the members by default.

    Type: boolean

    Default: false

    Declared by:

    [15345]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15346]services.prosody.muc.*.roomDefaultModerated

    If set, the MUC rooms will be moderated by default.

    Type: boolean

    Default: false

    Declared by:

    [15347]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15348]services.prosody.muc.*.roomDefaultPublic

    If set, the MUC rooms will be public by default.

    Type: boolean

    Default: true

    Declared by:

    [15349]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15350]services.prosody.muc.*.roomDefaultPublicJids

    If set, the MUC rooms will display the public JIDs by default.

    Type: boolean

    Default: false

    Declared by:

    [15351]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15352]services.prosody.muc.*.roomLockTimeout

    Timout after which the room is destroyed or unlocked if not configured, in seconds

    Type: signed integer

    Default: 300

    Declared by:

    [15353]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15354]services.prosody.muc.*.roomLocking

    Enables room locking, which means that a room must be configured before it can be used.
    Locked rooms are invisible and cannot be entered by anyone but the creator

    Type: boolean

    Default: true

    Declared by:

    [15355]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15356]services.prosody.muc.*.tombstoneExpiry

    This settings controls how long a tombstone is considered valid. It defaults to 31 days.
    After this time, the room in question can be created again.

    Type: signed integer

    Default: 2678400

    Declared by:

    [15357]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15358]services.prosody.muc.*.tombstones

    When a room is destroyed, it leaves behind a tombstone which prevents the room being entered
    or recreated. It also allows anyone who was not in the room at the time it was destroyed to
    learn about it, and to update their bookmarks. Tombstones prevents the case where someone
    could recreate a previously semi-anonymous room in order to learn the real JIDs of those who
    often join there.

    Type: boolean

    Default: true

    Declared by:

    [15359]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15360]services.prosody.muc.*.vcard_muc

    Adds the ability to set vCard for Multi User Chat rooms

    Type: boolean

    Default: true

    Declared by:

    [15361]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15362]services.prosody.s2sInsecureDomains

    Some servers have invalid or self-signed certificates. You can list remote domains here that
    will not be required to authenticate using certificates. They will be authenticated using DNS
    instead, even when s2s_secure_auth is enabled.

    Type: list of strings

    Default: [ ]

    Example: [ "insecure.example.com" ]

    Declared by:

    [15363]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15364]services.prosody.s2sRequireEncryption

    Force servers to use encrypted connections? This option will prevent servers from
    authenticating unless they are using encryption. Note that this is different from
    authentication.

    Type: boolean

    Default: true

    Declared by:

    [15365]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15366]services.prosody.s2sSecureAuth

    Force certificate authentication for server-to-server connections? This provides ideal
    security, but requires servers you communicate with to support encryption AND present valid,
    trusted certificates. For more information see https://prosody.im/doc/s2s#security

    Type: boolean

    Default: false

    Declared by:

    [15367]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15368]services.prosody.s2sSecureDomains

    Even if you leave s2s_secure_auth disabled, you can still require valid certificates for some
    domains by specifying a list here.

    Type: list of strings

    Default: [ ]

    Example: [ "jabber.org" ]

    Declared by:

    [15369]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15370]services.prosody.ssl

    Paths to SSL files

    Type: null or submodule

    Default: null

    Declared by:

    [15371]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15372]services.prosody.ssl.cert

    Path to the certificate file.

    Type: path

    Declared by:

    [15373]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15374]services.prosody.ssl.extraOptions

    Extra SSL configuration options.

    Type: attribute set

    Default: { }

    Declared by:

    [15375]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15376]services.prosody.ssl.key

    Path to the key file.

    Type: path

    Declared by:

    [15377]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15378]services.prosody.uploadHttp

    Configures the Prosody builtin HTTP server to handle user uploads.

    Type: null or submodule

    Default: null

    Example: { domain = "uploads.my-xmpp-example-host.org"; }

    Declared by:

    [15379]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15380]services.prosody.uploadHttp.domain

    Domain name for the http-upload service

    Type: null or string

    Declared by:

    [15381]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15382]services.prosody.uploadHttp.httpUploadPath

    Directory where the uploaded files will be stored. By default, uploaded files are put in a
    sub-directory of the default Prosody storage path (usually /var/lib/prosody).

    Type: string

    Default: "/var/lib/prosody"

    Declared by:

    [15383]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15384]services.prosody.uploadHttp.uploadExpireAfter

    Max age of a file before it gets deleted, in seconds.

    Type: string

    Default: "60 * 60 * 24 * 7"

    Declared by:

    [15385]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15386]services.prosody.uploadHttp.uploadFileSizeLimit

    Maximum file size, in bytes. Defaults to 50MB.

    Type: string

    Default: "50 * 1024 * 1024"

    Declared by:

    [15387]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15388]services.prosody.uploadHttp.userQuota

    Maximum size of all uploaded files per user, in bytes. There will be no quota if this option
    is set to null.

    Type: null or signed integer

    Default: null

    Example: 1234

    Declared by:

    [15389]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15390]services.prosody.user

    User account under which prosody runs.

    Type: string

    Default: "prosody"

    Declared by:

    [15391]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15392]services.prosody.virtualHosts

    Define the virtual hosts

    Type: attribute set of submodules

    Default: { localhost = { domain = "localhost"; enabled = true; } ; }

    Example: { myhost = { domain = "my-xmpp-example-host.org"; enabled = true; } ; }

    Declared by:

    [15393]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15394]services.prosody.virtualHosts.<name>.enabled

    Whether to enable the virtual host

    Type: boolean

    Default: false

    Declared by:

    [15395]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15396]services.prosody.virtualHosts.<name>.domain

    Domain name

    Type: string

    Declared by:

    [15397]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15398]services.prosody.virtualHosts.<name>.extraConfig

    Additional virtual host specific configuration

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [15399]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15400]services.prosody.virtualHosts.<name>.ssl

    Paths to SSL files

    Type: null or submodule

    Default: null

    Declared by:

    [15401]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15402]services.prosody.virtualHosts.<name>.ssl.cert

    Path to the certificate file.

    Type: path

    Declared by:

    [15403]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15404]services.prosody.virtualHosts.<name>.ssl.extraOptions

    Extra SSL configuration options.

    Type: attribute set

    Default: { }

    Declared by:

    [15405]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15406]services.prosody.virtualHosts.<name>.ssl.key

    Path to the key file.

    Type: path

    Declared by:

    [15407]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15408]services.prosody.xmppComplianceSuite

    The XEP-0423 defines a set of recommended XEPs to implement for a server. It's generally a
    good idea to implement this set of extensions if you want to provide your users with a good
    XMPP experience.

    This NixOS module aims to provide a "advanced server" experience as per defined in the
    XEP-0423[1] specification.

    Setting this option to true will prevent you from building a NixOS configuration which won't
    comply with this standard. You can explicitely decide to ignore this standard if you know
    what you are doing by setting this option to false.

    [1] https://xmpp.org/extensions/xep-0423.html

    Type: boolean

    Default: true

    Declared by:

    [15409]<nixpkgs/nixos/modules/services/networking/prosody.nix>

[15410]services.psd.enable

    Whether to enable the Profile Sync daemon.

    Type: boolean

    Default: false

    Declared by:

    [15411]<nixpkgs/nixos/modules/services/desktops/profile-sync-daemon.nix>

[15412]services.psd.resyncTimer

    The amount of time to wait before syncing browser profiles back to the disk.

    Takes a systemd.unit time span. The time unit defaults to seconds if omitted.

    Type: string

    Default: "1h"

    Example: "1h 30min"

    Declared by:

    [15413]<nixpkgs/nixos/modules/services/desktops/profile-sync-daemon.nix>

[15414]services.pykms.enable

    Whether to enable the PyKMS service.

    Type: boolean

    Default: false

    Declared by:

    [15415]<nixpkgs/nixos/modules/services/misc/pykms.nix>

[15416]services.pykms.extraArgs

    Additional arguments

    Type: list of strings

    Default: [ ]

    Declared by:

    [15417]<nixpkgs/nixos/modules/services/misc/pykms.nix>

[15418]services.pykms.listenAddress

    The IP address on which to listen.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [15419]<nixpkgs/nixos/modules/services/misc/pykms.nix>

[15420]services.pykms.logLevel

    How much to log

    Type: one of "CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG", "MININFO"

    Default: "INFO"

    Declared by:

    [15421]<nixpkgs/nixos/modules/services/misc/pykms.nix>

[15422]services.pykms.memoryLimit

    How much memory to use at most.

    Type: string

    Default: "64M"

    Declared by:

    [15423]<nixpkgs/nixos/modules/services/misc/pykms.nix>

[15424]services.pykms.openFirewallPort

    Whether the listening port should be opened automatically.

    Type: boolean

    Default: false

    Declared by:

    [15425]<nixpkgs/nixos/modules/services/misc/pykms.nix>

[15426]services.pykms.port

    The port on which to listen.

    Type: signed integer

    Default: 1688

    Declared by:

    [15427]<nixpkgs/nixos/modules/services/misc/pykms.nix>

[15428]services.qemuGuest.enable

    Whether to enable the qemu guest agent.

    Type: boolean

    Default: false

    Declared by:

    [15429]<nixpkgs/nixos/modules/virtualisation/qemu-guest-agent.nix>

[15430]services.qemuGuest.package

    The QEMU guest agent package.

    Type: package

    Default: (build of qemu-6.0.0)

    Declared by:

    [15431]<nixpkgs/nixos/modules/virtualisation/qemu-guest-agent.nix>

[15432]services.quake3-server.enable

    Whether to enable Quake 3 dedicated server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15433]<nixpkgs/nixos/modules/services/games/quake3-server.nix>

[15434]services.quake3-server.baseq3

    Path to the baseq3 files (pak*.pk3). If this is on the nix store (type = package) all .pk3
    files should be saved in the top-level directory. If this is on another filesystem (e.g /var/
    lib/baseq3) the .pk3 files are searched in $baseq3/.q3a/baseq3/

    Type: package or path

    Default: (build of baseq3)

    Example: "/var/lib/q3ds"

    Declared by:

    [15435]<nixpkgs/nixos/modules/services/games/quake3-server.nix>

[15436]services.quake3-server.extraConfig

    Extra configuration options. Note that options changed via RCON will not be persisted. To
    list all possible options, use "cvarlist 1" via RCON.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    seta rconPassword "superSecret"      // sets RCON password for remote console
    seta sv_hostname "My Quake 3 server"      // name that appears in server list
    ''

    Declared by:

    [15437]<nixpkgs/nixos/modules/services/games/quake3-server.nix>

[15438]services.quake3-server.openFirewall

    Open the firewall.

    Type: boolean

    Default: false

    Declared by:

    [15439]<nixpkgs/nixos/modules/services/games/quake3-server.nix>

[15440]services.quake3-server.port

    UDP Port the server should listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 27960

    Declared by:

    [15441]<nixpkgs/nixos/modules/services/games/quake3-server.nix>

[15442]services.quassel.enable

    Whether to enable the Quassel IRC client daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15443]<nixpkgs/nixos/modules/services/networking/quassel.nix>

[15444]services.quassel.package

    The package of the quassel daemon.

    Type: package

    Default: "pkgs.quasselDaemon"

    Example:

    pkgs.quasselDaemon

    Declared by:

    [15445]<nixpkgs/nixos/modules/services/networking/quassel.nix>

[15446]services.quassel.certificateFile

    Path to the certificate used for SSL connections with clients.

    Type: null or string

    Default: null

    Declared by:

    [15447]<nixpkgs/nixos/modules/services/networking/quassel.nix>

[15448]services.quassel.dataDir

    The directory holding configuration files, the SQlite database and the SSL Cert.

    Type: string

    Default: "/home/quassel/.config/quassel-irc.org"

    Declared by:

    [15449]<nixpkgs/nixos/modules/services/networking/quassel.nix>

[15450]services.quassel.interfaces

    The interfaces the Quassel daemon will be listening to. If `[ 127.0.0.1 ]', only clients on
    the local host can connect to it; if `[ 0.0.0.0 ]', clients can access it from any network
    interface.

    Type: list of strings

    Default: [ "127.0.0.1" ]

    Declared by:

    [15451]<nixpkgs/nixos/modules/services/networking/quassel.nix>

[15452]services.quassel.portNumber

    The port number the Quassel daemon will be listening to.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 4242

    Declared by:

    [15453]<nixpkgs/nixos/modules/services/networking/quassel.nix>

[15454]services.quassel.requireSSL

    Require SSL for connections from clients.

    Type: boolean

    Default: false

    Declared by:

    [15455]<nixpkgs/nixos/modules/services/networking/quassel.nix>

[15456]services.quassel.user

    The existing user the Quassel daemon should run as. If left empty, a default "quassel" user
    will be created.

    Type: null or string

    Default: null

    Declared by:

    [15457]<nixpkgs/nixos/modules/services/networking/quassel.nix>

[15458]services.quicktun

    QuickTun tunnels

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [15459]<nixpkgs/nixos/modules/services/networking/quicktun.nix>

[15460]services.quicktun.<name>.localAddress

    Type: string

    Example: "0.0.0.0"

    Declared by:

    [15461]<nixpkgs/nixos/modules/services/networking/quicktun.nix>

[15462]services.quicktun.<name>.localPort

    Type: signed integer

    Default: 2998

    Declared by:

    [15463]<nixpkgs/nixos/modules/services/networking/quicktun.nix>

[15464]services.quicktun.<name>.privateKey

    Type: string

    Declared by:

    [15465]<nixpkgs/nixos/modules/services/networking/quicktun.nix>

[15466]services.quicktun.<name>.protocol

    Type: string

    Default: "nacltai"

    Declared by:

    [15467]<nixpkgs/nixos/modules/services/networking/quicktun.nix>

[15468]services.quicktun.<name>.publicKey

    Type: string

    Declared by:

    [15469]<nixpkgs/nixos/modules/services/networking/quicktun.nix>

[15470]services.quicktun.<name>.remoteAddress

    Type: string

    Example: "tunnel.example.com"

    Declared by:

    [15471]<nixpkgs/nixos/modules/services/networking/quicktun.nix>

[15472]services.quicktun.<name>.remoteFloat

    Type: signed integer

    Default: 0

    Declared by:

    [15473]<nixpkgs/nixos/modules/services/networking/quicktun.nix>

[15474]services.quicktun.<name>.remotePort

    Type: signed integer

    Default: 2998

    Declared by:

    [15475]<nixpkgs/nixos/modules/services/networking/quicktun.nix>

[15476]services.quicktun.<name>.timeWindow

    Type: signed integer

    Default: 5

    Declared by:

    [15477]<nixpkgs/nixos/modules/services/networking/quicktun.nix>

[15478]services.quicktun.<name>.tunMode

    Type: signed integer

    Default: 0

    Example: 1

    Declared by:

    [15479]<nixpkgs/nixos/modules/services/networking/quicktun.nix>

[15480]services.quicktun.<name>.upScript

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [15481]<nixpkgs/nixos/modules/services/networking/quicktun.nix>

[15482]services.quorum.enable

    Whether to enable Quorum blockchain daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15483]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15484]services.quorum.blockperiod

    Default minimum difference between two consecutive block's timestamps in seconds.

    Type: signed integer

    Default: 5

    Declared by:

    [15485]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15486]services.quorum.genesis

    Blockchain genesis settings.

    Type: null or attribute set

    Default: null

    Example:

    {
             alloc = {
               a47385db68718bdcbddc2d2bb7c54018066ec111 = {
                 balance = "1000000000000000000000000000";
               };
             };
             coinbase = "0x0000000000000000000000000000000000000000";
             config = {
               byzantiumBlock = 4;
               chainId = 494702925;
               eip150Block = 2;
               eip155Block = 3;
               eip158Block = 3;
               homesteadBlock = 1;
               isQuorum = true;
               istanbul = {
                 epoch = 30000;
                 policy = 0;
               };
             };
             difficulty = "0x1";
             extraData = "0x0000000000000000000000000000000000000000000000000000000000000000f85ad59438f0508111273d8e482f49410ca4078afc86a961b8410000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0";
             gasLimit = "0x2FEFD800";
             mixHash = "0x63746963616c2062797a616e74696e65201111756c7420746f6c6572616e6365";
             nonce = "0x0";
             parentHash = "0x0000000000000000000000000000000000000000000000000000000000000000";
             timestamp = "0x00";
             }

    Declared by:

    [15487]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15488]services.quorum.group

    The group as which to run quorum.

    Type: string

    Default: "quorum"

    Declared by:

    [15489]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15490]services.quorum.nodekeyFile

    Path to the nodekey.

    Type: path

    Default: "/var/lib/quorum/nodekey"

    Declared by:

    [15491]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15492]services.quorum.permissioned

    Allow only a defined list of nodes to connect.

    Type: boolean

    Default: true

    Declared by:

    [15493]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15494]services.quorum.port

    Override the default port on which to listen for connections.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 21000

    Declared by:

    [15495]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15496]services.quorum.privateconfig

    Configuration of privacy transaction manager.

    Type: string

    Default: "ignore"

    Declared by:

    [15497]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15498]services.quorum.rpc.enable

    Enable RPC interface.

    Type: boolean

    Default: true

    Declared by:

    [15499]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15500]services.quorum.rpc.address

    Listening address for RPC connections.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [15501]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15502]services.quorum.rpc.api

    API's offered over the HTTP-RPC interface.

    Type: string

    Default: "admin,db,eth,debug,miner,net,shh,txpool,personal,web3,quorum,istanbul"

    Declared by:

    [15503]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15504]services.quorum.rpc.port

    Override the default port on which to listen for RPC connections.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 22004

    Declared by:

    [15505]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15506]services.quorum.staticNodes

    List of validator nodes.

    Type: list of strings

    Default: [ ]

    Example: [ "enode://
    dd333ec28f0a8910c92eb4d336461eea1c20803eed9cf2c056557f986e720f8e693605bba2f4e8f289b1162e5ac7c80c914c7178130711e393ca76abc1d92f57@0.0.0.0:30303?
    discport=0" ]

    Declared by:

    [15507]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15508]services.quorum.syncmode

    Blockchain sync mode.

    Type: one of "fast", "full", "light"

    Default: "full"

    Declared by:

    [15509]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15510]services.quorum.user

    The user as which to run quorum.

    Type: string

    Default: "quorum"

    Declared by:

    [15511]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15512]services.quorum.ws.enable

    Enable WS-RPC interface.

    Type: boolean

    Default: true

    Declared by:

    [15513]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15514]services.quorum.ws.address

    Listening address for WS-RPC connections.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [15515]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15516]services.quorum.ws.api

    API's offered over the WS-RPC interface.

    Type: string

    Default: "admin,db,eth,debug,miner,net,shh,txpool,personal,web3,quorum,istanbul"

    Declared by:

    [15517]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15518]services.quorum.ws.origins

    Origins from which to accept websockets requests

    Type: string

    Default: "*"

    Declared by:

    [15519]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15520]services.quorum.ws.port

    Override the default port on which to listen for WS-RPC connections.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8546

    Declared by:

    [15521]<nixpkgs/nixos/modules/services/networking/quorum.nix>

[15522]services.rabbitmq.enable

    Whether to enable the RabbitMQ server, an Advanced Message Queuing Protocol (AMQP) broker.

    Type: boolean

    Default: false

    Declared by:

    [15523]<nixpkgs/nixos/modules/services/amqp/rabbitmq.nix>

[15524]services.rabbitmq.package

    Which rabbitmq package to use.

    Type: package

    Default: "pkgs.rabbitmq-server"

    Declared by:

    [15525]<nixpkgs/nixos/modules/services/amqp/rabbitmq.nix>

[15526]services.rabbitmq.config

    Verbatim advanced configuration file contents using the Erlang syntax. This is also known as
    the advanced.config file or the old config format.

    configItems is preferred whenever possible. However, nested data structures can only be
    expressed properly using the config option.

    The contents of this option will be merged into the configItems by RabbitMQ at runtime to
    form the final configuration.

    See the second table on https://www.rabbitmq.com/configure.html#config-items For the distinct
    formats, see https://www.rabbitmq.com/configure.html#config-file-formats

    Type: string

    Default: ""

    Declared by:

    [15527]<nixpkgs/nixos/modules/services/amqp/rabbitmq.nix>

[15528]services.rabbitmq.configItems

    Configuration options in RabbitMQ's new config file format, which is a simple key-value
    format that can not express nested data structures. This is known as the rabbitmq.conf file,
    although outside NixOS that filename may have Erlang syntax, particularly prior to RabbitMQ
    3.7.0.

    If you do need to express nested data structures, you can use config option. Configuration
    from config will be merged into these options by RabbitMQ at runtime to form the final
    configuration.

    See https://www.rabbitmq.com/configure.html#config-items For the distinct formats, see https:
    //www.rabbitmq.com/configure.html#config-file-formats

    Type: attribute set of strings

    Default: { }

    Example:

    {
      "auth_backends.1.authn" = "rabbit_auth_backend_ldap";
      "auth_backends.1.authz" = "rabbit_auth_backend_internal";
    }

    Declared by:

    [15529]<nixpkgs/nixos/modules/services/amqp/rabbitmq.nix>

[15530]services.rabbitmq.cookie

    Erlang cookie is a string of arbitrary length which must be the same for several nodes to be
    allowed to communicate. Leave empty to generate automatically.

    Type: string

    Default: ""

    Declared by:

    [15531]<nixpkgs/nixos/modules/services/amqp/rabbitmq.nix>

[15532]services.rabbitmq.dataDir

    Data directory for rabbitmq.

    Type: path

    Default: "/var/lib/rabbitmq"

    Declared by:

    [15533]<nixpkgs/nixos/modules/services/amqp/rabbitmq.nix>

[15534]services.rabbitmq.listenAddress

    IP address on which RabbitMQ will listen for AMQP connections. Set to the empty string to
    listen on all interfaces. Note that RabbitMQ creates a user named guest with password guest
    by default, so you should delete this user if you intend to allow external access.

    Together with 'port' setting it's mostly an alias for configItems."listeners.tcp.1" and it's
    left for backwards compatibility with previous version of this module.

    Type: string

    Default: "127.0.0.1"

    Example: ""

    Declared by:

    [15535]<nixpkgs/nixos/modules/services/amqp/rabbitmq.nix>

[15536]services.rabbitmq.pluginDirs

    The list of directories containing external plugins

    Type: list of paths

    Default: [ ]

    Declared by:

    [15537]<nixpkgs/nixos/modules/services/amqp/rabbitmq.nix>

[15538]services.rabbitmq.plugins

    The names of plugins to enable

    Type: list of strings

    Default: [ ]

    Declared by:

    [15539]<nixpkgs/nixos/modules/services/amqp/rabbitmq.nix>

[15540]services.rabbitmq.port

    Port on which RabbitMQ will listen for AMQP connections.

    Type: signed integer

    Default: 5672

    Declared by:

    [15541]<nixpkgs/nixos/modules/services/amqp/rabbitmq.nix>

[15542]services.racoon.enable

    Whether to enable racoon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15543]<nixpkgs/nixos/modules/services/networking/racoon.nix>

[15544]services.racoon.config

    Contents of racoon configuration file.

    Type: string

    Default: ""

    Declared by:

    [15545]<nixpkgs/nixos/modules/services/networking/racoon.nix>

[15546]services.racoon.configPath

    Location of racoon config if config is not provided.

    Type: path

    Default: "/etc/racoon/racoon.conf"

    Declared by:

    [15547]<nixpkgs/nixos/modules/services/networking/racoon.nix>

[15548]services.radarr.enable

    Whether to enable Radarr.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15549]<nixpkgs/nixos/modules/services/misc/radarr.nix>

[15550]services.radarr.dataDir

    The directory where Radarr stores its data files.

    Type: string

    Default: "/var/lib/radarr/.config/Radarr"

    Declared by:

    [15551]<nixpkgs/nixos/modules/services/misc/radarr.nix>

[15552]services.radarr.group

    Group under which Radarr runs.

    Type: string

    Default: "radarr"

    Declared by:

    [15553]<nixpkgs/nixos/modules/services/misc/radarr.nix>

[15554]services.radarr.openFirewall

    Open ports in the firewall for the Radarr web interface.

    Type: boolean

    Default: false

    Declared by:

    [15555]<nixpkgs/nixos/modules/services/misc/radarr.nix>

[15556]services.radarr.user

    User account under which Radarr runs.

    Type: string

    Default: "radarr"

    Declared by:

    [15557]<nixpkgs/nixos/modules/services/misc/radarr.nix>

[15558]services.radicale.enable

    Whether to enable Radicale CalDAV and CardDAV server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15559]<nixpkgs/nixos/modules/services/networking/radicale.nix>

[15560]services.radicale.package

    Radicale package to use.

    Type: package

    Default: "pkgs.radicale"

    Declared by:

    [15561]<nixpkgs/nixos/modules/services/networking/radicale.nix>

[15562]services.radicale.config

    Radicale configuration, this will set the service configuration file. This option is mutually
    exclusive with settings. This option is deprecated. Use settings instead.

    Type: string

    Default: ""

    Declared by:

    [15563]<nixpkgs/nixos/modules/services/networking/radicale.nix>

[15564]services.radicale.extraArgs

    Extra arguments passed to the Radicale daemon.

    Type: list of strings

    Default: [ ]

    Declared by:

    [15565]<nixpkgs/nixos/modules/services/networking/radicale.nix>

[15566]services.radicale.rights

    Configuration for Radicale's rights file. See [15567]https://radicale.org/3.0.html#
    documentation/authentication-and-rights. This option only works in conjunction with settings.
    Setting this will also set settings.rights.type and settings.rights.file to approriate
    values.

    Type: attribute set of attribute set of INI atom (null, bool, int, float or string) or a
    non-empty list of themss

    Default: { }

    Example:

    root = {
      user = ".+";
      collection = "";
      permissions = "R";
    };
    principal = {
      user = ".+";
      collection = "{user}";
      permissions = "RW";
    };
    calendars = {
      user = ".+";
      collection = "{user}/[^/]+";
      permissions = "rw";
    };

    Declared by:

    [15568]<nixpkgs/nixos/modules/services/networking/radicale.nix>

[15569]services.radicale.settings

    Configuration for Radicale. See [15570]https://radicale.org/3.0.html#documentation/
    configuration. This option is mutually exclusive with config.

    Type: attribute set of attribute set of INI atom (null, bool, int, float or string) or a
    non-empty list of themss

    Default: { }

    Example:

    server = {
      hosts = [ "0.0.0.0:5232" "[::]:5232" ];
    };
    auth = {
      type = "htpasswd";
      htpasswd_filename = "/etc/radicale/users";
      htpasswd_encryption = "bcrypt";
    };
    storage = {
      filesystem_folder = "/var/lib/radicale/collections";
    };

    Declared by:

    [15571]<nixpkgs/nixos/modules/services/networking/radicale.nix>

[15572]services.radvd.enable

    Whether to enable the Router Advertisement Daemon (radvd), which provides link-local
    advertisements of IPv6 router addresses and prefixes using the Neighbor Discovery Protocol
    (NDP). This enables stateless address autoconfiguration in IPv6 clients on the network.

    Type: boolean

    Default: false

    Declared by:

    [15573]<nixpkgs/nixos/modules/services/networking/radvd.nix>

[15574]services.radvd.config

    The contents of the radvd configuration file.

    Type: strings concatenated with "\n"

    Example:

    ''
    interface eth0 {
      AdvSendAdvert on;
      prefix 2001:db8:1234:5678::/64 { };
    };
    ''

    Declared by:

    [15575]<nixpkgs/nixos/modules/services/networking/radvd.nix>

[15576]services.railcar.enable

    Whether to enable railcar.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15577]<nixpkgs/nixos/modules/virtualisation/railcar.nix>

[15578]services.railcar.package

    Railcar package to use

    Type: package

    Default: (build of railcar-1.0.4)

    Declared by:

    [15579]<nixpkgs/nixos/modules/virtualisation/railcar.nix>

[15580]services.railcar.containers

    Declarative container configuration

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [15581]<nixpkgs/nixos/modules/virtualisation/railcar.nix>

[15582]services.railcar.containers.<name>.arch

    Computer architecture type of the container

    Type: string

    Default: "x86_64"

    Declared by:

    [15583]<nixpkgs/nixos/modules/virtualisation/railcar.nix>

[15584]services.railcar.containers.<name>.cmd

    Command or script to run inside the container

    Type: strings concatenated with "\n"

    Declared by:

    [15585]<nixpkgs/nixos/modules/virtualisation/railcar.nix>

[15586]services.railcar.containers.<name>.mounts

    A set of mounts inside the container.

    The defaults have been chosen for simple bindmounts, meaning that you only need to provide
    the "source" parameter.

    Type: attribute set of submodules

    Default: { }

    Example:

    ''
    { "/data" = { source = "/var/lib/data"; }; }
    ''

    Declared by:

    [15587]<nixpkgs/nixos/modules/virtualisation/railcar.nix>

[15588]services.railcar.containers.<name>.mounts.<name>.options

    Mount options of the filesystem to be used.

    Support options are listed in the mount(8) man page. Note that both filesystem-independent
    and filesystem-specific options are listed.

    Type: attribute set of strings

    Default: [ "bind" ]

    Declared by:

    [15589]<nixpkgs/nixos/modules/virtualisation/railcar.nix>

[15590]services.railcar.containers.<name>.mounts.<name>.source

    Source for the in-container mount

    Type: string

    Declared by:

    [15591]<nixpkgs/nixos/modules/virtualisation/railcar.nix>

[15592]services.railcar.containers.<name>.mounts.<name>.type

    The type of the filesystem to be mounted. Linux: filesystem types supported by the kernel as
    listed in `/proc/filesystems` (e.g., "minix", "ext2", "ext3", "jfs", "xfs", "reiserfs",
    "msdos", "proc", "nfs", "iso9660"). For bind mounts (when options include either bind or
    rbind), the type is a dummy, often "none" (not listed in /proc/filesystems).

    Type: string

    Default: "none"

    Declared by:

    [15593]<nixpkgs/nixos/modules/virtualisation/railcar.nix>

[15594]services.railcar.containers.<name>.os

    OS type of the container

    Type: string

    Default: "linux"

    Declared by:

    [15595]<nixpkgs/nixos/modules/virtualisation/railcar.nix>

[15596]services.railcar.containers.<name>.runType

    The systemd service run type

    Type: string

    Default: "oneshot"

    Declared by:

    [15597]<nixpkgs/nixos/modules/virtualisation/railcar.nix>

[15598]services.railcar.stateDir

    Railcar persistent state directory

    Type: path

    Default: "/var/railcar"

    Declared by:

    [15599]<nixpkgs/nixos/modules/virtualisation/railcar.nix>

[15600]services.ratbagd.enable

    Whether to enable ratbagd for configuring gaming mice.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15601]<nixpkgs/nixos/modules/services/hardware/ratbagd.nix>

[15602]services.rdnssd.enable

    Whether to enable the RDNSS daemon (rdnssd), which configures DNS servers in /etc/resolv.conf
    from RDNSS advertisements sent by IPv6 routers.

    Type: boolean

    Default: false

    Declared by:

    [15603]<nixpkgs/nixos/modules/services/networking/rdnssd.nix>

[15604]services.redis.enable

    Whether to enable the Redis server. Note that the NixOS module for Redis disables kernel
    support for Transparent Huge Pages (THP), because this features causes major performance
    problems for Redis, e.g. (https://redis.io/topics/latency).

    Type: boolean

    Default: false

    Declared by:

    [15605]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15606]services.redis.package

    Which Redis derivation to use.

    Type: package

    Default: "pkgs.redis"

    Declared by:

    [15607]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15608]services.redis.appendFsync

    How often to fsync the append-only log, options: no, always, everysec.

    Type: string

    Default: "everysec"

    Declared by:

    [15609]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15610]services.redis.appendOnly

    By default data is only periodically persisted to disk, enable this option to use an
    append-only file for improved persistence.

    Type: boolean

    Default: false

    Declared by:

    [15611]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15612]services.redis.bind

    The IP interface to bind to. null means "all interfaces".

    Type: null or string

    Default: "127.0.0.1"

    Example: "192.0.2.1"

    Declared by:

    [15613]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15614]services.redis.databases

    Set the number of databases.

    Type: signed integer

    Default: 16

    Declared by:

    [15615]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15616]services.redis.logLevel

    Specify the server verbosity level, options: debug, verbose, notice, warning.

    Type: string

    Default: "notice"

    Example: "debug"

    Declared by:

    [15617]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15618]services.redis.logfile

    Specify the log file name. Also 'stdout' can be used to force Redis to log on the standard
    output.

    Type: string

    Default: "/dev/null"

    Example: "/var/log/redis.log"

    Declared by:

    [15619]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15620]services.redis.masterAuth

    If the master is password protected (using the requirePass configuration) it is possible to
    tell the slave to authenticate before starting the replication synchronization process,
    otherwise the master will refuse the slave request. (STORED PLAIN TEXT, WORLD-READABLE IN NIX
    STORE)

    Type: null or string

    Default: null

    Declared by:

    [15621]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15622]services.redis.maxclients

    Set the max number of connected clients at the same time.

    Type: signed integer

    Default: 10000

    Declared by:

    [15623]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15624]services.redis.openFirewall

    Whether to open ports in the firewall for the server.

    Type: boolean

    Default: false

    Declared by:

    [15625]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15626]services.redis.port

    The port for Redis to listen to.

    Type: signed integer

    Default: 6379

    Declared by:

    [15627]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15628]services.redis.requirePass

    Password for database (STORED PLAIN TEXT, WORLD-READABLE IN NIX STORE). Use requirePassFile
    to store it outside of the nix store in a dedicated file.

    Type: null or string

    Default: null

    Example: "letmein!"

    Declared by:

    [15629]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15630]services.redis.requirePassFile

    File with password for the database.

    Type: null or path

    Default: null

    Example: "/run/keys/redis-password"

    Declared by:

    [15631]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15632]services.redis.save

    The schedule in which data is persisted to disk, represented as a list of lists where the
    first element represent the amount of seconds and the second the number of changes.

    Type: list of list of signed integerss

    Default: [ [ 900 1 ] [ 300 10 ] [ 60 10000 ] ]

    Example: [ [ 900 1 ] [ 300 10 ] [ 60 10000 ] ]

    Declared by:

    [15633]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15634]services.redis.settings

    Redis configuration. Refer to [15635]https://redis.io/topics/config for details on supported
    values.

    Type: attribute set of boolean or signed integer or string or list of stringss

    Default: { }

    Example:

    {
      loadmodule = [ "/path/to/my_module.so" "/path/to/other_module.so" ];
    }

    Declared by:

    [15636]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15637]services.redis.slaveOf

    IP and port to which this redis instance acts as a slave.

    Type: null or submodule

    Default: null

    Example: { ip = "192.168.1.100"; port = 6379; }

    Declared by:

    [15638]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15639]services.redis.slaveOf.ip

    IP of the Redis master

    Type: string

    Example: "192.168.1.100"

    Declared by:

    [15640]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15641]services.redis.slaveOf.port

    port of the Redis master

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 6379

    Declared by:

    [15642]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15643]services.redis.slowLogLogSlowerThan

    Log queries whose execution take longer than X in milliseconds.

    Type: signed integer

    Default: 10000

    Example: 1000

    Declared by:

    [15644]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15645]services.redis.slowLogMaxLen

    Maximum number of items to keep in slow log.

    Type: signed integer

    Default: 128

    Declared by:

    [15646]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15647]services.redis.syslog

    Enable logging to the system logger.

    Type: boolean

    Default: true

    Declared by:

    [15648]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15649]services.redis.unixSocket

    The path to the socket to bind to.

    Type: null or path

    Default: null

    Example: "/run/redis/redis.sock"

    Declared by:

    [15650]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15651]services.redis.unixSocketPerm

    Change permissions for the socket

    Type: signed integer

    Default: 750

    Example: 700

    Declared by:

    [15652]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15653]services.redis.vmOverCommit

    Set vm.overcommit_memory to 1 (Suggested for Background Saving: http://redis.io/topics/faq)

    Type: boolean

    Default: false

    Declared by:

    [15654]<nixpkgs/nixos/modules/services/databases/redis.nix>

[15655]services.redmine.enable

    Whether to enable Redmine.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15656]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15657]services.redmine.package

    Which Redmine package to use.

    Type: package

    Default: (build of redmine-4.2.1)

    Example: "pkgs.redmine.override { ruby = pkgs.ruby_2_7; }"

    Declared by:

    [15658]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15659]services.redmine.database.createLocally

    Create the database and database user locally.

    Type: boolean

    Default: true

    Declared by:

    [15660]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15661]services.redmine.database.host

    Database host address.

    Type: string

    Default: "localhost"

    Declared by:

    [15662]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15663]services.redmine.database.name

    Database name.

    Type: string

    Default: "redmine"

    Declared by:

    [15664]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15665]services.redmine.database.passwordFile

    A file containing the password corresponding to database.user.

    Type: null or path

    Default: null

    Example: "/run/keys/redmine-dbpassword"

    Declared by:

    [15666]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15667]services.redmine.database.port

    Database host port.

    Type: signed integer

    Default: "3306"

    Declared by:

    [15668]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15669]services.redmine.database.socket

    Path to the unix socket file to use for authentication.

    Type: null or path

    Default: "/run/mysqld/mysqld.sock"

    Example: "/run/mysqld/mysqld.sock"

    Declared by:

    [15670]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15671]services.redmine.database.type

    Database engine to use.

    Type: one of "mysql2", "postgresql"

    Default: "mysql2"

    Example: "postgresql"

    Declared by:

    [15672]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15673]services.redmine.database.user

    Database user.

    Type: string

    Default: "redmine"

    Declared by:

    [15674]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15675]services.redmine.extraEnv

    Extra configuration in additional_environment.rb.

    See [15676]https://svn.redmine.org/redmine/trunk/config/additional_environment.rb.example for
    details.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    config.logger.level = Logger::DEBUG

    Declared by:

    [15677]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15678]services.redmine.group

    Group under which Redmine is ran.

    Type: string

    Default: "redmine"

    Declared by:

    [15679]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15680]services.redmine.plugins

    Set of plugins.

    Type: attribute set of paths

    Default: { }

    Example:

    {
      redmine_env_auth = builtins.fetchurl {
        url = "https://github.com/Intera/redmine_env_auth/archive/0.6.zip";
        sha256 = "0yyr1yjd8gvvh832wdc8m3xfnhhxzk2pk3gm2psg5w9jdvd6skak";
      };
    }

    Declared by:

    [15681]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15682]services.redmine.port

    Port on which Redmine is ran.

    Type: signed integer

    Default: 3000

    Declared by:

    [15683]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15684]services.redmine.settings

    Redmine configuration (configuration.yml). Refer to [15685]https://guides.rubyonrails.org/
    action_mailer_basics.html#action-mailer-configuration for details.

    Type: YAML value

    Default: { }

    Example:

    {
      email_delivery = {
        delivery_method = "smtp";
        smtp_settings = {
          address = "mail.example.com";
          port = 25;
        };
      };
    }

    Declared by:

    [15686]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15687]services.redmine.stateDir

    The state directory, logs and plugins are stored here.

    Type: string

    Default: "/var/lib/redmine"

    Declared by:

    [15688]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15689]services.redmine.themes

    Set of themes.

    Type: attribute set of paths

    Default: { }

    Example:

    {
      dkuk-redmine_alex_skin = builtins.fetchurl {
        url = "https://bitbucket.org/dkuk/redmine_alex_skin/get/1842ef675ef3.zip";
        sha256 = "0hrin9lzyi50k4w2bd2b30vrf1i4fi1c0gyas5801wn8i7kpm9yl";
      };
    }

    Declared by:

    [15690]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15691]services.redmine.user

    User under which Redmine is ran.

    Type: string

    Default: "redmine"

    Declared by:

    [15692]<nixpkgs/nixos/modules/services/misc/redmine.nix>

[15693]services.redshift.enable

    Enable Redshift to change your screen's colour temperature depending on the time of day.

    Type: boolean

    Default: false

    Declared by:

    [15694]<nixpkgs/nixos/modules/services/x11/redshift.nix>

[15695]services.redshift.package

    redshift derivation to use.

    Type: package

    Default: "pkgs.redshift"

    Declared by:

    [15696]<nixpkgs/nixos/modules/services/x11/redshift.nix>

[15697]services.redshift.brightness.day

    Screen brightness to apply during the day, between 0.1 and 1.0.

    Type: string

    Default: "1"

    Declared by:

    [15698]<nixpkgs/nixos/modules/services/x11/redshift.nix>

[15699]services.redshift.brightness.night

    Screen brightness to apply during the night, between 0.1 and 1.0.

    Type: string

    Default: "1"

    Declared by:

    [15700]<nixpkgs/nixos/modules/services/x11/redshift.nix>

[15701]services.redshift.executable

    Redshift executable to use within the package.

    Type: string

    Default: "/bin/redshift"

    Example: "/bin/redshift-gtk"

    Declared by:

    [15702]<nixpkgs/nixos/modules/services/x11/redshift.nix>

[15703]services.redshift.extraOptions

    Additional command-line arguments to pass to redshift.

    Type: list of strings

    Default: [ ]

    Example: [ "-v" "-m randr" ]

    Declared by:

    [15704]<nixpkgs/nixos/modules/services/x11/redshift.nix>

[15705]services.redshift.temperature.day

    Colour temperature to use during the day, between 1000 and 25000 K.

    Type: signed integer

    Default: 5500

    Declared by:

    [15706]<nixpkgs/nixos/modules/services/x11/redshift.nix>

[15707]services.redshift.temperature.night

    Colour temperature to use at night, between 1000 and 25000 K.

    Type: signed integer

    Default: 3700

    Declared by:

    [15708]<nixpkgs/nixos/modules/services/x11/redshift.nix>

[15709]services.redsocks.enable

    Whether to enable redsocks.

    Type: boolean

    Default: false

    Declared by:

    [15710]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15711]services.redsocks.chroot

    Chroot under which to run redsocks. Log file is opened before chroot, but if logging to
    syslog /etc/localtime may be required.

    Type: null or string

    Default: null

    Declared by:

    [15712]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15713]services.redsocks.log

    Where to send logs.

    Possible values are: - stderr - file:/path/to/file - syslog:FACILITY where FACILITY is any of
    "daemon", "local0", etc.

    Type: string

    Default: "stderr"

    Declared by:

    [15714]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15715]services.redsocks.log_debug

    Log connection progress.

    Type: boolean

    Default: false

    Declared by:

    [15716]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15717]services.redsocks.log_info

    Log start and end of client sessions.

    Type: boolean

    Default: false

    Declared by:

    [15718]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15719]services.redsocks.redsocks

    Local port to proxy associations to be performed.

    The example shows how to configure a proxy to handle port 80 as HTTP relay, and all other
    ports as HTTP connect.

    Type: list of submodules

    Example: [ { doNotRedirect = [ "-d 1.2.0.0/16" ] ; port = 23456; proxy = "1.2.3.4:8080";
    redirectCondition = "--dport 80"; type = "http-relay"; } { doNotRedirect = [ "-d 1.2.0.0/16"
    ] ; port = 23457; proxy = "1.2.3.4:8080"; redirectCondition = true; type = "http-connect"; }
    ]

    Declared by:

    [15720]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15721]services.redsocks.redsocks.*.disclose_src

    Way to disclose client IP to the proxy. - "false": do not disclose http-connect supports the
    following ways: - "X-Forwarded-For": add header "X-Forwarded-For: IP" - "Forwarded_ip": add
    header "Forwarded: for=IP" (see RFC7239) - "Forwarded_ipport": add header 'Forwarded: for=
    "IP:port"'

    Type: one of "false", "X-Forwarded-For", "Forwarded_ip", "Forwarded_ipport"

    Default: "false"

    Declared by:

    [15722]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15723]services.redsocks.redsocks.*.doNotRedirect

    Iptables filters that if matched will get the packet off of redsocks.

    Type: list of strings

    Default: [ ]

    Example: [ "-d 1.2.3.4" ]

    Declared by:

    [15724]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15725]services.redsocks.redsocks.*.ip

    IP on which redsocks should listen. Defaults to 127.0.0.1 for security reasons.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [15726]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15727]services.redsocks.redsocks.*.login

    Login to send to proxy.

    Type: null or string

    Default: null

    Declared by:

    [15728]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15729]services.redsocks.redsocks.*.password

    Password to send to proxy. WARNING, this will end up world-readable in the store! Awaiting
    https://github.com/NixOS/nix/issues/8 to be able to fix.

    Type: null or string

    Default: null

    Declared by:

    [15730]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15731]services.redsocks.redsocks.*.port

    Port on which redsocks should listen.

    Type: signed integer

    Default: 12345

    Declared by:

    [15732]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15733]services.redsocks.redsocks.*.proxy

    Proxy through which redsocks should forward incoming traffic. Example: "example.org:8080"

    Type: string

    Declared by:

    [15734]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15735]services.redsocks.redsocks.*.redirectCondition

    Conditions to make outbound packets go through this redsocks instance.

    If set to false, no packet will be forwarded. If set to true, all packets will be forwarded
    (except packets excluded by redirectInternetOnly).

    If set to a string, this is an iptables filter that will be matched against packets before
    getting them into redsocks. For example, setting it to "--dport 80" will only send packets to
    port 80 to redsocks. Note "-p tcp" is always implicitly added, as udp can only be proxied
    through redudp or the like.

    Type: boolean or string

    Default: false

    Declared by:

    [15736]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15737]services.redsocks.redsocks.*.redirectInternetOnly

    Exclude all non-globally-routable IPs from redsocks

    Type: boolean

    Default: true

    Declared by:

    [15738]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15739]services.redsocks.redsocks.*.type

    Type of proxy.

    Type: one of "socks4", "socks5", "http-connect", "http-relay"

    Declared by:

    [15740]<nixpkgs/nixos/modules/services/networking/redsocks.nix>

[15741]services.resilio.enable

    If enabled, start the Resilio Sync daemon. Once enabled, you can interact with the service
    through the Web UI, or configure it in your NixOS configuration.

    Type: boolean

    Default: false

    Declared by:

    [15742]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15743]services.resilio.enableWebUI

    Enable Web UI for administration. Bound to the specified httpListenAddress and
    httpListenPort.

    Type: boolean

    Default: false

    Declared by:

    [15744]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15745]services.resilio.apiKey

    API key, which enables the developer API.

    Type: string

    Default: ""

    Declared by:

    [15746]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15747]services.resilio.checkForUpdates

    Determines whether to check for updates and alert the user about them in the UI.

    Type: boolean

    Default: true

    Declared by:

    [15748]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15749]services.resilio.deviceName

    Name of the Resilio Sync device.

    Type: string

    Default: "nixos"

    Example: "Voltron"

    Declared by:

    [15750]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15751]services.resilio.directoryRoot

    Default directory to add folders in the web UI.

    Type: string

    Default: ""

    Example: "/media"

    Declared by:

    [15752]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15753]services.resilio.downloadLimit

    Download speed limit. 0 is unlimited (default).

    Type: signed integer

    Default: 0

    Example: 1024

    Declared by:

    [15754]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15755]services.resilio.encryptLAN

    Encrypt LAN data.

    Type: boolean

    Default: true

    Declared by:

    [15756]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15757]services.resilio.httpListenAddr

    HTTP address to bind to.

    Type: string

    Default: "[::1]"

    Example: "0.0.0.0"

    Declared by:

    [15758]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15759]services.resilio.httpListenPort

    HTTP port to bind on.

    Type: signed integer

    Default: 9000

    Declared by:

    [15760]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15761]services.resilio.httpLogin

    HTTP web login username.

    Type: string

    Default: ""

    Example: "allyourbase"

    Declared by:

    [15762]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15763]services.resilio.httpPass

    HTTP web login password.

    Type: string

    Default: ""

    Example: "arebelongtous"

    Declared by:

    [15764]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15765]services.resilio.listeningPort

    Listening port. Defaults to 0 which randomizes the port.

    Type: signed integer

    Default: 0

    Example: 44444

    Declared by:

    [15766]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15767]services.resilio.sharedFolders

    Shared folder list. If enabled, web UI must be disabled. Secrets can be generated using
    rslsync --generate-secret. Note that this secret will be put inside the Nix store, so it is
    realistically not very secret.

    If you would like to be able to modify the contents of this directories, it is recommended
    that you make your user a member of the rslsync group.

    Directories in this list should be in the rslsync group, and that group must have write
    access to the directory. It is also recommended that chmod g+s is applied to the directory so
    that any sub directories created will also belong to the rslsync group. Also, setfacl -d -m
    group:rslsync:rwx and setfacl -m group:rslsync:rwx should also be applied so that the sub
    directories are writable by the group.

    Type: list of attribute set of anythingss

    Default: [ ]

    Example: [ { directory = "/home/user/sync_test"; knownHosts = [ "192.168.1.2:4444"
    "192.168.1.3:4444" ] ; searchLAN = true; secret = "AHMYFPCQAHBM7LQPFXQ7WV6Y42IGUXJ5Y"; useDHT
    = false; useRelayServer = true; useSyncTrash = true; useTracker = true; } ]

    Declared by:

    [15768]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15769]services.resilio.storagePath

    Where BitTorrent Sync will store it's database files (containing things like username info
    and licenses). Generally, you should not need to ever change this.

    Type: path

    Default: "/var/lib/resilio-sync/"

    Declared by:

    [15770]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15771]services.resilio.uploadLimit

    Upload speed limit. 0 is unlimited (default).

    Type: signed integer

    Default: 0

    Example: 1024

    Declared by:

    [15772]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15773]services.resilio.useUpnp

    Use Universal Plug-n-Play (UPnP)

    Type: boolean

    Default: true

    Declared by:

    [15774]<nixpkgs/nixos/modules/services/networking/resilio.nix>

[15775]services.resolved.enable

    Whether to enable the systemd DNS resolver daemon.

    Type: boolean

    Default: false

    Declared by:

    [15776]<nixpkgs/nixos/modules/system/boot/resolved.nix>

[15777]services.resolved.dnssec

    If set to

    "true"

        all DNS lookups are DNSSEC-validated locally (excluding LLMNR and Multicast DNS). Note
        that this mode requires a DNS server that supports DNSSEC. If the DNS server does not
        properly support DNSSEC all validations will fail.

    "allow-downgrade"

        DNSSEC validation is attempted, but if the server does not support DNSSEC properly,
        DNSSEC mode is automatically disabled. Note that this mode makes DNSSEC validation
        vulnerable to "downgrade" attacks, where an attacker might be able to trigger a downgrade
        to non-DNSSEC mode by synthesizing a DNS response that suggests DNSSEC was not supported.

    "false"

        DNS lookups are not DNSSEC validated.

    Type: one of "true", "allow-downgrade", "false"

    Default: "allow-downgrade"

    Example: "true"

    Declared by:

    [15778]<nixpkgs/nixos/modules/system/boot/resolved.nix>

[15779]services.resolved.domains

    A list of domains. These domains are used as search suffixes when resolving single-label host
    names (domain names which contain no dot), in order to qualify them into fully-qualified
    domain names (FQDNs).

    For compatibility reasons, if this setting is not specified, the search domains listed in /
    etc/resolv.conf are used instead, if that file exists and any domains are configured in it.

    Type: list of strings

    Default: [ ]

    Example: [ "example.com" ]

    Declared by:

    [15780]<nixpkgs/nixos/modules/system/boot/resolved.nix>

[15781]services.resolved.extraConfig

    Extra config to append to resolved.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [15782]<nixpkgs/nixos/modules/system/boot/resolved.nix>

[15783]services.resolved.fallbackDns

    A list of IPv4 and IPv6 addresses to use as the fallback DNS servers. If this option is
    empty, a compiled-in list of DNS servers is used instead.

    Type: list of strings

    Default: [ ]

    Example: [ "8.8.8.8" "2001:4860:4860::8844" ]

    Declared by:

    [15784]<nixpkgs/nixos/modules/system/boot/resolved.nix>

[15785]services.resolved.llmnr

    Controls Link-Local Multicast Name Resolution support (RFC 4795) on the local host.

    If set to

    "true"

        Enables full LLMNR responder and resolver support.

    "false"

        Disables both.

    "resolve"

        Only resolution support is enabled, but responding is disabled.

    Type: one of "true", "resolve", "false"

    Default: "true"

    Example: "false"

    Declared by:

    [15786]<nixpkgs/nixos/modules/system/boot/resolved.nix>

[15787]services.restic.backups

    Periodic backups to create with Restic.

    Type: attribute set of submodules

    Default: { }

    Example: { localbackup = { initialize = true; passwordFile = "/etc/nixos/secrets/
    restic-password"; paths = [ "/home" ] ; repository = "/mnt/backup-hdd"; } ; remotebackup = {
    extraOptions = [ "sftp.command='ssh backup@host -i /etc/nixos/secrets/backup-private-key -s
    sftp'" ] ; passwordFile = "/etc/nixos/secrets/restic-password"; paths = [ "/home" ] ;
    repository = "sftp:backup@host:/backups/home"; timerConfig = { OnCalendar = "00:05";
    RandomizedDelaySec = "5h"; } ; } ; }

    Declared by:

    [15788]<nixpkgs/nixos/modules/services/backup/restic.nix>

[15789]services.restic.backups.<name>.dynamicFilesFrom

    A script that produces a list of files to back up. The results of this command are given to
    the '--files-from' option.

    Type: null or string

    Default: null

    Example: "find /home/matt/git -type d -name .git"

    Declared by:

    [15790]<nixpkgs/nixos/modules/services/backup/restic.nix>

[15791]services.restic.backups.<name>.extraBackupArgs

    Extra arguments passed to restic backup.

    Type: list of strings

    Default: [ ]

    Example: [ "--exclude-file=/etc/nixos/restic-ignore" ]

    Declared by:

    [15792]<nixpkgs/nixos/modules/services/backup/restic.nix>

[15793]services.restic.backups.<name>.extraOptions

    Extra extended options to be passed to the restic --option flag.

    Type: list of strings

    Default: [ ]

    Example: [ "sftp.command='ssh backup@192.168.1.100 -i /home/user/.ssh/id_rsa -s sftp'" ]

    Declared by:

    [15794]<nixpkgs/nixos/modules/services/backup/restic.nix>

[15795]services.restic.backups.<name>.initialize

    Create the repository if it doesn't exist.

    Type: boolean

    Default: false

    Declared by:

    [15796]<nixpkgs/nixos/modules/services/backup/restic.nix>

[15797]services.restic.backups.<name>.passwordFile

    Read the repository password from a file.

    Type: string

    Example: "/etc/nixos/restic-password"

    Declared by:

    [15798]<nixpkgs/nixos/modules/services/backup/restic.nix>

[15799]services.restic.backups.<name>.paths

    Which paths to backup. If null or an empty array, no backup command will be run. This can be
    used to create a prune-only job.

    Type: null or list of strings

    Default: null

    Example: [ "/var/lib/postgresql" "/home/user/backup" ]

    Declared by:

    [15800]<nixpkgs/nixos/modules/services/backup/restic.nix>

[15801]services.restic.backups.<name>.pruneOpts

    A list of options (--keep-* et al.) for 'restic forget --prune', to automatically prune old
    snapshots. The 'forget' command is run *after* the 'backup' command, so keep that in mind
    when constructing the --keep-* options.

    Type: list of strings

    Default: [ ]

    Example: [ "--keep-daily 7" "--keep-weekly 5" "--keep-monthly 12" "--keep-yearly 75" ]

    Declared by:

    [15802]<nixpkgs/nixos/modules/services/backup/restic.nix>

[15803]services.restic.backups.<name>.rcloneConfig

    Configuration for the rclone remote being used for backup. See the remote's specific options
    under rclone's docs at [15804]https://rclone.org/docs/. When specifying option names, use the
    "config" name specified in the docs. For example, to set --b2-hard-delete for a B2 remote,
    use hard_delete = true in the attribute set. Warning: Secrets set in here will be
    world-readable in the Nix store! Consider using the rcloneConfigFile option instead to
    specify secret values separately. Note that options set here will override those set in the
    config file.

    Type: null or attribute set of string or booleans

    Default: null

    Example: { account = "xxx"; hard_delete = true; key = "xxx"; type = "b2"; }

    Declared by:

    [15805]<nixpkgs/nixos/modules/services/backup/restic.nix>

[15806]services.restic.backups.<name>.rcloneConfigFile

    Path to the file containing rclone configuration. This file must contain configuration for
    the remote specified in this backup set and also must be readable by root. Options set in
    rcloneConfig will override those set in this file.

    Type: null or path

    Default: null

    Declared by:

    [15807]<nixpkgs/nixos/modules/services/backup/restic.nix>

[15808]services.restic.backups.<name>.rcloneOptions

    Options to pass to rclone to control its behavior. See [15809]https://rclone.org/docs/#
    options for available options. When specifying option names, strip the leading --. To set a
    flag such as --drive-use-trash, which does not take a value, set the value to the Boolean
    true.

    Type: null or attribute set of string or booleans

    Default: null

    Example: { bwlimit = "10M"; drive-use-trash = "true"; }

    Declared by:

    [15810]<nixpkgs/nixos/modules/services/backup/restic.nix>

[15811]services.restic.backups.<name>.repository

    repository to backup to.

    Type: string

    Example: "sftp:backup@192.168.1.100:/backups/‹name›"

    Declared by:

    [15812]<nixpkgs/nixos/modules/services/backup/restic.nix>

[15813]services.restic.backups.<name>.s3CredentialsFile

    file containing the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY for an S3-hosted repository,
    in the format of an EnvironmentFile as described by systemd.exec(5)

    Type: null or string

    Default: null

    Declared by:

    [15814]<nixpkgs/nixos/modules/services/backup/restic.nix>

[15815]services.restic.backups.<name>.timerConfig

    When to run the backup. See man systemd.timer for details.

    Type: attribute set of systemd options

    Default: { OnCalendar = "daily"; }

    Example: { OnCalendar = "00:05"; RandomizedDelaySec = "5h"; }

    Declared by:

    [15816]<nixpkgs/nixos/modules/services/backup/restic.nix>

[15817]services.restic.backups.<name>.user

    As which user the backup should run.

    Type: string

    Default: "root"

    Example: "postgresql"

    Declared by:

    [15818]<nixpkgs/nixos/modules/services/backup/restic.nix>

[15819]services.restic.server.enable

    Whether to enable Restic REST Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15820]<nixpkgs/nixos/modules/services/backup/restic-rest-server.nix>

[15821]services.restic.server.package

    Restic REST server package to use.

    Type: package

    Default: "pkgs.restic-rest-server"

    Declared by:

    [15822]<nixpkgs/nixos/modules/services/backup/restic-rest-server.nix>

[15823]services.restic.server.appendOnly

    Enable append only mode. This mode allows creation of new backups but prevents deletion and
    modification of existing backups. This can be useful when backing up systems that have a
    potential of being hacked.

    Type: boolean

    Default: false

    Declared by:

    [15824]<nixpkgs/nixos/modules/services/backup/restic-rest-server.nix>

[15825]services.restic.server.dataDir

    The directory for storing the restic repository.

    Type: path

    Default: "/var/lib/restic"

    Declared by:

    [15826]<nixpkgs/nixos/modules/services/backup/restic-rest-server.nix>

[15827]services.restic.server.extraFlags

    Extra commandline options to pass to Restic REST server.

    Type: list of strings

    Default: [ ]

    Declared by:

    [15828]<nixpkgs/nixos/modules/services/backup/restic-rest-server.nix>

[15829]services.restic.server.listenAddress

    Listen on a specific IP address and port.

    Type: string

    Default: ":8000"

    Example: "127.0.0.1:8080"

    Declared by:

    [15830]<nixpkgs/nixos/modules/services/backup/restic-rest-server.nix>

[15831]services.restic.server.privateRepos

    Enable private repos. Grants access only when a subdirectory with the same name as the user
    is specified in the repository URL.

    Type: boolean

    Default: false

    Declared by:

    [15832]<nixpkgs/nixos/modules/services/backup/restic-rest-server.nix>

[15833]services.restic.server.prometheus

    Enable Prometheus metrics at /metrics.

    Type: boolean

    Default: false

    Declared by:

    [15834]<nixpkgs/nixos/modules/services/backup/restic-rest-server.nix>

[15835]services.restya-board.enable

    Whether to enable restya-board.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15836]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15837]services.restya-board.dataDir

    Data of the application.

    Type: path

    Default: "/var/lib/restya-board"

    Example: "/var/lib/restya-board"

    Declared by:

    [15838]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15839]services.restya-board.database.host

    Host of the database. Leave 'null' to use a local PostgreSQL database. A local PostgreSQL
    database is initialized automatically.

    Type: null or string

    Default: null

    Declared by:

    [15840]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15841]services.restya-board.database.name

    Name of the database. The database must exist.

    Type: string

    Default: "restya_board"

    Declared by:

    [15842]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15843]services.restya-board.database.passwordFile

    The database user's password. 'null' if no password is set.

    Type: null or path

    Default: null

    Declared by:

    [15844]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15845]services.restya-board.database.port

    The database's port.

    Type: null or signed integer

    Default: 5432

    Declared by:

    [15846]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15847]services.restya-board.database.user

    The database user. The user must exist and have access to the specified database.

    Type: string

    Default: "restya_board"

    Declared by:

    [15848]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15849]services.restya-board.email.login

    SMTP authentication login used when sending outgoing mail.

    Type: string

    Default: ""

    Declared by:

    [15850]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15851]services.restya-board.email.password

    SMTP authentication password used when sending outgoing mail.

    ATTENTION: The password is stored world-readable in the nix-store!

    Type: string

    Default: ""

    Declared by:

    [15852]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15853]services.restya-board.email.port

    Port used to connect to SMTP server.

    Type: signed integer

    Default: 25

    Declared by:

    [15854]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15855]services.restya-board.email.server

    Hostname to send outgoing mail. Null to use the system MTA.

    Type: null or string

    Default: null

    Example: "localhost"

    Declared by:

    [15856]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15857]services.restya-board.group

    Group account under which the web-application runs.

    Type: string

    Default: "nginx"

    Example: "nginx"

    Declared by:

    [15858]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15859]services.restya-board.timezone

    Timezone the web-app runs in.

    Type: strings concatenated with "\n"

    Default: "GMT"

    Declared by:

    [15860]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15861]services.restya-board.user

    User account under which the web-application runs.

    Type: string

    Default: "restya-board"

    Example: "restya-board"

    Declared by:

    [15862]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15863]services.restya-board.virtualHost.listenHost

    Listen address for the virtualhost to use.

    Type: string

    Default: "localhost"

    Declared by:

    [15864]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15865]services.restya-board.virtualHost.listenPort

    Listen port for the virtualhost to use.

    Type: signed integer

    Default: 3000

    Declared by:

    [15866]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15867]services.restya-board.virtualHost.serverName

    Name of the nginx virtualhost to use.

    Type: string

    Default: "restya.board"

    Declared by:

    [15868]<nixpkgs/nixos/modules/services/web-apps/restya-board.nix>

[15869]services.riak.enable

    Whether to enable riak.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15870]<nixpkgs/nixos/modules/services/databases/riak.nix>

[15871]services.riak.package

    Riak package to use.

    Type: package

    Default: "pkgs.riak"

    Example:

    pkgs.riak

    Declared by:

    [15872]<nixpkgs/nixos/modules/services/databases/riak.nix>

[15873]services.riak.dataDir

    Data directory for Riak.

    Type: path

    Default: "/var/db/riak"

    Declared by:

    [15874]<nixpkgs/nixos/modules/services/databases/riak.nix>

[15875]services.riak.distributedCookie

    Cookie for distributed node communication. All nodes in the same cluster should use the same
    cookie or they will not be able to communicate.

    Type: string

    Default: "riak"

    Declared by:

    [15876]<nixpkgs/nixos/modules/services/databases/riak.nix>

[15877]services.riak.extraAdvancedConfig

    Additional text to be appended to advanced.config.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [15878]<nixpkgs/nixos/modules/services/databases/riak.nix>

[15879]services.riak.extraConfig

    Additional text to be appended to riak.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [15880]<nixpkgs/nixos/modules/services/databases/riak.nix>

[15881]services.riak.logDir

    Log directory for Riak.

    Type: path

    Default: "/var/log/riak"

    Declared by:

    [15882]<nixpkgs/nixos/modules/services/databases/riak.nix>

[15883]services.riak.nodeName

    Name of the Erlang node.

    Type: string

    Default: "riak@127.0.0.1"

    Declared by:

    [15884]<nixpkgs/nixos/modules/services/databases/riak.nix>

[15885]services.riemann.enable

    Enable the Riemann network monitoring daemon.

    Type: boolean

    Default: false

    Declared by:

    [15886]<nixpkgs/nixos/modules/services/monitoring/riemann.nix>

[15887]services.riemann.config

    Contents of the Riemann configuration file. For more complicated config you should use
    configFile.

    Type: strings concatenated with "\n"

    Declared by:

    [15888]<nixpkgs/nixos/modules/services/monitoring/riemann.nix>

[15889]services.riemann.configFile

    A Riemann config file. Any files in the same directory as this file will be added to the
    classpath by Riemann.

    Type: string

    Declared by:

    [15890]<nixpkgs/nixos/modules/services/monitoring/riemann.nix>

[15891]services.riemann.configFiles

    Extra files containing Riemann configuration. These files will be loaded at runtime by
    Riemann (with Clojure's load-file function) at the end of the configuration if you use the
    config option, this is ignored if you use configFile.

    Type: list of paths

    Default: [ ]

    Declared by:

    [15892]<nixpkgs/nixos/modules/services/monitoring/riemann.nix>

[15893]services.riemann.extraClasspathEntries

    Extra entries added to the Java classpath when running Riemann.

    Type: list of strings

    Default: [ ]

    Declared by:

    [15894]<nixpkgs/nixos/modules/services/monitoring/riemann.nix>

[15895]services.riemann.extraJavaOpts

    Extra Java options used when launching Riemann.

    Type: list of strings

    Default: [ ]

    Declared by:

    [15896]<nixpkgs/nixos/modules/services/monitoring/riemann.nix>

[15897]services.riemann-dash.enable

    Enable the riemann-dash dashboard daemon.

    Type: boolean

    Default: false

    Declared by:

    [15898]<nixpkgs/nixos/modules/services/monitoring/riemann-dash.nix>

[15899]services.riemann-dash.config

    Contents added to the end of the riemann-dash configuration file.

    Type: strings concatenated with "\n"

    Declared by:

    [15900]<nixpkgs/nixos/modules/services/monitoring/riemann-dash.nix>

[15901]services.riemann-dash.dataDir

    Location of the riemann-base dir. The dashboard configuration file is is stored to this
    directory. The directory is created automatically on service start, and owner is set to the
    riemanndash user.

    Type: string

    Default: "/var/riemann-dash"

    Declared by:

    [15902]<nixpkgs/nixos/modules/services/monitoring/riemann-dash.nix>

[15903]services.riemann-tools.enableHealth

    Enable the riemann-health daemon.

    Type: boolean

    Default: false

    Declared by:

    [15904]<nixpkgs/nixos/modules/services/monitoring/riemann-tools.nix>

[15905]services.riemann-tools.extraArgs

    A list of commandline-switches forwarded to a riemann-tool. See for example `riemann-health
    --help` for available options.

    Type: list of strings

    Default: [ ]

    Example: [ "-p 5555" "--timeout=30" "--attribute=myattribute=42" ]

    Declared by:

    [15906]<nixpkgs/nixos/modules/services/monitoring/riemann-tools.nix>

[15907]services.riemann-tools.riemannHost

    Address of the host riemann node. Defaults to localhost.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [15908]<nixpkgs/nixos/modules/services/monitoring/riemann-tools.nix>

[15909]services.rippleDataApi.enable

    Whether to enable ripple data api.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15910]<nixpkgs/nixos/modules/services/misc/ripple-data-api.nix>

[15911]services.rippleDataApi.couchdb.create

    Whether to create couchdb database needed by ripple data api.

    Type: boolean

    Default: true

    Declared by:

    [15912]<nixpkgs/nixos/modules/services/misc/ripple-data-api.nix>

[15913]services.rippleDataApi.couchdb.db

    Ripple data api couchdb database.

    Type: string

    Default: "rippled"

    Declared by:

    [15914]<nixpkgs/nixos/modules/services/misc/ripple-data-api.nix>

[15915]services.rippleDataApi.couchdb.host

    Ripple data api couchdb host.

    Type: string

    Default: "localhost"

    Declared by:

    [15916]<nixpkgs/nixos/modules/services/misc/ripple-data-api.nix>

[15917]services.rippleDataApi.couchdb.pass

    Ripple data api couchdb password.

    Type: string

    Default: ""

    Declared by:

    [15918]<nixpkgs/nixos/modules/services/misc/ripple-data-api.nix>

[15919]services.rippleDataApi.couchdb.port

    Ripple data api couchdb port.

    Type: signed integer

    Default: 5984

    Declared by:

    [15920]<nixpkgs/nixos/modules/services/misc/ripple-data-api.nix>

[15921]services.rippleDataApi.couchdb.user

    Ripple data api couchdb username.

    Type: string

    Default: "rippled"

    Declared by:

    [15922]<nixpkgs/nixos/modules/services/misc/ripple-data-api.nix>

[15923]services.rippleDataApi.importMode

    Ripple data api import mode.

    Type: one of "live", "liveOnly"

    Default: "liveOnly"

    Declared by:

    [15924]<nixpkgs/nixos/modules/services/misc/ripple-data-api.nix>

[15925]services.rippleDataApi.maxLedger

    Ripple data api maximal ledger to fetch.

    Type: null or signed integer

    Default: null

    Declared by:

    [15926]<nixpkgs/nixos/modules/services/misc/ripple-data-api.nix>

[15927]services.rippleDataApi.minLedger

    Ripple data api minimal ledger to fetch.

    Type: null or signed integer

    Default: null

    Declared by:

    [15928]<nixpkgs/nixos/modules/services/misc/ripple-data-api.nix>

[15929]services.rippleDataApi.port

    Ripple data api port

    Type: signed integer

    Default: 5993

    Declared by:

    [15930]<nixpkgs/nixos/modules/services/misc/ripple-data-api.nix>

[15931]services.rippleDataApi.redis.enable

    Whether to enable caching of ripple data to redis.

    Type: boolean

    Default: true

    Declared by:

    [15932]<nixpkgs/nixos/modules/services/misc/ripple-data-api.nix>

[15933]services.rippleDataApi.redis.host

    Ripple data api redis host.

    Type: string

    Default: "localhost"

    Declared by:

    [15934]<nixpkgs/nixos/modules/services/misc/ripple-data-api.nix>

[15935]services.rippleDataApi.redis.port

    Ripple data api redis port.

    Type: signed integer

    Default: 5984

    Declared by:

    [15936]<nixpkgs/nixos/modules/services/misc/ripple-data-api.nix>

[15937]services.rippleDataApi.rippleds

    List of rippleds to be used by ripple data api.

    Type: list of strings

    Default: [ "http://s_east.ripple.com:51234" "http://s_west.ripple.com:51234" ]

    Declared by:

    [15938]<nixpkgs/nixos/modules/services/misc/ripple-data-api.nix>

[15939]services.rippled.enable

    Whether to enable rippled.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [15940]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15941]services.rippled.package

    Which rippled package to use.

    Type: package

    Default: "pkgs.rippled"

    Declared by:

    [15942]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15943]services.rippled.databasePath

    Path to the ripple database.

    Type: path

    Default: "/var/lib/rippled"

    Declared by:

    [15944]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15945]services.rippled.extraConfig

    Extra lines to be added verbatim to the rippled.cfg configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [15946]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15947]services.rippled.fetchDepth

    The number of past ledgers to serve to other peers that request historical ledger data (or
    "full" for no limit).

    Type: signed integer or one of "full"

    Default: "full"

    Declared by:

    [15948]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15949]services.rippled.importDb

    Settings for performing a one-time import.

    Type: null or submodule

    Default: null

    Declared by:

    [15950]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15951]services.rippled.importDb.advisoryDelete

    If set, then require administrative RPC call "can_delete" to enable online deletion of ledger
    records.

    Type: null or boolean

    Default: null

    Declared by:

    [15952]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15953]services.rippled.importDb.compression

    Whether to enable snappy compression.

    Type: null or boolean

    Default: null

    Declared by:

    [15954]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15955]services.rippled.importDb.extraOpts

    Extra database options.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [15956]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15957]services.rippled.importDb.onlineDelete

    Enable automatic purging of older ledger information.

    Type: null or signed integer

    Default: 1296000

    Declared by:

    [15958]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15959]services.rippled.importDb.path

    Location to store the database.

    Type: path

    Default: "/var/lib/rippled"

    Declared by:

    [15960]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15961]services.rippled.importDb.type

    Rippled database type.

    Type: one of "rocksdb", "nudb"

    Default: "rocksdb"

    Declared by:

    [15962]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15963]services.rippled.ips

    List of hostnames or ips where the Ripple protocol is served. For a starter list, you can
    either copy entries from: https://ripple.com/ripple.txt or if you prefer you can let it
    default to r.ripple.com 51235

    A port may optionally be specified after adding a space to the address. By convention, if
    known, IPs are listed in from most to least trusted.

    Type: list of strings

    Default: [ "r.ripple.com 51235" ]

    Declared by:

    [15964]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15965]services.rippled.ipsFixed

    List of IP addresses or hostnames to which rippled should always attempt to maintain peer
    connections with. This is useful for manually forming private networks, for example to
    configure a validation server that connects to the Ripple network through a public-facing
    server, or for building a set of cluster peers.

    A port may optionally be specified after adding a space to the address

    Type: list of strings

    Default: [ ]

    Declared by:

    [15966]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15967]services.rippled.ledgerHistory

    The number of past ledgers to acquire on server startup and the minimum to maintain while
    running.

    Type: signed integer or one of "full"

    Default: 1296000

    Declared by:

    [15968]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15969]services.rippled.logLevel

    Logging verbosity.

    Type: one of "debug", "error", "info"

    Default: "error"

    Declared by:

    [15970]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15971]services.rippled.nodeDb

    Rippled main database options.

    Type: null or submodule

    Default: { extraOpts = "open_files=2000\nfilter_bits=12\ncache_mb=256\nfile_size_pb=8\
    nfile_size_mult=2;\n"; type = "rocksdb"; }

    Declared by:

    [15972]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15973]services.rippled.nodeDb.advisoryDelete

    If set, then require administrative RPC call "can_delete" to enable online deletion of ledger
    records.

    Type: null or boolean

    Default: null

    Declared by:

    [15974]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15975]services.rippled.nodeDb.compression

    Whether to enable snappy compression.

    Type: null or boolean

    Default: null

    Declared by:

    [15976]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15977]services.rippled.nodeDb.extraOpts

    Extra database options.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [15978]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15979]services.rippled.nodeDb.onlineDelete

    Enable automatic purging of older ledger information.

    Type: null or signed integer

    Default: 1296000

    Declared by:

    [15980]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15981]services.rippled.nodeDb.path

    Location to store the database.

    Type: path

    Default: "/var/lib/rippled"

    Declared by:

    [15982]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15983]services.rippled.nodeDb.type

    Rippled database type.

    Type: one of "rocksdb", "nudb"

    Default: "rocksdb"

    Declared by:

    [15984]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15985]services.rippled.nodeSize

    Rippled size of the node you are running. "tiny", "small", "medium", "large", and "huge"

    Type: one of "tiny", "small", "medium", "large", "huge"

    Default: "small"

    Declared by:

    [15986]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15987]services.rippled.ports

    Ports exposed by rippled

    Type: attribute set of submodules

    Default: { peer = { ip = "0.0.0.0"; port = 51235; protocol = [ "peer" ] ; } ; rpc = { admin =
    [ "127.0.0.1" ] ; port = 5005; protocol = [ "http" ] ; } ; ws_public = { ip = "0.0.0.0"; port
    = 5006; protocol = [ "ws" "wss" ] ; } ; }

    Declared by:

    [15988]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15989]services.rippled.ports.<name>.admin

    A comma-separated list of admin IP addresses.

    Type: list of strings

    Default: [ "127.0.0.1" ]

    Declared by:

    [15990]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15991]services.rippled.ports.<name>.ip

    Ip where rippled listens.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [15992]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15993]services.rippled.ports.<name>.password

    When set, these credentials will be required on HTTP/S requests.

    Type: string

    Default: ""

    Declared by:

    [15994]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15995]services.rippled.ports.<name>.port

    Port where rippled listens.

    Type: signed integer

    Declared by:

    [15996]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15997]services.rippled.ports.<name>.protocol

    Protocols expose by rippled.

    Type: list of one of "http", "https", "ws", "wss", "peer"s

    Declared by:

    [15998]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[15999]services.rippled.ports.<name>.ssl.cert

    Specifies the path to the SSL certificate file in PEM format. This is not needed if the chain
    includes it.

    Type: null or path

    Default: null

    Declared by:

    [16000]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16001]services.rippled.ports.<name>.ssl.chain

    If you need a certificate chain, specify the path to the certificate chain here. The chain
    may include the end certificate.

    Type: null or path

    Default: null

    Declared by:

    [16002]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16003]services.rippled.ports.<name>.ssl.key

    Specifies the filename holding the SSL key in PEM format.

    Type: null or path

    Default: null

    Declared by:

    [16004]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16005]services.rippled.ports.<name>.user

    When set, these credentials will be required on HTTP/S requests.

    Type: string

    Default: ""

    Declared by:

    [16006]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16007]services.rippled.sntpServers

    IP address or domain of NTP servers to use for time synchronization.;

    Type: list of strings

    Default: [ "time.windows.com" "time.apple.com" "time.nist.gov" "pool.ntp.org" ]

    Declared by:

    [16008]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16009]services.rippled.statsd.enable

    Whether to enable statsd monitoring for rippled.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16010]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16011]services.rippled.statsd.address

    The UDP address and port of the listening StatsD server.

    Type: string

    Default: "127.0.0.1:8125"

    Declared by:

    [16012]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16013]services.rippled.statsd.prefix

    A string prepended to each collected metric.

    Type: string

    Default: ""

    Declared by:

    [16014]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16015]services.rippled.tempDb

    Rippled temporary database options.

    Type: null or submodule

    Default: null

    Declared by:

    [16016]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16017]services.rippled.tempDb.advisoryDelete

    If set, then require administrative RPC call "can_delete" to enable online deletion of ledger
    records.

    Type: null or boolean

    Default: null

    Declared by:

    [16018]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16019]services.rippled.tempDb.compression

    Whether to enable snappy compression.

    Type: null or boolean

    Default: null

    Declared by:

    [16020]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16021]services.rippled.tempDb.extraOpts

    Extra database options.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16022]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16023]services.rippled.tempDb.onlineDelete

    Enable automatic purging of older ledger information.

    Type: null or signed integer

    Default: 1296000

    Declared by:

    [16024]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16025]services.rippled.tempDb.path

    Location to store the database.

    Type: path

    Default: "/var/lib/rippled"

    Declared by:

    [16026]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16027]services.rippled.tempDb.type

    Rippled database type.

    Type: one of "rocksdb", "nudb"

    Default: "rocksdb"

    Declared by:

    [16028]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16029]services.rippled.validationQuorum

    The minimum number of trusted validations a ledger must have before the server considers it
    fully validated.

    Type: signed integer

    Default: 3

    Declared by:

    [16030]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16031]services.rippled.validators

    List of nodes to always accept as validators. Nodes are specified by domain or public key.

    Type: list of strings

    Default: [ "n949f75evCHwgyP4fPVgaHqNHxUVN15PsJEZ3B3HnXPcPjcZAoy7 RL1"
    "n9MD5h24qrQqiyBC8aeqqCWvpiBiYQ3jxSr91uiDvmrkyHRdYLUj RL2"
    "n9L81uNCaPgtUJfaHh89gmdvXKAmSt5Gdsw2g1iPWaPkAHW5Nm4C RL3"
    "n9KiYM9CgngLvtRCQHZwgC2gjpdaZcCcbt3VboxiNFcKuwFVujzS RL4"
    "n9LdgEtkmGB9E2h3K4Vp7iGUaKuq23Zr32ehxiU8FWY7xoxbWTSA RL5" ]

    Declared by:

    [16032]<nixpkgs/nixos/modules/services/misc/rippled.nix>

[16033]services.robustirc-bridge.enable

    Whether to enable RobustIRC bridge.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16034]<nixpkgs/nixos/modules/services/networking/robustirc-bridge.nix>

[16035]services.robustirc-bridge.extraFlags

    Extra flags passed to the robustirc-bridge command. See [16036]RobustIRC Documentation or
    robustirc-bridge(1) for details.

    Type: list of strings

    Default: [ ]

    Example: [ "-network robustirc.net" ]

    Declared by:

    [16037]<nixpkgs/nixos/modules/services/networking/robustirc-bridge.nix>

[16038]services.roon-server.enable

    Whether to enable Roon Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16039]<nixpkgs/nixos/modules/services/audio/roon-server.nix>

[16040]services.roon-server.group

    Group to run the Roon Server as.

    Type: string

    Default: "roon-server"

    Declared by:

    [16041]<nixpkgs/nixos/modules/services/audio/roon-server.nix>

[16042]services.roon-server.openFirewall

    Open ports in the firewall for the server.

    UDP: 9003 TCP: 9100 - 9200

    Type: boolean

    Default: false

    Declared by:

    [16043]<nixpkgs/nixos/modules/services/audio/roon-server.nix>

[16044]services.roon-server.user

    User to run the Roon Server as.

    Type: string

    Default: "roon-server"

    Declared by:

    [16045]<nixpkgs/nixos/modules/services/audio/roon-server.nix>

[16046]services.roundcube.enable

    Whether to enable roundcube.

    Also enables nginx virtual host management. Further nginx configuration can be done by
    adapting services.nginx.virtualHosts.<name>. See [16047]services.nginx.virtualHosts for
    further information.

    Type: boolean

    Default: false

    Declared by:

    [16048]<nixpkgs/nixos/modules/services/mail/roundcube.nix>

[16049]services.roundcube.package

    The package which contains roundcube's sources. Can be overriden to create an environment
    which contains roundcube and third-party plugins.

    Type: package

    Default: (build of roundcube-1.4.11)

    Example:

    roundcube.withPlugins (plugins: [ plugins.persistent_login ])

    Declared by:

    [16050]<nixpkgs/nixos/modules/services/mail/roundcube.nix>

[16051]services.roundcube.database.dbname

    Name of the postgresql database

    Type: string

    Default: "roundcube"

    Declared by:

    [16052]<nixpkgs/nixos/modules/services/mail/roundcube.nix>

[16053]services.roundcube.database.host

    Host of the postgresql server. If this is not set to localhost, you have to create the
    postgresql user and database yourself, with appropriate permissions.

    Type: string

    Default: "localhost"

    Declared by:

    [16054]<nixpkgs/nixos/modules/services/mail/roundcube.nix>

[16055]services.roundcube.database.password

    Password for the postgresql connection. Do not use: the password will be stored world
    readable in the store; use passwordFile instead.

    Type: string

    Default: ""

    Declared by:

    [16056]<nixpkgs/nixos/modules/services/mail/roundcube.nix>

[16057]services.roundcube.database.passwordFile

    Password file for the postgresql connection. Must be readable by user nginx. Ignored if
    database.host is set to localhost, as peer authentication will be used.

    Type: string

    Declared by:

    [16058]<nixpkgs/nixos/modules/services/mail/roundcube.nix>

[16059]services.roundcube.database.username

    Username for the postgresql connection. If database.host is set to localhost, a unix user and
    group of the same name will be created as well.

    Type: string

    Default: "roundcube"

    Declared by:

    [16060]<nixpkgs/nixos/modules/services/mail/roundcube.nix>

[16061]services.roundcube.dicts

    List of aspell dictionnaries for spell checking. If empty, spell checking is disabled.

    Type: list of packages

    Default: [ ]

    Example:

    with pkgs.aspellDicts; [ en fr de ]

    Declared by:

    [16062]<nixpkgs/nixos/modules/services/mail/roundcube.nix>

[16063]services.roundcube.extraConfig

    Extra configuration for roundcube webmail instance

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16064]<nixpkgs/nixos/modules/services/mail/roundcube.nix>

[16065]services.roundcube.hostName

    Hostname to use for the nginx vhost

    Type: string

    Example: "webmail.example.com"

    Declared by:

    [16066]<nixpkgs/nixos/modules/services/mail/roundcube.nix>

[16067]services.roundcube.maxAttachmentSize

    The maximum attachment size in MB.

    Note: Since roundcube only uses 70% of max upload values configured in php 30% is added
    automatically to [16068]services.roundcube.maxAttachmentSize.

    Type: signed integer

    Default: 18

    Declared by:

    [16069]<nixpkgs/nixos/modules/services/mail/roundcube.nix>

[16070]services.roundcube.plugins

    List of roundcube plugins to enable. Currently, only those directly shipped with Roundcube
    are supported.

    Type: list of strings

    Default: [ ]

    Declared by:

    [16071]<nixpkgs/nixos/modules/services/mail/roundcube.nix>

[16072]services.rpcbind.enable

    Whether to enable `rpcbind', an ONC RPC directory service notably used by NFS and NIS, and
    which can be queried using the rpcinfo(1) command. `rpcbind` is a replacement for `portmap`.

    Type: boolean

    Default: false

    Declared by:

    [16073]<nixpkgs/nixos/modules/services/networking/rpcbind.nix>

[16074]services.rsnapshot.enable

    Whether to enable rsnapshot backups.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16075]<nixpkgs/nixos/modules/services/backup/rsnapshot.nix>

[16076]services.rsnapshot.enableManualRsnapshot

    Whether to enable manual usage of the rsnapshot command with this module.

    Type: boolean

    Default: true

    Declared by:

    [16077]<nixpkgs/nixos/modules/services/backup/rsnapshot.nix>

[16078]services.rsnapshot.cronIntervals

    Periodicity at which intervals should be run by cron. Note that the intervals also have to
    exist in configuration as retain options.

    Type: attribute set of strings

    Default: { }

    Example: { daily = "50 21 * * *"; hourly = "0 * * * *"; }

    Declared by:

    [16079]<nixpkgs/nixos/modules/services/backup/rsnapshot.nix>

[16080]services.rsnapshot.extraConfig

    rsnapshot configuration option in addition to the defaults from rsnapshot and this module.

    Note that tabs are required to separate option arguments, and directory names require
    trailing slashes.

    The "extra" in the option name might be a little misleading right now, as it is required to
    get a functional configuration.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    retains hourly 24
    retain daily 365
    backup /home/ localhost/
    ''

    Declared by:

    [16081]<nixpkgs/nixos/modules/services/backup/rsnapshot.nix>

[16082]services.rspamd.enable

    Whether to enable rspamd, the Rapid spam filtering system.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16083]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16084]services.rspamd.debug

    Whether to run the rspamd daemon in debug mode.

    Type: boolean

    Default: false

    Declared by:

    [16085]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16086]services.rspamd.extraConfig

    Extra configuration to add at the end of the rspamd configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16087]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16088]services.rspamd.group

    Group to use when no root privileges are required.

    Type: string

    Default: "rspamd"

    Declared by:

    [16089]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16090]services.rspamd.localLuaRules

    Path of file to link to /etc/rspamd/rspamd.local.lua for local rules written in Lua

    Type: null or path

    Default: null

    Declared by:

    [16091]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16092]services.rspamd.locals

    Local configuration files, written into /etc/rspamd/local.d/{name}.

    Type: attribute set of submodules

    Default: { }

    Example:

    { "redis.conf".source = "/nix/store/.../etc/dir/redis.conf";
      "arc.conf".text = "allow_envfrom_empty = true;";
    }

    Declared by:

    [16093]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16094]services.rspamd.locals.<name>.enable

    Whether this file locals should be generated. This option allows specific locals files to be
    disabled.

    Type: boolean

    Default: true

    Declared by:

    [16095]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16096]services.rspamd.locals.<name>.source

    Path of the source file.

    Type: path

    Declared by:

    [16097]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16098]services.rspamd.locals.<name>.text

    Text of the file.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [16099]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16100]services.rspamd.overrides

    Overridden configuration files, written into /etc/rspamd/override.d/{name}.

    Type: attribute set of submodules

    Default: { }

    Example:

    { "redis.conf".source = "/nix/store/.../etc/dir/redis.conf";
      "arc.conf".text = "allow_envfrom_empty = true;";
    }

    Declared by:

    [16101]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16102]services.rspamd.overrides.<name>.enable

    Whether this file overrides should be generated. This option allows specific overrides files
    to be disabled.

    Type: boolean

    Default: true

    Declared by:

    [16103]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16104]services.rspamd.overrides.<name>.source

    Path of the source file.

    Type: path

    Declared by:

    [16105]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16106]services.rspamd.overrides.<name>.text

    Text of the file.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [16107]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16108]services.rspamd.postfix.enable

    Add rspamd milter to postfix main.conf

    Type: boolean

    Default: false

    Declared by:

    [16109]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16110]services.rspamd.postfix.config

    Addon to postfix configuration

    Type: attribute set of boolean or string or list of stringss

    Default: { non_smtpd_milters = [ "unix:/run/rspamd/rspamd-milter.sock" ] ; smtpd_milters = [
    "unix:/run/rspamd/rspamd-milter.sock" ] ; }

    Example: { non_smtpd_milters = [ "unix:/run/rspamd/rspamd-milter.sock" ] ; smtpd_milters = [
    "unix:/run/rspamd/rspamd-milter.sock" ] ; }

    Declared by:

    [16111]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16112]services.rspamd.user

    User to use when no root privileges are required.

    Type: string

    Default: "rspamd"

    Declared by:

    [16113]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16114]services.rspamd.workers

    Attribute set of workers to start.

    Type: attribute set of submodules

    Default: { controller = { } ; normal = { } ; }

    Example:

    {
      normal = {
        includes = [ "$CONFDIR/worker-normal.inc" ];
        bindSockets = [{
          socket = "/run/rspamd/rspamd.sock";
          mode = "0660";
          owner = "rspamd";
          group = "rspamd";
        }];
      };
      controller = {
        includes = [ "$CONFDIR/worker-controller.inc" ];
        bindSockets = [ "[::1]:11334" ];
      };
    }

    Declared by:

    [16115]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16116]services.rspamd.workers.<name>.enable

    Whether to run the rspamd worker.

    Type: null or boolean

    Default: null

    Declared by:

    [16117]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16118]services.rspamd.workers.<name>.bindSockets

    List of sockets to listen, in format acceptable by rspamd

    Type: list of string or submodules

    Default: [ ]

    Example: [ { mode = "0666"; owner = "rspamd"; socket = "/run/rspamd.sock"; } "*:11333" ]

    Declared by:

    [16119]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16120]services.rspamd.workers.<name>.count

    Number of worker instances to run

    Type: null or signed integer

    Default: null

    Declared by:

    [16121]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16122]services.rspamd.workers.<name>.extraConfig

    Additional entries to put verbatim into worker section of rspamd config file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16123]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16124]services.rspamd.workers.<name>.includes

    List of files to include in configuration

    Type: list of strings

    Default: [ ]

    Declared by:

    [16125]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16126]services.rspamd.workers.<name>.name

    Name of the worker

    Type: null or string

    Default: "‹name›"

    Declared by:

    [16127]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16128]services.rspamd.workers.<name>.type

    The type of this worker. The type proxy is deprecated and only kept for backwards
    compatibility and should be replaced with rspamd_proxy.

    Type: null or one of "normal", "controller", "fuzzy", "rspamd_proxy", "lua", "proxy"

    Declared by:

    [16129]<nixpkgs/nixos/modules/services/mail/rspamd.nix>

[16130]services.rss-bridge.enable

    Whether to enable rss-bridge.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16131]<nixpkgs/nixos/modules/services/web-apps/rss-bridge.nix>

[16132]services.rss-bridge.dataDir

    Location in which cache directory will be created. You can put config.ini.php in here.

    Type: string

    Default: "/var/lib/rss-bridge"

    Declared by:

    [16133]<nixpkgs/nixos/modules/services/web-apps/rss-bridge.nix>

[16134]services.rss-bridge.group

    Group under which the web-application run.

    Type: string

    Default: "nginx"

    Example: "nginx"

    Declared by:

    [16135]<nixpkgs/nixos/modules/services/web-apps/rss-bridge.nix>

[16136]services.rss-bridge.pool

    Name of existing phpfpm pool that is used to run web-application. If not specified a pool
    will be created automatically with default values.

    Type: string

    Default: "rss-bridge"

    Declared by:

    [16137]<nixpkgs/nixos/modules/services/web-apps/rss-bridge.nix>

[16138]services.rss-bridge.user

    User account under which both the service and the web-application run.

    Type: string

    Default: "nginx"

    Example: "nginx"

    Declared by:

    [16139]<nixpkgs/nixos/modules/services/web-apps/rss-bridge.nix>

[16140]services.rss-bridge.virtualHost

    Name of the nginx virtualhost to use and setup. If null, do not setup any virtualhost.

    Type: null or string

    Default: "rss-bridge"

    Declared by:

    [16141]<nixpkgs/nixos/modules/services/web-apps/rss-bridge.nix>

[16142]services.rss-bridge.whitelist

    List of bridges to be whitelisted. If the list is empty, rss-bridge will use
    whitelist.default.txt. Use [ "*" ] to whitelist all.

    Type: list of strings

    Default: [ ]

    Example:

    [
      "Facebook"
      "Instagram"
      "Twitter"
    ]

    Declared by:

    [16143]<nixpkgs/nixos/modules/services/web-apps/rss-bridge.nix>

[16144]services.rss2email.enable

    Whether to enable rss2email.

    Type: boolean

    Default: false

    Declared by:

    [16145]<nixpkgs/nixos/modules/services/mail/rss2email.nix>

[16146]services.rss2email.config

    The configuration to give rss2email.

    Default will use system-wide sendmail to send the email. This is rss2email's default when
    running r2e new.

    This set contains key-value associations that will be set in the [DEFAULT] block along with
    the to parameter.

    See man r2e for more information on which parameters are accepted.

    Type: attribute set of string or signed integer or booleans

    Default: { }

    Declared by:

    [16147]<nixpkgs/nixos/modules/services/mail/rss2email.nix>

[16148]services.rss2email.feeds

    The feeds to watch.

    Type: attribute set of submodules

    Declared by:

    [16149]<nixpkgs/nixos/modules/services/mail/rss2email.nix>

[16150]services.rss2email.feeds.<name>.to

    Email address to which to send feed items.

    If null, this will not be set in the configuration file, and rss2email will make it default
    to rss2email.to.

    Type: null or string

    Default: null

    Declared by:

    [16151]<nixpkgs/nixos/modules/services/mail/rss2email.nix>

[16152]services.rss2email.feeds.<name>.url

    The URL at which to fetch the feed.

    Type: string

    Declared by:

    [16153]<nixpkgs/nixos/modules/services/mail/rss2email.nix>

[16154]services.rss2email.interval

    How often to check the feeds, in systemd interval format

    Type: string

    Default: "12h"

    Declared by:

    [16155]<nixpkgs/nixos/modules/services/mail/rss2email.nix>

[16156]services.rss2email.to

    Mail address to which to send emails

    Type: string

    Declared by:

    [16157]<nixpkgs/nixos/modules/services/mail/rss2email.nix>

[16158]services.rsyncd.enable

    Whether to enable the rsync daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16159]<nixpkgs/nixos/modules/services/network-filesystems/rsyncd.nix>

[16160]services.rsyncd.port

    TCP port the daemon will listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 873

    Declared by:

    [16161]<nixpkgs/nixos/modules/services/network-filesystems/rsyncd.nix>

[16162]services.rsyncd.settings

    Configuration for rsyncd. See rsyncd.conf(5).

    Type: attribute set of attribute set of INI atom (null, bool, int, float or string)ss

    Default: { }

    Example: { cvs = { auth users = [ "tridge" "susan" ] ; comment = "CVS repository (requires
    authentication)"; path = "/data/cvs"; secrets file = "/etc/rsyncd.secrets"; } ; ftp = {
    comment = "whole ftp area"; path = "/var/ftp/./pub"; } ; global = { gid = "nobody"; max
    connections = 4; uid = "nobody"; use chroot = true; } ; }

    Declared by:

    [16163]<nixpkgs/nixos/modules/services/network-filesystems/rsyncd.nix>

[16164]services.rsyncd.socketActivated

    If enabled Rsync will be socket-activated rather than run persistently.

    Type: boolean

    Default: false

    Declared by:

    [16165]<nixpkgs/nixos/modules/services/network-filesystems/rsyncd.nix>

[16166]services.rsyslogd.enable

    Whether to enable syslogd. Note that systemd also logs syslog messages, so you normally don't
    need to run syslogd.

    Type: boolean

    Default: false

    Declared by:

    [16167]<nixpkgs/nixos/modules/services/logging/rsyslogd.nix>

[16168]services.rsyslogd.defaultConfig

    The default syslog.conf file configures a fairly standard setup of log files, which can be
    extended by means of extraConfig.

    Type: strings concatenated with "\n"

    Default:

    ''
    # "local1" is used for dhcpd messages.
    local1.*                     -/var/log/dhcpd

    mail.*                       -/var/log/mail

    *.=warning;*.=err            -/var/log/warn
    *.crit                        /var/log/warn

    *.*;mail.none;local1.none    -/var/log/messages
    ''

    Declared by:

    [16169]<nixpkgs/nixos/modules/services/logging/rsyslogd.nix>

[16170]services.rsyslogd.extraConfig

    Additional text appended to syslog.conf, i.e. the contents of defaultConfig.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "news.* -/var/log/news"

    Declared by:

    [16171]<nixpkgs/nixos/modules/services/logging/rsyslogd.nix>

[16172]services.rsyslogd.extraParams

    Additional parameters passed to rsyslogd.

    Type: list of strings

    Default: [ ]

    Example: [ "-m 0" ]

    Declared by:

    [16173]<nixpkgs/nixos/modules/services/logging/rsyslogd.nix>

[16174]services.rtorrent.enable

    Whether to enable rtorrent.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16175]<nixpkgs/nixos/modules/services/torrent/rtorrent.nix>

[16176]services.rtorrent.package

    The rtorrent package to use.

    Type: package

    Default: "pkgs.rtorrent"

    Declared by:

    [16177]<nixpkgs/nixos/modules/services/torrent/rtorrent.nix>

[16178]services.rtorrent.configText

    The content of rtorrent.rc. The [16179]modernized configuration template with the values
    specified in this module will be prepended using mkBefore. You can use mkForce to overwrite
    the config completly.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16180]<nixpkgs/nixos/modules/services/torrent/rtorrent.nix>

[16181]services.rtorrent.dataDir

    The directory where rtorrent stores its data files.

    Type: string

    Default: "/var/lib/rtorrent"

    Declared by:

    [16182]<nixpkgs/nixos/modules/services/torrent/rtorrent.nix>

[16183]services.rtorrent.downloadDir

    Where to put downloaded files.

    Type: string

    Default: "/var/lib/rtorrent/download"

    Declared by:

    [16184]<nixpkgs/nixos/modules/services/torrent/rtorrent.nix>

[16185]services.rtorrent.group

    Group under which rtorrent runs.

    Type: string

    Default: "rtorrent"

    Declared by:

    [16186]<nixpkgs/nixos/modules/services/torrent/rtorrent.nix>

[16187]services.rtorrent.openFirewall

    Whether to open the firewall for the port in services.rtorrent.port.

    Type: boolean

    Default: false

    Declared by:

    [16188]<nixpkgs/nixos/modules/services/torrent/rtorrent.nix>

[16189]services.rtorrent.port

    The rtorrent port.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 50000

    Declared by:

    [16190]<nixpkgs/nixos/modules/services/torrent/rtorrent.nix>

[16191]services.rtorrent.rpcSocket

    RPC socket path.

    Type: string (read only)

    Default: "/run/rtorrent/rpc.sock"

    Declared by:

    [16192]<nixpkgs/nixos/modules/services/torrent/rtorrent.nix>

[16193]services.rtorrent.user

    User account under which rtorrent runs.

    Type: string

    Default: "rtorrent"

    Declared by:

    [16194]<nixpkgs/nixos/modules/services/torrent/rtorrent.nix>

[16195]services.sabnzbd.enable

    Whether to enable the sabnzbd server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16196]<nixpkgs/nixos/modules/services/networking/sabnzbd.nix>

[16197]services.sabnzbd.configFile

    Path to config file.

    Type: path

    Default: "/var/lib/sabnzbd/sabnzbd.ini"

    Declared by:

    [16198]<nixpkgs/nixos/modules/services/networking/sabnzbd.nix>

[16199]services.sabnzbd.group

    Group to run the service as

    Type: string

    Default: "sabnzbd"

    Declared by:

    [16200]<nixpkgs/nixos/modules/services/networking/sabnzbd.nix>

[16201]services.sabnzbd.user

    User to run the service as

    Type: string

    Default: "sabnzbd"

    Declared by:

    [16202]<nixpkgs/nixos/modules/services/networking/sabnzbd.nix>

[16203]services.safeeyes.enable

    Whether to enable the safeeyes OSGi service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16204]<nixpkgs/nixos/modules/services/misc/safeeyes.nix>

[16205]services.salt.master.enable

    Whether to enable Salt master service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16206]<nixpkgs/nixos/modules/services/admin/salt/master.nix>

[16207]services.salt.master.configuration

    Salt master configuration as Nix attribute set.

    Type: attribute set

    Default: { }

    Declared by:

    [16208]<nixpkgs/nixos/modules/services/admin/salt/master.nix>

[16209]services.salt.minion.enable

    Whether to enable Salt minion service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16210]<nixpkgs/nixos/modules/services/admin/salt/minion.nix>

[16211]services.salt.minion.configuration

    Salt minion configuration as Nix attribute set. See [16212]https://docs.saltstack.com/en/
    latest/ref/configuration/minion.html for details.

    Type: attribute set

    Default: { }

    Declared by:

    [16213]<nixpkgs/nixos/modules/services/admin/salt/minion.nix>

[16214]services.samba.enable

    Whether to enable Samba, which provides file and print services to Windows clients through
    the SMB/CIFS protocol.

    Note: If you use the firewall consider adding the following:

    Type: boolean

    Default: false

    Declared by:

    [16215]<nixpkgs/nixos/modules/services/network-filesystems/samba.nix>

[16216]services.samba.enableNmbd

    Whether to enable Samba's nmbd, which replies to NetBIOS over IP name service requests. It
    also participates in the browsing protocols which make up the Windows "Network Neighborhood"
    view.

    Type: boolean

    Default: true

    Declared by:

    [16217]<nixpkgs/nixos/modules/services/network-filesystems/samba.nix>

[16218]services.samba.enableWinbindd

    Whether to enable Samba's winbindd, which provides a number of services to the Name Service
    Switch capability found in most modern C libraries, to arbitrary applications via PAM and
    ntlm_auth and to Samba itself.

    Type: boolean

    Default: true

    Declared by:

    [16219]<nixpkgs/nixos/modules/services/network-filesystems/samba.nix>

[16220]services.samba.package

    Defines which package should be used for the samba server.

    Type: package

    Default: "pkgs.samba"

    Example:

    pkgs.samba4Full

    Declared by:

    [16221]<nixpkgs/nixos/modules/services/network-filesystems/samba.nix>

[16222]services.samba.configText

    Verbatim contents of smb.conf. If null (default), use the autogenerated file from NixOS
    instead.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [16223]<nixpkgs/nixos/modules/services/network-filesystems/samba.nix>

[16224]services.samba.extraConfig

    Additional global section and extra section lines go in here.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    guest account = nobody
    map to guest = bad user
    ''

    Declared by:

    [16225]<nixpkgs/nixos/modules/services/network-filesystems/samba.nix>

[16226]services.samba.invalidUsers

    List of users who are denied to login via Samba.

    Type: list of strings

    Default: [ "root" ]

    Declared by:

    [16227]<nixpkgs/nixos/modules/services/network-filesystems/samba.nix>

[16228]services.samba.nsswins

    Whether to enable the WINS NSS (Name Service Switch) plug-in. Enabling it allows applications
    to resolve WINS/NetBIOS names (a.k.a. Windows machine names) by transparently querying the
    winbindd daemon.

    Type: boolean

    Default: false

    Declared by:

    [16229]<nixpkgs/nixos/modules/services/network-filesystems/samba.nix>

[16230]services.samba.securityType

    Samba security type

    Type: string

    Default: "user"

    Declared by:

    [16231]<nixpkgs/nixos/modules/services/network-filesystems/samba.nix>

[16232]services.samba.shares

    A set describing shared resources. See man smb.conf for options.

    Type: attribute set of attribute set of unspecifiedss

    Default: { }

    Example:

    { public =
      { path = "/srv/public";
        "read only" = true;
        browseable = "yes";
        "guest ok" = "yes";
        comment = "Public samba share.";
      };
    }

    Declared by:

    [16233]<nixpkgs/nixos/modules/services/network-filesystems/samba.nix>

[16234]services.samba-wsdd.enable

    Whether to enable Enable Web Services Dynamic Discovery host daemon. This enables (Samba)
    hosts, like your local NAS device, to be found by Web Service Discovery Clients like Windows.

    Note: If you use the firewall consider adding the following:

    .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16235]<nixpkgs/nixos/modules/services/network-filesystems/samba-wsdd.nix>

[16236]services.samba-wsdd.discovery

    Enable discovery operation mode.

    Type: boolean

    Default: false

    Declared by:

    [16237]<nixpkgs/nixos/modules/services/network-filesystems/samba-wsdd.nix>

[16238]services.samba-wsdd.domain

    Set domain name (disables workgroup).

    Type: null or string

    Default: null

    Declared by:

    [16239]<nixpkgs/nixos/modules/services/network-filesystems/samba-wsdd.nix>

[16240]services.samba-wsdd.extraOptions

    Additional wsdd options.

    Type: list of strings

    Default: [ "--shortlog" ]

    Example: [ "--verbose" "--no-http" "--ipv4only" "--no-host" ]

    Declared by:

    [16241]<nixpkgs/nixos/modules/services/network-filesystems/samba-wsdd.nix>

[16242]services.samba-wsdd.hoplimit

    Hop limit for multicast packets (default = 1).

    Type: null or signed integer

    Default: null

    Example: 2

    Declared by:

    [16243]<nixpkgs/nixos/modules/services/network-filesystems/samba-wsdd.nix>

[16244]services.samba-wsdd.hostname

    Override (NetBIOS) hostname to be used (default hostname).

    Type: null or string

    Default: null

    Example: "FILESERVER"

    Declared by:

    [16245]<nixpkgs/nixos/modules/services/network-filesystems/samba-wsdd.nix>

[16246]services.samba-wsdd.interface

    Interface or address to use.

    Type: null or string

    Default: null

    Example: "eth0"

    Declared by:

    [16247]<nixpkgs/nixos/modules/services/network-filesystems/samba-wsdd.nix>

[16248]services.samba-wsdd.listen

    Listen on path or localhost port in discovery mode.

    Type: string

    Default: "/run/wsdd/wsdd.sock"

    Declared by:

    [16249]<nixpkgs/nixos/modules/services/network-filesystems/samba-wsdd.nix>

[16250]services.samba-wsdd.workgroup

    Set workgroup name (default WORKGROUP).

    Type: null or string

    Default: null

    Example: "HOME"

    Declared by:

    [16251]<nixpkgs/nixos/modules/services/network-filesystems/samba-wsdd.nix>

[16252]services.saned.enable

    Enable saned network daemon for remote connection to scanners.

    saned would be runned from scanner user; to allow access to hardware that doesn't have
    scanner group you should add needed groups to this user.

    Type: boolean

    Default: false

    Declared by:

    [16253]<nixpkgs/nixos/modules/services/hardware/sane.nix>

[16254]services.saned.extraConfig

    Extra saned configuration lines.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "192.168.0.0/24"

    Declared by:

    [16255]<nixpkgs/nixos/modules/services/hardware/sane.nix>

[16256]services.sanoid.enable

    Whether to enable Sanoid ZFS snapshotting service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16257]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16258]services.sanoid.datasets

    Datasets to snapshot.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [16259]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16260]services.sanoid.datasets.<name>.autoprune

    Whether to automatically prune old snapshots.

    Type: boolean

    Default: true

    Declared by:

    [16261]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16262]services.sanoid.datasets.<name>.autosnap

    Whether to automatically take snapshots.

    Type: boolean

    Default: true

    Declared by:

    [16263]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16264]services.sanoid.datasets.<name>.daily

    Number of daily snapshots.

    Type: unsigned integer, meaning >=0

    Default: 90

    Declared by:

    [16265]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16266]services.sanoid.datasets.<name>.hourly

    Number of hourly snapshots.

    Type: unsigned integer, meaning >=0

    Default: 48

    Declared by:

    [16267]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16268]services.sanoid.datasets.<name>.monthly

    Number of monthly snapshots.

    Type: unsigned integer, meaning >=0

    Default: 6

    Declared by:

    [16269]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16270]services.sanoid.datasets.<name>.processChildrenOnly

    Whether to only snapshot child datasets if recursing.

    Type: boolean

    Default: false

    Declared by:

    [16271]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16272]services.sanoid.datasets.<name>.recursive

    Whether to recursively snapshot dataset children.

    Type: boolean

    Default: false

    Declared by:

    [16273]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16274]services.sanoid.datasets.<name>.settings

    Free-form settings for this template/dataset. See [16275]https://github.com/jimsalterjrs/
    sanoid/blob/master/sanoid.defaults.conf for allowed values.

    Type: dataset/template options

    Declared by:

    [16276]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16277]services.sanoid.datasets.<name>.useTemplate

    Names of the templates to use for this dataset.

    Type: list of template names

    Default: [ ]

    Declared by:

    [16278]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16279]services.sanoid.datasets.<name>.yearly

    Number of yearly snapshots.

    Type: unsigned integer, meaning >=0

    Default: 0

    Declared by:

    [16280]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16281]services.sanoid.extraArgs

    Extra arguments to pass to sanoid. See [16282]https://github.com/jimsalterjrs/sanoid/#
    sanoid-command-line-options for allowed options.

    Type: list of strings

    Default: [ ]

    Example: [ "--verbose" "--readonly" "--debug" ]

    Declared by:

    [16283]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16284]services.sanoid.interval

    Run sanoid at this interval. The default is to run hourly.

    The format is described in systemd.time(7).

    Type: string

    Default: "hourly"

    Example: "daily"

    Declared by:

    [16285]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16286]services.sanoid.settings

    Free-form settings written directly to the config file. See [16287]https://github.com/
    jimsalterjrs/sanoid/blob/master/sanoid.defaults.conf for allowed values.

    Type: attribute set of dataset/template optionss

    Declared by:

    [16288]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16289]services.sanoid.templates

    Templates for datasets.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [16290]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16291]services.sanoid.templates.<name>.autoprune

    Whether to automatically prune old snapshots.

    Type: boolean

    Default: true

    Declared by:

    [16292]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16293]services.sanoid.templates.<name>.autosnap

    Whether to automatically take snapshots.

    Type: boolean

    Default: true

    Declared by:

    [16294]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16295]services.sanoid.templates.<name>.daily

    Number of daily snapshots.

    Type: unsigned integer, meaning >=0

    Default: 90

    Declared by:

    [16296]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16297]services.sanoid.templates.<name>.hourly

    Number of hourly snapshots.

    Type: unsigned integer, meaning >=0

    Default: 48

    Declared by:

    [16298]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16299]services.sanoid.templates.<name>.monthly

    Number of monthly snapshots.

    Type: unsigned integer, meaning >=0

    Default: 6

    Declared by:

    [16300]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16301]services.sanoid.templates.<name>.settings

    Free-form settings for this template/dataset. See [16302]https://github.com/jimsalterjrs/
    sanoid/blob/master/sanoid.defaults.conf for allowed values.

    Type: dataset/template options

    Declared by:

    [16303]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16304]services.sanoid.templates.<name>.yearly

    Number of yearly snapshots.

    Type: unsigned integer, meaning >=0

    Default: 0

    Declared by:

    [16305]<nixpkgs/nixos/modules/services/backup/sanoid.nix>

[16306]services.saslauthd.enable

    Whether to enable saslauthd, the Cyrus SASL authentication daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16307]<nixpkgs/nixos/modules/services/system/saslauthd.nix>

[16308]services.saslauthd.package

    Cyrus SASL package to use.

    Type: package

    Default: "pkgs.cyrus_sasl.bin"

    Declared by:

    [16309]<nixpkgs/nixos/modules/services/system/saslauthd.nix>

[16310]services.saslauthd.config

    Configuration to use for Cyrus SASL authentication daemon.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16311]<nixpkgs/nixos/modules/services/system/saslauthd.nix>

[16312]services.saslauthd.mechanism

    Auth mechanism to use

    Type: string

    Default: "pam"

    Declared by:

    [16313]<nixpkgs/nixos/modules/services/system/saslauthd.nix>

[16314]services.scollector.enable

    Whether to run scollector.

    Type: boolean

    Default: false

    Declared by:

    [16315]<nixpkgs/nixos/modules/services/monitoring/scollector.nix>

[16316]services.scollector.package

    scollector binary to use.

    Type: package

    Default: "pkgs.scollector"

    Example:

    pkgs.scollector

    Declared by:

    [16317]<nixpkgs/nixos/modules/services/monitoring/scollector.nix>

[16318]services.scollector.bosunHost

    Host and port of the bosun server that will store the collected data.

    Type: string

    Default: "localhost:8070"

    Declared by:

    [16319]<nixpkgs/nixos/modules/services/monitoring/scollector.nix>

[16320]services.scollector.collectors

    An attribute set mapping the frequency of collection to a list of binaries that should be
    executed at that frequency. You can use "0" to run a binary forever.

    Type: attribute set of list of pathss

    Default: { }

    Example:

    { "0" = [ "${postgresStats}/bin/collect-stats" ]; }

    Declared by:

    [16321]<nixpkgs/nixos/modules/services/monitoring/scollector.nix>

[16322]services.scollector.extraConfig

    Extra scollector configuration added to the end of scollector.toml

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16323]<nixpkgs/nixos/modules/services/monitoring/scollector.nix>

[16324]services.scollector.extraOpts

    Extra scollector command line options

    Type: list of strings

    Default: [ ]

    Example: [ "-d" ]

    Declared by:

    [16325]<nixpkgs/nixos/modules/services/monitoring/scollector.nix>

[16326]services.scollector.group

    Group account under which scollector runs.

    Type: string

    Default: "scollector"

    Declared by:

    [16327]<nixpkgs/nixos/modules/services/monitoring/scollector.nix>

[16328]services.scollector.user

    User account under which scollector runs.

    Type: string

    Default: "scollector"

    Declared by:

    [16329]<nixpkgs/nixos/modules/services/monitoring/scollector.nix>

[16330]services.searx.enable

    Whether to enable Searx, the meta search engine.

    Type: boolean

    Default: false

    Related packages:

      □ pkgs.searx (searx-1.0.0): A privacy-respecting, hackable metasearch engine.

    Declared by:

    [16331]<nixpkgs/nixos/modules/services/networking/searx.nix>

[16332]services.searx.package

    searx package to use.

    Type: package

    Default: "pkgs.searx"

    Declared by:

    [16333]<nixpkgs/nixos/modules/services/networking/searx.nix>

[16334]services.searx.environmentFile

    Environment file (see systemd.exec(5) "EnvironmentFile=" section for the syntax) to define
    variables for Searx. This option can be used to safely include secret keys into the Searx
    configuration.

    Type: null or path

    Default: null

    Declared by:

    [16335]<nixpkgs/nixos/modules/services/networking/searx.nix>

[16336]services.searx.runInUwsgi

    Whether to run searx in uWSGI as a "vassal", instead of using its built-in HTTP server. This
    is the recommended mode for public or large instances, but is unecessary for LAN or
    local-only use.

    Warning: The built-in HTTP server logs all queries by default.

    Type: boolean

    Default: false

    Declared by:

    [16337]<nixpkgs/nixos/modules/services/networking/searx.nix>

[16338]services.searx.settings

    Searx settings. These will be merged with (taking precedence over) the default configuration.
    It's also possible to refer to environment variables (defined in [16339]
    services.searx.environmentFile) using the syntax @VARIABLE_NAME@.

    Note: For available settings, see the Searx [16340]docs.

    Type: attribute set of JSON values

    Default: { }

    Example:

    { server.port = 8080;
      server.bind_address = "0.0.0.0";
      server.secret_key = "@SEARX_SECRET_KEY@";

      engines = lib.singleton
        { name = "wolframalpha";
          shortcut = "wa";
          api_key = "@WOLFRAM_API_KEY@";
          engine = "wolframalpha_api";
        };
    }

    Declared by:

    [16341]<nixpkgs/nixos/modules/services/networking/searx.nix>

[16342]services.searx.settingsFile

    The path of the Searx server settings.yml file. If no file is specified, a default file is
    used (default config file has debug mode enabled). Note: setting this options overrides 
    [16343]services.searx.settings.

    Warning: This file, along with any secret key it contains, will be copied into the
    world-readable Nix store.

    Type: path

    Default: "/run/searx/settings.yml"

    Declared by:

    [16344]<nixpkgs/nixos/modules/services/networking/searx.nix>

[16345]services.searx.uwsgiConfig

    Additional configuration of the uWSGI vassal running searx. It should notably specify on
    which interfaces and ports the vassal should listen.

    Type: Json value or lambda

    Default: { http = ":8080"; }

    Example:

    {
      disable-logging = true;
      http = ":8080";                   # serve via HTTP...
      socket = "/run/searx/searx.sock"; # ...or UNIX socket
    }

    Declared by:

    [16346]<nixpkgs/nixos/modules/services/networking/searx.nix>

[16347]services.self-deploy.enable

    Whether to enable self-deploy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16348]<nixpkgs/nixos/modules/services/system/self-deploy.nix>

[16349]services.self-deploy.branch

    Branch to track

    Technically speaking any ref can be specified here, as this is passed directly to a `git
    fetch`, but for the use-case of continuous deployment you're likely to want to specify a
    branch.

    Type: string

    Default: "master"

    Declared by:

    [16350]<nixpkgs/nixos/modules/services/system/self-deploy.nix>

[16351]services.self-deploy.nixArgs

    Arguments to `nix-build` passed as `--argstr` or `--arg` depending on the type.

    Type: attribute set

    Default: { }

    Declared by:

    [16352]<nixpkgs/nixos/modules/services/system/self-deploy.nix>

[16353]services.self-deploy.nixAttribute

    Attribute of `nixFile` that builds the current system.

    Type: string

    Declared by:

    [16354]<nixpkgs/nixos/modules/services/system/self-deploy.nix>

[16355]services.self-deploy.nixFile

    Path to nix file in repository. Leading '/' refers to root of git repository.

    Type: path

    Default: "/default.nix"

    Declared by:

    [16356]<nixpkgs/nixos/modules/services/system/self-deploy.nix>

[16357]services.self-deploy.repository

    The repository to fetch from. Must be properly formatted for git.

    If this value is set to a path (must begin with `/`) then it's assumed that the repository is
    local and the resulting service won't wait for the network to be up.

    If the repository will be fetched over SSH, you must add an entry to `programs.ssh.knownHosts
    ` for the SSH host for the fetch to be successful.

    Type: path or string

    Declared by:

    [16358]<nixpkgs/nixos/modules/services/system/self-deploy.nix>

[16359]services.self-deploy.sshKeyFile

    Path to SSH private key used to fetch private repositories over SSH.

    Type: null or path

    Default: null

    Declared by:

    [16360]<nixpkgs/nixos/modules/services/system/self-deploy.nix>

[16361]services.self-deploy.startAt

    The schedule on which to run the `self-deploy` service. Format specified by `systemd.time 7`.

    This value can also be a list of `systemd.time 7` formatted strings, in which case the
    service will be started on multiple schedules.

    Type: string or list of strings

    Default: "hourly"

    Declared by:

    [16362]<nixpkgs/nixos/modules/services/system/self-deploy.nix>

[16363]services.self-deploy.switchCommand

    The `switch-to-configuration` subcommand used.

    Type: one of "boot", "switch", "dry-activate", "test"

    Default: "switch"

    Declared by:

    [16364]<nixpkgs/nixos/modules/services/system/self-deploy.nix>

[16365]services.selfoss.enable

    Whether to enable selfoss.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16366]<nixpkgs/nixos/modules/services/web-apps/selfoss.nix>

[16367]services.selfoss.database.host

    Host of the database (has no effect if type is "sqlite").

    Type: string

    Default: "localhost"

    Declared by:

    [16368]<nixpkgs/nixos/modules/services/web-apps/selfoss.nix>

[16369]services.selfoss.database.name

    Name of the existing database (has no effect if type is "sqlite").

    Type: string

    Default: "tt_rss"

    Declared by:

    [16370]<nixpkgs/nixos/modules/services/web-apps/selfoss.nix>

[16371]services.selfoss.database.password

    The database user's password (has no effect if type is "sqlite").

    Type: null or string

    Default: null

    Declared by:

    [16372]<nixpkgs/nixos/modules/services/web-apps/selfoss.nix>

[16373]services.selfoss.database.port

    The database's port. If not set, the default ports will be provided (5432 and 3306 for pgsql
    and mysql respectively) (has no effect if type is "sqlite").

    Type: null or signed integer

    Default: null

    Declared by:

    [16374]<nixpkgs/nixos/modules/services/web-apps/selfoss.nix>

[16375]services.selfoss.database.type

    Database to store feeds. Supported are sqlite, pgsql and mysql.

    Type: one of "pgsql", "mysql", "sqlite"

    Default: "sqlite"

    Declared by:

    [16376]<nixpkgs/nixos/modules/services/web-apps/selfoss.nix>

[16377]services.selfoss.database.user

    The database user. The user must exist and has access to the specified database (has no
    effect if type is "sqlite").

    Type: string

    Default: "tt_rss"

    Declared by:

    [16378]<nixpkgs/nixos/modules/services/web-apps/selfoss.nix>

[16379]services.selfoss.extraConfig

    Extra configuration added to config.ini

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16380]<nixpkgs/nixos/modules/services/web-apps/selfoss.nix>

[16381]services.selfoss.pool

    Name of existing phpfpm pool that is used to run web-application. If not specified a pool
    will be created automatically with default values.

    Type: string

    Default: "selfoss_pool"

    Declared by:

    [16382]<nixpkgs/nixos/modules/services/web-apps/selfoss.nix>

[16383]services.selfoss.user

    User account under which both the service and the web-application run.

    Type: string

    Default: "nginx"

    Example: "nginx"

    Declared by:

    [16384]<nixpkgs/nixos/modules/services/web-apps/selfoss.nix>

[16385]services.serviio.enable

    Whether to enable the Serviio Media Server.

    Type: boolean

    Default: false

    Declared by:

    [16386]<nixpkgs/nixos/modules/services/misc/serviio.nix>

[16387]services.serviio.dataDir

    The directory where serviio stores its state, data, etc.

    Type: path

    Default: "/var/lib/serviio"

    Declared by:

    [16388]<nixpkgs/nixos/modules/services/misc/serviio.nix>

[16389]services.shadowsocks.enable

    Whether to run shadowsocks-libev shadowsocks server.

    Type: boolean

    Default: false

    Declared by:

    [16390]<nixpkgs/nixos/modules/services/networking/shadowsocks.nix>

[16391]services.shadowsocks.encryptionMethod

    Encryption method. See [16392]https://github.com/shadowsocks/shadowsocks-org/wiki/
    AEAD-Ciphers.

    Type: string

    Default: "chacha20-ietf-poly1305"

    Declared by:

    [16393]<nixpkgs/nixos/modules/services/networking/shadowsocks.nix>

[16394]services.shadowsocks.extraConfig

    Additional configuration for shadowsocks that is not covered by the provided options. The
    provided attrset will be serialized to JSON and has to contain valid shadowsocks options.
    Unfortunately most additional options are undocumented but it's easy to find out what is
    available by looking into the source code of [16395]https://github.com/shadowsocks/
    shadowsocks-libev/blob/master/src/jconf.c

    Type: attribute set

    Default: { }

    Example:

    ''
    {
      nameserver = "8.8.8.8";
    }
    ''

    Declared by:

    [16396]<nixpkgs/nixos/modules/services/networking/shadowsocks.nix>

[16397]services.shadowsocks.fastOpen

    use TCP fast-open

    Type: boolean

    Default: true

    Declared by:

    [16398]<nixpkgs/nixos/modules/services/networking/shadowsocks.nix>

[16399]services.shadowsocks.localAddress

    Local addresses to which the server binds.

    Type: list of strings or string convertible to it

    Default: [ "[::0]" "0.0.0.0" ]

    Declared by:

    [16400]<nixpkgs/nixos/modules/services/networking/shadowsocks.nix>

[16401]services.shadowsocks.mode

    Relay protocols.

    Type: one of "tcp_only", "tcp_and_udp", "udp_only"

    Default: "tcp_and_udp"

    Declared by:

    [16402]<nixpkgs/nixos/modules/services/networking/shadowsocks.nix>

[16403]services.shadowsocks.password

    Password for connecting clients.

    Type: null or string

    Default: null

    Declared by:

    [16404]<nixpkgs/nixos/modules/services/networking/shadowsocks.nix>

[16405]services.shadowsocks.passwordFile

    Password file with a password for connecting clients.

    Type: null or path

    Default: null

    Declared by:

    [16406]<nixpkgs/nixos/modules/services/networking/shadowsocks.nix>

[16407]services.shadowsocks.plugin

    SIP003 plugin for shadowsocks

    Type: null or string

    Default: null

    Example: "\${pkgs.shadowsocks-v2ray-plugin}/bin/v2ray-plugin"

    Declared by:

    [16408]<nixpkgs/nixos/modules/services/networking/shadowsocks.nix>

[16409]services.shadowsocks.pluginOpts

    Options to pass to the plugin if one was specified

    Type: string

    Default: ""

    Example: "server;host=example.com"

    Declared by:

    [16410]<nixpkgs/nixos/modules/services/networking/shadowsocks.nix>

[16411]services.shadowsocks.port

    Port which the server uses.

    Type: signed integer

    Default: 8388

    Declared by:

    [16412]<nixpkgs/nixos/modules/services/networking/shadowsocks.nix>

[16413]services.shairport-sync.enable

    Enable the shairport-sync daemon.

    Running with a local system-wide or remote pulseaudio server is recommended.

    Type: boolean

    Default: false

    Declared by:

    [16414]<nixpkgs/nixos/modules/services/networking/shairport-sync.nix>

[16415]services.shairport-sync.arguments

    Arguments to pass to the daemon. Defaults to a local pulseaudio server.

    Type: string

    Default: "-v -o pa"

    Declared by:

    [16416]<nixpkgs/nixos/modules/services/networking/shairport-sync.nix>

[16417]services.shairport-sync.user

    User account name under which to run shairport-sync. The account will be created.

    Type: string

    Default: "shairport"

    Declared by:

    [16418]<nixpkgs/nixos/modules/services/networking/shairport-sync.nix>

[16419]services.shellhub-agent.enable

    Whether to enable the ShellHub Agent daemon, which allows secure remote logins.

    Type: boolean

    Default: false

    Declared by:

    [16420]<nixpkgs/nixos/modules/services/networking/shellhub-agent.nix>

[16421]services.shellhub-agent.package

    Which ShellHub Agent package to use.

    Type: package

    Default: "pkgs.shellhub-agent"

    Declared by:

    [16422]<nixpkgs/nixos/modules/services/networking/shellhub-agent.nix>

[16423]services.shellhub-agent.privateKey

    Location where to store the ShellHub Agent private key.

    Type: path

    Default: "/var/lib/shellhub-agent/private.key"

    Declared by:

    [16424]<nixpkgs/nixos/modules/services/networking/shellhub-agent.nix>

[16425]services.shellhub-agent.server

    Server address of ShellHub Gateway to connect.

    Type: string

    Default: "https://cloud.shellhub.io"

    Declared by:

    [16426]<nixpkgs/nixos/modules/services/networking/shellhub-agent.nix>

[16427]services.shellhub-agent.tenantId

    The tenant ID to use when connecting to the ShellHub Gateway.

    Type: string

    Example: "ba0a880c-2ada-11eb-a35e-17266ef329d6"

    Declared by:

    [16428]<nixpkgs/nixos/modules/services/networking/shellhub-agent.nix>

[16429]services.shellinabox.enable

    Whether to enable shellinabox daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16430]<nixpkgs/nixos/modules/services/web-servers/shellinabox.nix>

[16431]services.shellinabox.enableSSL

    Whether or not to enable SSL (https) support.

    Type: boolean

    Default: false

    Declared by:

    [16432]<nixpkgs/nixos/modules/services/web-servers/shellinabox.nix>

[16433]services.shellinabox.certDirectory

    The daemon will look in this directory far any certificates. If the browser negotiated a
    Server Name Identification the daemon will look for a matching certificate-SERVERNAME.pem
    file. If no SNI handshake takes place, it will fall back on using the certificate in the
    certificate.pem file.

    If no suitable certificate is installed, shellinaboxd will attempt to create a new
    self-signed certificate. This will only succeed if, after dropping privileges, shellinaboxd
    has write permissions for this directory.

    Type: null or path

    Default: null

    Example: "/var/certs"

    Declared by:

    [16434]<nixpkgs/nixos/modules/services/web-servers/shellinabox.nix>

[16435]services.shellinabox.certFile

    Path to server SSL certificate.

    Type: null or path

    Default: null

    Example: "/var/certificate.pem"

    Declared by:

    [16436]<nixpkgs/nixos/modules/services/web-servers/shellinabox.nix>

[16437]services.shellinabox.extraOptions

    A list of strings to be appended to the command line arguments for shellinaboxd. Please see
    the manual page [16438]https://code.google.com/p/shellinabox/wiki/shellinaboxd_man for a full
    list of available arguments.

    Type: list of strings

    Default: [ ]

    Example: [ "--port=443" "--service /:LOGIN" ]

    Declared by:

    [16439]<nixpkgs/nixos/modules/services/web-servers/shellinabox.nix>

[16440]services.shellinabox.user

    User to run shellinaboxd as. If started as root, the server drops privileges by changing to
    nobody, unless overridden by the --user option.

    Type: string

    Default: "root"

    Declared by:

    [16441]<nixpkgs/nixos/modules/services/web-servers/shellinabox.nix>

[16442]services.shibboleth-sp.enable

    Whether to enable the shibboleth service

    Type: boolean

    Default: false

    Declared by:

    [16443]<nixpkgs/nixos/modules/services/security/shibboleth-sp.nix>

[16444]services.shibboleth-sp.configFile

    Path to shibboleth config file

    Type: path

    Example: "\${pkgs.shibboleth-sp}/etc/shibboleth/shibboleth2.xml"

    Declared by:

    [16445]<nixpkgs/nixos/modules/services/security/shibboleth-sp.nix>

[16446]services.shibboleth-sp.fastcgi.enable

    Whether to include the shibauthorizer and shibresponder FastCGI processes

    Type: boolean

    Default: false

    Declared by:

    [16447]<nixpkgs/nixos/modules/services/security/shibboleth-sp.nix>

[16448]services.shibboleth-sp.fastcgi.shibAuthorizerPort

    Port for shibauthorizer FastCGI proccess to bind to

    Type: signed integer

    Default: 9100

    Declared by:

    [16449]<nixpkgs/nixos/modules/services/security/shibboleth-sp.nix>

[16450]services.shibboleth-sp.fastcgi.shibResponderPort

    Port for shibauthorizer FastCGI proccess to bind to

    Type: signed integer

    Default: 9101

    Declared by:

    [16451]<nixpkgs/nixos/modules/services/security/shibboleth-sp.nix>

[16452]services.shiori.enable

    Whether to enable Shiori simple bookmarks manager.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16453]<nixpkgs/nixos/modules/services/web-apps/shiori.nix>

[16454]services.shiori.package

    The Shiori package to use.

    Type: package

    Default: "pkgs.shiori"

    Declared by:

    [16455]<nixpkgs/nixos/modules/services/web-apps/shiori.nix>

[16456]services.shiori.address

    The IP address on which Shiori will listen. If empty, listens on all interfaces.

    Type: string

    Default: ""

    Declared by:

    [16457]<nixpkgs/nixos/modules/services/web-apps/shiori.nix>

[16458]services.shiori.port

    The port of the Shiori web application

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8080

    Declared by:

    [16459]<nixpkgs/nixos/modules/services/web-apps/shiori.nix>

[16460]services.shorewall.enable

    Whether to enable Shorewall IPv4 Firewall.

    Warning: Enabling this service WILL disable the existing NixOS firewall! Default firewall
    rules provided by packages are not considered at the moment.

    Type: boolean

    Default: false

    Declared by:

    [16461]<nixpkgs/nixos/modules/services/networking/shorewall.nix>

[16462]services.shorewall.package

    The shorewall package to use.

    Type: package

    Default: "pkgs.shorewall"

    Declared by:

    [16463]<nixpkgs/nixos/modules/services/networking/shorewall.nix>

[16464]services.shorewall.configs

    This option defines the Shorewall configs. The attribute name defines the name of the config,
    and the attribute value defines the content of the config.

    Type: attribute set of strings concatenated with "\n"s

    Default: { }

    Declared by:

    [16465]<nixpkgs/nixos/modules/services/networking/shorewall.nix>

[16466]services.shorewall6.enable

    Whether to enable Shorewall IPv6 Firewall.

    Warning: Enabling this service WILL disable the existing NixOS firewall! Default firewall
    rules provided by packages are not considered at the moment.

    Type: boolean

    Default: false

    Declared by:

    [16467]<nixpkgs/nixos/modules/services/networking/shorewall6.nix>

[16468]services.shorewall6.package

    The shorewall package to use.

    Type: package

    Default: "pkgs.shorewall"

    Declared by:

    [16469]<nixpkgs/nixos/modules/services/networking/shorewall6.nix>

[16470]services.shorewall6.configs

    This option defines the Shorewall configs. The attribute name defines the name of the config,
    and the attribute value defines the content of the config.

    Type: attribute set of strings concatenated with "\n"s

    Default: { }

    Declared by:

    [16471]<nixpkgs/nixos/modules/services/networking/shorewall6.nix>

[16472]services.shout.enable

    Whether to enable Shout web IRC client.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16473]<nixpkgs/nixos/modules/services/networking/shout.nix>

[16474]services.shout.config

    Shout config.js contents as attribute set (will be converted to JSON to generate the
    configuration file).

    The options defined here will be merged to the default configuration file.

    Documentation: http://shout-irc.com/docs/server/configuration.html

    Type: attribute set

    Default: { }

    Example: { defaults = { host = "localhost"; name = "Your Network"; port = 6697; } ;
    displayNetwork = false; }

    Declared by:

    [16475]<nixpkgs/nixos/modules/services/networking/shout.nix>

[16476]services.shout.configFile

    Contents of Shout's config.js file.

    Used for backward compatibility, recommended way is now to use the config option.

    Documentation: http://shout-irc.com/docs/server/configuration.html

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [16477]<nixpkgs/nixos/modules/services/networking/shout.nix>

[16478]services.shout.listenAddress

    IP interface to listen on for http connections.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [16479]<nixpkgs/nixos/modules/services/networking/shout.nix>

[16480]services.shout.port

    TCP port to listen on for http connections.

    Type: signed integer

    Default: 9000

    Declared by:

    [16481]<nixpkgs/nixos/modules/services/networking/shout.nix>

[16482]services.shout.private

    Make your shout instance private. You will need to configure user accounts by adding entries
    in /var/lib/shout/users.

    Type: boolean

    Default: false

    Declared by:

    [16483]<nixpkgs/nixos/modules/services/networking/shout.nix>

[16484]services.sickbeard.enable

    Whether to enable the sickbeard server.

    Type: boolean

    Default: false

    Declared by:

    [16485]<nixpkgs/nixos/modules/services/misc/sickbeard.nix>

[16486]services.sickbeard.package

    Enable pkgs.sickrage or pkgs.sickgear as an alternative to SickBeard

    Type: package

    Default: (build of sickbeard-2016-03-21)

    Example:

    pkgs.sickrage

    Declared by:

    [16487]<nixpkgs/nixos/modules/services/misc/sickbeard.nix>

[16488]services.sickbeard.configFile

    Path to config file.

    Type: path

    Default: "/var/lib/sickbeard/config.ini"

    Declared by:

    [16489]<nixpkgs/nixos/modules/services/misc/sickbeard.nix>

[16490]services.sickbeard.dataDir

    Path where to store data files.

    Type: path

    Default: "/var/lib/sickbeard"

    Declared by:

    [16491]<nixpkgs/nixos/modules/services/misc/sickbeard.nix>

[16492]services.sickbeard.group

    Group to run the service as

    Type: string

    Default: "sickbeard"

    Declared by:

    [16493]<nixpkgs/nixos/modules/services/misc/sickbeard.nix>

[16494]services.sickbeard.port

    Port to bind to.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8081

    Declared by:

    [16495]<nixpkgs/nixos/modules/services/misc/sickbeard.nix>

[16496]services.sickbeard.user

    User to run the service as

    Type: string

    Default: "sickbeard"

    Declared by:

    [16497]<nixpkgs/nixos/modules/services/misc/sickbeard.nix>

[16498]services.siproxd.enable

    Whether to enable the Siproxd SIP proxy/masquerading daemon.

    Type: boolean

    Default: false

    Declared by:

    [16499]<nixpkgs/nixos/modules/services/misc/siproxd.nix>

[16500]services.siproxd.extraConfig

    Extra configuration to add to siproxd configuration.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16501]<nixpkgs/nixos/modules/services/misc/siproxd.nix>

[16502]services.siproxd.hostsAllowReg

    Acess control list for incoming SIP registrations.

    Type: list of strings

    Default: [ ]

    Example: [ "192.168.1.0/24" "192.168.2.0/24" ]

    Declared by:

    [16503]<nixpkgs/nixos/modules/services/misc/siproxd.nix>

[16504]services.siproxd.hostsAllowSip

    Acess control list for incoming SIP traffic.

    Type: list of strings

    Default: [ ]

    Example: [ "123.45.0.0/16" "123.46.0.0/16" ]

    Declared by:

    [16505]<nixpkgs/nixos/modules/services/misc/siproxd.nix>

[16506]services.siproxd.hostsDenySip

    Acess control list for denying incoming SIP registrations and traffic.

    Type: list of strings

    Default: [ ]

    Example: [ "10.0.0.0/8" "11.0.0.0/8" ]

    Declared by:

    [16507]<nixpkgs/nixos/modules/services/misc/siproxd.nix>

[16508]services.siproxd.ifInbound

    Local network interface

    Type: string

    Example: "eth0"

    Declared by:

    [16509]<nixpkgs/nixos/modules/services/misc/siproxd.nix>

[16510]services.siproxd.ifOutbound

    Public network interface

    Type: string

    Example: "ppp0"

    Declared by:

    [16511]<nixpkgs/nixos/modules/services/misc/siproxd.nix>

[16512]services.siproxd.passwordFile

    Path to per-user password file.

    Type: string

    Default: ""

    Declared by:

    [16513]<nixpkgs/nixos/modules/services/misc/siproxd.nix>

[16514]services.siproxd.rtpDscp

    DSCP (differentiated services) value to be assigned to RTP packets. Allows QOS aware routers
    to handle different types traffic with different priorities.

    Type: signed integer

    Default: 46

    Declared by:

    [16515]<nixpkgs/nixos/modules/services/misc/siproxd.nix>

[16516]services.siproxd.rtpPortHigh

    Top of UDP port range for incoming and outgoing RTP traffic

    Type: signed integer

    Default: 7089

    Declared by:

    [16517]<nixpkgs/nixos/modules/services/misc/siproxd.nix>

[16518]services.siproxd.rtpPortLow

    Bottom of UDP port range for incoming and outgoing RTP traffic

    Type: signed integer

    Default: 7070

    Declared by:

    [16519]<nixpkgs/nixos/modules/services/misc/siproxd.nix>

[16520]services.siproxd.rtpTimeout

    Timeout for an RTP stream. If for the specified number of seconds no data is relayed on an
    active stream, it is considered dead and will be killed.

    Type: signed integer

    Default: 300

    Declared by:

    [16521]<nixpkgs/nixos/modules/services/misc/siproxd.nix>

[16522]services.siproxd.sipDscp

    DSCP (differentiated services) value to be assigned to SIP packets. Allows QOS aware routers
    to handle different types traffic with different priorities.

    Type: signed integer

    Default: 0

    Declared by:

    [16523]<nixpkgs/nixos/modules/services/misc/siproxd.nix>

[16524]services.siproxd.sipListenPort

    Port to listen for incoming SIP messages.

    Type: signed integer

    Default: 5060

    Declared by:

    [16525]<nixpkgs/nixos/modules/services/misc/siproxd.nix>

[16526]services.sks.enable

    Whether to enable SKS (synchronizing key server for OpenPGP) and start the database server.
    You need to create "${dataDir}/dump/*.gpg" for the initial import.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16527]<nixpkgs/nixos/modules/services/security/sks.nix>

[16528]services.sks.package

    Which SKS derivation to use.

    Type: package

    Default: "pkgs.sks"

    Declared by:

    [16529]<nixpkgs/nixos/modules/services/security/sks.nix>

[16530]services.sks.dataDir

    Data directory (-basedir) for SKS, where the database and all configuration files are located
    (e.g. KDB, PTree, membership and sksconf).

    Type: path

    Default: "/var/db/sks"

    Example: "/var/lib/sks"

    Declared by:

    [16531]<nixpkgs/nixos/modules/services/security/sks.nix>

[16532]services.sks.extraDbConfig

    Set contents of the files "KDB/DB_CONFIG" and "PTree/DB_CONFIG" within the ${dataDir}
    directory. This is used to configure options for the database for the sks key server.

    Documentation of available options are available in the file named "sampleConfig/DB_CONFIG"
    in the following repository: https://bitbucket.org/skskeyserver/sks-keyserver/src

    Type: string

    Default: ""

    Declared by:

    [16533]<nixpkgs/nixos/modules/services/security/sks.nix>

[16534]services.sks.hkpAddress

    Domain names, IPv4 and/or IPv6 addresses to listen on for HKP requests.

    Type: list of strings

    Default: [ "127.0.0.1" "::1" ]

    Declared by:

    [16535]<nixpkgs/nixos/modules/services/security/sks.nix>

[16536]services.sks.hkpPort

    HKP port to listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 11371

    Declared by:

    [16537]<nixpkgs/nixos/modules/services/security/sks.nix>

[16538]services.sks.webroot

    Source directory (will be symlinked, if not null) for the files the built-in webserver should
    serve. SKS (${pkgs.sks.webSamples}) provides the following examples: "HTML5", "OpenPKG", and
    "XHTML+ES". The index file can be named index.html, index.htm, index.xhtm, or index.xhtml.
    Files with the extensions .css, .es, .js, .jpg, .jpeg, .png, or .gif are supported.
    Subdirectories and filenames with anything other than alphanumeric characters and the '.'
    character will be ignored.

    Type: null or path

    Default: "\${pkgs.sks.webSamples}/OpenPKG"

    Declared by:

    [16539]<nixpkgs/nixos/modules/services/security/sks.nix>

[16540]services.skydns.enable

    Whether to enable skydns service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16541]<nixpkgs/nixos/modules/services/networking/skydns.nix>

[16542]services.skydns.package

    Skydns package to use.

    Type: package

    Default: "pkgs.skydns"

    Declared by:

    [16543]<nixpkgs/nixos/modules/services/networking/skydns.nix>

[16544]services.skydns.address

    Skydns address to bind to.

    Type: string

    Default: "0.0.0.0:53"

    Declared by:

    [16545]<nixpkgs/nixos/modules/services/networking/skydns.nix>

[16546]services.skydns.domain

    Skydns default domain if not specified by etcd config.

    Type: string

    Default: "skydns.local."

    Declared by:

    [16547]<nixpkgs/nixos/modules/services/networking/skydns.nix>

[16548]services.skydns.etcd.caCert

    Skydns path of TLS certificate authority public key.

    Type: null or path

    Default: null

    Declared by:

    [16549]<nixpkgs/nixos/modules/services/networking/skydns.nix>

[16550]services.skydns.etcd.machines

    Skydns list of etcd endpoints to connect to.

    Type: list of strings

    Default: [ "http://127.0.0.1:2379" ]

    Declared by:

    [16551]<nixpkgs/nixos/modules/services/networking/skydns.nix>

[16552]services.skydns.etcd.tlsKey

    Skydns path of TLS client certificate - private key.

    Type: null or path

    Default: null

    Declared by:

    [16553]<nixpkgs/nixos/modules/services/networking/skydns.nix>

[16554]services.skydns.etcd.tlsPem

    Skydns path of TLS client certificate - public key.

    Type: null or path

    Default: null

    Declared by:

    [16555]<nixpkgs/nixos/modules/services/networking/skydns.nix>

[16556]services.skydns.extraConfig

    Skydns attribute set of extra config options passed as environment variables.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [16557]<nixpkgs/nixos/modules/services/networking/skydns.nix>

[16558]services.skydns.nameservers

    Skydns list of nameservers to forward DNS requests to when not authoritative for a domain.

    Type: list of strings

    Default: [ ]

    Example: [ "8.8.8.8:53" "8.8.4.4:53" ]

    Declared by:

    [16559]<nixpkgs/nixos/modules/services/networking/skydns.nix>

[16560]services.slimserver.enable

    Whether to enable slimserver.

    Type: boolean

    Default: false

    Declared by:

    [16561]<nixpkgs/nixos/modules/services/audio/slimserver.nix>

[16562]services.slimserver.package

    Slimserver package to use.

    Type: package

    Default: "pkgs.slimserver"

    Declared by:

    [16563]<nixpkgs/nixos/modules/services/audio/slimserver.nix>

[16564]services.slimserver.dataDir

    The directory where slimserver stores its state, tag cache, playlists etc.

    Type: path

    Default: "/var/lib/slimserver"

    Declared by:

    [16565]<nixpkgs/nixos/modules/services/audio/slimserver.nix>

[16566]services.slurm.enableSrunX11

    If enabled srun will accept the option "--x11" to allow for X11 forwarding from within an
    interactive session or a batch job. This activates the slurm-spank-x11 module. Note that this
    option also enables services.openssh.forwardX11 on the client.

    This option requires slurm to be compiled without native X11 support. The default behavior is
    to re-compile the slurm package with native X11 support disabled if this option is set to
    true.

    To use the native X11 support add PrologFlags=X11 in extraConfig. Note that this method will
    only work RSA SSH host keys.

    Type: boolean

    Default: false

    Declared by:

    [16567]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16568]services.slurm.enableStools

    Whether to provide a slurm.conf file. Enable this option if you do not run a slurm daemon on
    this host (i.e. server.enable and client.enable are false) but you still want to run slurm
    commands from this host.

    Type: boolean

    Default: false

    Declared by:

    [16569]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16570]services.slurm.package

    The package to use for slurm binaries.

    Type: package

    Default: "pkgs.slurm"

    Example:

    pkgs.slurm-full

    Declared by:

    [16571]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16572]services.slurm.client.enable

    Whether to enable slurm client daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16573]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16574]services.slurm.clusterName

    Necessary to distinguish accounting records in a multi-cluster environment.

    Type: string

    Default: "default"

    Example: "myCluster"

    Declared by:

    [16575]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16576]services.slurm.controlAddr

    Name that ControlMachine should be referred to in establishing a communications path.

    Type: null or string

    Default: null

    Example: null

    Declared by:

    [16577]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16578]services.slurm.controlMachine

    The short hostname of the machine where SLURM control functions are executed (i.e. the name
    returned by the command "hostname -s", use "tux001" rather than "tux001.my.com").

    Type: null or string

    Default: null

    Example: null

    Declared by:

    [16579]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16580]services.slurm.dbdserver.enable

    Whether to enable SlurmDBD service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16581]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16582]services.slurm.dbdserver.dbdHost

    Hostname of the machine where slurmdbd is running (i.e. name returned by hostname -s).

    Type: string

    Default: "nixos"

    Declared by:

    [16583]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16584]services.slurm.dbdserver.extraConfig

    Extra configuration for slurmdbd.conf See also: slurmdbd.conf(8).

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16585]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16586]services.slurm.dbdserver.storagePassFile

    Path to file with database password. The content of this will be used to create the password
    for the StoragePass option.

    Type: null or string

    Default: null

    Declared by:

    [16587]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16588]services.slurm.dbdserver.storageUser

    Database user name.

    Type: string

    Default: "slurm"

    Declared by:

    [16589]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16590]services.slurm.extraCgroupConfig

    Extra configuration for cgroup.conf. This file is used when procTrackType=proctrack/cgroup.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16591]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16592]services.slurm.extraConfig

    Extra configuration options that will be added verbatim at the end of the slurm configuration
    file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16593]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16594]services.slurm.extraConfigPaths

    Slurm expects config files for plugins in the same path as slurm.conf. Add extra nix store
    paths that should be merged into same directory as slurm.conf.

    Type: list of paths

    Default: [ ]

    Declared by:

    [16595]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16596]services.slurm.extraPlugstackConfig

    Extra configuration that will be added to the end of plugstack.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16597]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16598]services.slurm.nodeName

    Name that SLURM uses to refer to a node (or base partition for BlueGene systems). Typically
    this would be the string that "/bin/hostname -s" returns. Note that now you have to write
    node's parameters after the name.

    Type: list of strings

    Default: [ ]

    Example:

    [ "linux[1-32] CPUs=1 State=UNKNOWN" ];

    Declared by:

    [16599]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16600]services.slurm.partitionName

    Name by which the partition may be referenced. Note that now you have to write the
    partition's parameters after the name.

    Type: list of strings

    Default: [ ]

    Example:

    [ "debug Nodes=linux[1-32] Default=YES MaxTime=INFINITE State=UP" ];

    Declared by:

    [16601]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16602]services.slurm.procTrackType

    Plugin to be used for process tracking on a job step basis. The slurmd daemon uses this
    mechanism to identify all processes which are children of processes it spawns for a user job
    step.

    Type: string

    Default: "proctrack/linuxproc"

    Declared by:

    [16603]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16604]services.slurm.server.enable

    Whether to enable the slurm control daemon. Note that the standard authentication method is
    "munge". The "munge" service needs to be provided with a password file in order for slurm to
    work properly (see services.munge.password).

    Type: boolean

    Default: false

    Declared by:

    [16605]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16606]services.slurm.stateSaveLocation

    Directory into which the Slurm controller, slurmctld, saves its state.

    Type: string

    Default: "/var/spool/slurmctld"

    Declared by:

    [16607]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16608]services.slurm.user

    Set this option when you want to run the slurmctld daemon as something else than the default
    slurm user "slurm". Note that the UID of this user needs to be the same on all nodes.

    Type: string

    Default: "slurm"

    Declared by:

    [16609]<nixpkgs/nixos/modules/services/computing/slurm/slurm.nix>

[16610]services.smartd.enable

    Whether to enable smartd daemon from smartmontools package.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16611]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16612]services.smartd.autodetect

    Whenever smartd should monitor all devices connected to the machine at the time it's being
    started (the default).

    Set to false to monitor the devices listed in services.smartd.devices only.

    Type: boolean

    Default: true

    Declared by:

    [16613]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16614]services.smartd.defaults.autodetected

    Like services.smartd.defaults.monitored, but for the autodetected devices.

    Type: strings concatenated with " "

    Default: "-a"

    Declared by:

    [16615]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16616]services.smartd.defaults.monitored

    Common default options for explicitly monitored (listed in services.smartd.devices) devices.

    The default value turns on monitoring of all the things (see man 5 smartd.conf).

    The example also turns on SMART Automatic Offline Testing on startup, and schedules short
    self-tests daily, and long self-tests weekly.

    Type: strings concatenated with " "

    Default: "-a"

    Example: "-a -o on -s (S/../.././02|L/../../7/04)"

    Declared by:

    [16617]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16618]services.smartd.devices

    List of devices to monitor.

    Type: list of submodules

    Default: [ ]

    Example: [ { device = "/dev/sda"; } { device = "/dev/sdb"; options = "-d sat"; } ]

    Declared by:

    [16619]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16620]services.smartd.devices.*.device

    Location of the device.

    Type: string

    Example: "/dev/sda"

    Declared by:

    [16621]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16622]services.smartd.devices.*.options

    Options that determine how smartd monitors the device.

    Type: strings concatenated with " "

    Default: ""

    Example: "-d sat"

    Declared by:

    [16623]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16624]services.smartd.extraOptions

    Extra command-line options passed to the smartd daemon on startup.

    (See man 8 smartd.)

    Type: list of strings

    Default: [ ]

    Example: [ "-A /var/log/smartd/" "--interval=3600" ]

    Declared by:

    [16625]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16626]services.smartd.notifications.mail.enable

    Whenever to send e-mail notifications.

    Type: boolean

    Default: false

    Declared by:

    [16627]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16628]services.smartd.notifications.mail.mailer

    Sendmail-compatible binary to be used to send the messages.

    You should probably enable services.postfix or some other MTA for this to work.

    Type: path

    Default: "/run/wrappers/bin/sendmail"

    Declared by:

    [16629]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16630]services.smartd.notifications.mail.recipient

    Recipient of the notification messages.

    Type: string

    Default: "root"

    Declared by:

    [16631]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16632]services.smartd.notifications.mail.sender

    Sender of the notification messages. Acts as the value of email in the emails' From: ...
    field.

    Type: string

    Default: "root"

    Example: "example@domain.tld"

    Declared by:

    [16633]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16634]services.smartd.notifications.test

    Whenever to send a test notification on startup.

    Type: boolean

    Default: false

    Declared by:

    [16635]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16636]services.smartd.notifications.wall.enable

    Whenever to send wall notifications to all users.

    Type: boolean

    Default: true

    Declared by:

    [16637]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16638]services.smartd.notifications.x11.enable

    Whenever to send X11 xmessage notifications.

    Type: boolean

    Default: false

    Declared by:

    [16639]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16640]services.smartd.notifications.x11.display

    DISPLAY to send X11 notifications to.

    Type: string

    Default: ":0"

    Declared by:

    [16641]<nixpkgs/nixos/modules/services/monitoring/smartd.nix>

[16642]services.smartdns.enable

    Whether to enable SmartDNS DNS server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16643]<nixpkgs/nixos/modules/services/networking/smartdns.nix>

[16644]services.smartdns.bindPort

    DNS listening port number.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 53

    Declared by:

    [16645]<nixpkgs/nixos/modules/services/networking/smartdns.nix>

[16646]services.smartdns.settings

    A set that will be generated into configuration file, see the [16647]SmartDNS README for
    details of configuration parameters. You could override the options here like
    services.smartdns.bindPort by writing settings.bind = ":5353 -no-rule -group example";.

    Type: attribute set of list of string or signed integer or booleans or string or signed
    integer or boolean convertible to its

    Example:

    {
      bind = ":5353 -no-rule -group example";
      cache-size = 4096;
      server-tls = [ "8.8.8.8:853" "1.1.1.1:853" ];
      server-https = "https://cloudflare-dns.com/dns-query -exclude-default-group";
      prefetch-domain = true;
      speed-check-mode = "ping,tcp:80";
    };

    Declared by:

    [16648]<nixpkgs/nixos/modules/services/networking/smartdns.nix>

[16649]services.smokeping.enable

    Enable the smokeping service

    Type: boolean

    Default: false

    Declared by:

    [16650]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16651]services.smokeping.package

    Specify a custom smokeping package

    Type: package

    Default: "pkgs.smokeping"

    Declared by:

    [16652]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16653]services.smokeping.alertConfig

    Configuration for alerts.

    Type: strings concatenated with "\n"

    Default:

    ''
    to = root@localhost
    from = smokeping@localhost
    ''

    Example:

    to = alertee@address.somewhere
    from = smokealert@company.xy

    +someloss
    type = loss
    # in percent
    pattern = >0%,*12*,>0%,*12*,>0%
    comment = loss 3 times  in a row;

    Declared by:

    [16654]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16655]services.smokeping.cgiUrl

    URL to the smokeping cgi.

    Type: string

    Default: "http://\${hostName}:\${toString port}/smokeping.cgi"

    Example: "https://somewhere.example.com/smokeping.cgi"

    Declared by:

    [16656]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16657]services.smokeping.config

    Full smokeping config supplied by the user. Overrides and replaces any other configuration
    supplied.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [16658]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16659]services.smokeping.databaseConfig

    Configure the ping frequency and retention of the rrd files. Once set, changing the interval
    will require deletion or migration of all the collected data.

    Type: strings concatenated with "\n"

    Default:

    ''
    step     = 300
    pings    = 20
    # consfn mrhb steps total
    AVERAGE  0.5   1  1008
    AVERAGE  0.5  12  4320
        MIN  0.5  12  4320
        MAX  0.5  12  4320
    AVERAGE  0.5 144   720
        MAX  0.5 144   720
        MIN  0.5 144   720

    ''

    Example:

    # near constant pings.
    step     = 30
    pings    = 20
    # consfn mrhb steps total
    AVERAGE  0.5   1  10080
    AVERAGE  0.5  12  43200
        MIN  0.5  12  43200
        MAX  0.5  12  43200
    AVERAGE  0.5 144   7200
        MAX  0.5 144   7200
        MIN  0.5 144   7200

    Declared by:

    [16660]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16661]services.smokeping.extraConfig

    Any additional customization not already included.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16662]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16663]services.smokeping.hostName

    DNS name for the urls generated in the cgi.

    Type: string

    Default: "\${config.networking.fqdn}"

    Example: "somewhere.example.com"

    Declared by:

    [16664]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16665]services.smokeping.imgUrl

    Base url for images generated in the cgi.

    Type: string

    Default: "http://\${hostName}:\${toString port}/cache"

    Example: "https://somewhere.example.com/cache"

    Declared by:

    [16666]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16667]services.smokeping.linkStyle

    DNS name for the urls generated in the cgi.

    Type: one of "original", "absolute", "relative"

    Default: "relative"

    Example: "absolute"

    Declared by:

    [16668]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16669]services.smokeping.mailHost

    Use this SMTP server to send alerts

    Type: string

    Default: ""

    Example: "localhost"

    Declared by:

    [16670]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16671]services.smokeping.owner

    Real name of the owner of the instance

    Type: string

    Default: "nobody"

    Example: "Joe Admin"

    Declared by:

    [16672]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16673]services.smokeping.ownerEmail

    Email contact for owner

    Type: string

    Default: "no-reply@\${hostName}"

    Example: "no-reply@yourdomain.com"

    Declared by:

    [16674]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16675]services.smokeping.port

    TCP port to use for the web server.

    Type: signed integer

    Default: 8081

    Example: 8081

    Declared by:

    [16676]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16677]services.smokeping.presentationConfig

    presentation graph style

    Type: strings concatenated with "\n"

    Default:

    ''
    + charts
    menu = Charts
    title = The most interesting destinations
    ++ stddev
    sorter = StdDev(entries=>4)
    title = Top Standard Deviation
    menu = Std Deviation
    format = Standard Deviation %f
    ++ max
    sorter = Max(entries=>5)
    title = Top Max Roundtrip Time
    menu = by Max
    format = Max Roundtrip Time %f seconds
    ++ loss
    sorter = Loss(entries=>5)
    title = Top Packet Loss
    menu = Loss
    format = Packets Lost %f
    ++ median
    sorter = Median(entries=>5)
    title = Top Median Roundtrip Time
    menu = by Median
    format = Median RTT %f seconds
    + overview
    width = 600
    height = 50
    range = 10h
    + detail
    width = 600
    height = 200
    unison_tolerance = 2
    "Last 3 Hours"    3h
    "Last 30 Hours"   30h
    "Last 10 Days"    10d
    "Last 360 Days"   360d
    ''

    Declared by:

    [16678]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16679]services.smokeping.presentationTemplate

    Default page layout for the web UI.

    Type: string

    Default: "\${pkgs.smokeping}/etc/basepage.html.dist"

    Declared by:

    [16680]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16681]services.smokeping.probeConfig

    Probe configuration

    Type: strings concatenated with "\n"

    Default:

    ''
    + FPing
    binary = /run/wrappers/bin/fping
    ''

    Declared by:

    [16682]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16683]services.smokeping.sendmail

    Use this sendmail compatible script to deliver alerts

    Type: null or path

    Default: null

    Example: "/run/wrappers/bin/sendmail"

    Declared by:

    [16684]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16685]services.smokeping.smokeMailTemplate

    Specify the smokemail template for alerts.

    Type: string

    Default: "\${pkgs.smokeping}/etc/smokemail.dist"

    Declared by:

    [16686]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16687]services.smokeping.targetConfig

    Target configuration

    Type: strings concatenated with "\n"

    Default:

    ''
    probe = FPing
    menu = Top
    title = Network Latency Grapher
    remark = Welcome to the SmokePing website of xxx Company. \
             Here you will learn all about the latency of our network.
    + Local
    menu = Local
    title = Local Network
    ++ LocalMachine
    menu = Local Machine
    title = This host
    host = localhost
    ''

    Declared by:

    [16688]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16689]services.smokeping.user

    User that runs smokeping and (optionally) thttpd

    Type: string

    Default: "smokeping"

    Declared by:

    [16690]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16691]services.smokeping.webService

    Enable a smokeping web interface

    Type: boolean

    Default: true

    Declared by:

    [16692]<nixpkgs/nixos/modules/services/networking/smokeping.nix>

[16693]services.snapper.cleanupInterval

    Cleanup interval.

    The format is described in systemd.time(7).

    Type: string

    Default: "1d"

    Declared by:

    [16694]<nixpkgs/nixos/modules/services/misc/snapper.nix>

[16695]services.snapper.configs

    Subvolume configuration

    Type: attribute set of submodules

    Default: { }

    Example:

    Declared by:

    [16696]<nixpkgs/nixos/modules/services/misc/snapper.nix>

[16697]services.snapper.configs.<name>.extraConfig

    Additional configuration next to SUBVOLUME and FSTYPE. See man:snapper-configs(5).

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16698]<nixpkgs/nixos/modules/services/misc/snapper.nix>

[16699]services.snapper.configs.<name>.fstype

    Filesystem type. Only btrfs is stable and tested.

    Type: one of "btrfs"

    Default: "btrfs"

    Declared by:

    [16700]<nixpkgs/nixos/modules/services/misc/snapper.nix>

[16701]services.snapper.configs.<name>.subvolume

    Path of the subvolume or mount point. This path is a subvolume and has to contain a subvolume
    named .snapshots. See also man:snapper(8) section PERMISSIONS.

    Type: path

    Declared by:

    [16702]<nixpkgs/nixos/modules/services/misc/snapper.nix>

[16703]services.snapper.filters

    Global display difference filter. See man:snapper(8) for more details.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [16704]<nixpkgs/nixos/modules/services/misc/snapper.nix>

[16705]services.snapper.snapshotInterval

    Snapshot interval.

    The format is described in systemd.time(7).

    Type: string

    Default: "hourly"

    Declared by:

    [16706]<nixpkgs/nixos/modules/services/misc/snapper.nix>

[16707]services.snapserver.enable

    Whether to enable snapserver.

    Type: boolean

    Default: false

    Declared by:

    [16708]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16709]services.snapserver.buffer

    Network buffer in ms.

    Type: null or signed integer

    Default: null

    Example: 1000

    Declared by:

    [16710]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16711]services.snapserver.codec

    Default audio compression method.

    Type: null or string

    Default: null

    Example: "flac"

    Declared by:

    [16712]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16713]services.snapserver.http.enable

    Whether to enable the JSON-RPC via HTTP.

    Type: boolean

    Default: true

    Declared by:

    [16714]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16715]services.snapserver.http.docRoot

    Path to serve from the HTTP servers root.

    Type: null or path

    Default: null

    Declared by:

    [16716]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16717]services.snapserver.http.listenAddress

    The address where the HTTP JSON-RPC listens on.

    Type: string

    Default: "::"

    Example: "0.0.0.0"

    Declared by:

    [16718]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16719]services.snapserver.http.port

    The port where the HTTP JSON-RPC listens on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 1780

    Declared by:

    [16720]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16721]services.snapserver.listenAddress

    The address where snapclients can connect.

    Type: string

    Default: "::"

    Example: "0.0.0.0"

    Declared by:

    [16722]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16723]services.snapserver.openFirewall

    Whether to automatically open the specified ports in the firewall.

    Type: boolean

    Default: true

    Declared by:

    [16724]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16725]services.snapserver.port

    The port that snapclients can connect to.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 1704

    Declared by:

    [16726]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16727]services.snapserver.sampleFormat

    Default sample format.

    Type: null or string

    Default: null

    Example: "48000:16:2"

    Declared by:

    [16728]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16729]services.snapserver.sendToMuted

    Send audio to muted clients.

    Type: boolean

    Default: false

    Declared by:

    [16730]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16731]services.snapserver.streamBuffer

    Stream read (input) buffer in ms.

    Type: null or signed integer

    Default: null

    Example: 20

    Declared by:

    [16732]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16733]services.snapserver.streams

    The definition for an input source.

    Type: attribute set of submodules

    Default: { default = { } ; }

    Example:

    {
      mpd = {
        type = "pipe";
        location = "/run/snapserver/mpd";
        sampleFormat = "48000:16:2";
        codec = "pcm";
      };
    };

    Declared by:

    [16734]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16735]services.snapserver.streams.<name>.codec

    Default audio compression method.

    Type: null or string

    Default: null

    Example: "flac"

    Declared by:

    [16736]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16737]services.snapserver.streams.<name>.location

    For type pipe or file, the path to the pipe or file. For type librespot, airplay or process,
    the path to the corresponding binary. For type tcp, the host:port address to connect to or
    listen on. For type meta, a list of stream names in the form /one/two/.... Don't forget the
    leading slash. For type alsa, use an empty string.

    Type: path or string

    Example:

    "/path/to/pipe"
    "/path/to/librespot"
    "192.168.1.2:4444"
    "/MyTCP/Spotify/MyPipe"

    Declared by:

    [16738]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16739]services.snapserver.streams.<name>.query

    Key-value pairs that convey additional parameters about a stream.

    Type: attribute set of strings

    Default: { }

    Example:

    # for type == "pipe":
    {
      mode = "create";
    };
    # for type == "process":
    {
      params = "--param1 --param2";
      logStderr = "true";
    };
    # for type == "tcp":
    {
      mode = "client";
    }
    # for type == "alsa":
    {
      device = "hw:0,0";
    }

    Declared by:

    [16740]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16741]services.snapserver.streams.<name>.sampleFormat

    Default sample format.

    Type: null or string

    Default: null

    Example: "48000:16:2"

    Declared by:

    [16742]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16743]services.snapserver.streams.<name>.type

    The type of input stream.

    Type: one of "pipe", "librespot", "airplay", "file", "process", "tcp", "alsa", "spotify",
    "meta"

    Default: "pipe"

    Declared by:

    [16744]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16745]services.snapserver.tcp.enable

    Whether to enable the JSON-RPC via TCP.

    Type: boolean

    Default: true

    Declared by:

    [16746]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16747]services.snapserver.tcp.listenAddress

    The address where the TCP JSON-RPC listens on.

    Type: string

    Default: "::"

    Example: "0.0.0.0"

    Declared by:

    [16748]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16749]services.snapserver.tcp.port

    The port where the TCP JSON-RPC listens on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 1705

    Declared by:

    [16750]<nixpkgs/nixos/modules/services/audio/snapserver.nix>

[16751]services.sniproxy.enable

    Whether to enable sniproxy server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16752]<nixpkgs/nixos/modules/services/networking/sniproxy.nix>

[16753]services.sniproxy.config

    sniproxy.conf configuration excluding the daemon username and pid file.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

      error_log {
        filename /var/log/sniproxy/error.log
      }
      access_log {
        filename /var/log/sniproxy/access.log
      }
      listen 443 {
        proto tls
      }
      table {
        example.com 192.0.2.10
        example.net 192.0.2.20
    }

    Declared by:

    [16754]<nixpkgs/nixos/modules/services/networking/sniproxy.nix>

[16755]services.sniproxy.group

    Group under which sniproxy runs.

    Type: string

    Default: "sniproxy"

    Declared by:

    [16756]<nixpkgs/nixos/modules/services/networking/sniproxy.nix>

[16757]services.sniproxy.logDir

    Location of the log directory for sniproxy.

    Type: string

    Default: "/var/log/sniproxy/"

    Declared by:

    [16758]<nixpkgs/nixos/modules/services/networking/sniproxy.nix>

[16759]services.sniproxy.user

    User account under which sniproxy runs.

    Type: string

    Default: "sniproxy"

    Declared by:

    [16760]<nixpkgs/nixos/modules/services/networking/sniproxy.nix>

[16761]services.softether.enable

    Whether to enable SoftEther VPN services.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16762]<nixpkgs/nixos/modules/services/networking/softether.nix>

[16763]services.softether.package

    softether derivation to use.

    Type: package

    Default: "pkgs.softether"

    Declared by:

    [16764]<nixpkgs/nixos/modules/services/networking/softether.nix>

[16765]services.softether.dataDir

    Data directory for SoftEther VPN.

    Type: path

    Default: "/var/lib/softether"

    Declared by:

    [16766]<nixpkgs/nixos/modules/services/networking/softether.nix>

[16767]services.softether.vpnbridge.enable

    Whether to enable SoftEther VPN Bridge.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16768]<nixpkgs/nixos/modules/services/networking/softether.nix>

[16769]services.softether.vpnclient.enable

    Whether to enable SoftEther VPN Client.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16770]<nixpkgs/nixos/modules/services/networking/softether.nix>

[16771]services.softether.vpnclient.down

    Shell commands executed when the Virtual Network Adapter(s) is/are shutting down.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16772]<nixpkgs/nixos/modules/services/networking/softether.nix>

[16773]services.softether.vpnclient.up

    Shell commands executed when the Virtual Network Adapter(s) is/are starting.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16774]<nixpkgs/nixos/modules/services/networking/softether.nix>

[16775]services.softether.vpnserver.enable

    Whether to enable SoftEther VPN Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16776]<nixpkgs/nixos/modules/services/networking/softether.nix>

[16777]services.sogo.enable

    Whether to enable SOGo groupware.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16778]<nixpkgs/nixos/modules/services/web-apps/sogo.nix>

[16779]services.sogo.configReplaces

    Replacement-filepath mapping for sogo.conf. Every key is replaced with the contents of the
    file specified as value.

    In the example, every occurence of LDAP_BINDPW will be replaced with the text of the
    specified file.

    Type: attribute set of strings

    Default: { }

    Example: { LDAP_BINDPW = "/var/lib/secrets/sogo/ldappw"; }

    Declared by:

    [16780]<nixpkgs/nixos/modules/services/web-apps/sogo.nix>

[16781]services.sogo.ealarmsCredFile

    Optional path to a credentials file for email alarms

    Type: null or string

    Default: null

    Declared by:

    [16782]<nixpkgs/nixos/modules/services/web-apps/sogo.nix>

[16783]services.sogo.extraConfig

    Extra sogo.conf configuration lines

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16784]<nixpkgs/nixos/modules/services/web-apps/sogo.nix>

[16785]services.sogo.language

    Language of SOGo

    Type: string

    Default: "English"

    Declared by:

    [16786]<nixpkgs/nixos/modules/services/web-apps/sogo.nix>

[16787]services.sogo.timezone

    Timezone of your SOGo instance

    Type: string

    Example: "America/Montreal"

    Declared by:

    [16788]<nixpkgs/nixos/modules/services/web-apps/sogo.nix>

[16789]services.sogo.vhostName

    Name of the nginx vhost

    Type: string

    Default: "sogo"

    Declared by:

    [16790]<nixpkgs/nixos/modules/services/web-apps/sogo.nix>

[16791]services.solanum.enable

    Whether to enable Solanum IRC daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16792]<nixpkgs/nixos/modules/services/networking/solanum.nix>

[16793]services.solanum.config

    Solanum IRC daemon configuration file. check [16794]https://github.com/solanum-ircd/solanum/
    blob/main/doc/reference.conf for all options.

    Type: string

    Default:

    ''
    serverinfo {
      name = "irc.example.com";
      sid = "1ix";
      description = "irc!";

      vhost = "0.0.0.0";
      vhost6 = "::";
    };

    listen {
      host = "0.0.0.0";
      port = 6667;
    };

    auth {
      user = "*@*";
      class = "users";
      flags = exceed_limit;
    };
    channel {
      default_split_user_count = 0;
    };
    ''

    Declared by:

    [16795]<nixpkgs/nixos/modules/services/networking/solanum.nix>

[16796]services.solanum.motd

    Solanum MOTD text.

    Solanum will read its MOTD from /etc/solanum/ircd.motd. If set, the value of this option will
    be written to this path.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [16797]<nixpkgs/nixos/modules/services/networking/solanum.nix>

[16798]services.solanum.openFilesLimit

    Maximum number of open files. Limits the clients and server connections.

    Type: signed integer

    Default: 1024

    Declared by:

    [16799]<nixpkgs/nixos/modules/services/networking/solanum.nix>

[16800]services.solr.enable

    Whether to enable Solr.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16801]<nixpkgs/nixos/modules/services/search/solr.nix>

[16802]services.solr.package

    Which Solr package to use.

    Type: package

    Default: "pkgs.solr"

    Declared by:

    [16803]<nixpkgs/nixos/modules/services/search/solr.nix>

[16804]services.solr.extraJavaOptions

    Extra command line options given to the java process running Solr.

    Type: list of strings

    Default: [ ]

    Declared by:

    [16805]<nixpkgs/nixos/modules/services/search/solr.nix>

[16806]services.solr.group

    Group under which Solr is ran.

    Type: string

    Default: "solr"

    Declared by:

    [16807]<nixpkgs/nixos/modules/services/search/solr.nix>

[16808]services.solr.port

    Port on which Solr is ran.

    Type: signed integer

    Default: 8983

    Declared by:

    [16809]<nixpkgs/nixos/modules/services/search/solr.nix>

[16810]services.solr.stateDir

    The solr home directory containing config, data, and logging files.

    Type: path

    Default: "/var/lib/solr"

    Declared by:

    [16811]<nixpkgs/nixos/modules/services/search/solr.nix>

[16812]services.solr.user

    User under which Solr is ran.

    Type: string

    Default: "solr"

    Declared by:

    [16813]<nixpkgs/nixos/modules/services/search/solr.nix>

[16814]services.sonarr.enable

    Whether to enable Sonarr.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16815]<nixpkgs/nixos/modules/services/misc/sonarr.nix>

[16816]services.sonarr.dataDir

    The directory where Sonarr stores its data files.

    Type: string

    Default: "/var/lib/sonarr/.config/NzbDrone"

    Declared by:

    [16817]<nixpkgs/nixos/modules/services/misc/sonarr.nix>

[16818]services.sonarr.group

    Group under which Sonaar runs.

    Type: string

    Default: "sonarr"

    Declared by:

    [16819]<nixpkgs/nixos/modules/services/misc/sonarr.nix>

[16820]services.sonarr.openFirewall

    Open ports in the firewall for the Sonarr web interface

    Type: boolean

    Default: false

    Declared by:

    [16821]<nixpkgs/nixos/modules/services/misc/sonarr.nix>

[16822]services.sonarr.user

    User account under which Sonaar runs.

    Type: string

    Default: "sonarr"

    Declared by:

    [16823]<nixpkgs/nixos/modules/services/misc/sonarr.nix>

[16824]services.spacecookie.enable

    Whether to enable spacecookie.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16825]<nixpkgs/nixos/modules/services/networking/spacecookie.nix>

[16826]services.spacecookie.package

    The spacecookie derivation to use. This can be used to override the used package or to use
    another version.

    Type: package

    Default: pkgs.spacecookie

    Example:

    pkgs.haskellPackages.spacecookie

    Declared by:

    [16827]<nixpkgs/nixos/modules/services/networking/spacecookie.nix>

[16828]services.spacecookie.address

    Address to listen on. Must be in the ListenStream= syntax of [16829]systemd.socket(5).

    Type: string

    Default: "[::]"

    Declared by:

    [16830]<nixpkgs/nixos/modules/services/networking/spacecookie.nix>

[16831]services.spacecookie.openFirewall

    Whether to open the necessary port in the firewall for spacecookie.

    Type: boolean

    Default: false

    Declared by:

    [16832]<nixpkgs/nixos/modules/services/networking/spacecookie.nix>

[16833]services.spacecookie.port

    Port the gopher service should be exposed on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 70

    Declared by:

    [16834]<nixpkgs/nixos/modules/services/networking/spacecookie.nix>

[16835]services.spacecookie.settings

    Settings for spacecookie. The settings set here are directly translated to the spacecookie
    JSON config file. See [16836]spacecookie.json(5) for explanations of all options.

    Type: JSON value

    Declared by:

    [16837]<nixpkgs/nixos/modules/services/networking/spacecookie.nix>

[16838]services.spacecookie.settings.hostname

    The hostname the service is reachable via. Clients will use this hostname for further
    requests after loading the initial gopher menu.

    Type: string

    Default: "localhost"

    Declared by:

    [16839]<nixpkgs/nixos/modules/services/networking/spacecookie.nix>

[16840]services.spacecookie.settings.log.enable

    Whether to enable logging for spacecookie.

    Type: boolean

    Default: true

    Example: false

    Declared by:

    [16841]<nixpkgs/nixos/modules/services/networking/spacecookie.nix>

[16842]services.spacecookie.settings.log.hide-ips

    If enabled, spacecookie will hide personal information of users like IP addresses from log
    output.

    Type: boolean

    Default: true

    Declared by:

    [16843]<nixpkgs/nixos/modules/services/networking/spacecookie.nix>

[16844]services.spacecookie.settings.log.hide-time

    If enabled, spacecookie will not print timestamps at the beginning of every log line.

    Type: boolean

    Default: true

    Declared by:

    [16845]<nixpkgs/nixos/modules/services/networking/spacecookie.nix>

[16846]services.spacecookie.settings.log.level

    Log level for the spacecookie service.

    Type: one of "info", "warn", "error"

    Default: "info"

    Declared by:

    [16847]<nixpkgs/nixos/modules/services/networking/spacecookie.nix>

[16848]services.spacecookie.settings.root

    The directory spacecookie should serve via gopher. Files in there need to be world-readable
    since the spacecookie service file sets DynamicUser=true.

    Type: path

    Default: "/srv/gopher"

    Declared by:

    [16849]<nixpkgs/nixos/modules/services/networking/spacecookie.nix>

[16850]services.spamassassin.enable

    Whether to enable the SpamAssassin daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16851]<nixpkgs/nixos/modules/services/mail/spamassassin.nix>

[16852]services.spamassassin.config

    The SpamAssassin local.cf config

    If you are using this configuration: add_header all Status _YESNO_, score=_SCORE_ required=
    _REQD_ tests=_TESTS_ autolearn=_AUTOLEARN_ version=_VERSION_

    Then you can Use this sieve filter: require ["fileinto", "reject", "envelope"];

    if header :contains "X-Spam-Flag" "YES" { fileinto "spam"; }

    Or this procmail filter: :0: * ^X-Spam-Flag: YES /var/vpopmail/domains/lastlog.de/js/.maildir
    /.spam/new

    To filter your messages based on the additional mail headers added by spamassassin.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    #rewrite_header Subject [***** SPAM _SCORE_ *****]
    required_score          5.0
    use_bayes               1
    bayes_auto_learn        1
    add_header all Status _YESNO_, score=_SCORE_ required=_REQD_ tests=_TESTS_ autolearn=_AUTOLEARN_ version=_VERSION_
    ''

    Declared by:

    [16853]<nixpkgs/nixos/modules/services/mail/spamassassin.nix>

[16854]services.spamassassin.debug

    Whether to run the SpamAssassin daemon in debug mode

    Type: boolean

    Default: false

    Declared by:

    [16855]<nixpkgs/nixos/modules/services/mail/spamassassin.nix>

[16856]services.spamassassin.initPreConf

    The SpamAssassin init.pre config.

    Type: string or path

    Default:

    ''
    #
    # to update this list, run this command in the rules directory:
    # grep 'loadplugin.*Mail::SpamAssassin::Plugin::.*' -o -h * | sort | uniq
    #

    #loadplugin Mail::SpamAssassin::Plugin::AccessDB
    #loadplugin Mail::SpamAssassin::Plugin::AntiVirus
    loadplugin Mail::SpamAssassin::Plugin::AskDNS
    # loadplugin Mail::SpamAssassin::Plugin::ASN
    loadplugin Mail::SpamAssassin::Plugin::AutoLearnThreshold
    #loadplugin Mail::SpamAssassin::Plugin::AWL
    loadplugin Mail::SpamAssassin::Plugin::Bayes
    loadplugin Mail::SpamAssassin::Plugin::BodyEval
    loadplugin Mail::SpamAssassin::Plugin::Check
    #loadplugin Mail::SpamAssassin::Plugin::DCC
    loadplugin Mail::SpamAssassin::Plugin::DKIM
    loadplugin Mail::SpamAssassin::Plugin::DNSEval
    loadplugin Mail::SpamAssassin::Plugin::FreeMail
    loadplugin Mail::SpamAssassin::Plugin::Hashcash
    loadplugin Mail::SpamAssassin::Plugin::HeaderEval
    loadplugin Mail::SpamAssassin::Plugin::HTMLEval
    loadplugin Mail::SpamAssassin::Plugin::HTTPSMismatch
    loadplugin Mail::SpamAssassin::Plugin::ImageInfo
    loadplugin Mail::SpamAssassin::Plugin::MIMEEval
    loadplugin Mail::SpamAssassin::Plugin::MIMEHeader
    # loadplugin Mail::SpamAssassin::Plugin::PDFInfo
    #loadplugin Mail::SpamAssassin::Plugin::PhishTag
    loadplugin Mail::SpamAssassin::Plugin::Pyzor
    loadplugin Mail::SpamAssassin::Plugin::Razor2
    # loadplugin Mail::SpamAssassin::Plugin::RelayCountry
    loadplugin Mail::SpamAssassin::Plugin::RelayEval
    loadplugin Mail::SpamAssassin::Plugin::ReplaceTags
    # loadplugin Mail::SpamAssassin::Plugin::Rule2XSBody
    # loadplugin Mail::SpamAssassin::Plugin::Shortcircuit
    loadplugin Mail::SpamAssassin::Plugin::SpamCop
    loadplugin Mail::SpamAssassin::Plugin::SPF
    #loadplugin Mail::SpamAssassin::Plugin::TextCat
    # loadplugin Mail::SpamAssassin::Plugin::TxRep
    loadplugin Mail::SpamAssassin::Plugin::URIDetail
    loadplugin Mail::SpamAssassin::Plugin::URIDNSBL
    loadplugin Mail::SpamAssassin::Plugin::URIEval
    # loadplugin Mail::SpamAssassin::Plugin::URILocalBL
    loadplugin Mail::SpamAssassin::Plugin::VBounce
    loadplugin Mail::SpamAssassin::Plugin::WhiteListSubject
    loadplugin Mail::SpamAssassin::Plugin::WLBLEval
    ''

    Declared by:

    [16857]<nixpkgs/nixos/modules/services/mail/spamassassin.nix>

[16858]services.spice-vdagentd.enable

    Whether to enable Spice guest vdagent daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16859]<nixpkgs/nixos/modules/services/misc/spice-vdagentd.nix>

[16860]services.spiped.enable

    Enable the spiped service module.

    Type: boolean

    Default: false

    Declared by:

    [16861]<nixpkgs/nixos/modules/services/networking/spiped.nix>

[16862]services.spiped.config

    Configuration for a secure pipe daemon. The daemon can be started, stopped, or examined using
    systemctl, under the name spiped@foo.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      pipe1 =
        { keyfile = "/var/lib/spiped/pipe1.key";
          encrypt = true;
          source  = "localhost:6000";
          target  = "endpoint.example.com:7000";
        };
      pipe2 =
        { keyfile = "/var/lib/spiped/pipe2.key";
          decrypt = true;
          source  = "0.0.0.0:7000";
          target  = "localhost:3000";
        };
    }

    Declared by:

    [16863]<nixpkgs/nixos/modules/services/networking/spiped.nix>

[16864]services.spiped.config.<name>.decrypt

    Take encrypted connections from the source socket and send unencrypted connections to the
    target socket.

    Type: boolean

    Default: false

    Declared by:

    [16865]<nixpkgs/nixos/modules/services/networking/spiped.nix>

[16866]services.spiped.config.<name>.disableKeepalives

    Disable transport layer keep-alives.

    Type: boolean

    Default: false

    Declared by:

    [16867]<nixpkgs/nixos/modules/services/networking/spiped.nix>

[16868]services.spiped.config.<name>.disableReresolution

    Disable target address re-resolution.

    Type: boolean

    Default: false

    Declared by:

    [16869]<nixpkgs/nixos/modules/services/networking/spiped.nix>

[16870]services.spiped.config.<name>.encrypt

    Take unencrypted connections from the source socket and send encrypted connections to the
    target socket.

    Type: boolean

    Default: false

    Declared by:

    [16871]<nixpkgs/nixos/modules/services/networking/spiped.nix>

[16872]services.spiped.config.<name>.keyfile

    Name of a file containing the spiped key. As the daemon runs as the spiped user, the key file
    must be somewhere owned by that user. By default, we recommend putting the keys for any spipe
    services in /var/lib/spiped.

    Type: path

    Declared by:

    [16873]<nixpkgs/nixos/modules/services/networking/spiped.nix>

[16874]services.spiped.config.<name>.maxConns

    Limit on the number of simultaneous connections allowed.

    Type: signed integer

    Default: 100

    Declared by:

    [16875]<nixpkgs/nixos/modules/services/networking/spiped.nix>

[16876]services.spiped.config.<name>.resolveRefresh

    Resolution refresh time for the target socket, in seconds.

    Type: signed integer

    Default: 60

    Declared by:

    [16877]<nixpkgs/nixos/modules/services/networking/spiped.nix>

[16878]services.spiped.config.<name>.source

    Address on which spiped should listen for incoming connections. Must be in one of the
    following formats: /absolute/path/to/unix/socket, host.name:port, [ip.v4.ad.dr]:port or
    [ipv6::addr]:port - note that hostnames are resolved when spiped is launched and are not
    re-resolved later; thus if DNS entries change spiped will continue to connect to the expired
    address.

    Type: string

    Declared by:

    [16879]<nixpkgs/nixos/modules/services/networking/spiped.nix>

[16880]services.spiped.config.<name>.target

    Address to which spiped should connect.

    Type: string

    Declared by:

    [16881]<nixpkgs/nixos/modules/services/networking/spiped.nix>

[16882]services.spiped.config.<name>.timeout

    Timeout, in seconds, after which an attempt to connect to the target or a protocol handshake
    will be aborted (and the connection dropped) if not completed

    Type: signed integer

    Default: 5

    Declared by:

    [16883]<nixpkgs/nixos/modules/services/networking/spiped.nix>

[16884]services.spiped.config.<name>.waitForDNS

    Wait for DNS. Normally when spiped is launched it resolves addresses and binds to its source
    socket before the parent process returns; with this option it will daemonize first and retry
    failed DNS lookups until they succeed. This allows spiped to launch even if DNS isn't set up
    yet, but at the expense of losing the guarantee that once spiped has finished launching it
    will be ready to create pipes.

    Type: boolean

    Default: false

    Declared by:

    [16885]<nixpkgs/nixos/modules/services/networking/spiped.nix>

[16886]services.spiped.config.<name>.weakHandshake

    Use fast/weak handshaking: This reduces the CPU time spent in the initial connection setup,
    at the expense of losing perfect forward secrecy.

    Type: boolean

    Default: false

    Declared by:

    [16887]<nixpkgs/nixos/modules/services/networking/spiped.nix>

[16888]services.spotifyd.enable

    Whether to enable spotifyd, a Spotify playing daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16889]<nixpkgs/nixos/modules/services/audio/spotifyd.nix>

[16890]services.spotifyd.config

    Configuration for Spotifyd. For syntax and directives, see [16891]https://github.com/Spotifyd
    /spotifyd#Configuration.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16892]<nixpkgs/nixos/modules/services/audio/spotifyd.nix>

[16893]services.squeezelite.enable

    Whether to enable Squeezelite, a software Squeezebox emulator.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16894]<nixpkgs/nixos/modules/services/audio/squeezelite.nix>

[16895]services.squeezelite.extraArguments

    Additional command line arguments to pass to Squeezelite.

    Type: string

    Default: ""

    Declared by:

    [16896]<nixpkgs/nixos/modules/services/audio/squeezelite.nix>

[16897]services.squid.enable

    Whether to run squid web proxy.

    Type: boolean

    Default: false

    Declared by:

    [16898]<nixpkgs/nixos/modules/services/networking/squid.nix>

[16899]services.squid.configText

    Verbatim contents of squid.conf. If null (default), use the autogenerated file from NixOS
    instead.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [16900]<nixpkgs/nixos/modules/services/networking/squid.nix>

[16901]services.squid.extraConfig

    Squid configuration. Contents will be added verbatim to the configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [16902]<nixpkgs/nixos/modules/services/networking/squid.nix>

[16903]services.squid.proxyPort

    TCP port on which squid will listen.

    Type: signed integer

    Default: 3128

    Declared by:

    [16904]<nixpkgs/nixos/modules/services/networking/squid.nix>

[16905]services.sshd.enable

    Alias of services.openssh.enable.

    Type: boolean

    Declared by:

    [16906]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[16907]services.sshguard.enable

    Whether to enable the sshguard service.

    Type: boolean

    Default: false

    Declared by:

    [16908]<nixpkgs/nixos/modules/services/security/sshguard.nix>

[16909]services.sshguard.attack_threshold

    Block attackers when their cumulative attack score exceeds threshold. Most attacks have a
    score of 10.

    Type: signed integer

    Default: 30

    Declared by:

    [16910]<nixpkgs/nixos/modules/services/security/sshguard.nix>

[16911]services.sshguard.blacklist_file

    Blacklist an attacker when its score exceeds threshold. Blacklisted addresses are loaded from
    and added to blacklist-file.

    Type: path

    Default: "/var/lib/sshguard/blacklist.db"

    Declared by:

    [16912]<nixpkgs/nixos/modules/services/security/sshguard.nix>

[16913]services.sshguard.blacklist_threshold

    Blacklist an attacker when its score exceeds threshold. Blacklisted addresses are loaded from
    and added to blacklist-file.

    Type: null or signed integer

    Default: null

    Example: 120

    Declared by:

    [16914]<nixpkgs/nixos/modules/services/security/sshguard.nix>

[16915]services.sshguard.blocktime

    Block attackers for initially blocktime seconds after exceeding threshold. Subsequent blocks
    increase by a factor of 1.5.

    sshguard unblocks attacks at random intervals, so actual block times will be longer.

    Type: signed integer

    Default: 120

    Declared by:

    [16916]<nixpkgs/nixos/modules/services/security/sshguard.nix>

[16917]services.sshguard.detection_time

    Remember potential attackers for up to detection_time seconds before resetting their score.

    Type: signed integer

    Default: 1800

    Declared by:

    [16918]<nixpkgs/nixos/modules/services/security/sshguard.nix>

[16919]services.sshguard.services

    Systemd services sshguard should receive logs of.

    Type: list of strings

    Default: [ "sshd" ]

    Example: [ "sshd" "exim" ]

    Declared by:

    [16920]<nixpkgs/nixos/modules/services/security/sshguard.nix>

[16921]services.sshguard.whitelist

    Whitelist a list of addresses, hostnames, or address blocks.

    Type: list of strings

    Default: [ ]

    Example: [ "198.51.100.56" "198.51.100.2" ]

    Declared by:

    [16922]<nixpkgs/nixos/modules/services/security/sshguard.nix>

[16923]services.sslh.enable

    Whether to enable sslh.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16924]<nixpkgs/nixos/modules/services/networking/sslh.nix>

[16925]services.sslh.appendConfig

    Verbatim configuration file.

    Type: string

    Default:

    ''
    protocols:
    (
      { name: "ssh"; service: "ssh"; host: "localhost"; port: "22"; probe: "builtin"; },
      { name: "openvpn"; host: "localhost"; port: "1194"; probe: "builtin"; },
      { name: "xmpp"; host: "localhost"; port: "5222"; probe: "builtin"; },
      { name: "http"; host: "localhost"; port: "80"; probe: "builtin"; },
      { name: "tls"; host: "localhost"; port: "443"; probe: "builtin"; },
      { name: "anyprot"; host: "localhost"; port: "443"; probe: "builtin"; }
    );
    ''

    Declared by:

    [16926]<nixpkgs/nixos/modules/services/networking/sslh.nix>

[16927]services.sslh.listenAddresses

    Listening addresses or hostnames.

    Type: list of strings or string convertible to it

    Default: [ "0.0.0.0" "[::]" ]

    Declared by:

    [16928]<nixpkgs/nixos/modules/services/networking/sslh.nix>

[16929]services.sslh.port

    Listening port.

    Type: signed integer

    Default: 443

    Declared by:

    [16930]<nixpkgs/nixos/modules/services/networking/sslh.nix>

[16931]services.sslh.timeout

    Timeout in seconds.

    Type: signed integer

    Default: 2

    Declared by:

    [16932]<nixpkgs/nixos/modules/services/networking/sslh.nix>

[16933]services.sslh.transparent

    Will the services behind sslh (Apache, sshd and so on) see the external IP and ports as if
    the external world connected directly to them

    Type: boolean

    Default: false

    Declared by:

    [16934]<nixpkgs/nixos/modules/services/networking/sslh.nix>

[16935]services.sslh.verbose

    Verbose logs.

    Type: boolean

    Default: false

    Declared by:

    [16936]<nixpkgs/nixos/modules/services/networking/sslh.nix>

[16937]services.ssm-agent.enable

    Whether to enable AWS SSM agent.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16938]<nixpkgs/nixos/modules/services/misc/ssm-agent.nix>

[16939]services.ssm-agent.package

    The SSM agent package to use

    Type: path

    Default: "pkgs.ssm-agent.override { overrideEtc = false; }"

    Declared by:

    [16940]<nixpkgs/nixos/modules/services/misc/ssm-agent.nix>

[16941]services.ssmtp.enable

    Use the trivial Mail Transfer Agent (MTA) ssmtp package to allow programs to send e-mail. If
    you don't want to run a “real” MTA like sendmail or postfix on your machine, set this option
    to true, and set the option services.ssmtp.hostName to the host name of your preferred mail
    server.

    Type: boolean

    Default: false

    Declared by:

    [16942]<nixpkgs/nixos/modules/programs/ssmtp.nix>

[16943]services.ssmtp.authPassFile

    Path to a file that contains the password used for SMTP auth. The file should not contain a
    trailing newline, if the password does not contain one. This file should be readable by the
    users that need to execute ssmtp.

    Type: null or string

    Default: null

    Example: "/run/keys/ssmtp-authpass"

    Declared by:

    [16944]<nixpkgs/nixos/modules/programs/ssmtp.nix>

[16945]services.ssmtp.authUser

    Username used for SMTP auth. Leave blank to disable.

    Type: string

    Default: ""

    Example: "foo@example.org"

    Declared by:

    [16946]<nixpkgs/nixos/modules/programs/ssmtp.nix>

[16947]services.ssmtp.domain

    The domain from which mail will appear to be sent.

    Type: string

    Default: ""

    Example: "example.org"

    Declared by:

    [16948]<nixpkgs/nixos/modules/programs/ssmtp.nix>

[16949]services.ssmtp.hostName

    The host name of the default mail server to use to deliver e-mail. Can also contain a port
    number (ex: mail.example.org:587), defaults to port 25 if no port is given.

    Type: string

    Example: "mail.example.org"

    Declared by:

    [16950]<nixpkgs/nixos/modules/programs/ssmtp.nix>

[16951]services.ssmtp.root

    The e-mail to which mail for users with UID < 1000 is forwarded.

    Type: string

    Default: ""

    Example: "root@example.org"

    Declared by:

    [16952]<nixpkgs/nixos/modules/programs/ssmtp.nix>

[16953]services.ssmtp.setSendmail

    Whether to set the system sendmail to ssmtp's.

    Type: boolean

    Default: true

    Declared by:

    [16954]<nixpkgs/nixos/modules/programs/ssmtp.nix>

[16955]services.ssmtp.settings

    ssmtp(5) configuration. Refer to [16956]https://linux.die.net/man/5/ssmtp.conf for details on
    supported values.

    Type: attribute set of boolean or strings

    Default: { }

    Example:

    {
      Debug = true;
      FromLineOverride = false;
    }

    Declared by:

    [16957]<nixpkgs/nixos/modules/programs/ssmtp.nix>

[16958]services.ssmtp.useSTARTTLS

    Whether the STARTTLS should be used to connect to the default mail server. (This is needed
    for TLS-capable mail servers running on the default SMTP port 25.)

    Type: boolean

    Default: false

    Declared by:

    [16959]<nixpkgs/nixos/modules/programs/ssmtp.nix>

[16960]services.ssmtp.useTLS

    Whether TLS should be used to connect to the default mail server.

    Type: boolean

    Default: false

    Declared by:

    [16961]<nixpkgs/nixos/modules/programs/ssmtp.nix>

[16962]services.sssd.enable

    Whether to enable the System Security Services Daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16963]<nixpkgs/nixos/modules/services/misc/sssd.nix>

[16964]services.sssd.config

    Contents of sssd.conf.

    Type: strings concatenated with "\n"

    Default:

    ''
    [sssd]
    config_file_version = 2
    services = nss, pam
    domains = shadowutils

    [nss]

    [pam]

    [domain/shadowutils]
    id_provider = proxy
    proxy_lib_name = files
    auth_provider = proxy
    proxy_pam_target = sssd-shadowutils
    proxy_fast_alias = True
    ''

    Declared by:

    [16965]<nixpkgs/nixos/modules/services/misc/sssd.nix>

[16966]services.sssd.sshAuthorizedKeysIntegration

    Whether to make sshd look up authorized keys from SSS. For this to work, the ssh SSS service
    must be enabled in the sssd configuration.

    Type: boolean

    Default: false

    Declared by:

    [16967]<nixpkgs/nixos/modules/services/misc/sssd.nix>

[16968]services.step-ca.enable

    Whether to enable the smallstep certificate authority server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16969]<nixpkgs/nixos/modules/services/security/step-ca.nix>

[16970]services.step-ca.package

    Which step-ca package to use.

    Type: package

    Default: (build of step-ca-0.15.15)

    Declared by:

    [16971]<nixpkgs/nixos/modules/services/security/step-ca.nix>

[16972]services.step-ca.address

    The address (without port) the certificate authority should listen at. This combined with
    services.step-ca.port overrides services.step-ca.settings.address.

    Type: string

    Example: "127.0.0.1"

    Declared by:

    [16973]<nixpkgs/nixos/modules/services/security/step-ca.nix>

[16974]services.step-ca.intermediatePasswordFile

    Path to the file containing the password for the intermediate certificate private key.

    Warning: Make sure to use a quoted absolute path instead of a path literal to prevent it from
    being copied to the globally readable Nix store.

    Type: path

    Example: "/run/keys/smallstep-password"

    Declared by:

    [16975]<nixpkgs/nixos/modules/services/security/step-ca.nix>

[16976]services.step-ca.openFirewall

    Whether to enable opening the certificate authority server port.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16977]<nixpkgs/nixos/modules/services/security/step-ca.nix>

[16978]services.step-ca.port

    The port the certificate authority should listen on. This combined with
    services.step-ca.address overrides services.step-ca.settings.address.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Example: 8443

    Declared by:

    [16979]<nixpkgs/nixos/modules/services/security/step-ca.nix>

[16980]services.step-ca.settings

    Settings that go into ca.json. See [16981] the step-ca manual for more information. The
    easiest way to configure this module would be to run step ca init to generate ca.json and
    then import it using builtins.fromJSON. [16982]This article may also be useful if you want to
    customize certain aspects of certificate generation for your CA. You need to change the
    database storage path to /var/lib/step-ca/db.

    Warning: The services.step-ca.settings.address option will be ignored and overwritten by
    services.step-ca.address and services.step-ca.port.

    Type: attribute set of anythings

    Declared by:

    [16983]<nixpkgs/nixos/modules/services/security/step-ca.nix>

[16984]services.strongswan.enable

    Whether to enable strongSwan.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16985]<nixpkgs/nixos/modules/services/networking/strongswan.nix>

[16986]services.strongswan.enabledPlugins

    A list of additional plugins to enable if managePlugins is true.

    Type: list of strings

    Default: [ ]

    Declared by:

    [16987]<nixpkgs/nixos/modules/services/networking/strongswan.nix>

[16988]services.strongswan.ca

    A set of CAs (certification authorities) and their options for the ‘ca xxx’ sections of the
    ipsec.conf file.

    Type: attribute set of attribute set of stringss

    Default: { }

    Example: { strongswan = { auto = "add"; cacert = "/run/keys/strongswanCert.pem"; crluri =
    "http://crl2.strongswan.org/strongswan.crl"; } ; }

    Declared by:

    [16989]<nixpkgs/nixos/modules/services/networking/strongswan.nix>

[16990]services.strongswan.connections

    A set of connections and their options for the ‘conn xxx’ sections of the ipsec.conf file.

    Type: attribute set of attribute set of stringss

    Default: { }

    Example:

    {
      "%default" = {
        keyexchange = "ikev2";
        keyingtries = "1";
      };
      roadwarrior = {
        auto       = "add";
        leftcert   = "/run/keys/moonCert.pem";
        leftid     = "@moon.strongswan.org";
        leftsubnet = "10.1.0.0/16";
        right      = "%any";
      };
    }

    Declared by:

    [16991]<nixpkgs/nixos/modules/services/networking/strongswan.nix>

[16992]services.strongswan.managePlugins

    If set to true, this option will disable automatic plugin loading and then tell strongSwan to
    enable the plugins specified in the enabledPlugins option.

    Type: boolean

    Default: false

    Declared by:

    [16993]<nixpkgs/nixos/modules/services/networking/strongswan.nix>

[16994]services.strongswan.secrets

    A list of paths to IPSec secret files. These files will be included into the main
    ipsec.secrets file with the include directive. It is safer if these paths are absolute.

    Type: list of strings

    Default: [ ]

    Example: [ "/run/keys/ipsec-foo.secret" ]

    Declared by:

    [16995]<nixpkgs/nixos/modules/services/networking/strongswan.nix>

[16996]services.strongswan.setup

    A set of options for the ‘config setup’ section of the ipsec.conf file. Defines general
    configuration parameters.

    Type: attribute set of strings

    Default: { }

    Example: { cachecrls = "yes"; strictcrlpolicy = "yes"; }

    Declared by:

    [16997]<nixpkgs/nixos/modules/services/networking/strongswan.nix>

[16998]services.strongswan-swanctl.enable

    Whether to enable strongswan-swanctl service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [16999]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17000]services.strongswan-swanctl.package

    The strongswan derivation to use.

    Type: package

    Default: "pkgs.strongswan"

    Declared by:

    [17001]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17002]services.strongswan-swanctl.strongswan.extraConfig

    Contents of the strongswan.conf file.

    Type: string

    Default: ""

    Declared by:

    [17003]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17004]services.strongswan-swanctl.swanctl.authorities

    Section defining complementary attributes of certification authorities, each in its own
    subsection with an arbitrary yet unique name

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17005]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17006]services.strongswan-swanctl.swanctl.authorities.<name>.cacert

    The certificates may use a relative path from the swanctl x509ca directory or an absolute
    path.

    Configure one of cacert, file, or handle per section.

    Type: null or string

    Default: null

    Declared by:

    [17007]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17008]services.strongswan-swanctl.swanctl.authorities.<name>.cert_uri_base

    Defines the base URI for the Hash and URL feature supported by IKEv2. Instead of exchanging
    complete certificates, IKEv2 allows one to send an URI that resolves to the DER encoded
    certificate. The certificate URIs are built by appending the SHA1 hash of the DER encoded
    certificates to this base URI.

    Type: null or string

    Default: null

    Declared by:

    [17009]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17010]services.strongswan-swanctl.swanctl.authorities.<name>.crl_uris

    List of CRL distribution points (ldap, http, or file URI).

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17011]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17012]services.strongswan-swanctl.swanctl.authorities.<name>.file

    Absolute path to the certificate to load. Passed as-is to the daemon, so it must be readable
    by it.

    Configure either this or handle, but not both, in one section.

    Type: null or string

    Default: null

    Declared by:

    [17013]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17014]services.strongswan-swanctl.swanctl.authorities.<name>.handle

    Hex-encoded CKA_ID or handle of the certificate on a token or TPM, respectively.

    Configure either this or file, but not both, in one section.

    Type: null or string

    Default: null

    Declared by:

    [17015]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17016]services.strongswan-swanctl.swanctl.authorities.<name>.module

    Optional PKCS#11 module name.

    Type: null or string

    Default: null

    Declared by:

    [17017]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17018]services.strongswan-swanctl.swanctl.authorities.<name>.ocsp_uris

    List of OCSP URIs.

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17019]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17020]services.strongswan-swanctl.swanctl.authorities.<name>.slot

    Optional slot number of the token that stores the certificate.

    Type: null or signed integer

    Default: null

    Declared by:

    [17021]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17022]services.strongswan-swanctl.swanctl.connections

    Section defining IKE connection configurations, each in its own subsection with an arbitrary
    yet unique name

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17023]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17024]services.strongswan-swanctl.swanctl.connections.<name>.aggressive

    Enables Aggressive Mode instead of Main Mode with Identity Protection. Aggressive Mode is
    considered less secure, because the ID and HASH payloads are exchanged unprotected. This
    allows a passive attacker to snoop peer identities, and even worse, start dictionary attacks
    on the Preshared Key.

    StrongSwan default: false

    Type: null or boolean

    Default: null

    Declared by:

    [17025]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17026]services.strongswan-swanctl.swanctl.connections.<name>.childless

    Use childless IKE_SA initiation (RFC 6023) for IKEv2. Acceptable values are allow (the
    default), force and never. If set to allow, responders will accept childless IKE_SAs (as
    indicated via notify in the IKE_SA_INIT response) while initiators continue to create regular
    IKE_SAs with the first CHILD_SA created during IKE_AUTH, unless the IKE_SA is initiated
    explicitly without any children (which will fail if the responder does not support or has
    disabled this extension). If set to force, only childless initiation is accepted and the
    first CHILD_SA is created with a separate CREATE_CHILD_SA exchange (e.g. to use an
    independent DH exchange for all CHILD_SAs). Finally, setting the option to never disables
    support for childless IKE_SAs as responder.

    StrongSwan default: "allow"

    Type: null or one of "allow", "force", "never"

    Default: null

    Declared by:

    [17027]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17028]services.strongswan-swanctl.swanctl.connections.<name>.children

    CHILD_SA configuration sub-section. Each connection definition may have one or more sections
    in its children subsection. The section name defines the name of the CHILD_SA configuration,
    which must be unique within the connection (denoted <child> below).

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17029]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17030]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.ah_proposals

    AH proposals to offer for the CHILD_SA. A proposal is a set of algorithms. For AH, this
    includes an integrity algorithm and an optional Diffie-Hellman group. If a DH group is
    specified, CHILD_SA/Quick Mode rekeying and initial negotiation uses a separate
    Diffie-Hellman exchange using the specified group (refer to esp_proposals for details).

    In IKEv2, multiple algorithms of the same kind can be specified in a single proposal, from
    which one gets selected. In IKEv1, only one algorithm per kind is allowed per proposal, more
    algorithms get implicitly stripped. Use multiple proposals to offer different algorithms
    combinations in IKEv1.

    Algorithm keywords get separated using dashes. Multiple proposals may be specified in a list.
    The special value default forms a default proposal of supported algorithms considered safe,
    and is usually a good choice for interoperability. By default no AH proposals are included,
    instead ESP is proposed.

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17031]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17032]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.close_action

    Action to perform after a CHILD_SA gets closed by the peer.

      □ The default of none does not take any action,

      □ trap installs a trap policy for the CHILD_SA.

      □ start tries to re-create the CHILD_SA.

    close_action does not provide any guarantee that the CHILD_SA is kept alive. It acts on
    explicit close messages only, but not on negotiation failures. Use trap policies to reliably
    re-create failed CHILD_SAs.

    StrongSwan default: "none"

    Type: null or one of "none", "trap", "start"

    Default: null

    Declared by:

    [17033]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17034]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.copy_df

    Whether to copy the DF bit to the outer IPv4 header in tunnel mode. This effectively disables
    Path MTU discovery (PMTUD). Controlling this behavior is not supported by all kernel
    interfaces.

    StrongSwan default: true

    Type: null or boolean

    Default: null

    Declared by:

    [17035]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17036]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.copy_dscp

    Whether to copy the DSCP (Differentiated Services Field Codepoint) header field to/from the
    outer IP header in tunnel mode. The value out only copies the field from the inner to the
    outer header, the value in does the opposite and only copies the field from the outer to the
    inner header when decapsulating, the value yes copies the field in both directions, and the
    value no disables copying the field altogether. Setting this to yes or in could allow an
    attacker to adversely affect other traffic at the receiver, which is why the default is out.
    Controlling this behavior is not supported by all kernel interfaces.

    StrongSwan default: "out"

    Type: null or one of "out", "in", "yes", "no"

    Default: null

    Declared by:

    [17037]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17038]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.copy_ecn

    Whether to copy the ECN (Explicit Congestion Notification) header field to/from the outer IP
    header in tunnel mode. Controlling this behavior is not supported by all kernel interfaces.

    StrongSwan default: true

    Type: null or boolean

    Default: null

    Declared by:

    [17039]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17040]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.dpd_action

    Action to perform for this CHILD_SA on DPD timeout. The default clear closes the CHILD_SA and
    does not take further action. trap installs a trap policy, which will catch matching traffic
    and tries to re-negotiate the tunnel on-demand. restart immediately tries to re-negotiate the
    CHILD_SA under a fresh IKE_SA.

    StrongSwan default: "clear"

    Type: null or one of "clear", "trap", "restart"

    Default: null

    Declared by:

    [17041]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17042]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.esp_proposals

    ESP proposals to offer for the CHILD_SA. A proposal is a set of algorithms. For ESP non-AEAD
    proposals, this includes an integrity algorithm, an encryption algorithm, an optional
    Diffie-Hellman group and an optional Extended Sequence Number Mode indicator. For AEAD
    proposals, a combined mode algorithm is used instead of the separate encryption/integrity
    algorithms.

    If a DH group is specified, CHILD_SA/Quick Mode rekeying and initial negotiation use a
    separate Diffie-Hellman exchange using the specified group. However, for IKEv2, the keys of
    the CHILD_SA created implicitly with the IKE_SA will always be derived from the IKE_SA's key
    material. So any DH group specified here will only apply when the CHILD_SA is later rekeyed
    or is created with a separate CREATE_CHILD_SA exchange. A proposal mismatch might, therefore,
    not immediately be noticed when the SA is established, but may later cause rekeying to fail.

    Extended Sequence Number support may be indicated with the esn and noesn values, both may be
    included to indicate support for both modes. If omitted, noesn is assumed.

    In IKEv2, multiple algorithms of the same kind can be specified in a single proposal, from
    which one gets selected. In IKEv1, only one algorithm per kind is allowed per proposal, more
    algorithms get implicitly stripped. Use multiple proposals to offer different algorithms
    combinations in IKEv1.

    Algorithm keywords get separated using dashes. Multiple proposals may be specified as a list.
    The special value default forms a default proposal of supported algorithms considered safe,
    and is usually a good choice for interoperability. If no algorithms are specified for AH nor
    ESP, the default set of algorithms for ESP is included.

    StrongSwan default: ["default"]

    Type: null or list of strings

    Default: null

    Declared by:

    [17043]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17044]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.hostaccess

    Hostaccess variable to pass to updown script.

    StrongSwan default: false

    Type: null or boolean

    Default: null

    Declared by:

    [17045]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17046]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.hw_offload

    Enable hardware offload for this CHILD_SA, if supported by the IPsec implementation. The
    value yes enforces offloading and the installation will fail if it's not supported by either
    kernel or device. The value auto enables offloading, if it's supported, but the installation
    does not fail otherwise.

    StrongSwan default: "no"

    Type: null or one of "yes", "no", "auto"

    Default: null

    Declared by:

    [17047]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17048]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.if_id_in

    XFRM interface ID set on inbound policies/SA. This allows installing duplicate policies/SAs
    and associates them with an interface with the same ID. The special value %unique sets a
    unique interface ID on each CHILD_SA instance, beyond that the value %unique-dir assigns a
    different unique interface ID for each CHILD_SA direction (in/out).

    StrongSwan default: "0"

    Type: null or string

    Default: null

    Declared by:

    [17049]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17050]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.if_id_out

    XFRM interface ID set on outbound policies/SA. This allows installing duplicate policies/SAs
    and associates them with an interface with the same ID. The special value %unique sets a
    unique interface ID on each CHILD_SA instance, beyond that the value %unique-dir assigns a
    different unique interface ID for each CHILD_SA direction (in/out). The daemon will not
    install routes for CHILD_SAs that have this option set.

    StrongSwan default: "0"

    Type: null or string

    Default: null

    Declared by:

    [17051]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17052]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.inactivity

    Timeout before closing CHILD_SA after inactivity. If no traffic has been processed in either
    direction for the configured timeout, the CHILD_SA gets closed due to inactivity. The default
    value of 0 disables inactivity checks.

    StrongSwan default: "0s"

    Type: null or string

    Default: null

    Declared by:

    [17053]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17054]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.interface

    Optional interface name to restrict outbound IPsec policies.

    Type: null or string

    Default: null

    Declared by:

    [17055]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17056]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.ipcomp

    Enable IPComp compression before encryption. If enabled, IKE tries to negotiate IPComp
    compression to compress ESP payload data prior to encryption.

    StrongSwan default: false

    Type: null or boolean

    Default: null

    Declared by:

    [17057]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17058]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.life_bytes

    Maximum bytes processed before CHILD_SA gets closed. Usually this hard volume limit is never
    reached, because the CHILD_SA gets rekeyed before. If that fails for whatever reason, this
    limit closes the CHILD_SA. The default is 10% more than rekey_bytes.

    Type: null or signed integer

    Default: null

    Declared by:

    [17059]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17060]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.life_packets

    Maximum number of packets processed before CHILD_SA gets closed. Usually this hard packets
    limit is never reached, because the CHILD_SA gets rekeyed before. If that fails for whatever
    reason, this limit closes the CHILD_SA.

    The default is 10% more than rekey_bytes.

    Type: null or signed integer

    Default: null

    Declared by:

    [17061]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17062]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.life_time

    Maximum lifetime before CHILD_SA gets closed. Usually this hard lifetime is never reached,
    because the CHILD_SA gets rekeyed before. If that fails for whatever reason, this limit
    closes the CHILD_SA. The default is 10% more than the rekey_time.

    Type: null or string

    Default: null

    Declared by:

    [17063]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17064]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.local_ts

    List of local traffic selectors to include in CHILD_SA. Each selector is a CIDR subnet
    definition, followed by an optional proto/port selector. The special value dynamic may be
    used instead of a subnet definition, which gets replaced by the tunnel outer address or the
    virtual IP, if negotiated. This is the default.

    A protocol/port selector is surrounded by opening and closing square brackets. Between these
    brackets, a numeric or getservent(3) protocol name may be specified. After the optional
    protocol restriction, an optional port restriction may be specified, separated by a slash.
    The port restriction may be numeric, a getservent(3) service name, or the special value
    opaque for RFC 4301 OPAQUE selectors. Port ranges may be specified as well, none of the
    kernel backends currently support port ranges, though.

    When IKEv1 is used only the first selector is interpreted, except if the Cisco Unity
    extension plugin is used. This is due to a limitation of the IKEv1 protocol, which only
    allows a single pair of selectors per CHILD_SA. So to tunnel traffic matched by several pairs
    of selectors when using IKEv1 several children (CHILD_SAs) have to be defined that cover the
    selectors. The IKE daemon uses traffic selector narrowing for IKEv1, the same way it is
    standardized and implemented for IKEv2. However, this may lead to problems with other
    implementations. To avoid that, configure identical selectors in such scenarios.

    StrongSwan default: ["dynamic"]

    Type: null or list of strings

    Default: null

    Declared by:

    [17065]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17066]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.mark_in

    Netfilter mark and mask for input traffic. On Linux, Netfilter may require marks on each
    packet to match an SA/policy having that option set. This allows installing duplicate
    policies and enables Netfilter rules to select specific SAs/policies for incoming traffic.
    Note that inbound marks are only set on policies, by default, unless mark_in_sa is enabled.
    The special value %unique sets a unique mark on each CHILD_SA instance, beyond that the value
    %unique-dir assigns a different unique mark for each

    An additional mask may be appended to the mark, separated by /. The default mask if omitted
    is 0xffffffff.

    StrongSwan default: "0/0x00000000"

    Type: null or string

    Default: null

    Declared by:

    [17067]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17068]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.mark_in_sa

    Whether to set mark_in on the inbound SA. By default, the inbound mark is only set on the
    inbound policy. The tuple destination address, protocol and SPI is unique and the mark is not
    required to find the correct SA, allowing to mark traffic after decryption instead (where
    more specific selectors may be used) to match different policies. Marking packets before
    decryption is still possible, even if no mark is set on the SA.

    StrongSwan default: false

    Type: null or boolean

    Default: null

    Declared by:

    [17069]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17070]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.mark_out

    Netfilter mark and mask for output traffic. On Linux, Netfilter may require marks on each
    packet to match a policy/SA having that option set. This allows installing duplicate policies
    and enables Netfilter rules to select specific policies/SAs for outgoing traffic. The special
    value %unique sets a unique mark on each CHILD_SA instance, beyond that the value %unique-dir
    assigns a different unique mark for each CHILD_SA direction (in/out).

    An additional mask may be appended to the mark, separated by /. The default mask if omitted
    is 0xffffffff.

    StrongSwan default: "0/0x00000000"

    Type: null or string

    Default: null

    Declared by:

    [17071]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17072]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.mode

    IPsec Mode to establish CHILD_SA with.

      □ tunnel negotiates the CHILD_SA in IPsec Tunnel Mode,

      □ whereas transport uses IPsec Transport Mode.

      □ transport_proxy signifying the special Mobile IPv6 Transport Proxy Mode.

      □ beet is the Bound End to End Tunnel mixture mode, working with fixed inner addresses
        without the need to include them in each packet.

      □ Both transport and beet modes are subject to mode negotiation; tunnel mode is negotiated
        if the preferred mode is not available.

      □ pass and drop are used to install shunt policies which explicitly bypass the defined
        traffic from IPsec processing or drop it, respectively.

    StrongSwan default: "tunnel"

    Type: null or one of "tunnel", "transport", "transport_proxy", "beet", "pass", "drop"

    Default: null

    Declared by:

    [17073]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17074]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.policies

    Whether to install IPsec policies or not. Disabling this can be useful in some scenarios e.g.
    MIPv6, where policies are not managed by the IKE daemon. Since 5.3.3.

    StrongSwan default: true

    Type: null or boolean

    Default: null

    Declared by:

    [17075]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17076]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.policies_fwd_out

    Whether to install outbound FWD IPsec policies or not. Enabling this is required in case
    there is a drop policy that would match and block forwarded traffic for this CHILD_SA. Since
    5.5.1.

    StrongSwan default: false

    Type: null or boolean

    Default: null

    Declared by:

    [17077]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17078]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.priority

    Optional fixed priority for IPsec policies. This could be useful to install high-priority
    drop policies. The default of 0 uses dynamically calculated priorities based on the size of
    the traffic selectors.

    StrongSwan default: 0

    Type: null or signed integer

    Default: null

    Declared by:

    [17079]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17080]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.rand_bytes

    Byte range from which to choose a random value to subtract from rekey_bytes. The default is
    the difference between life_bytes and rekey_bytes.

    Type: null or signed integer

    Default: null

    Declared by:

    [17081]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17082]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.rand_packets

    Packet range from which to choose a random value to subtract from rekey_packets. The default
    is the difference between life_packets and rekey_packets.

    Type: null or signed integer

    Default: null

    Declared by:

    [17083]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17084]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.rand_time

    Time range from which to choose a random value to subtract from rekey_time. The default is
    the difference between life_time and rekey_time.

    Type: null or string

    Default: null

    Declared by:

    [17085]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17086]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.rekey_bytes

    Number of bytes processed before initiating CHILD_SA rekeying. CHILD_SA rekeying refreshes
    key material, optionally using a Diffie-Hellman exchange if a group is specified in the
    proposal.

    To avoid rekey collisions initiated by both ends simultaneously, a value in the range of
    rand_bytes gets subtracted to form the effective soft volume limit.

    Volume based CHILD_SA rekeying is disabled by default.

    StrongSwan default: 0

    Type: null or signed integer

    Default: null

    Declared by:

    [17087]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17088]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.rekey_packets

    Number of packets processed before initiating CHILD_SA rekeying. CHILD_SA rekeying refreshes
    key material, optionally using a Diffie-Hellman exchange if a group is specified in the
    proposal.

    To avoid rekey collisions initiated by both ends simultaneously, a value in the range of
    rand_packets gets subtracted to form the effective soft packet count limit.

    Packet count based CHILD_SA rekeying is disabled by default.

    StrongSwan default: 0

    Type: null or signed integer

    Default: null

    Declared by:

    [17089]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17090]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.rekey_time

    Time to schedule CHILD_SA rekeying. CHILD_SA rekeying refreshes key material, optionally
    using a Diffie-Hellman exchange if a group is specified in the proposal. To avoid rekey
    collisions initiated by both ends simultaneously, a value in the range of rand_time gets
    subtracted to form the effective soft lifetime.

    By default CHILD_SA rekeying is scheduled every hour, minus rand_time.

    StrongSwan default: "1h"

    Type: null or string

    Default: null

    Declared by:

    [17091]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17092]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.remote_ts

    List of remote selectors to include in CHILD_SA. See local_ts for a description of the
    selector syntax.

    StrongSwan default: ["dynamic"]

    Type: null or list of strings

    Default: null

    Declared by:

    [17093]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17094]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.replay_window

    IPsec replay window to configure for this CHILD_SA. Larger values than the default of 32 are
    supported using the Netlink backend only, a value of 0 disables IPsec replay protection.

    StrongSwan default: 32

    Type: null or signed integer

    Default: null

    Declared by:

    [17095]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17096]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.reqid

    Fixed reqid to use for this CHILD_SA. This might be helpful in some scenarios, but works only
    if each CHILD_SA configuration is instantiated not more than once. The default of 0 uses
    dynamic reqids, allocated incrementally.

    StrongSwan default: 0

    Type: null or signed integer

    Default: null

    Declared by:

    [17097]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17098]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.set_mark_in

    Netfilter mark applied to packets after the inbound IPsec SA processed them. This way it's
    not necessary to mark packets via Netfilter before decryption or right afterwards to match
    policies or process them differently (e.g. via policy routing). An additional mask may be
    appended to the mark, separated by /. The default mask if omitted is 0xffffffff. The special
    value %same uses the value (but not the mask) from mark_in as mark value, which can be fixed,
    %unique or %unique-dir. Setting marks in XFRM input requires Linux 4.19 or higher.

    StrongSwan default: "0/0x00000000"

    Type: null or string

    Default: null

    Declared by:

    [17099]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17100]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.set_mark_out

    Netfilter mark applied to packets after the outbound IPsec SA processed them. This allows
    processing ESP packets differently than the original traffic (e.g. via policy routing). An
    additional mask may be appended to the mark, separated by /. The default mask if omitted is
    0xffffffff. The special value %same uses the value (but not the mask) from mark_out as mark
    value, which can be fixed, %unique_ or %unique-dir. Setting marks in XFRM output is supported
    since Linux 4.14. Setting a mask requires at least Linux 4.19.

    StrongSwan default: "0/0x00000000"

    Type: null or string

    Default: null

    Declared by:

    [17101]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17102]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.sha256_96

    HMAC-SHA-256 is used with 128-bit truncation with IPsec. For compatibility with
    implementations that incorrectly use 96-bit truncation this option may be enabled to
    configure the shorter truncation length in the kernel. This is not negotiated, so this only
    works with peers that use the incorrect truncation length (or have this option enabled).

    StrongSwan default: false

    Type: null or boolean

    Default: null

    Declared by:

    [17103]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17104]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.start_action

    Action to perform after loading the configuration.

      □ The default of none loads the connection only, which then can be manually initiated or
        used as a responder configuration.

      □ The value trap installs a trap policy, which triggers the tunnel as soon as matching
        traffic has been detected.

      □ The value start initiates the connection actively.

    When unloading or replacing a CHILD_SA configuration having a start_action different from
    none, the inverse action is performed. Configurations with start get closed, while such with
    trap get uninstalled.

    StrongSwan default: "none"

    Type: null or one of "none", "trap", "start"

    Default: null

    Declared by:

    [17105]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17106]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.tfc_padding

    Pads ESP packets with additional data to have a consistent ESP packet size for improved
    Traffic Flow Confidentiality. The padding defines the minimum size of all ESP packets sent.
    The default value of 0 disables TFC padding, the special value mtu adds TFC padding to create
    a packet size equal to the Path Maximum Transfer Unit.

    StrongSwan default: 0

    Type: null or signed integer or one of "mtu"

    Default: null

    Declared by:

    [17107]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17108]services.strongswan-swanctl.swanctl.connections.<name>.children.<name>.updown

    Updown script to invoke on CHILD_SA up and down events.

    Type: null or string

    Default: null

    Declared by:

    [17109]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17110]services.strongswan-swanctl.swanctl.connections.<name>.dpd_delay

    Interval to check the liveness of a peer actively using IKEv2 INFORMATIONAL exchanges or
    IKEv1 R_U_THERE messages. Active DPD checking is only enforced if no IKE or ESP/AH packet has
    been received for the configured DPD delay.

    StrongSwan default: "0s"

    Type: null or string

    Default: null

    Declared by:

    [17111]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17112]services.strongswan-swanctl.swanctl.connections.<name>.dpd_timeout

    Charon by default uses the normal retransmission mechanism and timeouts to check the liveness
    of a peer, as all messages are used for liveness checking. For compatibility reasons, with
    IKEv1 a custom interval may be specified; this option has no effect on connections using
    IKEv2.

    StrongSwan default: "0s"

    Type: null or string

    Default: null

    Declared by:

    [17113]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17114]services.strongswan-swanctl.swanctl.connections.<name>.dscp

    Differentiated Services Field Codepoint to set on outgoing IKE packets for this connection.
    The value is a six digit binary encoded string specifying the Codepoint to set, as defined in
    RFC 2474.

    StrongSwan default: "000000"

    Type: null or string

    Default: null

    Declared by:

    [17115]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17116]services.strongswan-swanctl.swanctl.connections.<name>.encap

    To enforce UDP encapsulation of ESP packets, the IKE daemon can fake the NAT detection
    payloads. This makes the peer believe that NAT takes place on the path, forcing it to
    encapsulate ESP packets in UDP.

    Usually this is not required, but it can help to work around connectivity issues with too
    restrictive intermediary firewalls.

    StrongSwan default: false

    Type: null or boolean

    Default: null

    Declared by:

    [17117]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17118]services.strongswan-swanctl.swanctl.connections.<name>.fragmentation

    Use IKE fragmentation (proprietary IKEv1 extension or RFC 7383 IKEv2 fragmentation).
    Acceptable values are yes (the default since 5.5.1), accept (since versions:5.5.3), force and
    no.

      □ If set to yes, and the peer supports it, oversized IKE messages will be sent in
        fragments.

      □ If set to accept, support for fragmentation is announced to the peer but the daemon does
        not send its own messages in fragments.

      □ If set to force (only supported for IKEv1) the initial IKE message will already be
        fragmented if required.

      □ Finally, setting the option to no will disable announcing support for this feature.

    Note that fragmented IKE messages sent by a peer are always processed irrespective of the
    value of this option (even when set to no).

    StrongSwan default: "yes"

    Type: null or one of "yes", "accept", "force", "no"

    Default: null

    Declared by:

    [17119]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17120]services.strongswan-swanctl.swanctl.connections.<name>.if_id_in

    XFRM interface ID set on inbound policies/SA, can be overridden by child config, see there
    for details.

    StrongSwan default: "0"

    Type: null or string

    Default: null

    Declared by:

    [17121]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17122]services.strongswan-swanctl.swanctl.connections.<name>.if_id_out

    XFRM interface ID set on outbound policies/SA, can be overridden by child config, see there
    for details.

    StrongSwan default: "0"

    Type: null or string

    Default: null

    Declared by:

    [17123]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17124]services.strongswan-swanctl.swanctl.connections.<name>.keyingtries

    Number of retransmission sequences to perform during initial connect. Instead of giving up
    initiation after the first retransmission sequence with the default value of 1, additional
    sequences may be started according to the configured value. A value of 0 initiates a new
    sequence until the connection establishes or fails with a permanent error.

    StrongSwan default: 1

    Type: null or signed integer

    Default: null

    Declared by:

    [17125]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17126]services.strongswan-swanctl.swanctl.connections.<name>.local

    Section for a local authentication round. A local authentication round defines the rules how
    authentication is performed for the local peer. Multiple rounds may be defined to use IKEv2
    RFC 4739 Multiple Authentication or IKEv1 XAuth.

    Each round is defined in a section having local as prefix, and an optional unique suffix. To
    define a single authentication round, the suffix may be omitted.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17127]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17128]services.strongswan-swanctl.swanctl.connections.<name>.local.<name>.aaa_id

    Server side EAP-Identity to expect in the EAP method. Some EAP methods, such as EAP-TLS, use
    an identity for the server to perform mutual authentication. This identity may differ from
    the IKE identity, especially when EAP authentication is delegated from the IKE responder to
    an AAA backend.

    For EAP-(T)TLS, this defines the identity for which the server must provide a certificate in
    the TLS exchange.

    Type: null or string

    Default: null

    Declared by:

    [17129]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17130]services.strongswan-swanctl.swanctl.connections.<name>.local.<name>.auth

    Authentication to perform locally.

      □ The default pubkey uses public key authentication using a private key associated to a
        usable certificate.

      □ psk uses pre-shared key authentication.

      □ The IKEv1 specific xauth is used for XAuth or Hybrid authentication,

      □ while the IKEv2 specific eap keyword defines EAP authentication.

      □ For xauth, a specific backend name may be appended, separated by a dash. The appropriate
        xauth backend is selected to perform the XAuth exchange. For traditional XAuth, the xauth
        method is usually defined in the second authentication round following an initial pubkey
        (or psk) round. Using xauth in the first round performs Hybrid Mode client
        authentication.

      □ For eap, a specific EAP method name may be appended, separated by a dash. An EAP module
        implementing the appropriate method is selected to perform the EAP conversation.

      □ Since 5.4.0, if both peers support RFC 7427 ("Signature Authentication in IKEv2")
        specific hash algorithms to be used during IKEv2 authentication may be configured. To do
        so use ike: followed by a trust chain signature scheme constraint (see description of the
        remote section's auth keyword). For example, with ike:pubkey-sha384-sha256 a public key
        signature scheme with either SHA-384 or SHA-256 would get used for authentication, in
        that order and depending on the hash algorithms supported by the peer. If no specific
        hash algorithms are configured, the default is to prefer an algorithm that matches or
        exceeds the strength of the signature key. If no constraints with ike: prefix are
        configured any signature scheme constraint (without ike: prefix) will also apply to IKEv2
        authentication, unless this is disabled in strongswan.conf. To use RSASSA-PSS signatures
        use rsa/pss instead of pubkey or rsa as in e.g. ike:rsa/pss-sha256. If pubkey or rsa
        constraints are configured RSASSA-PSS signatures will only be used if enabled in
        strongswan.conf(5).

    StrongSwan default: "pubkey"

    Type: null or string

    Default: null

    Declared by:

    [17131]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17132]services.strongswan-swanctl.swanctl.connections.<name>.local.<name>.cert

    Section for a certificate candidate to use for authentication. Certificates in certs are
    transmitted as binary blobs, these sections offer more flexibility.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17133]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17134]services.strongswan-swanctl.swanctl.connections.<name>.local.<name>.cert.<name>.file

    Absolute path to the certificate to load. Passed as-is to the daemon, so it must be readable
    by it.

    Configure either this or handle, but not both, in one section.

    Type: null or string

    Default: null

    Declared by:

    [17135]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17136]services.strongswan-swanctl.swanctl.connections.<name>.local.<name>.cert.<name>.handle

    Hex-encoded CKA_ID or handle of the certificate on a token or TPM, respectively.

    Configure either this or file, but not both, in one section.

    Type: null or string

    Default: null

    Declared by:

    [17137]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17138]services.strongswan-swanctl.swanctl.connections.<name>.local.<name>.cert.<name>.module

    Optional PKCS#11 module name.

    Type: null or string

    Default: null

    Declared by:

    [17139]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17140]services.strongswan-swanctl.swanctl.connections.<name>.local.<name>.cert.<name>.slot

    Optional slot number of the token that stores the certificate.

    Type: null or signed integer

    Default: null

    Declared by:

    [17141]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17142]services.strongswan-swanctl.swanctl.connections.<name>.local.<name>.certs

    List of certificate candidates to use for authentication. The certificates may use a relative
    path from the swanctl x509 directory or an absolute path.

    The certificate used for authentication is selected based on the received certificate request
    payloads. If no appropriate CA can be located, the first certificate is used.

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17143]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17144]services.strongswan-swanctl.swanctl.connections.<name>.local.<name>.eap_id

    Client EAP-Identity to use in EAP-Identity exchange and the EAP method.

    Type: null or string

    Default: null

    Declared by:

    [17145]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17146]services.strongswan-swanctl.swanctl.connections.<name>.local.<name>.id

    IKE identity to use for authentication round. When using certificate authentication, the IKE
    identity must be contained in the certificate, either as subject or as subjectAltName.

    Type: null or string

    Default: null

    Declared by:

    [17147]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17148]services.strongswan-swanctl.swanctl.connections.<name>.local.<name>.pubkeys

    List of raw public key candidates to use for authentication. The public keys may use a
    relative path from the swanctl pubkey directory or an absolute path.

    Even though multiple local public keys could be defined in principle, only the first public
    key in the list is used for authentication.

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17149]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17150]services.strongswan-swanctl.swanctl.connections.<name>.local.<name>.round

    Optional numeric identifier by which authentication rounds are sorted. If not specified
    rounds are ordered by their position in the config file/vici message.

    StrongSwan default: 0

    Type: null or signed integer

    Default: null

    Declared by:

    [17151]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17152]services.strongswan-swanctl.swanctl.connections.<name>.local.<name>.xauth_id

    Client XAuth username used in the XAuth exchange.

    Type: null or string

    Default: null

    Declared by:

    [17153]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17154]services.strongswan-swanctl.swanctl.connections.<name>.local_addrs

    Local address(es) to use for IKE communication. Takes single IPv4/IPv6 addresses, DNS names,
    CIDR subnets or IP address ranges.

    As initiator, the first non-range/non-subnet is used to initiate the connection from. As
    responder, the local destination address must match at least to one of the specified
    addresses, subnets or ranges.

    If FQDNs are assigned they are resolved every time a configuration lookup is done. If DNS
    resolution times out, the lookup is delayed for that time.

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17155]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17156]services.strongswan-swanctl.swanctl.connections.<name>.local_port

    Local UDP port for IKE communication. By default the port of the socket backend is used,
    which is usually 500. If port 500 is used, automatic IKE port floating to port 4500 is used
    to work around NAT issues.

    Using a non-default local IKE port requires support from the socket backend in use
    (socket-dynamic).

    StrongSwan default: 500

    Type: null or signed integer

    Default: null

    Declared by:

    [17157]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17158]services.strongswan-swanctl.swanctl.connections.<name>.mediated_by

    The name of the connection to mediate this connection through. If given, the connection will
    be mediated through the named mediation connection. The mediation connection must have
    mediation enabled.

    Type: null or string

    Default: null

    Declared by:

    [17159]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17160]services.strongswan-swanctl.swanctl.connections.<name>.mediation

    Whether this connection is a mediation connection, that is, whether this connection is used
    to mediate other connections using the IKEv2 Mediation Extension. Mediation connections
    create no CHILD_SA.

    StrongSwan default: false

    Type: null or boolean

    Default: null

    Declared by:

    [17161]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17162]services.strongswan-swanctl.swanctl.connections.<name>.mediation_peer

    Identity under which the peer is registered at the mediation server, that is, the IKE
    identity the other end of this connection uses as its local identity on its connection to the
    mediation server. This is the identity we request the mediation server to mediate us with.
    Only relevant on connections that set mediated_by. If it is not given, the remote IKE
    identity of the first authentication round of this connection will be used.

    Type: null or string

    Default: null

    Declared by:

    [17163]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17164]services.strongswan-swanctl.swanctl.connections.<name>.mobike

    Enables MOBIKE on IKEv2 connections. MOBIKE is enabled by default on IKEv2 connections, and
    allows mobility of clients and multi-homing on servers by migrating active IPsec tunnels.

    Usually keeping MOBIKE enabled is unproblematic, as it is not used if the peer does not
    indicate support for it. However, due to the design of MOBIKE, IKEv2 always floats to port
    4500 starting from the second exchange. Some implementations don't like this behavior, hence
    it can be disabled.

    StrongSwan default: true

    Type: null or boolean

    Default: null

    Declared by:

    [17165]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17166]services.strongswan-swanctl.swanctl.connections.<name>.over_time

    Hard IKE_SA lifetime if rekey/reauth does not complete, as time. To avoid having an IKE/
    ISAKMP kept alive if IKE reauthentication or rekeying fails perpetually, a maximum hard
    lifetime may be specified. If the IKE_SA fails to rekey or reauthenticate within the
    specified time, the IKE_SA gets closed.

    In contrast to CHILD_SA rekeying, over_time is relative in time to the rekey_time and
    reauth_time values, as it applies to both.

    The default is 10% of the longer of rekey_time and reauth_time.

    Type: null or string

    Default: null

    Declared by:

    [17167]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17168]services.strongswan-swanctl.swanctl.connections.<name>.pools

    List of named IP pools to allocate virtual IP addresses and other configuration attributes
    from. Each name references a pool by name from either the pools section or an external pool.

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17169]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17170]services.strongswan-swanctl.swanctl.connections.<name>.ppk_id

    String identifying the Postquantum Preshared Key (PPK) to be used.

    Type: null or string

    Default: null

    Declared by:

    [17171]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17172]services.strongswan-swanctl.swanctl.connections.<name>.ppk_required

    Whether a Postquantum Preshared Key (PPK) is required for this connection.

    StrongSwan default: false

    Type: null or boolean

    Default: null

    Declared by:

    [17173]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17174]services.strongswan-swanctl.swanctl.connections.<name>.proposals

    A proposal is a set of algorithms. For non-AEAD algorithms, this includes for IKE an
    encryption algorithm, an integrity algorithm, a pseudo random function and a Diffie-Hellman
    group. For AEAD algorithms, instead of encryption and integrity algorithms, a combined
    algorithm is used.

    In IKEv2, multiple algorithms of the same kind can be specified in a single proposal, from
    which one gets selected. In IKEv1, only one algorithm per kind is allowed per proposal, more
    algorithms get implicitly stripped. Use multiple proposals to offer different algorithms
    combinations in IKEv1.

    Algorithm keywords get separated using dashes. Multiple proposals may be specified in a list.
    The special value default forms a default proposal of supported algorithms considered safe,
    and is usually a good choice for interoperability.

    StrongSwan default: ["default"]

    Type: null or list of strings

    Default: null

    Declared by:

    [17175]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17176]services.strongswan-swanctl.swanctl.connections.<name>.pull

    If the default of yes is used, Mode Config works in pull mode, where the initiator actively
    requests a virtual IP. With no, push mode is used, where the responder pushes down a virtual
    IP to the initiating peer.

    Push mode is currently supported for IKEv1, but not in IKEv2. It is used by a few
    implementations only, pull mode is recommended.

    StrongSwan default: true

    Type: null or boolean

    Default: null

    Declared by:

    [17177]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17178]services.strongswan-swanctl.swanctl.connections.<name>.rand_time

    Time range from which to choose a random value to subtract from rekey/reauth times. To avoid
    having both peers initiating the rekey/reauth procedure simultaneously, a random time gets
    subtracted from the rekey/reauth times.

    The default is equal to the configured over_time.

    Type: null or string

    Default: null

    Declared by:

    [17179]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17180]services.strongswan-swanctl.swanctl.connections.<name>.reauth_time

    Time to schedule IKE reauthentication. IKE reauthentication recreates the IKE/ISAKMP SA from
    scratch and re-evaluates the credentials. In asymmetric configurations (with EAP or
    configuration payloads) it might not be possible to actively reauthenticate as responder. The
    IKEv2 reauthentication lifetime negotiation can instruct the client to perform
    reauthentication.

    Reauthentication is disabled by default. Enabling it usually may lead to small connection
    interruptions, as strongSwan uses a break-before-make policy with IKEv2 to avoid any
    conflicts with associated tunnel resources.

    StrongSwan default: "0s"

    Type: null or string

    Default: null

    Declared by:

    [17181]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17182]services.strongswan-swanctl.swanctl.connections.<name>.rekey_time

    IKE rekeying refreshes key material using a Diffie-Hellman exchange, but does not re-check
    associated credentials. It is supported in IKEv2 only, IKEv1 performs a reauthentication
    procedure instead.

    With the default value IKE rekeying is scheduled every 4 hours, minus the configured
    rand_time. If a reauth_time is configured, rekey_time defaults to zero, disabling rekeying;
    explicitly set both to enforce rekeying and reauthentication.

    StrongSwan default: "4h"

    Type: null or string

    Default: null

    Declared by:

    [17183]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17184]services.strongswan-swanctl.swanctl.connections.<name>.remote

    Section for a remote authentication round. A remote authentication round defines the
    constraints how the peers must authenticate to use this connection. Multiple rounds may be
    defined to use IKEv2 RFC 4739 Multiple Authentication or IKEv1 XAuth.

    Each round is defined in a section having remote as prefix, and an optional unique suffix. To
    define a single authentication round, the suffix may be omitted.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17185]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17186]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.auth

    Authentication to expect from remote. See the local section's auth keyword description about
    the details of supported mechanisms.

    Since 5.4.0, to require a trustchain public key strength for the remote side, specify the key
    type followed by the minimum strength in bits (for example ecdsa-384 or rsa-2048-ecdsa-256).
    To limit the acceptable set of hashing algorithms for trustchain validation, append hash
    algorithms to pubkey or a key strength definition (for example pubkey-sha256-sha512,
    rsa-2048-sha256-sha384-sha512 or rsa-2048-sha256-ecdsa-256-sha256-sha384). Unless disabled in
    strongswan.conf, or explicit IKEv2 signature constraints are configured (refer to the
    description of the local section's auth keyword for details), such key types and hash
    algorithms are also applied as constraints against IKEv2 signature authentication schemes
    used by the remote side. To require RSASSA-PSS signatures use rsa/pss instead of pubkey or
    rsa as in e.g. rsa/pss-sha256. If pubkey or rsa constraints are configured RSASSA-PSS
    signatures will only be accepted if enabled in strongswan.conf(5).

    To specify trust chain constraints for EAP-(T)TLS, append a colon to the EAP method, followed
    by the key type/size and hash algorithm as discussed above (e.g. eap-tls:ecdsa-384-sha384).

    StrongSwan default: "pubkey"

    Type: null or string

    Default: null

    Declared by:

    [17187]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17188]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.cacert

    Section for a CA certificate to accept for authentication. Certificates in cacerts are
    transmitted as binary blobs, these sections offer more flexibility.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17189]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17190]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.cacert.<name>.file

    Absolute path to the certificate to load. Passed as-is to the daemon, so it must be readable
    by it.

    Configure either this or handle, but not both, in one section.

    Type: null or string

    Default: null

    Declared by:

    [17191]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17192]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.cacert.<name>.handle

    Hex-encoded CKA_ID or handle of the certificate on a token or TPM, respectively.

    Configure either this or file, but not both, in one section.

    Type: null or string

    Default: null

    Declared by:

    [17193]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17194]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.cacert.<name>.module

    Optional PKCS#11 module name.

    Type: null or string

    Default: null

    Declared by:

    [17195]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17196]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.cacert.<name>.slot

    Optional slot number of the token that stores the certificate.

    Type: null or signed integer

    Default: null

    Declared by:

    [17197]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17198]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.cacerts

    List of CA certificates to accept for authentication. The certificates may use a relative
    path from the swanctl x509ca directory or an absolute path.

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17199]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17200]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.cert

    Section for a certificate candidate to use for authentication. Certificates in certs are
    transmitted as binary blobs, these sections offer more flexibility.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17201]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17202]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.cert.<name>.file

    Absolute path to the certificate to load. Passed as-is to the daemon, so it must be readable
    by it.

    Configure either this or handle, but not both, in one section.

    Type: null or string

    Default: null

    Declared by:

    [17203]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17204]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.cert.<name>.handle

    Hex-encoded CKA_ID or handle of the certificate on a token or TPM, respectively.

    Configure either this or file, but not both, in one section.

    Type: null or string

    Default: null

    Declared by:

    [17205]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17206]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.cert.<name>.module

    Optional PKCS#11 module name.

    Type: null or string

    Default: null

    Declared by:

    [17207]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17208]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.cert.<name>.slot

    Optional slot number of the token that stores the certificate.

    Type: null or signed integer

    Default: null

    Declared by:

    [17209]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17210]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.cert_policy

    List of certificate policy OIDs the peer's certificate must have. OIDs are specified using
    the numerical dotted representation.

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17211]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17212]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.certs

    List of certificates to accept for authentication. The certificates may use a relative path
    from the swanctl x509 directory or an absolute path.

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17213]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17214]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.eap_id

    Identity to use as peer identity during EAP authentication. If set to %any the EAP-Identity
    method will be used to ask the client for an EAP identity.

    Type: null or string

    Default: null

    Declared by:

    [17215]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17216]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.groups

    Authorization group memberships to require. The peer must prove membership to at least one of
    the specified groups. Group membership can be certified by different means, for example by
    appropriate Attribute Certificates or by an AAA backend involved in the authentication.

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17217]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17218]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.id

    IKE identity to expect for authentication round. When using certificate authentication, the
    IKE identity must be contained in the certificate, either as subject or as subjectAltName.

    StrongSwan default: "%any"

    Type: null or string

    Default: null

    Declared by:

    [17219]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17220]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.pubkeys

    List of raw public keys to accept for authentication. The public keys may use a relative path
    from the swanctl pubkey directory or an absolute path.

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17221]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17222]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.revocation

    Certificate revocation policy for CRL or OCSP revocation.

      □ A strict revocation policy fails if no revocation information is available, i.e. the
        certificate is not known to be unrevoked.

      □ ifuri fails only if a CRL/OCSP URI is available, but certificate revocation checking
        fails, i.e. there should be revocation information available, but it could not be
        obtained.

      □ The default revocation policy relaxed fails only if a certificate is revoked, i.e. it is
        explicitly known that it is bad.

    StrongSwan default: "relaxed"

    Type: null or one of "strict", "ifuri", "relaxed"

    Default: null

    Declared by:

    [17223]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17224]services.strongswan-swanctl.swanctl.connections.<name>.remote.<name>.round

    Optional numeric identifier by which authentication rounds are sorted. If not specified
    rounds are ordered by their position in the config file/vici message.

    StrongSwan default: 0

    Type: null or signed integer

    Default: null

    Declared by:

    [17225]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17226]services.strongswan-swanctl.swanctl.connections.<name>.remote_addrs

    Remote address(es) to use for IKE communication. Takes single IPv4/IPv6 addresses, DNS names,
    CIDR subnets or IP address ranges.

    As initiator, the first non-range/non-subnet is used to initiate the connection to. As
    responder, the initiator source address must match at least to one of the specified
    addresses, subnets or ranges.

    If FQDNs are assigned they are resolved every time a configuration lookup is done. If DNS
    resolution times out, the lookup is delayed for that time. To initiate a connection, at least
    one specific address or DNS name must be specified.

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17227]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17228]services.strongswan-swanctl.swanctl.connections.<name>.remote_port

    Remote UDP port for IKE communication. If the default of port 500 is used, automatic IKE port
    floating to port 4500 is used to work around NAT issues.

    StrongSwan default: 500

    Type: null or signed integer

    Default: null

    Declared by:

    [17229]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17230]services.strongswan-swanctl.swanctl.connections.<name>.send_cert

    Send certificate payloads when using certificate authentication.

      □ With the default of ifasked the daemon sends certificate payloads only if certificate
        requests have been received.

      □ never disables sending of certificate payloads altogether,

      □ always causes certificate payloads to be sent unconditionally whenever certificate
        authentication is used.

    StrongSwan default: "ifasked"

    Type: null or one of "always", "never", "ifasked"

    Default: null

    Declared by:

    [17231]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17232]services.strongswan-swanctl.swanctl.connections.<name>.send_certreq

    Send certificate request payloads to offer trusted root CA certificates to the peer.
    Certificate requests help the peer to choose an appropriate certificate/private key for
    authentication and are enabled by default. Disabling certificate requests can be useful if
    too many trusted root CA certificates are installed, as each certificate request increases
    the size of the initial IKE packets.

    StrongSwan default: true

    Type: null or boolean

    Default: null

    Declared by:

    [17233]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17234]services.strongswan-swanctl.swanctl.connections.<name>.unique

    Connection uniqueness policy to enforce. To avoid multiple connections from the same user, a
    uniqueness policy can be enforced.

      □ The value never does never enforce such a policy, even if a peer included INITIAL_CONTACT
        notification messages,

      □ whereas no replaces existing connections for the same identity if a new one has the
        INITIAL_CONTACT notify.

      □ keep rejects new connection attempts if the same user already has an active connection,

      □ replace deletes any existing connection if a new one for the same user gets established.

    To compare connections for uniqueness, the remote IKE identity is used. If EAP or XAuth
    authentication is involved, the EAP-Identity or XAuth username is used to enforce the
    uniqueness policy instead.

    On initiators this setting specifies whether an INITIAL_CONTACT notify is sent during
    IKE_AUTH if no existing connection is found with the remote peer (determined by the
    identities of the first authentication round). Unless set to never the client will send a
    notify.

    StrongSwan default: "no"

    Type: null or one of "no", "never", "keep", "replace"

    Default: null

    Declared by:

    [17235]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17236]services.strongswan-swanctl.swanctl.connections.<name>.version

    IKE major version to use for connection.

      □ 1 uses IKEv1 aka ISAKMP,

      □ 2 uses IKEv2.

      □ A connection using the default of 0 accepts both IKEv1 and IKEv2 as responder, and
        initiates the connection actively with IKEv2.

    StrongSwan default: 0

    Type: null or signed integer

    Default: null

    Declared by:

    [17237]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17238]services.strongswan-swanctl.swanctl.connections.<name>.vips

    List of virtual IPs to request in IKEv2 configuration payloads or IKEv1 Mode Config. The
    wildcard addresses 0.0.0.0 and :: request an arbitrary address, specific addresses may be
    defined. The responder may return a different address, though, or none at all.

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17239]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17240]services.strongswan-swanctl.swanctl.pools

    Section defining named pools. Named pools may be referenced by connections with the pools
    option to assign virtual IPs and other configuration attributes. Each pool must have a unique
    name (denoted <name> below).

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17241]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17242]services.strongswan-swanctl.swanctl.pools.<name>.addrs

    Subnet or range defining addresses allocated in pool. Accepts a single CIDR subnet defining
    the pool to allocate addresses from or an address range (<from>-<to>). Pools must be unique
    and non-overlapping.

    Type: null or string

    Default: null

    Declared by:

    [17243]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17244]services.strongswan-swanctl.swanctl.pools.<name>.dhcp

    Address or CIDR subnets

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17245]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17246]services.strongswan-swanctl.swanctl.pools.<name>.dns

    Address or CIDR subnets

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17247]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17248]services.strongswan-swanctl.swanctl.pools.<name>.nbns

    Address or CIDR subnets

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17249]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17250]services.strongswan-swanctl.swanctl.pools.<name>.netmask

    Address or CIDR subnets

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17251]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17252]services.strongswan-swanctl.swanctl.pools.<name>.server

    Address or CIDR subnets

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17253]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17254]services.strongswan-swanctl.swanctl.pools.<name>.split_exclude

    Address or CIDR subnets

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17255]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17256]services.strongswan-swanctl.swanctl.pools.<name>.split_include

    Address or CIDR subnets

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17257]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17258]services.strongswan-swanctl.swanctl.pools.<name>.subnet

    Address or CIDR subnets

    StrongSwan default: []

    Type: null or list of strings

    Default: null

    Declared by:

    [17259]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17260]services.strongswan-swanctl.swanctl.secrets.eap

    EAP secret section for a specific secret. Each EAP secret is defined in a unique section
    having the eap prefix. EAP secrets are used for XAuth authentication as well.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17261]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17262]services.strongswan-swanctl.swanctl.secrets.eap.<name>.id

    Identity the EAP/XAuth secret belongs to. Multiple unique identities may be specified, each
    having an id prefix, if a secret is shared between multiple users.

    Type: attribute set of null or strings

    Default: { }

    Declared by:

    [17263]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17264]services.strongswan-swanctl.swanctl.secrets.eap.<name>.secret

    Value of the EAP/XAuth secret. It may either be an ASCII string, a hex encoded string if it
    has a 0x prefix or a Base64 encoded string if it has a 0s prefix in its value.

    Type: null or string

    Default: null

    Declared by:

    [17265]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17266]services.strongswan-swanctl.swanctl.secrets.ecdsa

    Private key decryption passphrase for a key in the ecdsa folder.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17267]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17268]services.strongswan-swanctl.swanctl.secrets.ecdsa.<name>.file

    File name in the ecdsa folder for which this passphrase should be used.

    Type: null or string

    Default: null

    Declared by:

    [17269]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17270]services.strongswan-swanctl.swanctl.secrets.ecdsa.<name>.secret

    Value of decryption passphrase for ECDSA key.

    Type: null or string

    Default: null

    Declared by:

    [17271]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17272]services.strongswan-swanctl.swanctl.secrets.ike

    IKE preshared secret section for a specific secret. Each IKE PSK is defined in a unique
    section having the ike prefix.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17273]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17274]services.strongswan-swanctl.swanctl.secrets.ike.<name>.id

    IKE identity the IKE preshared secret belongs to. Multiple unique identities may be
    specified, each having an id prefix, if a secret is shared between multiple peers.

    Type: attribute set of null or strings

    Default: { }

    Declared by:

    [17275]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17276]services.strongswan-swanctl.swanctl.secrets.ike.<name>.secret

    Value of the IKE preshared secret. It may either be an ASCII string, a hex encoded string if
    it has a 0x prefix or a Base64 encoded string if it has a 0s prefix in its value.

    Type: null or string

    Default: null

    Declared by:

    [17277]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17278]services.strongswan-swanctl.swanctl.secrets.ntlm

    NTLM secret section for a specific secret. Each NTLM secret is defined in a unique section
    having the ntlm prefix. NTLM secrets may only be used for EAP-MSCHAPv2 authentication.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17279]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17280]services.strongswan-swanctl.swanctl.secrets.ntlm.<name>.id

    Identity the NTLM secret belongs to. Multiple unique identities may be specified, each having
    an id prefix, if a secret is shared between multiple users.

    Type: attribute set of null or strings

    Default: { }

    Declared by:

    [17281]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17282]services.strongswan-swanctl.swanctl.secrets.ntlm.<name>.secret

    Value of the NTLM secret, which is the NT Hash of the actual secret, that is, MD4(UTF-16LE
    (secret)). The resulting 16-byte value may either be given as a hex encoded string with a 0x
    prefix or as a Base64 encoded string with a 0s prefix.

    Type: null or string

    Default: null

    Declared by:

    [17283]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17284]services.strongswan-swanctl.swanctl.secrets.pkcs12

    PKCS#12 decryption passphrase for a container in the pkcs12 folder.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17285]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17286]services.strongswan-swanctl.swanctl.secrets.pkcs12.<name>.file

    File name in the pkcs12 folder for which this passphrase should be used.

    Type: null or string

    Default: null

    Declared by:

    [17287]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17288]services.strongswan-swanctl.swanctl.secrets.pkcs12.<name>.secret

    Value of decryption passphrase for PKCS#12 container.

    Type: null or string

    Default: null

    Declared by:

    [17289]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17290]services.strongswan-swanctl.swanctl.secrets.pkcs8

    Private key decryption passphrase for a key in the pkcs8 folder.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17291]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17292]services.strongswan-swanctl.swanctl.secrets.pkcs8.<name>.file

    File name in the pkcs8 folder for which this passphrase should be used.

    Type: null or string

    Default: null

    Declared by:

    [17293]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17294]services.strongswan-swanctl.swanctl.secrets.pkcs8.<name>.secret

    Value of decryption passphrase for PKCS#8 key.

    Type: null or string

    Default: null

    Declared by:

    [17295]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17296]services.strongswan-swanctl.swanctl.secrets.ppk

    Postquantum Preshared Key (PPK) section for a specific secret. Each PPK is defined in a
    unique section having the ppk prefix.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17297]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17298]services.strongswan-swanctl.swanctl.secrets.ppk.<name>.id

    PPK identity the PPK belongs to. Multiple unique identities may be specified, each having an
    id prefix, if a secret is shared between multiple peers.

    Type: attribute set of null or strings

    Default: { }

    Declared by:

    [17299]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17300]services.strongswan-swanctl.swanctl.secrets.ppk.<name>.secret

    Value of the PPK. It may either be an ASCII string, a hex encoded string if it has a 0x
    prefix or a Base64 encoded string if it has a 0s prefix in its value. Should have at least
    256 bits of entropy for 128-bit security.

    Type: null or string

    Default: null

    Declared by:

    [17301]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17302]services.strongswan-swanctl.swanctl.secrets.private

    Private key decryption passphrase for a key in the private folder.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17303]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17304]services.strongswan-swanctl.swanctl.secrets.private.<name>.file

    File name in the private folder for which this passphrase should be used.

    Type: null or string

    Default: null

    Declared by:

    [17305]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17306]services.strongswan-swanctl.swanctl.secrets.private.<name>.secret

    Value of decryption passphrase for private key.

    Type: null or string

    Default: null

    Declared by:

    [17307]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17308]services.strongswan-swanctl.swanctl.secrets.rsa

    Private key decryption passphrase for a key in the rsa folder.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17309]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17310]services.strongswan-swanctl.swanctl.secrets.rsa.<name>.file

    File name in the rsa folder for which this passphrase should be used.

    Type: null or string

    Default: null

    Declared by:

    [17311]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17312]services.strongswan-swanctl.swanctl.secrets.rsa.<name>.secret

    Value of decryption passphrase for RSA key.

    Type: null or string

    Default: null

    Declared by:

    [17313]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17314]services.strongswan-swanctl.swanctl.secrets.token

    Definition for a private key that's stored on a token/smartcard/TPM.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17315]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17316]services.strongswan-swanctl.swanctl.secrets.token.<name>.handle

    Hex-encoded CKA_ID or handle of the private key on the token or TPM, respectively.

    Type: null or string

    Default: null

    Declared by:

    [17317]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17318]services.strongswan-swanctl.swanctl.secrets.token.<name>.module

    Optional PKCS#11 module name to access the token.

    Type: null or string

    Default: null

    Declared by:

    [17319]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17320]services.strongswan-swanctl.swanctl.secrets.token.<name>.pin

    Optional PIN required to access the key on the token. If none is provided the user is
    prompted during an interactive --load-creds call.

    Type: null or string

    Default: null

    Declared by:

    [17321]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17322]services.strongswan-swanctl.swanctl.secrets.token.<name>.slot

    Optional slot number to access the token.

    Type: null or signed integer

    Default: null

    Declared by:

    [17323]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17324]services.strongswan-swanctl.swanctl.secrets.xauth

    EAP secret section for a specific secret. Each EAP secret is defined in a unique section
    having the eap prefix. EAP secrets are used for XAuth authentication as well.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17325]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17326]services.strongswan-swanctl.swanctl.secrets.xauth.<name>.id

    Identity the EAP/XAuth secret belongs to. Multiple unique identities may be specified, each
    having an id prefix, if a secret is shared between multiple users.

    Type: attribute set of null or strings

    Default: { }

    Declared by:

    [17327]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17328]services.strongswan-swanctl.swanctl.secrets.xauth.<name>.secret

    Value of the EAP/XAuth secret. It may either be an ASCII string, a hex encoded string if it
    has a 0x prefix or a Base64 encoded string if it has a 0s prefix in its value.

    Type: null or string

    Default: null

    Declared by:

    [17329]<nixpkgs/nixos/modules/services/networking/strongswan-swanctl/module.nix>

[17330]services.stubby.enable

    Whether to enable Stubby DNS resolver.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17331]<nixpkgs/nixos/modules/services/networking/stubby.nix>

[17332]services.stubby.authenticationMode

    Selects the Strict or Opportunistic usage profile. For strict, set to
    GETDNS_AUTHENTICATION_REQUIRED. for opportunistic, use GETDNS_AUTHENTICATION_NONE.

    Type: one of "GETDNS_AUTHENTICATION_REQUIRED", "GETDNS_AUTHENTICATION_NONE"

    Default: "GETDNS_AUTHENTICATION_REQUIRED"

    Declared by:

    [17333]<nixpkgs/nixos/modules/services/networking/stubby.nix>

[17334]services.stubby.debugLogging

    Enable or disable debug level logging.

    Type: boolean

    Default: false

    Declared by:

    [17335]<nixpkgs/nixos/modules/services/networking/stubby.nix>

[17336]services.stubby.extraConfig

    Add additional configuration options. see stubby(1)for more options.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [17337]<nixpkgs/nixos/modules/services/networking/stubby.nix>

[17338]services.stubby.fallbackProtocols

    Ordered list composed of one or more transport protocols. Strict mode should only use
    GETDNS_TRANSPORT_TLS. Other options are GETDNS_TRANSPORT_UDP and GETDNS_TRANSPORT_TCP.

    Type: list of one of "GETDNS_TRANSPORT_TLS", "GETDNS_TRANSPORT_TCP", "GETDNS_TRANSPORT_UDP"s

    Default: [ "GETDNS_TRANSPORT_TLS" ]

    Declared by:

    [17339]<nixpkgs/nixos/modules/services/networking/stubby.nix>

[17340]services.stubby.idleTimeout

    EDNS0 option for keepalive idle timeout expressed in milliseconds.

    Type: signed integer

    Default: 10000

    Declared by:

    [17341]<nixpkgs/nixos/modules/services/networking/stubby.nix>

[17342]services.stubby.listenAddresses

    Sets the listen address for the stubby daemon. Uses port 53 by default. Ise IP@port to
    specify a different port.

    Type: list of strings

    Default: [ "127.0.0.1" "0::1" ]

    Declared by:

    [17343]<nixpkgs/nixos/modules/services/networking/stubby.nix>

[17344]services.stubby.queryPaddingBlocksize

    EDNS0 option to pad the size of the DNS query to the given blocksize.

    Type: signed integer

    Default: 128

    Declared by:

    [17345]<nixpkgs/nixos/modules/services/networking/stubby.nix>

[17346]services.stubby.roundRobinUpstreams

    Instructs stubby to distribute queries across all available name servers. Default is true.
    Set to false in order to use the first available.

    Type: boolean

    Default: true

    Declared by:

    [17347]<nixpkgs/nixos/modules/services/networking/stubby.nix>

[17348]services.stubby.subnetPrivate

    EDNS0 option for ECS client privacy. Default is true. If set, this option prevents the client
    subnet from being sent to authoritative nameservers.

    Type: boolean

    Default: true

    Declared by:

    [17349]<nixpkgs/nixos/modules/services/networking/stubby.nix>

[17350]services.stubby.upstreamServers

    Replace default upstreams. See stubby (1) for an example of the entry formatting. In Strict
    mode, at least one of the following settings must be supplied for each nameserver:
    tls_auth_name or tls_pubkey_pinset.

    Type: strings concatenated with "\n"

    Default:

    ''
    - address_data: 145.100.185.15
      tls_auth_name: "dnsovertls.sinodun.com"
      tls_pubkey_pinset:
        - digest: "sha256"
          value: 62lKu9HsDVbyiPenApnc4sfmSYTHOVfFgL3pyB+cBL4=
    - address_data: 145.100.185.16
      tls_auth_name: "dnsovertls1.sinodun.com"
      tls_pubkey_pinset:
        - digest: "sha256"
          value: cE2ecALeE5B+urJhDrJlVFmf38cJLAvqekONvjvpqUA=
    - address_data: 185.49.141.37
      tls_auth_name: "getdnsapi.net"
      tls_pubkey_pinset:
        - digest: "sha256"
          value: foxZRnIh9gZpWnl+zEiKa0EJ2rdCGroMWm02gaxSc9Q=
    - address_data: 2001:610:1:40ba:145:100:185:15
      tls_auth_name: "dnsovertls.sinodun.com"
      tls_pubkey_pinset:
        - digest: "sha256"
          value: 62lKu9HsDVbyiPenApnc4sfmSYTHOVfFgL3pyB+cBL4=
    - address_data: 2001:610:1:40ba:145:100:185:16
      tls_auth_name: "dnsovertls1.sinodun.com"
      tls_pubkey_pinset:
        - digest: "sha256"
          value: cE2ecALeE5B+urJhDrJlVFmf38cJLAvqekONvjvpqUA=
    - address_data: 2a04:b900:0:100::38
      tls_auth_name: "getdnsapi.net"
      tls_pubkey_pinset:
        - digest: "sha256"
          value: foxZRnIh9gZpWnl+zEiKa0EJ2rdCGroMWm02gaxSc9Q=
    ''

    Declared by:

    [17351]<nixpkgs/nixos/modules/services/networking/stubby.nix>

[17352]services.stunnel.enable

    Whether to enable the stunnel TLS tunneling service.

    Type: boolean

    Default: false

    Declared by:

    [17353]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17354]services.stunnel.enableInsecureSSLv3

    Enable support for the insecure SSLv3 protocol.

    Type: boolean

    Default: false

    Declared by:

    [17355]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17356]services.stunnel.clients

    Define the client configurations.

    Type: attribute set of submodules

    Default: { }

    Example: { foobar = { accept = "0.0.0.0:8080"; connect = "nixos.org:443"; verifyChain =
    false; } ; }

    Declared by:

    [17357]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17358]services.stunnel.clients.<name>.CAFile

    Path to a file containing certificates to validate against.

    Type: null or path

    Default: "\${pkgs.cacert}/etc/ssl/certs/ca-bundle.crt"

    Declared by:

    [17359]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17360]services.stunnel.clients.<name>.CAPath

    Path to a directory containing certificates to validate against.

    Type: null or path

    Default: null

    Declared by:

    [17361]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17362]services.stunnel.clients.<name>.accept

    IP:Port on which connections should be accepted.

    Type: string

    Declared by:

    [17363]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17364]services.stunnel.clients.<name>.connect

    IP:Port destination to connect to.

    Type: string

    Declared by:

    [17365]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17366]services.stunnel.clients.<name>.verifyChain

    Check if the provided certificate has a valid certificate chain (against CAPath).

    Type: boolean

    Default: true

    Declared by:

    [17367]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17368]services.stunnel.clients.<name>.verifyHostname

    If set, stunnel checks if the provided certificate is valid for the given hostname.

    Type: null or string

    Default: null

    Declared by:

    [17369]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17370]services.stunnel.clients.<name>.verifyPeer

    Check if the provided certificate is contained in CAPath.

    Type: boolean

    Default: false

    Declared by:

    [17371]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17372]services.stunnel.fipsMode

    Enable FIPS 140-2 mode required for compliance.

    Type: boolean

    Default: false

    Declared by:

    [17373]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17374]services.stunnel.group

    The group under which stunnel runs.

    Type: null or string

    Default: "nogroup"

    Declared by:

    [17375]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17376]services.stunnel.logLevel

    Verbosity of stunnel output.

    Type: one of "emerg", "alert", "crit", "err", "warning", "notice", "info", "debug"

    Default: "info"

    Declared by:

    [17377]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17378]services.stunnel.servers

    Define the server configuations.

    Type: attribute set of submodules

    Default: { }

    Example: { fancyWebserver = { accept = 443; cert = "/path/to/pem/file"; connect = 8080; } ; }

    Declared by:

    [17379]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17380]services.stunnel.servers.<name>.accept

    On which [host:]port stunnel should listen for incoming TLS connections. Note that unlike
    other softwares stunnel ipv6 address need no brackets, so to listen on all IPv6 addresses on
    port 1234 one would use ':::1234'.

    Type: string or signed integer

    Declared by:

    [17381]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17382]services.stunnel.servers.<name>.cert

    File containing both the private and public keys.

    Type: path

    Declared by:

    [17383]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17384]services.stunnel.servers.<name>.connect

    To which port the decrypted connection should be forwarded.

    Type: signed integer

    Declared by:

    [17385]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17386]services.stunnel.user

    The user under which stunnel runs.

    Type: null or string

    Default: "nobody"

    Declared by:

    [17387]<nixpkgs/nixos/modules/services/networking/stunnel.nix>

[17388]services.subsonic.enable

    Whether to enable Subsonic daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17389]<nixpkgs/nixos/modules/services/misc/subsonic.nix>

[17390]services.subsonic.contextPath

    The context path, i.e., the last part of the Subsonic URL. Typically '/' or '/subsonic'.
    Default '/'

    Type: path

    Default: "/"

    Declared by:

    [17391]<nixpkgs/nixos/modules/services/misc/subsonic.nix>

[17392]services.subsonic.defaultMusicFolder

    Configure Subsonic to use this folder for music. This option only has effect the first time
    Subsonic is started.

    Type: path

    Default: "/var/music"

    Declared by:

    [17393]<nixpkgs/nixos/modules/services/misc/subsonic.nix>

[17394]services.subsonic.defaultPlaylistFolder

    Configure Subsonic to use this folder for playlists. This option only has effect the first
    time Subsonic is started.

    Type: path

    Default: "/var/playlists"

    Declared by:

    [17395]<nixpkgs/nixos/modules/services/misc/subsonic.nix>

[17396]services.subsonic.defaultPodcastFolder

    Configure Subsonic to use this folder for Podcasts. This option only has effect the first
    time Subsonic is started.

    Type: path

    Default: "/var/music/Podcast"

    Declared by:

    [17397]<nixpkgs/nixos/modules/services/misc/subsonic.nix>

[17398]services.subsonic.home

    The directory where Subsonic will create files. Make sure it is writable.

    Type: path

    Default: "/var/lib/subsonic"

    Declared by:

    [17399]<nixpkgs/nixos/modules/services/misc/subsonic.nix>

[17400]services.subsonic.httpsPort

    The port on which Subsonic will listen for incoming HTTPS traffic. Set to 0 to disable.

    Type: signed integer

    Default: 0

    Declared by:

    [17401]<nixpkgs/nixos/modules/services/misc/subsonic.nix>

[17402]services.subsonic.listenAddress

    The host name or IP address on which to bind Subsonic. Only relevant if you have multiple
    network interfaces and want to make Subsonic available on only one of them. The default value
    will bind Subsonic to all available network interfaces.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [17403]<nixpkgs/nixos/modules/services/misc/subsonic.nix>

[17404]services.subsonic.maxMemory

    The memory limit (max Java heap size) in megabytes. Default: 100

    Type: signed integer

    Default: 100

    Declared by:

    [17405]<nixpkgs/nixos/modules/services/misc/subsonic.nix>

[17406]services.subsonic.port

    The port on which Subsonic will listen for incoming HTTP traffic. Set to 0 to disable.

    Type: signed integer

    Default: 4040

    Declared by:

    [17407]<nixpkgs/nixos/modules/services/misc/subsonic.nix>

[17408]services.subsonic.transcoders

    List of paths to transcoder executables that should be accessible from Subsonic. Symlinks
    will be created to each executable inside /var/lib/subsonic/transcoders.

    Type: list of paths

    Default: [ "\${pkgs.ffmpeg.bin}/bin/ffmpeg" ]

    Declared by:

    [17409]<nixpkgs/nixos/modules/services/misc/subsonic.nix>

[17410]services.sundtek.enable

    Whether to enable Sundtek driver.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17411]<nixpkgs/nixos/modules/services/misc/sundtek.nix>

[17412]services.supybot.enable

    Enable Supybot, an IRC bot (also known as Limnoria).

    Type: boolean

    Default: false

    Declared by:

    [17413]<nixpkgs/nixos/modules/services/networking/supybot.nix>

[17414]services.supybot.configFile

    Path to initial supybot config file. This can be generated by running supybot-wizard.

    Note: all paths should include the full path to the stateDir directory (backup conf data logs
    logs/plugins plugins tmp web).

    Type: path

    Declared by:

    [17415]<nixpkgs/nixos/modules/services/networking/supybot.nix>

[17416]services.supybot.extraPackages

    Extra Python packages available to supybot plugins. The value must be a function which
    receives the attrset defined in python3Packages as the sole argument.

    Type: function that evaluates to a(n) listOf

    Default: "<function>"

    Example:

    p: [ p.lxml p.requests ]

    Declared by:

    [17417]<nixpkgs/nixos/modules/services/networking/supybot.nix>

[17418]services.supybot.plugins

    Attribute set of additional plugins that will be symlinked to the plugin subdirectory.

    Please note that you still need to add the plugins to the config file (or with !load) using
    their attribute name.

    Type: attribute set of paths

    Default: { }

    Example:

    let
      plugins = pkgs.fetchzip {
        url = "https://github.com/ProgVal/Supybot-plugins/archive/57c2450c.zip";
        sha256 = "077snf84ibnva3sbpzdfpfma6hcdw7dflwnhg6pw7mgnf0nd84qd";
      };
    in
    {
      Wikipedia = "${plugins}/Wikipedia";
      Decide = ./supy-decide;
    }

    Declared by:

    [17419]<nixpkgs/nixos/modules/services/networking/supybot.nix>

[17420]services.supybot.stateDir

    The root directory, logs and plugins are stored here

    Type: path

    Default: "/var/lib/supybot"

    Declared by:

    [17421]<nixpkgs/nixos/modules/services/networking/supybot.nix>

[17422]services.svnserve.enable

    Whether to enable svnserve to serve Subversion repositories through the SVN protocol.

    Type: boolean

    Default: false

    Declared by:

    [17423]<nixpkgs/nixos/modules/services/misc/svnserve.nix>

[17424]services.svnserve.svnBaseDir

    Base directory from which Subversion repositories are accessed.

    Type: string

    Default: "/repos"

    Declared by:

    [17425]<nixpkgs/nixos/modules/services/misc/svnserve.nix>

[17426]services.switcherooControl.enable

    Whether to enable switcheroo-control, a D-Bus service to check the availability of dual-GPU.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17427]<nixpkgs/nixos/modules/hardware/video/switcheroo-control.nix>

[17428]services.sympa.enable

    Whether to enable Sympa mailing list manager.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17429]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17430]services.sympa.database.createLocally

    Whether to create a local database automatically.

    Type: boolean

    Default: true

    Declared by:

    [17431]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17432]services.sympa.database.host

    Database host address.

    For MySQL, use localhost to connect using Unix domain socket.

    For PostgreSQL, use path to directory (e.g. /run/postgresql) to connect using Unix domain
    socket located in this directory.

    Use null to fall back on Sympa default, or when using services.sympa.database.createLocally.

    Type: null or string

    Default: null

    Declared by:

    [17433]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17434]services.sympa.database.name

    Database name. When using SQLite this must be an absolute path to the database file.

    Type: string

    Default: ''if database.type == "SQLite" then "/var/lib/sympa/sympa.sqlite" else "sympa"''

    Declared by:

    [17435]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17436]services.sympa.database.passwordFile

    A file containing the password for services.sympa.database.user.

    Type: null or path

    Default: null

    Example: "/run/keys/sympa-dbpassword"

    Declared by:

    [17437]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17438]services.sympa.database.port

    Database port. Use null for default port.

    Type: null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: null

    Declared by:

    [17439]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17440]services.sympa.database.type

    Database engine to use.

    Type: one of "SQLite", "PostgreSQL", "MySQL"

    Default: "SQLite"

    Example: "MySQL"

    Declared by:

    [17441]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17442]services.sympa.database.user

    Database user. The system user name is used as a default.

    Type: null or string

    Default: "sympa"

    Declared by:

    [17443]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17444]services.sympa.domains

    Email domains handled by this instance. There have to be MX records for keys of this
    attribute set.

    Type: attribute set of submodules

    Example:

    {
      "lists.example.org" = {
        webHost = "lists.example.org";
        webLocation = "/";
      };
      "sympa.example.com" = {
        webHost = "example.com";
        webLocation = "/sympa";
      };
    }

    Declared by:

    [17445]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17446]services.sympa.domains.<name>.settings

    The robot.conf configuration file as key value set. See [17447]https://
    sympa-community.github.io/gpldoc/man/sympa.conf.5.html for list of configuration parameters.

    Type: attribute set of string or signed integer or booleans

    Default: { }

    Example: { default_max_list_members = 3; }

    Declared by:

    [17448]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17449]services.sympa.domains.<name>.webHost

    Domain part of the web interface URL (no web interface for this domain if null). DNS record
    of type A (or AAAA or CNAME) has to exist with this value.

    Type: null or string

    Default: null

    Example: "archive.example.org"

    Declared by:

    [17450]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17451]services.sympa.domains.<name>.webLocation

    URL path part of the web interface.

    Type: string

    Default: "/"

    Example: "/sympa"

    Declared by:

    [17452]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17453]services.sympa.lang

    Default Sympa language. See [17454]https://github.com/sympa-community/sympa/tree/sympa-6.2/po
    /sympa for available options.

    Type: string

    Default: "en_US"

    Example: "cs"

    Declared by:

    [17455]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17456]services.sympa.listMasters

    The list of the email addresses of the listmasters (users authorized to perform global server
    commands).

    Type: list of strings

    Example: [ "postmaster@sympa.example.org" ]

    Declared by:

    [17457]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17458]services.sympa.mainDomain

    Main domain to be used in sympa.conf. If null, one of the services.sympa.domains is chosen
    for you.

    Type: null or string

    Default: null

    Example: "lists.example.org"

    Declared by:

    [17459]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17460]services.sympa.mta.type

    Mail transfer agent (MTA) integration. Use none if you want to configure it yourself.

    The postfix integration sets up local Postfix instance that will pass incoming messages from
    configured domains to Sympa. You still need to configure at least outgoing message handling
    using e.g. services.postfix.relayHost.

    Type: one of "postfix", "none"

    Default: "postfix"

    Declared by:

    [17461]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17462]services.sympa.settings

    The sympa.conf configuration file as key value set. See [17463]https://
    sympa-community.github.io/gpldoc/man/sympa.conf.5.html for list of configuration parameters.

    Type: attribute set of string or signed integer or booleans

    Default: { }

    Example:

    {
      default_home = "lists";
      viewlogs_page_size = 50;
    }

    Declared by:

    [17464]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17465]services.sympa.settingsFile

    Set of files to be linked in /var/lib/sympa.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "list_data/lists.example.org/help" = {
        text = "subject This list provides help to users";
      };
    }

    Declared by:

    [17466]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17467]services.sympa.settingsFile.<name>.enable

    Whether this file should be generated. This option allows specific files to be disabled.

    Type: boolean

    Default: true

    Declared by:

    [17468]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17469]services.sympa.settingsFile.<name>.source

    Path of the source file.

    Type: path

    Declared by:

    [17470]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17471]services.sympa.settingsFile.<name>.text

    Text of the file.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [17472]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17473]services.sympa.web.enable

    Whether to enable Sympa web interface.

    Type: boolean

    Default: true

    Declared by:

    [17474]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17475]services.sympa.web.fcgiProcs

    Number of FastCGI processes to fork.

    Type: positive integer, meaning >0

    Default: 2

    Declared by:

    [17476]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17477]services.sympa.web.https

    Whether to use HTTPS. When nginx integration is enabled, this option forces SSL and enables
    ACME. Please note that Sympa web interface always uses https links even when this option is
    disabled.

    Type: boolean

    Default: true

    Declared by:

    [17478]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17479]services.sympa.web.server

    The webserver used for the Sympa web interface. Set it to `none` if you want to configure it
    yourself. Further nginx configuration can be done by adapting services.nginx.virtualHosts.
    name.

    Type: one of "nginx", "none"

    Default: "nginx"

    Declared by:

    [17480]<nixpkgs/nixos/modules/services/mail/sympa.nix>

[17481]services.syncoid.enable

    Whether to enable Syncoid ZFS synchronization service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17482]<nixpkgs/nixos/modules/services/backup/syncoid.nix>

[17483]services.syncoid.commands

    Syncoid commands to run.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "pool/test".target = "root@target:pool/test";
    }

    Declared by:

    [17484]<nixpkgs/nixos/modules/services/backup/syncoid.nix>

[17485]services.syncoid.commands.<name>.extraArgs

    Extra syncoid arguments for this command.

    Type: list of strings

    Default: [ ]

    Example: [ "--sshport 2222" ]

    Declared by:

    [17486]<nixpkgs/nixos/modules/services/backup/syncoid.nix>

[17487]services.syncoid.commands.<name>.recursive

    Whether to also transfer child datasets.

    Type: boolean

    Default: false

    Declared by:

    [17488]<nixpkgs/nixos/modules/services/backup/syncoid.nix>

[17489]services.syncoid.commands.<name>.recvOptions

    Advanced options to pass to zfs recv. Options are specified without their leading dashes and
    separated by spaces.

    Type: strings concatenated with " "

    Default: ""

    Example: "ux recordsize o compression=lz4"

    Declared by:

    [17490]<nixpkgs/nixos/modules/services/backup/syncoid.nix>

[17491]services.syncoid.commands.<name>.sendOptions

    Advanced options to pass to zfs send. Options are specified without their leading dashes and
    separated by spaces.

    Type: strings concatenated with " "

    Default: ""

    Example: "Lc e"

    Declared by:

    [17492]<nixpkgs/nixos/modules/services/backup/syncoid.nix>

[17493]services.syncoid.commands.<name>.source

    Source ZFS dataset. Can be either local or remote. Defaults to the attribute name.

    Type: string

    Example: "pool/dataset"

    Declared by:

    [17494]<nixpkgs/nixos/modules/services/backup/syncoid.nix>

[17495]services.syncoid.commands.<name>.sshKey

    SSH private key file to use to login to the remote system. Defaults to
    services.syncoid.sshKey option.

    Type: null or path

    Declared by:

    [17496]<nixpkgs/nixos/modules/services/backup/syncoid.nix>

[17497]services.syncoid.commands.<name>.target

    Target ZFS dataset. Can be either local (pool/dataset) or remote (user@server:pool/dataset).

    Type: string

    Example: "user@server:pool/dataset"

    Declared by:

    [17498]<nixpkgs/nixos/modules/services/backup/syncoid.nix>

[17499]services.syncoid.commands.<name>.useCommonArgs

    Whether to add the configured common arguments to this command.

    Type: boolean

    Default: true

    Declared by:

    [17500]<nixpkgs/nixos/modules/services/backup/syncoid.nix>

[17501]services.syncoid.commonArgs

    Arguments to add to every syncoid command, unless disabled for that command. See [17502]
    https://github.com/jimsalterjrs/sanoid/#syncoid-command-line-options for available options.

    Type: list of strings

    Default: [ ]

    Example: [ "--no-sync-snap" ]

    Declared by:

    [17503]<nixpkgs/nixos/modules/services/backup/syncoid.nix>

[17504]services.syncoid.group

    The group for the service.

    Type: string

    Default: "syncoid"

    Example: "backup"

    Declared by:

    [17505]<nixpkgs/nixos/modules/services/backup/syncoid.nix>

[17506]services.syncoid.interval

    Run syncoid at this interval. The default is to run hourly.

    The format is described in systemd.time(7).

    Type: string

    Default: "hourly"

    Example: "*-*-* *:15:00"

    Declared by:

    [17507]<nixpkgs/nixos/modules/services/backup/syncoid.nix>

[17508]services.syncoid.sshKey

    SSH private key file to use to login to the remote system. Can be overridden in individual
    commands.

    Type: null or path

    Default: null

    Declared by:

    [17509]<nixpkgs/nixos/modules/services/backup/syncoid.nix>

[17510]services.syncoid.user

    The user for the service. ZFS privilege delegation will be automatically configured for any
    local pools used by syncoid if this option is set to a user other than root. The user will be
    given the "hold" and "send" privileges on any pool that has datasets being sent and the
    "create", "mount", "receive", and "rollback" privileges on any pool that has datasets being
    received.

    Type: string

    Default: "syncoid"

    Example: "backup"

    Declared by:

    [17511]<nixpkgs/nixos/modules/services/backup/syncoid.nix>

[17512]services.syncplay.enable

    If enabled, start the Syncplay server.

    Type: boolean

    Default: false

    Declared by:

    [17513]<nixpkgs/nixos/modules/services/networking/syncplay.nix>

[17514]services.syncplay.certDir

    TLS certificates directory to use for encryption. See [17515]https://github.com/Syncplay/
    syncplay/wiki/TLS-support.

    Type: null or path

    Default: null

    Declared by:

    [17516]<nixpkgs/nixos/modules/services/networking/syncplay.nix>

[17517]services.syncplay.group

    Group to use when running Syncplay.

    Type: string

    Default: "nogroup"

    Declared by:

    [17518]<nixpkgs/nixos/modules/services/networking/syncplay.nix>

[17519]services.syncplay.port

    TCP port to bind to.

    Type: signed integer

    Default: 8999

    Declared by:

    [17520]<nixpkgs/nixos/modules/services/networking/syncplay.nix>

[17521]services.syncplay.salt

    Salt to allow room operator passwords generated by this server instance to still work when
    the server is restarted.

    Type: null or string

    Default: null

    Declared by:

    [17522]<nixpkgs/nixos/modules/services/networking/syncplay.nix>

[17523]services.syncplay.user

    User to use when running Syncplay.

    Type: string

    Default: "nobody"

    Declared by:

    [17524]<nixpkgs/nixos/modules/services/networking/syncplay.nix>

[17525]services.syncthing.enable

    Whether to enable Syncthing - the self-hosted open-source alternative to Dropbox and
    Bittorrent Sync. Initial interface will be available on http://127.0.0.1:8384/. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17526]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17527]services.syncthing.package

    Syncthing package to use.

    Type: package

    Default: "pkgs.syncthing"

    Example:

    pkgs.syncthing

    Declared by:

    [17528]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17529]services.syncthing.all_proxy

    Overwrites all_proxy environment variable for the syncthing process to the given value. This
    is normaly used to let relay client connect through SOCKS5 proxy server.

    Type: null or string

    Default: null

    Example: "socks5://address.com:1234"

    Declared by:

    [17530]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17531]services.syncthing.configDir

    Path where the settings and keys will exist.

    Type: path

    Default: "/var/lib/syncthing/.config/syncthing"

    Declared by:

    [17532]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17533]services.syncthing.dataDir

    Path where synced directories will exist.

    Type: path

    Default: "/var/lib/syncthing"

    Declared by:

    [17534]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17535]services.syncthing.declarative.cert

    Path to users cert.pem file, will be copied into the syncthing's configDir

    Type: null or string

    Default: null

    Declared by:

    [17536]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17537]services.syncthing.declarative.devices

    Peers/devices which syncthing should communicate with.

    Type: attribute set of submodules

    Default: { }

    Example: { bigbox = { addresses = [ "tcp://192.168.0.10:51820" ] ; id =
    "7CFNTQM-IMTJBHJ-3UWRDIU-ZGQJFR6-VCXZ3NB-XUH3KZO-N52ITXR-LAIYUAU"; } ; }

    Declared by:

    [17538]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17539]services.syncthing.declarative.devices.<name>.addresses

    The addresses used to connect to the device. If this is let empty, dynamic configuration is
    attempted

    Type: list of strings

    Default: [ ]

    Declared by:

    [17540]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17541]services.syncthing.declarative.devices.<name>.id

    The id of the other peer, this is mandatory. It's documented at https://docs.syncthing.net/
    dev/device-ids.html

    Type: string

    Declared by:

    [17542]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17543]services.syncthing.declarative.devices.<name>.introducer

    If the device should act as an introducer and be allowed to add folders on this computer.

    Type: boolean

    Default: false

    Declared by:

    [17544]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17545]services.syncthing.declarative.devices.<name>.name

    Name of the device

    Type: string

    Default: "‹name›"

    Declared by:

    [17546]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17547]services.syncthing.declarative.folders

    folders which should be shared by syncthing.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "/home/user/sync" = {
        id = "syncme";
        devices = [ "bigbox" ];
      };
    }

    Declared by:

    [17548]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17549]services.syncthing.declarative.folders.<name>.enable

    share this folder. This option is useful when you want to define all folders in one place,
    but not every machine should share all folders.

    Type: boolean

    Default: true

    Declared by:

    [17550]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17551]services.syncthing.declarative.folders.<name>.devices

    The devices this folder should be shared with. Must be defined in the declarative.devices
    attribute.

    Type: list of strings

    Default: [ ]

    Declared by:

    [17552]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17553]services.syncthing.declarative.folders.<name>.id

    The id of the folder. Must be the same on all devices.

    Type: string

    Default: "‹name›"

    Declared by:

    [17554]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17555]services.syncthing.declarative.folders.<name>.ignoreDelete

    Whether to delete files in destination. See [17556] upstream's docs.

    Type: boolean

    Default: false

    Declared by:

    [17557]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17558]services.syncthing.declarative.folders.<name>.ignorePerms

    Whether to propagate permission changes.

    Type: boolean

    Default: true

    Declared by:

    [17559]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17560]services.syncthing.declarative.folders.<name>.label

    The label of the folder.

    Type: string

    Default: "‹name›"

    Declared by:

    [17561]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17562]services.syncthing.declarative.folders.<name>.path

    The path to the folder which should be shared.

    Type: string

    Default: "‹name›"

    Declared by:

    [17563]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17564]services.syncthing.declarative.folders.<name>.rescanInterval

    How often the folders should be rescaned for changes.

    Type: signed integer

    Default: 3600

    Declared by:

    [17565]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17566]services.syncthing.declarative.folders.<name>.type

    Whether to send only changes from this folder, only receive them or propagate both.

    Type: one of "sendreceive", "sendonly", "receiveonly"

    Default: "sendreceive"

    Declared by:

    [17567]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17568]services.syncthing.declarative.folders.<name>.versioning

    How to keep changed/deleted files with syncthing. There are 4 different types of versioning
    with different parameters. See https://docs.syncthing.net/users/versioning.html

    Type: null or submodule

    Default: null

    Example: [ { versioning = { params = { keep = "10"; } ; type = "simple"; } ; } { versioning =
    { params = { cleanoutDays = "1000"; } ; type = "trashcan"; } ; } { versioning = { params = {
    cleanInterval = "3600"; maxAge = "31536000"; versionsPath = "/syncthing/backup"; } ; type =
    "staggered"; } ; } { versioning = { params = { versionsPath = (build of backup); } ; type =
    "external"; } ; } ]

    Declared by:

    [17569]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17570]services.syncthing.declarative.folders.<name>.versioning.params

    Parameters for versioning. Structure depends on versioning.type. See https://
    docs.syncthing.net/users/versioning.html

    Type: attribute set of string or paths

    Declared by:

    [17571]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17572]services.syncthing.declarative.folders.<name>.versioning.type

    Type of versioning. See https://docs.syncthing.net/users/versioning.html

    Type: one of "external", "simple", "staggered", "trashcan"

    Declared by:

    [17573]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17574]services.syncthing.declarative.folders.<name>.watch

    Whether the folder should be watched for changes by inotify.

    Type: boolean

    Default: true

    Declared by:

    [17575]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17576]services.syncthing.declarative.folders.<name>.watchDelay

    The delay after an inotify event is triggered.

    Type: signed integer

    Default: 10

    Declared by:

    [17577]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17578]services.syncthing.declarative.key

    Path to users key.pem file, will be copied into the syncthing's configDir

    Type: null or string

    Default: null

    Declared by:

    [17579]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17580]services.syncthing.declarative.overrideDevices

    Whether to delete the devices which are not configured via the declarative.devices option. If
    set to false, devices added via the webinterface will persist but will have to be deleted
    manually.

    Type: boolean

    Default: true

    Declared by:

    [17581]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17582]services.syncthing.declarative.overrideFolders

    Whether to delete the folders which are not configured via the declarative.folders option. If
    set to false, folders added via the webinterface will persist but will have to be deleted
    manually.

    Type: boolean

    Default: true

    Declared by:

    [17583]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17584]services.syncthing.group

    Syncthing will be run under this group (group will not be created if it doesn't exist. This
    can be your user name).

    Type: string

    Default: "syncthing"

    Declared by:

    [17585]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17586]services.syncthing.guiAddress

    Address to serve the GUI.

    Type: string

    Default: "127.0.0.1:8384"

    Declared by:

    [17587]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17588]services.syncthing.openDefaultPorts

    Open the default ports in the firewall: - TCP 22000 for transfers - UDP 21027 for discovery
    If multiple users are running syncthing on this machine, you will need to manually open a set
    of ports for each instance and leave this disabled. Alternatively, if are running only a
    single instance on this machine using the default ports, enable this.

    Type: boolean

    Default: false

    Example:

    true

    Declared by:

    [17589]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17590]services.syncthing.relay.enable

    Whether to enable Syncthing relay service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17591]<nixpkgs/nixos/modules/services/networking/syncthing-relay.nix>

[17592]services.syncthing.relay.extraOptions

    Extra command line arguments to pass to strelaysrv.

    Type: list of strings

    Default: [ ]

    Declared by:

    [17593]<nixpkgs/nixos/modules/services/networking/syncthing-relay.nix>

[17594]services.syncthing.relay.globalRateBps

    Global bandwidth rate limit in bytes per second.

    Type: null or positive integer, meaning >0

    Default: null

    Declared by:

    [17595]<nixpkgs/nixos/modules/services/networking/syncthing-relay.nix>

[17596]services.syncthing.relay.listenAddress

    Address to listen on for relay traffic.

    Type: string

    Default: ""

    Example: "1.2.3.4"

    Declared by:

    [17597]<nixpkgs/nixos/modules/services/networking/syncthing-relay.nix>

[17598]services.syncthing.relay.perSessionRateBps

    Per session bandwidth rate limit in bytes per second.

    Type: null or positive integer, meaning >0

    Default: null

    Declared by:

    [17599]<nixpkgs/nixos/modules/services/networking/syncthing-relay.nix>

[17600]services.syncthing.relay.pools

    Relay pools to join. If null, uses the default global pool.

    Type: null or list of strings

    Default: null

    Declared by:

    [17601]<nixpkgs/nixos/modules/services/networking/syncthing-relay.nix>

[17602]services.syncthing.relay.port

    Port to listen on for relay traffic. This port should be added to
    networking.firewall.allowedTCPPorts.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 22067

    Declared by:

    [17603]<nixpkgs/nixos/modules/services/networking/syncthing-relay.nix>

[17604]services.syncthing.relay.providedBy

    Human-readable description of the provider of the relay (you).

    Type: string

    Default: ""

    Declared by:

    [17605]<nixpkgs/nixos/modules/services/networking/syncthing-relay.nix>

[17606]services.syncthing.relay.statusListenAddress

    Address to listen on for serving the relay status API.

    Type: string

    Default: ""

    Example: "1.2.3.4"

    Declared by:

    [17607]<nixpkgs/nixos/modules/services/networking/syncthing-relay.nix>

[17608]services.syncthing.relay.statusPort

    Port to listen on for serving the relay status API. This port should be added to
    networking.firewall.allowedTCPPorts.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 22070

    Declared by:

    [17609]<nixpkgs/nixos/modules/services/networking/syncthing-relay.nix>

[17610]services.syncthing.systemService

    Auto launch Syncthing as a system service.

    Type: boolean

    Default: true

    Declared by:

    [17611]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17612]services.syncthing.user

    Syncthing will be run under this user (user will be created if it doesn't exist. This can be
    your user name).

    Type: string

    Default: "syncthing"

    Declared by:

    [17613]<nixpkgs/nixos/modules/services/networking/syncthing.nix>

[17614]services.synergy.client.enable

    Whether to enable the Synergy client (receive keyboard and mouse events from a Synergy
    server).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17615]<nixpkgs/nixos/modules/services/misc/synergy.nix>

[17616]services.synergy.client.autoStart

    Whether the Synergy client should be started automatically.

    Type: boolean

    Default: true

    Declared by:

    [17617]<nixpkgs/nixos/modules/services/misc/synergy.nix>

[17618]services.synergy.client.screenName

    Use the given name instead of the hostname to identify ourselves to the server.

    Type: string

    Default: ""

    Declared by:

    [17619]<nixpkgs/nixos/modules/services/misc/synergy.nix>

[17620]services.synergy.client.serverAddress

    The server address is of the form: [hostname][:port]. The hostname must be the address or
    hostname of the server. The port overrides the default port, 24800.

    Type: string

    Declared by:

    [17621]<nixpkgs/nixos/modules/services/misc/synergy.nix>

[17622]services.synergy.server.enable

    Whether to enable the Synergy server (send keyboard and mouse events).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17623]<nixpkgs/nixos/modules/services/misc/synergy.nix>

[17624]services.synergy.server.address

    Address on which to listen for clients.

    Type: string

    Default: ""

    Declared by:

    [17625]<nixpkgs/nixos/modules/services/misc/synergy.nix>

[17626]services.synergy.server.autoStart

    Whether the Synergy server should be started automatically.

    Type: boolean

    Default: true

    Declared by:

    [17627]<nixpkgs/nixos/modules/services/misc/synergy.nix>

[17628]services.synergy.server.configFile

    The Synergy server configuration file.

    Type: path

    Default: "/etc/synergy-server.conf"

    Declared by:

    [17629]<nixpkgs/nixos/modules/services/misc/synergy.nix>

[17630]services.synergy.server.screenName

    Use the given name instead of the hostname to identify this screen in the configuration.

    Type: string

    Default: ""

    Declared by:

    [17631]<nixpkgs/nixos/modules/services/misc/synergy.nix>

[17632]services.syslog-ng.enable

    Whether to enable the syslog-ng daemon.

    Type: boolean

    Default: false

    Declared by:

    [17633]<nixpkgs/nixos/modules/services/logging/syslog-ng.nix>

[17634]services.syslog-ng.package

    The package providing syslog-ng binaries.

    Type: package

    Default: "pkgs.syslogng"

    Declared by:

    [17635]<nixpkgs/nixos/modules/services/logging/syslog-ng.nix>

[17636]services.syslog-ng.configHeader

    The very first lines of the configuration file. Should usually contain the syslog-ng version
    header.

    Type: strings concatenated with "\n"

    Default:

    ''
    @version: 3.6
    @include "scl.conf"
    ''

    Declared by:

    [17637]<nixpkgs/nixos/modules/services/logging/syslog-ng.nix>

[17638]services.syslog-ng.extraConfig

    Configuration added to the end of syslog-ng.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [17639]<nixpkgs/nixos/modules/services/logging/syslog-ng.nix>

[17640]services.syslog-ng.extraModulePaths

    A list of paths that should be included in syslog-ng's --module-path option. They should
    usually end in /lib/syslog-ng

    Type: list of strings

    Default: [ ]

    Example:

    [ "${pkgs.syslogng_incubator}/lib/syslog-ng" ]

    Declared by:

    [17641]<nixpkgs/nixos/modules/services/logging/syslog-ng.nix>

[17642]services.syslogd.enable

    Whether to enable syslogd. Note that systemd also logs syslog messages, so you normally don't
    need to run syslogd.

    Type: boolean

    Default: false

    Declared by:

    [17643]<nixpkgs/nixos/modules/services/logging/syslogd.nix>

[17644]services.syslogd.enableNetworkInput

    Accept logging through UDP. Option -r of syslogd(8).

    Type: boolean

    Default: false

    Declared by:

    [17645]<nixpkgs/nixos/modules/services/logging/syslogd.nix>

[17646]services.syslogd.defaultConfig

    The default syslog.conf file configures a fairly standard setup of log files, which can be
    extended by means of extraConfig.

    Type: strings concatenated with "\n"

    Default:

    ''
    # Send emergency messages to all users.
    *.emerg                       *

    # "local1" is used for dhcpd messages.
    local1.*                     -/var/log/dhcpd

    mail.*                       -/var/log/mail

    *.=warning;*.=err            -/var/log/warn
    *.crit                        /var/log/warn

    *.*;mail.none;local1.none    -/var/log/messages
    ''

    Declared by:

    [17647]<nixpkgs/nixos/modules/services/logging/syslogd.nix>

[17648]services.syslogd.extraConfig

    Additional text appended to syslog.conf, i.e. the contents of defaultConfig.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "news.* -/var/log/news"

    Declared by:

    [17649]<nixpkgs/nixos/modules/services/logging/syslogd.nix>

[17650]services.syslogd.extraParams

    Additional parameters passed to syslogd.

    Type: list of strings

    Default: [ ]

    Example: [ "-m 0" ]

    Declared by:

    [17651]<nixpkgs/nixos/modules/services/logging/syslogd.nix>

[17652]services.syslogd.tty

    The tty device on which syslogd will print important log messages. Leave this option blank to
    disable tty logging.

    Type: string

    Default: "tty10"

    Declared by:

    [17653]<nixpkgs/nixos/modules/services/logging/syslogd.nix>

[17654]services.sysprof.enable

    Whether to enable sysprof profiling daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17655]<nixpkgs/nixos/modules/services/misc/sysprof.nix>

[17656]services.sysstat.enable

    Whether to enable sar system activity collection.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17657]<nixpkgs/nixos/modules/services/monitoring/sysstat.nix>

[17658]services.sysstat.collect-args

    Arguments to pass sa1 when collecting statistics

    Type: string

    Default: "1 1"

    Declared by:

    [17659]<nixpkgs/nixos/modules/services/monitoring/sysstat.nix>

[17660]services.sysstat.collect-frequency

    OnCalendar specification for sysstat-collect

    Type: string

    Default: "*:00/10"

    Declared by:

    [17661]<nixpkgs/nixos/modules/services/monitoring/sysstat.nix>

[17662]services.system-config-printer.enable

    Whether to enable system-config-printer, a service for CUPS administration used by printing
    interfaces.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17663]<nixpkgs/nixos/modules/services/desktops/system-config-printer.nix>

[17664]services.tahoe.introducers

    The Tahoe introducers.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17665]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17666]services.tahoe.introducers.<name>.package

    The package to use for the Tahoe LAFS daemon.

    Type: package

    Default: "pkgs.tahoelafs"

    Example:

    pkgs.tahoelafs

    Declared by:

    [17667]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17668]services.tahoe.introducers.<name>.nickname

    The nickname of this Tahoe introducer.

    Type: string

    Declared by:

    [17669]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17670]services.tahoe.introducers.<name>.tub.location

    The external location that the introducer should listen on.

    If specified, the port should be included.

    Type: null or string

    Default: null

    Declared by:

    [17671]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17672]services.tahoe.introducers.<name>.tub.port

    The port on which the introducer will listen.

    Type: signed integer

    Default: 3458

    Declared by:

    [17673]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17674]services.tahoe.nodes

    The Tahoe nodes.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [17675]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17676]services.tahoe.nodes.<name>.package

    The package to use for the Tahoe LAFS daemon.

    Type: package

    Default: "pkgs.tahoelafs"

    Example:

    pkgs.tahoelafs

    Declared by:

    [17677]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17678]services.tahoe.nodes.<name>.client.helper

    The furl for a Tahoe helper node.

    Like all furls, keep this safe and don't share it.

    Type: null or string

    Default: null

    Declared by:

    [17679]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17680]services.tahoe.nodes.<name>.client.introducer

    The furl for a Tahoe introducer node.

    Like all furls, keep this safe and don't share it.

    Type: null or string

    Default: null

    Declared by:

    [17681]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17682]services.tahoe.nodes.<name>.client.shares.happy

    The number of distinct storage nodes required to store a file.

    Type: signed integer

    Default: 7

    Declared by:

    [17683]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17684]services.tahoe.nodes.<name>.client.shares.needed

    The number of shares required to reconstitute a file.

    Type: signed integer

    Default: 3

    Declared by:

    [17685]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17686]services.tahoe.nodes.<name>.client.shares.total

    The number of shares required to store a file.

    Type: signed integer

    Default: 10

    Declared by:

    [17687]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17688]services.tahoe.nodes.<name>.helper.enable

    Whether to enable helper service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17689]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17690]services.tahoe.nodes.<name>.nickname

    The nickname of this Tahoe node.

    Type: string

    Declared by:

    [17691]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17692]services.tahoe.nodes.<name>.sftpd.enable

    Whether to enable SFTP service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17693]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17694]services.tahoe.nodes.<name>.sftpd.accounts.file

    Path to the accounts file.

    Type: null or path

    Default: null

    Declared by:

    [17695]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17696]services.tahoe.nodes.<name>.sftpd.accounts.url

    URL of the accounts server.

    Type: null or string

    Default: null

    Declared by:

    [17697]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17698]services.tahoe.nodes.<name>.sftpd.hostPrivateKeyFile

    Path to the SSH host private key.

    Type: null or path

    Default: null

    Declared by:

    [17699]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17700]services.tahoe.nodes.<name>.sftpd.hostPublicKeyFile

    Path to the SSH host public key.

    Type: null or path

    Default: null

    Declared by:

    [17701]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17702]services.tahoe.nodes.<name>.sftpd.port

    The port on which the SFTP server will listen.

    This is the correct setting to tweak if you want Tahoe's SFTP daemon to listen on a different
    port.

    Type: null or signed integer

    Default: null

    Declared by:

    [17703]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17704]services.tahoe.nodes.<name>.storage.enable

    Whether to enable storage service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17705]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17706]services.tahoe.nodes.<name>.storage.reservedSpace

    The amount of filesystem space to not use for storage.

    Type: string

    Default: "1G"

    Declared by:

    [17707]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17708]services.tahoe.nodes.<name>.tub.location

    The external location that the node should listen on.

    This is the setting to tweak if there are multiple interfaces and you want to alter which
    interface Tahoe is advertising.

    If specified, the port should be included.

    Type: null or string

    Default: null

    Declared by:

    [17709]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17710]services.tahoe.nodes.<name>.tub.port

    The port on which the tub will listen.

    This is the correct setting to tweak if you want Tahoe's storage system to listen on a
    different port.

    Type: signed integer

    Default: 3457

    Declared by:

    [17711]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17712]services.tahoe.nodes.<name>.web.port

    The port on which the Web server will listen.

    This is the correct setting to tweak if you want Tahoe's WUI to listen on a different port.

    Type: signed integer

    Default: 3456

    Declared by:

    [17713]<nixpkgs/nixos/modules/services/network-filesystems/tahoe.nix>

[17714]services.tailscale.enable

    Whether to enable Tailscale client daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17715]<nixpkgs/nixos/modules/services/networking/tailscale.nix>

[17716]services.tailscale.package

    The package to use for tailscale

    Type: package

    Default: "pkgs.tailscale"

    Declared by:

    [17717]<nixpkgs/nixos/modules/services/networking/tailscale.nix>

[17718]services.tailscale.port

    The port to listen on for tunnel traffic (0=autoselect).

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 41641

    Declared by:

    [17719]<nixpkgs/nixos/modules/services/networking/tailscale.nix>

[17720]services.target.enable

    Whether to enable the kernel's LIO iscsi target.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17721]<nixpkgs/nixos/modules/services/networking/iscsi/target.nix>

[17722]services.target.config

    Content of /etc/target/saveconfig.json This file is normally read and written by targetcli

    Type: attribute set

    Default: { }

    Declared by:

    [17723]<nixpkgs/nixos/modules/services/networking/iscsi/target.nix>

[17724]services.tarsnap.enable

    Whether to enable periodic tarsnap backups.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17725]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17726]services.tarsnap.archives

    Tarsnap archive configurations. Each attribute names an archive to be created at a given time
    interval, according to the options associated with it. When uploading to the tarsnap server,
    archive names are suffixed by a 1 second resolution timestamp, with the format %Y%m%d%H%M%S.

    For each member of the set is created a timer which triggers the instanced
    tarsnap-archive-name service unit. You may use systemctl start tarsnap-archive-name to
    manually trigger creation of archive-name at any time.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      nixos =
        { directories = [ "/home" "/root/ssl" ];
        };

      gamedata =
        { directories = [ "/var/lib/minecraft" ];
          period      = "*:30";
        };
    }

    Declared by:

    [17727]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17728]services.tarsnap.archives.<name>.aggressiveNetworking

    Upload data over multiple TCP connections, potentially increasing tarsnap's bandwidth
    utilisation at the cost of slowing down all other network traffic. Not recommended unless TCP
    congestion is the dominant limiting factor.

    Type: boolean

    Default: false

    Declared by:

    [17729]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17730]services.tarsnap.archives.<name>.cachedir

    The cache allows tarsnap to identify previously stored data blocks, reducing archival time
    and bandwidth usage.

    Should the cache become desynchronized or corrupted, tarsnap will refuse to run until you
    manually rebuild the cache with tarsnap --fsck.

    Set to null to disable caching.

    Type: null or path

    Default: "/var/cache/tarsnap/root-tarsnap.key"

    Declared by:

    [17731]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17732]services.tarsnap.archives.<name>.checkpointBytes

    Create a checkpoint every checkpointBytes of uploaded data (optionally specified using an SI
    prefix).

    1GB is the minimum value. A higher value is recommended, as checkpointing is expensive.

    Set to null to disable checkpointing.

    Type: null or string

    Default: "1GB"

    Declared by:

    [17733]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17734]services.tarsnap.archives.<name>.directories

    List of filesystem paths to archive.

    Type: list of paths

    Default: [ ]

    Declared by:

    [17735]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17736]services.tarsnap.archives.<name>.excludes

    Exclude files and directories matching these patterns.

    Type: list of strings

    Default: [ ]

    Declared by:

    [17737]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17738]services.tarsnap.archives.<name>.explicitSymlinks

    Whether to follow symlinks specified as archives.

    Type: boolean

    Default: false

    Declared by:

    [17739]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17740]services.tarsnap.archives.<name>.followSymlinks

    Whether to follow all symlinks in archive trees.

    Type: boolean

    Default: false

    Declared by:

    [17741]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17742]services.tarsnap.archives.<name>.includes

    Include only files and directories matching these patterns (the empty list includes
    everything).

    Exclusions have precedence over inclusions.

    Type: list of strings

    Default: [ ]

    Declared by:

    [17743]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17744]services.tarsnap.archives.<name>.keyfile

    Set a specific keyfile for this archive. This defaults to "/root/tarsnap.key" if left
    unspecified.

    Use this option if you want to run multiple backups concurrently - each archive must have a
    unique key. You can generate a write-only key derived from your master key (which is
    recommended) using tarsnap-keymgmt(1).

    Note: every archive must have an individual master key. You must generate multiple keys with
    tarsnap-keygen(1), and then generate write only keys from those.

    The keyfile name should be given as a string and not a path, to avoid the key being copied
    into the Nix store.

    Type: string

    Default: "/root/tarsnap.key"

    Declared by:

    [17745]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17746]services.tarsnap.archives.<name>.lowmem

    Reduce memory consumption by not caching small files. Possibly beneficial if the average file
    size is smaller than 1 MB and the number of files is lower than the total amount of RAM in
    KB.

    Type: boolean

    Default: false

    Declared by:

    [17747]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17748]services.tarsnap.archives.<name>.maxbw

    Abort archival if upstream bandwidth usage in bytes exceeds this threshold.

    Type: null or signed integer

    Default: null

    Declared by:

    [17749]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17750]services.tarsnap.archives.<name>.maxbwRateDown

    Download bandwidth rate limit in bytes.

    Type: null or signed integer

    Default: null

    Example:

    50 * 1000

    Declared by:

    [17751]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17752]services.tarsnap.archives.<name>.maxbwRateUp

    Upload bandwidth rate limit in bytes.

    Type: null or signed integer

    Default: null

    Example:

    25 * 1000

    Declared by:

    [17753]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17754]services.tarsnap.archives.<name>.nodump

    Exclude files with the nodump flag.

    Type: boolean

    Default: true

    Declared by:

    [17755]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17756]services.tarsnap.archives.<name>.period

    Create archive at this interval.

    The format is described in systemd.time(7).

    Type: string

    Default: "01:15"

    Example: "hourly"

    Declared by:

    [17757]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17758]services.tarsnap.archives.<name>.printStats

    Print global archive statistics upon completion. The output is available via systemctl status
    tarsnap-archive-name.

    Type: boolean

    Default: true

    Declared by:

    [17759]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17760]services.tarsnap.archives.<name>.verbose

    Whether to produce verbose logging output.

    Type: boolean

    Default: false

    Declared by:

    [17761]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17762]services.tarsnap.archives.<name>.verylowmem

    Reduce memory consumption by a factor of 2 beyond what lowmem does, at the cost of
    significantly slowing down the archiving process.

    Type: boolean

    Default: false

    Declared by:

    [17763]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17764]services.tarsnap.keyfile

    The keyfile which associates this machine with your tarsnap account. Create the keyfile with 
    tarsnap-keygen.

    Note that each individual archive (specified below) may also have its own individual keyfile
    specified. Tarsnap does not allow multiple concurrent backups with the same cache directory
    and key (starting a new backup will cause another one to fail). If you have multiple archives
    specified, you should either spread out your backups to be far apart, or specify a separate
    key for each archive. By default every archive defaults to using "/root/tarsnap.key".

    It's recommended for backups that you generate a key for every archive using tarsnap-keygen
    (1), and then generate a write-only tarsnap key using tarsnap-keymgmt(1), and keep your
    master key(s) for a particular machine off-site.

    The keyfile name should be given as a string and not a path, to avoid the key being copied
    into the Nix store.

    Type: string

    Default: "/root/tarsnap.key"

    Declared by:

    [17765]<nixpkgs/nixos/modules/services/backup/tarsnap.nix>

[17766]services.taskserver.enable

    Whether to enable the Taskwarrior server.

    More instructions about NixOS in conjuction with Taskserver can be found in the NixOS manual
    at [17767]Chapter 29, Taskserver.

    Type: boolean

    Default: false

    Declared by:

    [17768]<nixpkgs/nixos/modules/services/misc/taskserver>

[17769]services.taskserver.allowedClientIDs

    A list of regular expressions that are matched against the reported client id (such as task
    2.3.0).

    The values all or none have special meaning. Overidden by any entry in the option
    services.taskserver.disallowedClientIDs.

    Type: string or list of strings

    Default: [ ]

    Example: [ "[Tt]ask [2-9]+" ]

    Declared by:

    [17770]<nixpkgs/nixos/modules/services/misc/taskserver>

[17771]services.taskserver.ciphers

    List of GnuTLS ciphers to use. See the GnuTLS documentation about priority strings at [17772]
    https://gnutls.org/manual/html_node/Priority-Strings.html for full details.

    Type: null or strings concatenated with ":"

    Default: null

    Example: "NORMAL:-VERS-SSL3.0"

    Declared by:

    [17773]<nixpkgs/nixos/modules/services/misc/taskserver>

[17774]services.taskserver.config

    Configuration options to pass to Taskserver.

    The options here are the same as described in taskdrc(5), but with one difference:

    The server option is server.listen here, because the server option would collide with other
    options like server.cert and we would run in a type error (attribute set versus string).

    Nix types like integers or booleans are automatically converted to the right values
    Taskserver would expect.

    Type: attribute set

    Example: { client = { cert = "/tmp/debugging.cert"; } ; }

    Declared by:

    [17775]<nixpkgs/nixos/modules/services/misc/taskserver>

[17776]services.taskserver.confirmation

    Determines whether certain commands are confirmed.

    Type: boolean

    Default: true

    Declared by:

    [17777]<nixpkgs/nixos/modules/services/misc/taskserver>

[17778]services.taskserver.dataDir

    Data directory for Taskserver.

    Type: path

    Default: "/var/lib/taskserver"

    Declared by:

    [17779]<nixpkgs/nixos/modules/services/misc/taskserver>

[17780]services.taskserver.debug

    Logs debugging information.

    Type: boolean

    Default: false

    Declared by:

    [17781]<nixpkgs/nixos/modules/services/misc/taskserver>

[17782]services.taskserver.disallowedClientIDs

    A list of regular expressions that are matched against the reported client id (such as task
    2.3.0).

    The values all or none have special meaning. Any entry here overrides those in
    services.taskserver.allowedClientIDs.

    Type: string or list of strings

    Default: [ ]

    Example: [ "[Tt]ask [2-9]+" ]

    Declared by:

    [17783]<nixpkgs/nixos/modules/services/misc/taskserver>

[17784]services.taskserver.extensions

    Fully qualified path of the Taskserver extension scripts. Currently there are none.

    Type: null or path

    Default: null

    Declared by:

    [17785]<nixpkgs/nixos/modules/services/misc/taskserver>

[17786]services.taskserver.fqdn

    The fully qualified domain name of this server, which is also used as the common name in the
    certificates.

    Type: string

    Default: "localhost"

    Declared by:

    [17787]<nixpkgs/nixos/modules/services/misc/taskserver>

[17788]services.taskserver.group

    Group for Taskserver.

    Type: string

    Default: "taskd"

    Declared by:

    [17789]<nixpkgs/nixos/modules/services/misc/taskserver>

[17790]services.taskserver.ipLog

    Logs the IP addresses of incoming requests.

    Type: boolean

    Default: false

    Declared by:

    [17791]<nixpkgs/nixos/modules/services/misc/taskserver>

[17792]services.taskserver.listenHost

    The address (IPv4, IPv6 or DNS) to listen on.

    If the value is something else than localhost the port defined by listenPort is automatically
    added to networking.firewall.allowedTCPPorts.

    Type: string

    Default: "localhost"

    Example: "::"

    Declared by:

    [17793]<nixpkgs/nixos/modules/services/misc/taskserver>

[17794]services.taskserver.listenPort

    Port number of the Taskserver.

    Type: signed integer

    Default: 53589

    Declared by:

    [17795]<nixpkgs/nixos/modules/services/misc/taskserver>

[17796]services.taskserver.organisations

    An attribute set where the keys name the organisation and the values are a set of lists of
    users and groups.

    Type: attribute set of submodules

    Default: { }

    Example: { myShinyOrganisation = { groups = [ "staff" "outsiders" ] ; users = [ "alice" "bob"
    ] ; } ; yetAnotherOrganisation = { users = [ "foo" "bar" ] ; } ; }

    Declared by:

    [17797]<nixpkgs/nixos/modules/services/misc/taskserver>

[17798]services.taskserver.organisations.<name>.groups

    A list of group names that belong to the organization.

    Type: list of strings

    Default: [ ]

    Example: [ "workers" "slackers" ]

    Declared by:

    [17799]<nixpkgs/nixos/modules/services/misc/taskserver>

[17800]services.taskserver.organisations.<name>.users

    A list of user names that belong to the organization.

    Type: list of strings

    Default: [ ]

    Example: [ "alice" "bob" ]

    Declared by:

    [17801]<nixpkgs/nixos/modules/services/misc/taskserver>

[17802]services.taskserver.pki.auto.bits

    The bit size for generated keys.

    Note: This option is for the automatically handled CA and will be ignored if any of the
    services.taskserver.pki.manual.* options are set.

    Type: signed integer

    Default: 4096

    Example: 2048

    Declared by:

    [17803]<nixpkgs/nixos/modules/services/misc/taskserver>

[17804]services.taskserver.pki.auto.expiration.ca

    The expiration time of the CA certificate in days or null for no expiration time.

    Note: This option is for the automatically handled CA and will be ignored if any of the
    services.taskserver.pki.manual.* options are set.

    Type: null or signed integer

    Default: null

    Example: 365

    Declared by:

    [17805]<nixpkgs/nixos/modules/services/misc/taskserver>

[17806]services.taskserver.pki.auto.expiration.client

    The expiration time of client certificates in days or null for no expiration time.

    Note: This option is for the automatically handled CA and will be ignored if any of the
    services.taskserver.pki.manual.* options are set.

    Type: null or signed integer

    Default: null

    Example: 365

    Declared by:

    [17807]<nixpkgs/nixos/modules/services/misc/taskserver>

[17808]services.taskserver.pki.auto.expiration.crl

    The expiration time of the certificate revocation list (CRL) in days or null for no
    expiration time.

    Note: This option is for the automatically handled CA and will be ignored if any of the
    services.taskserver.pki.manual.* options are set.

    Type: null or signed integer

    Default: null

    Example: 365

    Declared by:

    [17809]<nixpkgs/nixos/modules/services/misc/taskserver>

[17810]services.taskserver.pki.auto.expiration.server

    The expiration time of the server certificate in days or null for no expiration time.

    Note: This option is for the automatically handled CA and will be ignored if any of the
    services.taskserver.pki.manual.* options are set.

    Type: null or signed integer

    Default: null

    Example: 365

    Declared by:

    [17811]<nixpkgs/nixos/modules/services/misc/taskserver>

[17812]services.taskserver.pki.manual.ca.cert

    Fully qualified path to the CA certificate.

    Note: Setting this option will prevent automatic CA creation and handling.

    Type: null or path

    Default: null

    Declared by:

    [17813]<nixpkgs/nixos/modules/services/misc/taskserver>

[17814]services.taskserver.pki.manual.server.cert

    Fully qualified path to the server certificate.

    Note: Setting this option will prevent automatic CA creation and handling.

    Type: null or path

    Default: null

    Declared by:

    [17815]<nixpkgs/nixos/modules/services/misc/taskserver>

[17816]services.taskserver.pki.manual.server.crl

    Fully qualified path to the server certificate revocation list.

    Note: Setting this option will prevent automatic CA creation and handling.

    Type: null or path

    Default: null

    Declared by:

    [17817]<nixpkgs/nixos/modules/services/misc/taskserver>

[17818]services.taskserver.pki.manual.server.key

    Fully qualified path to the server key.

    Note: Setting this option will prevent automatic CA creation and handling.

    Type: null or path

    Default: null

    Declared by:

    [17819]<nixpkgs/nixos/modules/services/misc/taskserver>

[17820]services.taskserver.queueSize

    Size of the connection backlog, see listen(2).

    Type: signed integer

    Default: 10

    Declared by:

    [17821]<nixpkgs/nixos/modules/services/misc/taskserver>

[17822]services.taskserver.requestLimit

    Size limit of incoming requests, in bytes.

    Type: signed integer

    Default: 1048576

    Declared by:

    [17823]<nixpkgs/nixos/modules/services/misc/taskserver>

[17824]services.taskserver.trust

    Determines how client certificates are validated.

    The value allow all performs no client certificate validation. This is not recommended. The
    value strict causes the client certificate to be validated against a CA.

    Type: one of "allow all", "strict"

    Default: "strict"

    Declared by:

    [17825]<nixpkgs/nixos/modules/services/misc/taskserver>

[17826]services.taskserver.user

    User for Taskserver.

    Type: string

    Default: "taskd"

    Declared by:

    [17827]<nixpkgs/nixos/modules/services/misc/taskserver>

[17828]services.tautulli.enable

    Whether to enable Tautulli Plex Monitor.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17829]<nixpkgs/nixos/modules/services/misc/tautulli.nix>

[17830]services.tautulli.package

    The Tautulli package to use.

    Type: package

    Default: "pkgs.tautulli"

    Declared by:

    [17831]<nixpkgs/nixos/modules/services/misc/tautulli.nix>

[17832]services.tautulli.configFile

    The location of Tautulli's config file.

    Type: string

    Default: "/var/lib/plexpy/config.ini"

    Declared by:

    [17833]<nixpkgs/nixos/modules/services/misc/tautulli.nix>

[17834]services.tautulli.dataDir

    The directory where Tautulli stores its data files.

    Type: string

    Default: "/var/lib/plexpy"

    Declared by:

    [17835]<nixpkgs/nixos/modules/services/misc/tautulli.nix>

[17836]services.tautulli.group

    Group under which Tautulli runs.

    Type: string

    Default: "nogroup"

    Declared by:

    [17837]<nixpkgs/nixos/modules/services/misc/tautulli.nix>

[17838]services.tautulli.port

    TCP port where Tautulli listens.

    Type: signed integer

    Default: 8181

    Declared by:

    [17839]<nixpkgs/nixos/modules/services/misc/tautulli.nix>

[17840]services.tautulli.user

    User account under which Tautulli runs.

    Type: string

    Default: "plexpy"

    Declared by:

    [17841]<nixpkgs/nixos/modules/services/misc/tautulli.nix>

[17842]services.tcsd.enable

    Whether to enable tcsd, a Trusted Computing management service that provides TCG Software
    Stack (TSS). The tcsd daemon is the only portal to the Trusted Platform Module (TPM), a
    hardware chip on the motherboard.

    Type: boolean

    Default: false

    Declared by:

    [17843]<nixpkgs/nixos/modules/services/hardware/tcsd.nix>

[17844]services.tcsd.conformanceCred

    Path to the conformance credential for your TPM. See also the platformCred option

    Type: path

    Default: "/var/lib/tpm/conformance.cert"

    Declared by:

    [17845]<nixpkgs/nixos/modules/services/hardware/tcsd.nix>

[17846]services.tcsd.endorsementCred

    Path to the endorsement credential for your TPM. See also the platformCred option

    Type: path

    Default: "/var/lib/tpm/endorsement.cert"

    Declared by:

    [17847]<nixpkgs/nixos/modules/services/hardware/tcsd.nix>

[17848]services.tcsd.firmwarePCRs

    PCR indices used in the TPM for firmware measurements.

    Type: string

    Default: "0,1,2,3,4,5,6,7"

    Declared by:

    [17849]<nixpkgs/nixos/modules/services/hardware/tcsd.nix>

[17850]services.tcsd.group

    Group account under which tcsd runs.

    Type: string

    Default: "tss"

    Declared by:

    [17851]<nixpkgs/nixos/modules/services/hardware/tcsd.nix>

[17852]services.tcsd.kernelPCRs

    PCR indices used in the TPM for kernel measurements.

    Type: string

    Default: "8,9,10,11,12"

    Declared by:

    [17853]<nixpkgs/nixos/modules/services/hardware/tcsd.nix>

[17854]services.tcsd.platformCred

    Path to the platform credential for your TPM. Your TPM manufacturer may have provided you
    with a set of credentials (certificates) that should be used when creating identities using
    your TPM. When a user of your TPM makes an identity, this credential will be encrypted as
    part of that process. See the 1.1b TPM Main specification section 9.3 for information on this
    process.

    Type: path

    Default: "/var/lib/tpm/platform.cert"

    Declared by:

    [17855]<nixpkgs/nixos/modules/services/hardware/tcsd.nix>

[17856]services.tcsd.stateDir

    The location of the system persistent storage file. The system persistent storage file holds
    keys and data across restarts of the TCSD and system reboots.

    Type: path

    Default: "/var/lib/tpm"

    Declared by:

    [17857]<nixpkgs/nixos/modules/services/hardware/tcsd.nix>

[17858]services.tcsd.user

    User account under which tcsd runs.

    Type: string

    Default: "tss"

    Declared by:

    [17859]<nixpkgs/nixos/modules/services/hardware/tcsd.nix>

[17860]services.teamspeak3.enable

    Whether to run the Teamspeak3 voice communication server daemon.

    Type: boolean

    Default: false

    Declared by:

    [17861]<nixpkgs/nixos/modules/services/networking/teamspeak3.nix>

[17862]services.teamspeak3.dataDir

    Directory to store TS3 database and other state/data files.

    Type: path

    Default: "/var/lib/teamspeak3-server"

    Declared by:

    [17863]<nixpkgs/nixos/modules/services/networking/teamspeak3.nix>

[17864]services.teamspeak3.defaultVoicePort

    Default UDP port for clients to connect to virtual servers - used for first virtual server,
    subsequent ones will open on incrementing port numbers by default.

    Type: signed integer

    Default: 9987

    Declared by:

    [17865]<nixpkgs/nixos/modules/services/networking/teamspeak3.nix>

[17866]services.teamspeak3.fileTransferIP

    IP on which the server instance will listen for incoming file transfer connections. Defaults
    to any IP.

    Type: null or string

    Default: null

    Example: "0.0.0.0"

    Declared by:

    [17867]<nixpkgs/nixos/modules/services/networking/teamspeak3.nix>

[17868]services.teamspeak3.fileTransferPort

    TCP port opened for file transfers.

    Type: signed integer

    Default: 30033

    Declared by:

    [17869]<nixpkgs/nixos/modules/services/networking/teamspeak3.nix>

[17870]services.teamspeak3.logPath

    Directory to store log files in.

    Type: path

    Default: "/var/log/teamspeak3-server/"

    Declared by:

    [17871]<nixpkgs/nixos/modules/services/networking/teamspeak3.nix>

[17872]services.teamspeak3.queryIP

    IP on which the server instance will listen for incoming ServerQuery connections. Defaults to
    any IP.

    Type: null or string

    Default: null

    Example: "0.0.0.0"

    Declared by:

    [17873]<nixpkgs/nixos/modules/services/networking/teamspeak3.nix>

[17874]services.teamspeak3.queryPort

    TCP port opened for ServerQuery connections.

    Type: signed integer

    Default: 10011

    Declared by:

    [17875]<nixpkgs/nixos/modules/services/networking/teamspeak3.nix>

[17876]services.teamspeak3.voiceIP

    IP on which the server instance will listen for incoming voice connections. Defaults to any
    IP.

    Type: null or string

    Default: null

    Example: "0.0.0.0"

    Declared by:

    [17877]<nixpkgs/nixos/modules/services/networking/teamspeak3.nix>

[17878]services.teamviewer.enable

    Whether to enable TeamViewer daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17879]<nixpkgs/nixos/modules/services/monitoring/teamviewer.nix>

[17880]services.tedicross.enable

    Whether to enable the TediCross Telegram-Discord bridge service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17881]<nixpkgs/nixos/modules/services/networking/tedicross.nix>

[17882]services.tedicross.config

    settings.yaml configuration as a Nix attribute set. Secret tokens should be specified using
    environmentFile instead of this world-readable file.

    Type: attribute set

    Example:

    {
      telegram = {
        useFirstNameInsteadOfUsername = false;
        colonAfterSenderName = false;
        skipOldMessages = true;
        sendEmojiWithStickers = true;
      };
      discord = {
        useNickname = false;
        skipOldMessages = true;
        displayTelegramReplies = "embed";
        replyLength = 100;
      };
      bridges = [
        {
          name = "Default bridge";
          direction = "both";
          telegram = {
            chatId = -123456789;
            relayJoinMessages = true;
            relayLeaveMessages = true;
            sendUsernames = true;
            ignoreCommands = true;
          };
          discord = {
            serverId = "DISCORD_SERVER_ID";
            channelId = "DISCORD_CHANNEL_ID";
            relayJoinMessages = true;
            relayLeaveMessages = true;
            sendUsernames = true;
            crossDeleteOnTelegram = true;
          };
        }
      ];

      debug = false;
    }

    Declared by:

    [17883]<nixpkgs/nixos/modules/services/networking/tedicross.nix>

[17884]services.tedicross.environmentFile

    File containing environment variables to be passed to the TediCross service, in which secret
    tokens can be specified securely using the TELEGRAM_BOT_TOKEN and DISCORD_BOT_TOKEN keys.

    Type: null or path

    Default: null

    Declared by:

    [17885]<nixpkgs/nixos/modules/services/networking/tedicross.nix>

[17886]services.teeworlds.enable

    Whether to enable Teeworlds Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17887]<nixpkgs/nixos/modules/services/games/teeworlds.nix>

[17888]services.teeworlds.extraOptions

    Extra configuration lines for the teeworlds.cfg. See [17889]Teeworlds Documentation.

    Type: list of strings

    Default: [ ]

    Example: [ "sv_map dm1" "sv_gametype dm" ]

    Declared by:

    [17890]<nixpkgs/nixos/modules/services/games/teeworlds.nix>

[17891]services.teeworlds.motd

    Set the server message of the day text.

    Type: null or string

    Default: null

    Declared by:

    [17892]<nixpkgs/nixos/modules/services/games/teeworlds.nix>

[17893]services.teeworlds.name

    Name of the server. Defaults to 'unnamed server'.

    Type: null or string

    Default: null

    Declared by:

    [17894]<nixpkgs/nixos/modules/services/games/teeworlds.nix>

[17895]services.teeworlds.openPorts

    Whether to open firewall ports for Teeworlds

    Type: boolean

    Default: false

    Declared by:

    [17896]<nixpkgs/nixos/modules/services/games/teeworlds.nix>

[17897]services.teeworlds.password

    Password to connect to the server.

    Type: null or string

    Default: null

    Declared by:

    [17898]<nixpkgs/nixos/modules/services/games/teeworlds.nix>

[17899]services.teeworlds.port

    Port the server will listen on.

    Type: signed integer

    Default: 8303

    Declared by:

    [17900]<nixpkgs/nixos/modules/services/games/teeworlds.nix>

[17901]services.teeworlds.rconPassword

    Password to access the remote console. If not set, a randomly generated one is displayed in
    the server log.

    Type: null or string

    Default: null

    Declared by:

    [17902]<nixpkgs/nixos/modules/services/games/teeworlds.nix>

[17903]services.teeworlds.register

    Whether the server registers as public server in the global server list. This is disabled by
    default because of privacy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17904]<nixpkgs/nixos/modules/services/games/teeworlds.nix>

[17905]services.telegraf.enable

    Whether to enable telegraf server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17906]<nixpkgs/nixos/modules/services/monitoring/telegraf.nix>

[17907]services.telegraf.package

    Which telegraf derivation to use

    Type: package

    Default: "pkgs.telegraf"

    Declared by:

    [17908]<nixpkgs/nixos/modules/services/monitoring/telegraf.nix>

[17909]services.telegraf.environmentFiles

    File to load as environment file. Environment variables from this file will be interpolated
    into the config file using envsubst with this syntax: $ENVIRONMENT ${VARIABLE} This is useful
    to avoid putting secrets into the nix store.

    Type: list of paths

    Default: [ ]

    Example: "/run/keys/telegraf.env"

    Declared by:

    [17910]<nixpkgs/nixos/modules/services/monitoring/telegraf.nix>

[17911]services.telegraf.extraConfig

    Extra configuration options for telegraf

    Type: TOML value

    Default: { }

    Example: { inputs = { statsd = { delete_timings = true; service_address = ":8125"; } ; } ;
    outputs = { influxdb = { database = "telegraf"; urls = [ "http://localhost:8086" ] ; } ; } ;
    }

    Declared by:

    [17912]<nixpkgs/nixos/modules/services/monitoring/telegraf.nix>

[17913]services.telepathy.enable

    Whether to enable Telepathy service, a communications framework that enables real-time
    communication via pluggable protocol backends.

    Type: boolean

    Default: false

    Declared by:

    [17914]<nixpkgs/nixos/modules/services/desktops/telepathy.nix>

[17915]services.terraria.enable

    If enabled, starts a Terraria server. The server can be connected to via tmux -S /var/lib/
    terraria/terraria.sock attach for administration by users who are a part of the terraria
    group (use C-b d shortcut to detach again).

    Type: boolean

    Default: false

    Declared by:

    [17916]<nixpkgs/nixos/modules/services/games/terraria.nix>

[17917]services.terraria.autoCreatedWorldSize

    Specifies the size of the auto-created world if worldPath does not point to an existing
    world.

    Type: one of "small", "medium", "large"

    Default: "medium"

    Declared by:

    [17918]<nixpkgs/nixos/modules/services/games/terraria.nix>

[17919]services.terraria.banListPath

    The path to the ban list.

    Type: null or path

    Default: null

    Declared by:

    [17920]<nixpkgs/nixos/modules/services/games/terraria.nix>

[17921]services.terraria.dataDir

    Path to variable state data directory for terraria.

    Type: string

    Default: "/var/lib/terraria"

    Example: "/srv/terraria"

    Declared by:

    [17922]<nixpkgs/nixos/modules/services/games/terraria.nix>

[17923]services.terraria.maxPlayers

    Sets the max number of players (between 1 and 255).

    Type: signed integer

    Default: 255

    Declared by:

    [17924]<nixpkgs/nixos/modules/services/games/terraria.nix>

[17925]services.terraria.messageOfTheDay

    Set the server message of the day text.

    Type: null or string

    Default: null

    Declared by:

    [17926]<nixpkgs/nixos/modules/services/games/terraria.nix>

[17927]services.terraria.noUPnP

    Disables automatic Universal Plug and Play.

    Type: boolean

    Default: false

    Declared by:

    [17928]<nixpkgs/nixos/modules/services/games/terraria.nix>

[17929]services.terraria.openFirewall

    Wheter to open ports in the firewall

    Type: boolean

    Default: false

    Declared by:

    [17930]<nixpkgs/nixos/modules/services/games/terraria.nix>

[17931]services.terraria.password

    Sets the server password. Leave null for no password.

    Type: null or string

    Default: null

    Declared by:

    [17932]<nixpkgs/nixos/modules/services/games/terraria.nix>

[17933]services.terraria.port

    Specifies the port to listen on.

    Type: signed integer

    Default: 7777

    Declared by:

    [17934]<nixpkgs/nixos/modules/services/games/terraria.nix>

[17935]services.terraria.secure

    Adds additional cheat protection to the server.

    Type: boolean

    Default: false

    Declared by:

    [17936]<nixpkgs/nixos/modules/services/games/terraria.nix>

[17937]services.terraria.worldPath

    The path to the world file (.wld) which should be loaded. If no world exists at this path,
    one will be created with the size specified by autoCreatedWorldSize.

    Type: null or path

    Default: null

    Declared by:

    [17938]<nixpkgs/nixos/modules/services/games/terraria.nix>

[17939]services.tftpd.enable

    Whether to enable tftpd, a Trivial File Transfer Protocol server. The server will be run as
    an xinetd service.

    Type: boolean

    Default: false

    Declared by:

    [17940]<nixpkgs/nixos/modules/services/networking/tftpd.nix>

[17941]services.tftpd.path

    Where the tftp server files are stored.

    Type: path

    Default: "/srv/tftp"

    Declared by:

    [17942]<nixpkgs/nixos/modules/services/networking/tftpd.nix>

[17943]services.thanos.package

    The thanos package that should be used.

    Type: package

    Default: "pkgs.thanos"

    Declared by:

    [17944]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17945]services.thanos.compact.enable

    Whether to enable the Thanos compactor which continuously compacts blocks in an object store
    bucket.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17946]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17947]services.thanos.compact.arguments

    Arguments to the thanos compact command.

    Defaults to a list of arguments formed by converting the structured options of
    services.thanos.compact to a list of arguments.

    Overriding this option will cause none of the structured options to have any effect. So only
    set this if you know what you're doing!

    Type: list of strings

    Default: [ "--wait" ''--data-dir="/var/lib/thanos-compact"'' ]

    Declared by:

    [17948]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17949]services.thanos.compact.block-sync-concurrency

    Number of goroutines to use when syncing block metadata from object storage.

    Defaults to 20 in Thanos when set to null.

    Type: null or signed integer

    Default: null

    Declared by:

    [17950]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17951]services.thanos.compact.compact.concurrency

    Number of goroutines to use when compacting groups.

    Defaults to 1 in Thanos when set to null.

    Type: null or signed integer

    Default: null

    Declared by:

    [17952]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17953]services.thanos.compact.consistency-delay

    Minimum age of fresh (non-compacted) blocks before they are being processed. Malformed blocks
    older than the maximum of consistency-delay and 30m0s will be removed.

    Defaults to 30m in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [17954]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17955]services.thanos.compact.downsampling.disable

    Disables downsampling.

    This is not recommended as querying long time ranges without non-downsampled data is not
    efficient and useful e.g it is not possible to render all samples for a human eye anyway

    Type: boolean

    Default: false

    Declared by:

    [17956]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17957]services.thanos.compact.http-address

    Listen host:port for HTTP endpoints.

    Defaults to 0.0.0.0:10902 in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [17958]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17959]services.thanos.compact.log.format

    Log format to use.

    Type: null or string

    Default: null

    Declared by:

    [17960]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17961]services.thanos.compact.log.level

    Log filtering level.

    Defaults to info in Thanos when set to null.

    Type: null or one of "debug", "info", "warn", "error", "fatal"

    Default: null

    Declared by:

    [17962]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17963]services.thanos.compact.objstore.config

    Object store configuration.

    When not null the attribute set gets converted to a YAML file and stored in the Nix store.
    The option objstore.config-file will default to its path.

    If objstore.config-file is set this option has no effect.

    See format details: [17964]https://thanos.io/storage.md/#configuration

    Type: null or attribute set

    Default: null

    Declared by:

    [17965]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17966]services.thanos.compact.objstore.config-file

    Path to YAML file that contains object store configuration.

    See format details: [17967]https://thanos.io/storage.md/#configuration

    Type: null or string

    Default:

    ''
    if config.services.thanos.<cmd>.objstore.config == null then null
    else toString (toYAML "objstore.yaml" config.services.thanos.<cmd>.objstore.config);
    ''

    Declared by:

    [17968]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17969]services.thanos.compact.retention.resolution-1h

    How long to retain samples of resolution 2 (1 hour) in bucket.

    0d - disables this retention

    Defaults to 0d in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [17970]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17971]services.thanos.compact.retention.resolution-5m

    How long to retain samples of resolution 1 (5 minutes) in bucket.

    0d - disables this retention

    Defaults to 0d in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [17972]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17973]services.thanos.compact.retention.resolution-raw

    How long to retain raw samples in bucket.

    0d - disables this retention

    Defaults to 0d in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [17974]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17975]services.thanos.compact.startAt

    When this option is set to a systemd.time specification the Thanos compactor will run at the
    specified period.

    When this option is null the Thanos compactor service will run continuously. So it will not
    exit after all compactions have been processed but wait for new work.

    Type: null or string

    Default: null

    Declared by:

    [17976]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17977]services.thanos.compact.stateDir

    Data directory relative to /var/lib in which to cache blocks and process compactions.

    Type: string

    Default: "thanos-compact"

    Declared by:

    [17978]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17979]services.thanos.compact.tracing.config

    Tracing configuration.

    When not null the attribute set gets converted to a YAML file and stored in the Nix store.
    The option tracing.config-file will default to its path.

    If tracing.config-file is set this option has no effect.

    See format details: [17980]https://thanos.io/tracing.md/#configuration

    Type: null or attribute set

    Default: null

    Declared by:

    [17981]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17982]services.thanos.compact.tracing.config-file

    Path to YAML file that contains tracing configuration.

    See format details: [17983]https://thanos.io/tracing.md/#configuration

    Type: null or string

    Default:

    ''
    if config.services.thanos.<cmd>.tracing.config == null then null
    else toString (toYAML "tracing.yaml" config.services.thanos.<cmd>.tracing.config);
    ''

    Declared by:

    [17984]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17985]services.thanos.downsample.enable

    Whether to enable the Thanos downsampler which continuously downsamples blocks in an object
    store bucket.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [17986]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17987]services.thanos.downsample.arguments

    Arguments to the thanos downsample command.

    Defaults to a list of arguments formed by converting the structured options of
    services.thanos.downsample to a list of arguments.

    Overriding this option will cause none of the structured options to have any effect. So only
    set this if you know what you're doing!

    Type: list of strings

    Default: [ ''--data-dir="/var/lib/thanos-downsample"'' ]

    Declared by:

    [17988]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17989]services.thanos.downsample.log.format

    Log format to use.

    Type: null or string

    Default: null

    Declared by:

    [17990]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17991]services.thanos.downsample.log.level

    Log filtering level.

    Defaults to info in Thanos when set to null.

    Type: null or one of "debug", "info", "warn", "error", "fatal"

    Default: null

    Declared by:

    [17992]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17993]services.thanos.downsample.objstore.config

    Object store configuration.

    When not null the attribute set gets converted to a YAML file and stored in the Nix store.
    The option objstore.config-file will default to its path.

    If objstore.config-file is set this option has no effect.

    See format details: [17994]https://thanos.io/storage.md/#configuration

    Type: null or attribute set

    Default: null

    Declared by:

    [17995]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17996]services.thanos.downsample.objstore.config-file

    Path to YAML file that contains object store configuration.

    See format details: [17997]https://thanos.io/storage.md/#configuration

    Type: null or string

    Default:

    ''
    if config.services.thanos.<cmd>.objstore.config == null then null
    else toString (toYAML "objstore.yaml" config.services.thanos.<cmd>.objstore.config);
    ''

    Declared by:

    [17998]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[17999]services.thanos.downsample.stateDir

    Data directory relative to /var/lib in which to cache blocks and process downsamplings.

    Type: string

    Default: "thanos-downsample"

    Declared by:

    [18000]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18001]services.thanos.downsample.tracing.config

    Tracing configuration.

    When not null the attribute set gets converted to a YAML file and stored in the Nix store.
    The option tracing.config-file will default to its path.

    If tracing.config-file is set this option has no effect.

    See format details: [18002]https://thanos.io/tracing.md/#configuration

    Type: null or attribute set

    Default: null

    Declared by:

    [18003]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18004]services.thanos.downsample.tracing.config-file

    Path to YAML file that contains tracing configuration.

    See format details: [18005]https://thanos.io/tracing.md/#configuration

    Type: null or string

    Default:

    ''
    if config.services.thanos.<cmd>.tracing.config == null then null
    else toString (toYAML "tracing.yaml" config.services.thanos.<cmd>.tracing.config);
    ''

    Declared by:

    [18006]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18007]services.thanos.query.enable

    Whether to enable the Thanos query node exposing PromQL enabled Query API with data retrieved
    from multiple store nodes.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18008]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18009]services.thanos.query.arguments

    Arguments to the thanos query command.

    Defaults to a list of arguments formed by converting the structured options of
    services.thanos.query to a list of arguments.

    Overriding this option will cause none of the structured options to have any effect. So only
    set this if you know what you're doing!

    Type: list of strings

    Default: [ ]

    Declared by:

    [18010]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18011]services.thanos.query.grpc-address

    Listen ip:port address for gRPC endpoints (StoreAPI).

    Make sure this address is routable from other components.

    Defaults to 0.0.0.0:10901 in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18012]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18013]services.thanos.query.grpc-client-server-name

    Server name to verify the hostname on the returned gRPC certificates. See [18014]https://
    tools.ietf.org/html/rfc4366#section-3.1

    Type: null or string

    Default: null

    Declared by:

    [18015]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18016]services.thanos.query.grpc-client-tls-ca

    TLS CA Certificates to use to verify gRPC servers

    Type: null or string

    Default: null

    Declared by:

    [18017]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18018]services.thanos.query.grpc-client-tls-cert

    TLS Certificates to use to identify this client to the server

    Type: null or string

    Default: null

    Declared by:

    [18019]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18020]services.thanos.query.grpc-client-tls-key

    TLS Key for the client's certificate

    Type: null or string

    Default: null

    Declared by:

    [18021]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18022]services.thanos.query.grpc-client-tls-secure

    Use TLS when talking to the gRPC server

    Type: boolean

    Default: false

    Declared by:

    [18023]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18024]services.thanos.query.grpc-server-tls-cert

    TLS Certificate for gRPC server, leave blank to disable TLS

    Type: null or string

    Default: null

    Declared by:

    [18025]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18026]services.thanos.query.grpc-server-tls-client-ca

    TLS CA to verify clients against.

    If no client CA is specified, there is no client verification on server side.
    (tls.NoClientCert)

    Type: null or string

    Default: null

    Declared by:

    [18027]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18028]services.thanos.query.grpc-server-tls-key

    TLS Key for the gRPC server, leave blank to disable TLS

    Type: null or string

    Default: null

    Declared by:

    [18029]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18030]services.thanos.query.http-address

    Listen host:port for HTTP endpoints.

    Defaults to 0.0.0.0:10902 in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18031]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18032]services.thanos.query.log.format

    Log format to use.

    Type: null or string

    Default: null

    Declared by:

    [18033]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18034]services.thanos.query.log.level

    Log filtering level.

    Defaults to info in Thanos when set to null.

    Type: null or one of "debug", "info", "warn", "error", "fatal"

    Default: null

    Declared by:

    [18035]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18036]services.thanos.query.query.auto-downsampling

    Enable automatic adjustment (step / 5) to what source of data should be used in store
    gateways if no max_source_resolution param is specified.

    Type: boolean

    Default: false

    Declared by:

    [18037]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18038]services.thanos.query.query.default-evaluation-interval

    Set default evaluation interval for sub queries.

    Defaults to 1m in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18039]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18040]services.thanos.query.query.max-concurrent

    Maximum number of queries processed concurrently by query node.

    Defaults to 20 in Thanos when set to null.

    Type: null or signed integer

    Default: null

    Declared by:

    [18041]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18042]services.thanos.query.query.partial-response

    Enable partial response for queries if no partial_response param is specified.

    Type: boolean

    Default: false

    Declared by:

    [18043]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18044]services.thanos.query.query.replica-label

    Label to treat as a replica indicator along which data is deduplicated.

    Still you will be able to query without deduplication using dedup=false parameter.

    Type: null or string

    Default: null

    Declared by:

    [18045]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18046]services.thanos.query.query.timeout

    Maximum time to process query by query node.

    Defaults to 2m in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18047]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18048]services.thanos.query.selector-labels

    Query selector labels that will be exposed in info endpoint.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [18049]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18050]services.thanos.query.store.addresses

    Addresses of statically configured store API servers.

    The scheme may be prefixed with dns+ or dnssrv+ to detect store API servers through
    respective DNS lookups.

    Type: list of strings

    Default: [ ]

    Declared by:

    [18051]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18052]services.thanos.query.store.response-timeout

    If a Store doesn't send any data in this specified duration then a Store will be ignored and
    partial data will be returned if it's enabled. 0 disables timeout.

    Defaults to 0ms in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18053]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18054]services.thanos.query.store.sd-dns-interval

    Interval between DNS resolutions.

    Defaults to 30s in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18055]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18056]services.thanos.query.store.sd-files

    Path to files that contain addresses of store API servers. The path can be a glob pattern.

    Type: list of strings

    Default: [ ]

    Declared by:

    [18057]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18058]services.thanos.query.store.sd-interval

    Refresh interval to re-read file SD files. It is used as a resync fallback.

    Defaults to 5m in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18059]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18060]services.thanos.query.store.unhealthy-timeout

    Timeout before an unhealthy store is cleaned from the store UI page.

    Defaults to 5m in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18061]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18062]services.thanos.query.tracing.config

    Tracing configuration.

    When not null the attribute set gets converted to a YAML file and stored in the Nix store.
    The option tracing.config-file will default to its path.

    If tracing.config-file is set this option has no effect.

    See format details: [18063]https://thanos.io/tracing.md/#configuration

    Type: null or attribute set

    Default: null

    Declared by:

    [18064]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18065]services.thanos.query.tracing.config-file

    Path to YAML file that contains tracing configuration.

    See format details: [18066]https://thanos.io/tracing.md/#configuration

    Type: null or string

    Default:

    ''
    if config.services.thanos.<cmd>.tracing.config == null then null
    else toString (toYAML "tracing.yaml" config.services.thanos.<cmd>.tracing.config);
    ''

    Declared by:

    [18067]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18068]services.thanos.query.web.external-prefix

    Static prefix for all HTML links and redirect URLs in the UI query web interface.

    Actual endpoints are still served on / or the web.route-prefix. This allows thanos UI to be
    served behind a reverse proxy that strips a URL sub-path.

    Type: null or string

    Default: null

    Declared by:

    [18069]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18070]services.thanos.query.web.prefix-header

    Name of HTTP request header used for dynamic prefixing of UI links and redirects.

    This option is ignored if the option web.external-prefix is set.

    Security risk: enable this option only if a reverse proxy in front of thanos is resetting the
    header.

    The setting web.prefix-header="X-Forwarded-Prefix" can be useful, for example, if Thanos UI
    is served via Traefik reverse proxy with PathPrefixStrip option enabled, which sends the
    stripped prefix value in X-Forwarded-Prefix header. This allows thanos UI to be served on a
    sub-path.

    Type: null or string

    Default: null

    Declared by:

    [18071]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18072]services.thanos.query.web.route-prefix

    Prefix for API and UI endpoints.

    This allows thanos UI to be served on a sub-path. This option is analogous to
    web.route-prefix of Promethus.

    Type: null or string

    Default: null

    Declared by:

    [18073]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18074]services.thanos.receive.enable

    Whether to enable the Thanos receiver which accept Prometheus remote write API requests and
    write to local tsdb (EXPERIMENTAL, this may change drastically without notice).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18075]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18076]services.thanos.receive.arguments

    Arguments to the thanos receive command.

    Defaults to a list of arguments formed by converting the structured options of
    services.thanos.receive to a list of arguments.

    Overriding this option will cause none of the structured options to have any effect. So only
    set this if you know what you're doing!

    Type: list of strings

    Default: [ ''--tsdb.path="/var/lib/thanos-receive"'' ]

    Declared by:

    [18077]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18078]services.thanos.receive.grpc-address

    Listen ip:port address for gRPC endpoints (StoreAPI).

    Make sure this address is routable from other components.

    Defaults to 0.0.0.0:10901 in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18079]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18080]services.thanos.receive.grpc-server-tls-cert

    TLS Certificate for gRPC server, leave blank to disable TLS

    Type: null or string

    Default: null

    Declared by:

    [18081]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18082]services.thanos.receive.grpc-server-tls-client-ca

    TLS CA to verify clients against.

    If no client CA is specified, there is no client verification on server side.
    (tls.NoClientCert)

    Type: null or string

    Default: null

    Declared by:

    [18083]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18084]services.thanos.receive.grpc-server-tls-key

    TLS Key for the gRPC server, leave blank to disable TLS

    Type: null or string

    Default: null

    Declared by:

    [18085]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18086]services.thanos.receive.http-address

    Listen host:port for HTTP endpoints.

    Defaults to 0.0.0.0:10902 in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18087]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18088]services.thanos.receive.labels

    External labels to announce.

    This flag will be removed in the future when handling multiple tsdb instances is added.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [18089]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18090]services.thanos.receive.log.format

    Log format to use.

    Type: null or string

    Default: null

    Declared by:

    [18091]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18092]services.thanos.receive.log.level

    Log filtering level.

    Defaults to info in Thanos when set to null.

    Type: null or one of "debug", "info", "warn", "error", "fatal"

    Default: null

    Declared by:

    [18093]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18094]services.thanos.receive.objstore.config

    Object store configuration.

    When not null the attribute set gets converted to a YAML file and stored in the Nix store.
    The option objstore.config-file will default to its path.

    If objstore.config-file is set this option has no effect.

    See format details: [18095]https://thanos.io/storage.md/#configuration

    Type: null or attribute set

    Default: null

    Declared by:

    [18096]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18097]services.thanos.receive.objstore.config-file

    Path to YAML file that contains object store configuration.

    See format details: [18098]https://thanos.io/storage.md/#configuration

    Type: null or string

    Default:

    ''
    if config.services.thanos.<cmd>.objstore.config == null then null
    else toString (toYAML "objstore.yaml" config.services.thanos.<cmd>.objstore.config);
    ''

    Declared by:

    [18099]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18100]services.thanos.receive.remote-write.address

    Address to listen on for remote write requests.

    Defaults to 0.0.0.0:19291 in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18101]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18102]services.thanos.receive.stateDir

    Data directory relative to /var/lib of TSDB.

    Type: string

    Default: "thanos-receive"

    Declared by:

    [18103]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18104]services.thanos.receive.tracing.config

    Tracing configuration.

    When not null the attribute set gets converted to a YAML file and stored in the Nix store.
    The option tracing.config-file will default to its path.

    If tracing.config-file is set this option has no effect.

    See format details: [18105]https://thanos.io/tracing.md/#configuration

    Type: null or attribute set

    Default: null

    Declared by:

    [18106]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18107]services.thanos.receive.tracing.config-file

    Path to YAML file that contains tracing configuration.

    See format details: [18108]https://thanos.io/tracing.md/#configuration

    Type: null or string

    Default:

    ''
    if config.services.thanos.<cmd>.tracing.config == null then null
    else toString (toYAML "tracing.yaml" config.services.thanos.<cmd>.tracing.config);
    ''

    Declared by:

    [18109]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18110]services.thanos.receive.tsdb.retention

    How long to retain raw samples on local storage.

    0d - disables this retention

    Defaults to 15d in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18111]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18112]services.thanos.rule.enable

    Whether to enable the Thanos ruler service which evaluates Prometheus rules against given
    Query nodes, exposing Store API and storing old blocks in bucket.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18113]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18114]services.thanos.rule.alert.label-drop

    Labels by name to drop before sending to alertmanager.

    This allows alert to be deduplicated on replica label.

    Similar Prometheus alert relabelling

    Type: list of strings

    Default: [ ]

    Declared by:

    [18115]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18116]services.thanos.rule.alert.query-url

    The external Thanos Query URL that would be set in all alerts 'Source' field.

    Type: null or string

    Default: null

    Declared by:

    [18117]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18118]services.thanos.rule.alertmanagers.send-timeout

    Timeout for sending alerts to alertmanager.

    Defaults to 10s in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18119]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18120]services.thanos.rule.alertmanagers.urls

    Alertmanager replica URLs to push firing alerts.

    Ruler claims success if push to at least one alertmanager from discovered succeeds. The
    scheme may be prefixed with dns+ or dnssrv+ to detect Alertmanager IPs through respective DNS
    lookups. The port defaults to 9093 or the SRV record's value. The URL path is used as a
    prefix for the regular Alertmanager API path.

    Type: list of strings

    Default: [ ]

    Declared by:

    [18121]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18122]services.thanos.rule.arguments

    Arguments to the thanos rule command.

    Defaults to a list of arguments formed by converting the structured options of
    services.thanos.rule to a list of arguments.

    Overriding this option will cause none of the structured options to have any effect. So only
    set this if you know what you're doing!

    Type: list of strings

    Default: [ ''--data-dir="/var/lib/thanos-rule"'' ]

    Declared by:

    [18123]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18124]services.thanos.rule.eval-interval

    The default evaluation interval to use.

    Defaults to 30s in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18125]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18126]services.thanos.rule.grpc-address

    Listen ip:port address for gRPC endpoints (StoreAPI).

    Make sure this address is routable from other components.

    Defaults to 0.0.0.0:10901 in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18127]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18128]services.thanos.rule.grpc-server-tls-cert

    TLS Certificate for gRPC server, leave blank to disable TLS

    Type: null or string

    Default: null

    Declared by:

    [18129]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18130]services.thanos.rule.grpc-server-tls-client-ca

    TLS CA to verify clients against.

    If no client CA is specified, there is no client verification on server side.
    (tls.NoClientCert)

    Type: null or string

    Default: null

    Declared by:

    [18131]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18132]services.thanos.rule.grpc-server-tls-key

    TLS Key for the gRPC server, leave blank to disable TLS

    Type: null or string

    Default: null

    Declared by:

    [18133]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18134]services.thanos.rule.http-address

    Listen host:port for HTTP endpoints.

    Defaults to 0.0.0.0:10902 in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18135]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18136]services.thanos.rule.labels

    Labels to be applied to all generated metrics.

    Similar to external labels for Prometheus, used to identify ruler and its blocks as unique
    source.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [18137]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18138]services.thanos.rule.log.format

    Log format to use.

    Type: null or string

    Default: null

    Declared by:

    [18139]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18140]services.thanos.rule.log.level

    Log filtering level.

    Defaults to info in Thanos when set to null.

    Type: null or one of "debug", "info", "warn", "error", "fatal"

    Default: null

    Declared by:

    [18141]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18142]services.thanos.rule.objstore.config

    Object store configuration.

    When not null the attribute set gets converted to a YAML file and stored in the Nix store.
    The option objstore.config-file will default to its path.

    If objstore.config-file is set this option has no effect.

    See format details: [18143]https://thanos.io/storage.md/#configuration

    Type: null or attribute set

    Default: null

    Declared by:

    [18144]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18145]services.thanos.rule.objstore.config-file

    Path to YAML file that contains object store configuration.

    See format details: [18146]https://thanos.io/storage.md/#configuration

    Type: null or string

    Default:

    ''
    if config.services.thanos.<cmd>.objstore.config == null then null
    else toString (toYAML "objstore.yaml" config.services.thanos.<cmd>.objstore.config);
    ''

    Declared by:

    [18147]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18148]services.thanos.rule.query.addresses

    Addresses of statically configured query API servers.

    The scheme may be prefixed with dns+ or dnssrv+ to detect query API servers through
    respective DNS lookups.

    Type: list of strings

    Default: [ ]

    Declared by:

    [18149]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18150]services.thanos.rule.query.sd-dns-interval

    Interval between DNS resolutions.

    Defaults to 30s in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18151]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18152]services.thanos.rule.query.sd-files

    Path to file that contain addresses of query peers. The path can be a glob pattern.

    Type: list of strings

    Default: [ ]

    Declared by:

    [18153]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18154]services.thanos.rule.query.sd-interval

    Refresh interval to re-read file SD files. (used as a fallback)

    Defaults to 5m in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18155]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18156]services.thanos.rule.rule-files

    Rule files that should be used by rule manager. Can be in glob format.

    Type: list of strings

    Default: [ ]

    Declared by:

    [18157]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18158]services.thanos.rule.stateDir

    Data directory relative to /var/lib.

    Type: string

    Default: "thanos-rule"

    Declared by:

    [18159]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18160]services.thanos.rule.tracing.config

    Tracing configuration.

    When not null the attribute set gets converted to a YAML file and stored in the Nix store.
    The option tracing.config-file will default to its path.

    If tracing.config-file is set this option has no effect.

    See format details: [18161]https://thanos.io/tracing.md/#configuration

    Type: null or attribute set

    Default: null

    Declared by:

    [18162]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18163]services.thanos.rule.tracing.config-file

    Path to YAML file that contains tracing configuration.

    See format details: [18164]https://thanos.io/tracing.md/#configuration

    Type: null or string

    Default:

    ''
    if config.services.thanos.<cmd>.tracing.config == null then null
    else toString (toYAML "tracing.yaml" config.services.thanos.<cmd>.tracing.config);
    ''

    Declared by:

    [18165]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18166]services.thanos.rule.tsdb.block-duration

    Block duration for TSDB block.

    Defaults to 2h in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18167]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18168]services.thanos.rule.tsdb.retention

    Block retention time on local disk.

    Defaults to 48h in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18169]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18170]services.thanos.rule.web.external-prefix

    Static prefix for all HTML links and redirect URLs in the UI query web interface.

    Actual endpoints are still served on / or the web.route-prefix. This allows thanos UI to be
    served behind a reverse proxy that strips a URL sub-path.

    Type: null or string

    Default: null

    Declared by:

    [18171]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18172]services.thanos.rule.web.prefix-header

    Name of HTTP request header used for dynamic prefixing of UI links and redirects.

    This option is ignored if the option web.external-prefix is set.

    Security risk: enable this option only if a reverse proxy in front of thanos is resetting the
    header.

    The header X-Forwarded-Prefix can be useful, for example, if Thanos UI is served via Traefik
    reverse proxy with PathPrefixStrip option enabled, which sends the stripped prefix value in
    X-Forwarded-Prefix header. This allows thanos UI to be served on a sub-path.

    Type: null or string

    Default: null

    Declared by:

    [18173]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18174]services.thanos.rule.web.route-prefix

    Prefix for API and UI endpoints.

    This allows thanos UI to be served on a sub-path.

    This option is analogous to --web.route-prefix of Promethus.

    Type: null or string

    Default: null

    Declared by:

    [18175]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18176]services.thanos.sidecar.enable

    Whether to enable the Thanos sidecar for Prometheus server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18177]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18178]services.thanos.sidecar.arguments

    Arguments to the thanos sidecar command.

    Defaults to a list of arguments formed by converting the structured options of
    services.thanos.sidecar to a list of arguments.

    Overriding this option will cause none of the structured options to have any effect. So only
    set this if you know what you're doing!

    Type: list of strings

    Default: [ ''--tsdb.path="/var/lib/prometheus2/data"'' ]

    Declared by:

    [18179]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18180]services.thanos.sidecar.grpc-address

    Listen ip:port address for gRPC endpoints (StoreAPI).

    Make sure this address is routable from other components.

    Defaults to 0.0.0.0:10901 in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18181]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18182]services.thanos.sidecar.grpc-server-tls-cert

    TLS Certificate for gRPC server, leave blank to disable TLS

    Type: null or string

    Default: null

    Declared by:

    [18183]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18184]services.thanos.sidecar.grpc-server-tls-client-ca

    TLS CA to verify clients against.

    If no client CA is specified, there is no client verification on server side.
    (tls.NoClientCert)

    Type: null or string

    Default: null

    Declared by:

    [18185]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18186]services.thanos.sidecar.grpc-server-tls-key

    TLS Key for the gRPC server, leave blank to disable TLS

    Type: null or string

    Default: null

    Declared by:

    [18187]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18188]services.thanos.sidecar.http-address

    Listen host:port for HTTP endpoints.

    Defaults to 0.0.0.0:10902 in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18189]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18190]services.thanos.sidecar.log.format

    Log format to use.

    Type: null or string

    Default: null

    Declared by:

    [18191]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18192]services.thanos.sidecar.log.level

    Log filtering level.

    Defaults to info in Thanos when set to null.

    Type: null or one of "debug", "info", "warn", "error", "fatal"

    Default: null

    Declared by:

    [18193]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18194]services.thanos.sidecar.objstore.config

    Object store configuration.

    When not null the attribute set gets converted to a YAML file and stored in the Nix store.
    The option objstore.config-file will default to its path.

    If objstore.config-file is set this option has no effect.

    See format details: [18195]https://thanos.io/storage.md/#configuration

    Type: null or attribute set

    Default: null

    Declared by:

    [18196]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18197]services.thanos.sidecar.objstore.config-file

    Path to YAML file that contains object store configuration.

    See format details: [18198]https://thanos.io/storage.md/#configuration

    Type: null or string

    Default:

    ''
    if config.services.thanos.<cmd>.objstore.config == null then null
    else toString (toYAML "objstore.yaml" config.services.thanos.<cmd>.objstore.config);
    ''

    Declared by:

    [18199]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18200]services.thanos.sidecar.prometheus.url

    URL at which to reach Prometheus's API.

    For better performance use local network.

    Defaults to http://localhost:9090 in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18201]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18202]services.thanos.sidecar.reloader.config-envsubst-file

    Output file for environment variable substituted config file.

    Type: null or string

    Default: null

    Declared by:

    [18203]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18204]services.thanos.sidecar.reloader.config-file

    Config file watched by the reloader.

    Type: null or string

    Default: null

    Declared by:

    [18205]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18206]services.thanos.sidecar.reloader.rule-dirs

    Rule directories for the reloader to refresh.

    Type: list of strings

    Default: [ ]

    Declared by:

    [18207]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18208]services.thanos.sidecar.tracing.config

    Tracing configuration.

    When not null the attribute set gets converted to a YAML file and stored in the Nix store.
    The option tracing.config-file will default to its path.

    If tracing.config-file is set this option has no effect.

    See format details: [18209]https://thanos.io/tracing.md/#configuration

    Type: null or attribute set

    Default: null

    Declared by:

    [18210]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18211]services.thanos.sidecar.tracing.config-file

    Path to YAML file that contains tracing configuration.

    See format details: [18212]https://thanos.io/tracing.md/#configuration

    Type: null or string

    Default:

    ''
    if config.services.thanos.<cmd>.tracing.config == null then null
    else toString (toYAML "tracing.yaml" config.services.thanos.<cmd>.tracing.config);
    ''

    Declared by:

    [18213]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18214]services.thanos.sidecar.tsdb.path

    Data directory of TSDB.

    Type: string

    Default: "/var/lib/\${config.services.prometheus.stateDir}/data"

    Declared by:

    [18215]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18216]services.thanos.store.enable

    Whether to enable the Thanos store node giving access to blocks in a bucket provider..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18217]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18218]services.thanos.store.arguments

    Arguments to the thanos store command.

    Defaults to a list of arguments formed by converting the structured options of
    services.thanos.store to a list of arguments.

    Overriding this option will cause none of the structured options to have any effect. So only
    set this if you know what you're doing!

    Type: list of strings

    Default: [ ''--data-dir="/var/lib/thanos-store"'' ]

    Declared by:

    [18219]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18220]services.thanos.store.block-sync-concurrency

    Number of goroutines to use when syncing blocks from object storage.

    Defaults to 20 in Thanos when set to null.

    Type: null or signed integer

    Default: null

    Declared by:

    [18221]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18222]services.thanos.store.chunk-pool-size

    Maximum size of concurrently allocatable bytes for chunks.

    Defaults to 2GB in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18223]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18224]services.thanos.store.grpc-address

    Listen ip:port address for gRPC endpoints (StoreAPI).

    Make sure this address is routable from other components.

    Defaults to 0.0.0.0:10901 in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18225]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18226]services.thanos.store.grpc-server-tls-cert

    TLS Certificate for gRPC server, leave blank to disable TLS

    Type: null or string

    Default: null

    Declared by:

    [18227]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18228]services.thanos.store.grpc-server-tls-client-ca

    TLS CA to verify clients against.

    If no client CA is specified, there is no client verification on server side.
    (tls.NoClientCert)

    Type: null or string

    Default: null

    Declared by:

    [18229]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18230]services.thanos.store.grpc-server-tls-key

    TLS Key for the gRPC server, leave blank to disable TLS

    Type: null or string

    Default: null

    Declared by:

    [18231]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18232]services.thanos.store.http-address

    Listen host:port for HTTP endpoints.

    Defaults to 0.0.0.0:10902 in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18233]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18234]services.thanos.store.index-cache-size

    Maximum size of items held in the index cache.

    Defaults to 250MB in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18235]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18236]services.thanos.store.log.format

    Log format to use.

    Type: null or string

    Default: null

    Declared by:

    [18237]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18238]services.thanos.store.log.level

    Log filtering level.

    Defaults to info in Thanos when set to null.

    Type: null or one of "debug", "info", "warn", "error", "fatal"

    Default: null

    Declared by:

    [18239]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18240]services.thanos.store.max-time

    End of time range limit to serve.

    Thanos Store serves only blocks, which happened eariler than this value. Option can be a
    constant time in RFC3339 format or time duration relative to current time, such as -1d or
    2h45m. Valid duration units are ms, s, m, h, d, w, y.

    Defaults to 9999-12-31T23:59:59Z in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18241]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18242]services.thanos.store.min-time

    Start of time range limit to serve.

    Thanos Store serves only metrics, which happened later than this value. Option can be a
    constant time in RFC3339 format or time duration relative to current time, such as -1d or
    2h45m. Valid duration units are ms, s, m, h, d, w, y.

    Defaults to 0000-01-01T00:00:00Z in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18243]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18244]services.thanos.store.objstore.config

    Object store configuration.

    When not null the attribute set gets converted to a YAML file and stored in the Nix store.
    The option objstore.config-file will default to its path.

    If objstore.config-file is set this option has no effect.

    See format details: [18245]https://thanos.io/storage.md/#configuration

    Type: null or attribute set

    Default: null

    Declared by:

    [18246]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18247]services.thanos.store.objstore.config-file

    Path to YAML file that contains object store configuration.

    See format details: [18248]https://thanos.io/storage.md/#configuration

    Type: null or string

    Default:

    ''
    if config.services.thanos.<cmd>.objstore.config == null then null
    else toString (toYAML "objstore.yaml" config.services.thanos.<cmd>.objstore.config);
    ''

    Declared by:

    [18249]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18250]services.thanos.store.stateDir

    Data directory relative to /var/lib in which to cache remote blocks.

    Type: string

    Default: "thanos-store"

    Declared by:

    [18251]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18252]services.thanos.store.store.grpc.series-max-concurrency

    Maximum number of concurrent Series calls.

    Defaults to 20 in Thanos when set to null.

    Type: null or signed integer

    Default: null

    Declared by:

    [18253]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18254]services.thanos.store.store.grpc.series-sample-limit

    Maximum amount of samples returned via a single Series call.

    0 means no limit.

    NOTE: for efficiency we take 120 as the number of samples in chunk (it cannot be bigger than
    that), so the actual number of samples might be lower, even though the maximum could be hit.

    Defaults to 0 in Thanos when set to null.

    Type: null or signed integer

    Default: null

    Declared by:

    [18255]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18256]services.thanos.store.sync-block-duration

    Repeat interval for syncing the blocks between local and remote view.

    Defaults to 3m in Thanos when set to null.

    Type: null or string

    Default: null

    Declared by:

    [18257]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18258]services.thanos.store.tracing.config

    Tracing configuration.

    When not null the attribute set gets converted to a YAML file and stored in the Nix store.
    The option tracing.config-file will default to its path.

    If tracing.config-file is set this option has no effect.

    See format details: [18259]https://thanos.io/tracing.md/#configuration

    Type: null or attribute set

    Default: null

    Declared by:

    [18260]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18261]services.thanos.store.tracing.config-file

    Path to YAML file that contains tracing configuration.

    See format details: [18262]https://thanos.io/tracing.md/#configuration

    Type: null or string

    Default:

    ''
    if config.services.thanos.<cmd>.tracing.config == null then null
    else toString (toYAML "tracing.yaml" config.services.thanos.<cmd>.tracing.config);
    ''

    Declared by:

    [18263]<nixpkgs/nixos/modules/services/monitoring/thanos.nix>

[18264]services.thelounge.enable

    Whether to enable The Lounge web IRC client.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18265]<nixpkgs/nixos/modules/services/networking/thelounge.nix>

[18266]services.thelounge.extraConfig

    The Lounge's config.js contents as attribute set (will be converted to JSON to generate the
    configuration file).

    The options defined here will be merged to the default configuration file. Note: In case of
    duplicate configuration, options from extraConfig have priority.

    Documentation: [18267]https://thelounge.chat/docs/server/configuration

    Type: attribute set

    Default: { }

    Example:

    {
            reverseProxy = true;
            defaults = {
              name = "Your Network";
              host = "localhost";
              port = 6697;
            };
          }

    Declared by:

    [18268]<nixpkgs/nixos/modules/services/networking/thelounge.nix>

[18269]services.thelounge.port

    TCP port to listen on for http connections.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9000

    Declared by:

    [18270]<nixpkgs/nixos/modules/services/networking/thelounge.nix>

[18271]services.thelounge.private

    Make your The Lounge instance private. You will need to configure user accounts by using the
    (thelounge) command or by adding entries in /var/lib/thelounge/users. You might need to
    restart The Lounge after making changes to the state directory.

    Type: boolean

    Default: false

    Declared by:

    [18272]<nixpkgs/nixos/modules/services/networking/thelounge.nix>

[18273]services.thermald.enable

    Whether to enable thermald, the temperature management daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18274]<nixpkgs/nixos/modules/services/hardware/thermald.nix>

[18275]services.thermald.package

    Which thermald package to use.

    Type: package

    Default: "pkgs.thermald"

    Declared by:

    [18276]<nixpkgs/nixos/modules/services/hardware/thermald.nix>

[18277]services.thermald.configFile

    the thermald manual configuration file.

    Type: null or path

    Default: null

    Declared by:

    [18278]<nixpkgs/nixos/modules/services/hardware/thermald.nix>

[18279]services.thermald.debug

    Whether to enable debug logging.

    Type: boolean

    Default: false

    Declared by:

    [18280]<nixpkgs/nixos/modules/services/hardware/thermald.nix>

[18281]services.thinkfan.enable

    Whether to enable thinkfan, a fan control program.

    Note: This module targets IBM/Lenovo thinkpads by default, for other hardware you will have
    configure it more carefully.

    Type: boolean

    Default: false

    Related packages:

      □ pkgs.thinkfan (thinkfan-1.2.1): A simple, lightweight fan control program.

        Thinkfan is a minimalist fan control program. Originally designed
        specifically for IBM/Lenovo Thinkpads, it now supports any kind of
        system via the sysfs hwmon interface (/sys/class/hwmon).

    Declared by:

    [18282]<nixpkgs/nixos/modules/services/hardware/thinkfan.nix>

[18283]services.thinkfan.extraArgs

    A list of extra command line arguments to pass to thinkfan. Check the thinkfan(1) manpage for
    available arguments.

    Type: list of strings

    Default: [ ]

    Example: [ "-b" "0" ]

    Declared by:

    [18284]<nixpkgs/nixos/modules/services/hardware/thinkfan.nix>

[18285]services.thinkfan.fans

    List of fans thinkfan will control.

    Note: This section slightly departs from the thinkfan.conf syntax. The type and path must be
    specified like this: type = "tpacpi"; query = "/proc/acpi/ibm/fan"; instead of a single
    declaration like: - tpacpi: /proc/acpi/ibm/fan

    Type: list of attribute set of YAML valuess

    Default: [ { query = "/proc/acpi/ibm/fan"; type = "tpacpi"; } ]

    Declared by:

    [18286]<nixpkgs/nixos/modules/services/hardware/thinkfan.nix>

[18287]services.thinkfan.fans.*.indices

    A list of fans to pick in case multiple fans match the query.

    Note: Indices start from 0.

    Type: null or list of unsigned integer, meaning >=0s

    Default: null

    Declared by:

    [18288]<nixpkgs/nixos/modules/services/hardware/thinkfan.nix>

[18289]services.thinkfan.fans.*.query

    The query string used to match one or more fans: can be a fullpath to the temperature file
    (single fan) or a fullpath to a driver directory (multiple fans).

    Note: When multiple fans match, the query can be restricted using the name or indices
    options.

    Type: string

    Declared by:

    [18290]<nixpkgs/nixos/modules/services/hardware/thinkfan.nix>

[18291]services.thinkfan.fans.*.type

    The fan type, can be hwmon for standard fans,

    atasmart to read the temperature via S.M.A.R.T (requires smartSupport to be enabled),

    tpacpi for the legacy thinkpac_acpi driver, or

    nvml for the (proprietary) nVidia driver.

    Type: one of "hwmon", "atasmart", "tpacpi", "nvml"

    Declared by:

    [18292]<nixpkgs/nixos/modules/services/hardware/thinkfan.nix>

[18293]services.thinkfan.levels

    [LEVEL LOW HIGH]

    LEVEL is the fan level to use: it can be an integer (0-7 with thinkpad_acpi), "level auto"
    (to keep the default firmware behavior), "level full-speed" or "level disengage" (to run the
    fan as fast as possible). LOW is the temperature at which to step down to the previous level.
    HIGH is the temperature at which to step up to the next level. All numbers are integers.

    Type: list of tuple of (unsigned integer, meaning >=0 or one of "level auto", "level
    full-speed", "level disengage") (unsigned integer, meaning >=0) (unsigned integer, meaning >=
    0)s

    Default: [ [ 0 0 55 ] [ 1 48 60 ] [ 2 50 61 ] [ 3 52 63 ] [ 6 56 65 ] [ 7 60 85 ] [ "level
    auto" 80 32767 ] ]

    Declared by:

    [18294]<nixpkgs/nixos/modules/services/hardware/thinkfan.nix>

[18295]services.thinkfan.sensors

    List of temperature sensors thinkfan will monitor.

    Note: This section slightly departs from the thinkfan.conf syntax. The type and path must be
    specified like this: type = "tpacpi"; query = "/proc/acpi/ibm/thermal"; instead of a single
    declaration like: - tpacpi: /proc/acpi/ibm/thermal

    Type: list of attribute set of YAML valuess

    Default: [ { query = "/proc/acpi/ibm/thermal"; type = "tpacpi"; } ]

    Declared by:

    [18296]<nixpkgs/nixos/modules/services/hardware/thinkfan.nix>

[18297]services.thinkfan.sensors.*.correction

    A list of values to be added to the temperature of each sensor, can be used to equalize small
    discrepancies in temperature ratings.

    Type: null or list of signed integers

    Default: null

    Declared by:

    [18298]<nixpkgs/nixos/modules/services/hardware/thinkfan.nix>

[18299]services.thinkfan.sensors.*.indices

    A list of sensors to pick in case multiple sensors match the query.

    Note: Indices start from 0.

    Type: null or list of unsigned integer, meaning >=0s

    Default: null

    Declared by:

    [18300]<nixpkgs/nixos/modules/services/hardware/thinkfan.nix>

[18301]services.thinkfan.sensors.*.query

    The query string used to match one or more sensors: can be a fullpath to the temperature file
    (single sensor) or a fullpath to a driver directory (multiple sensors).

    Note: When multiple sensors match, the query can be restricted using the name or indices
    options.

    Type: string

    Declared by:

    [18302]<nixpkgs/nixos/modules/services/hardware/thinkfan.nix>

[18303]services.thinkfan.sensors.*.type

    The sensor type, can be hwmon for standard sensors,

    atasmart to read the temperature via S.M.A.R.T (requires smartSupport to be enabled),

    tpacpi for the legacy thinkpac_acpi driver, or

    nvml for the (proprietary) nVidia driver.

    Type: one of "hwmon", "atasmart", "tpacpi", "nvml"

    Declared by:

    [18304]<nixpkgs/nixos/modules/services/hardware/thinkfan.nix>

[18305]services.thinkfan.settings

    Thinkfan settings. Use this option to configure thinkfan settings not exposed in a NixOS
    option or to bypass one. Before changing this, read the thinkfan.conf(5) manpage and take a
    look at the example config file at [18306]https://github.com/vmatare/thinkfan/blob/master/
    examples/thinkfan.yaml

    Type: attribute set of YAML values

    Default: { }

    Declared by:

    [18307]<nixpkgs/nixos/modules/services/hardware/thinkfan.nix>

[18308]services.thinkfan.smartSupport

    Whether to build thinkfan with S.M.A.R.T. support to read temperatures directly from hard
    disks.

    Type: boolean

    Default: false

    Declared by:

    [18309]<nixpkgs/nixos/modules/services/hardware/thinkfan.nix>

[18310]services.throttled.enable

    Whether to enable fix for Intel CPU throttling.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18311]<nixpkgs/nixos/modules/services/hardware/throttled.nix>

[18312]services.throttled.extraConfig

    Alternative configuration

    Type: string

    Default: ""

    Declared by:

    [18313]<nixpkgs/nixos/modules/services/hardware/throttled.nix>

[18314]services.tiddlywiki.enable

    Whether to enable TiddlyWiki nodejs server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18315]<nixpkgs/nixos/modules/services/misc/tiddlywiki.nix>

[18316]services.tiddlywiki.listenOptions

    Parameters passed to --listen command. Refer to [18317]https://tiddlywiki.com/#WebServer for
    details on supported values.

    Type: attribute set

    Default: { }

    Example: { credentials = "../credentials.csv"; port = 3456; readers = "(authenticated)"; }

    Declared by:

    [18318]<nixpkgs/nixos/modules/services/misc/tiddlywiki.nix>

[18319]services.timesyncd.enable

    Enables the systemd NTP client daemon.

    Type: boolean

    Default: true

    Declared by:

    [18320]<nixpkgs/nixos/modules/system/boot/timesyncd.nix>

[18321]services.timesyncd.extraConfig

    Extra config options for systemd-timesyncd. See [18322] timesyncd.conf(5) for available
    options.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    PollIntervalMaxSec=180
    ''

    Declared by:

    [18323]<nixpkgs/nixos/modules/system/boot/timesyncd.nix>

[18324]services.timesyncd.servers

    The set of NTP servers from which to synchronise.

    Type: list of strings

    Default: [ "0.nixos.pool.ntp.org" "1.nixos.pool.ntp.org" "2.nixos.pool.ntp.org"
    "3.nixos.pool.ntp.org" ]

    Declared by:

    [18325]<nixpkgs/nixos/modules/system/boot/timesyncd.nix>

[18326]services.tinc.networks

    Defines the tinc networks which will be started. Each network invokes a different daemon.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [18327]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18328]services.tinc.networks.<name>.package

    The package to use for the tinc daemon's binary.

    Type: package

    Default: "pkgs.tinc_pre"

    Declared by:

    [18329]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18330]services.tinc.networks.<name>.bindToAddress

    The ip address to bind to (both listen on and send packets from).

    Type: null or string

    Default: null

    Declared by:

    [18331]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18332]services.tinc.networks.<name>.chroot

    Change process root directory to the directory where the config file is located (/etc/tinc/
    netname/), for added security. The chroot is performed after all the initialization is done,
    after writing pid files and opening network sockets.

    Note that tinc can't run scripts anymore (such as tinc-down or host-up), unless it is setup
    to be runnable inside chroot environment.

    Type: boolean

    Default: true

    Declared by:

    [18333]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18334]services.tinc.networks.<name>.debugLevel

    The amount of debugging information to add to the log. 0 means little logging while 5 is the
    most logging. man tincd for more details.

    Type: signed integer

    Default: 0

    Declared by:

    [18335]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18336]services.tinc.networks.<name>.ed25519PrivateKeyFile

    Path of the private ed25519 keyfile.

    Type: null or path

    Default: null

    Declared by:

    [18337]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18338]services.tinc.networks.<name>.extraConfig

    Extra lines to add to the tinc service configuration file.

    Note that using the declarative service.tinc.networks.<name>.settings option is preferred.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [18339]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18340]services.tinc.networks.<name>.hostSettings

    The name of the host in the network as well as the configuration for that host. This name
    should only contain alphanumerics and underscores.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      host1 = {
        addresses = [
          { address = "192.168.1.42"; }
          { address = "192.168.1.42"; port = 1655; }
        ];
        subnets = [ { address = "10.0.0.42"; } ];
        rsaPublicKey = "...";
        settings = {
          Ed25519PublicKey = "...";
        };
      };
      host2 = {
        subnets = [ { address = "10.0.1.0"; prefixLength = 24; weight = 2; } ];
        rsaPublicKey = "...";
        settings = {
          Compression = 10;
        };
      };
    }

    Declared by:

    [18341]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18342]services.tinc.networks.<name>.hostSettings.<name>.addresses

    The external address where the host can be reached. This will set this host's
    settings.Address option.

    This variable is only required if you want to connect to this host.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [18343]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18344]services.tinc.networks.<name>.hostSettings.<name>.addresses.*.address

    The external IP address or hostname where the host can be reached.

    Type: string

    Declared by:

    [18345]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18346]services.tinc.networks.<name>.hostSettings.<name>.addresses.*.port

    The port where the host can be reached.

    If no port is specified, the default Port is used.

    Type: null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: null

    Declared by:

    [18347]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18348]services.tinc.networks.<name>.hostSettings.<name>.rsaPublicKey

    Legacy RSA public key of the host in PEM format, including start and end markers.

    This will be appended as-is in the host's configuration file.

    The ed25519 public key can be specified using the settings.Ed25519PublicKey option instead.

    Type: string

    Default: ""

    Declared by:

    [18349]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18350]services.tinc.networks.<name>.hostSettings.<name>.settings

    Configuration for this host.

    See [18351]https://tinc-vpn.org/documentation-1.1/Host-configuration-variables.html for
    supported values.

    Type: attribute set of boolean or string or signed integer or list of boolean or string or
    signed integerss

    Default: { }

    Declared by:

    [18352]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18353]services.tinc.networks.<name>.hostSettings.<name>.subnets

    The subnets which this tinc daemon will serve. This will set this host's settings.Subnet
    option.

    Tinc tries to look up which other daemon it should send a packet to by searching the
    appropriate subnet. If the packet matches a subnet, it will be sent to the daemon who has
    this subnet in his host configuration file.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [18354]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18355]services.tinc.networks.<name>.hostSettings.<name>.subnets.*.address

    The subnet of this host.

    Subnets can either be single MAC, IPv4 or IPv6 addresses, in which case a subnet consisting
    of only that single address is assumed, or they can be a IPv4 or IPv6 network address with a
    prefix length.

    IPv4 subnets are notated like 192.168.1.0/24, IPv6 subnets are notated like fec0:0:0:1::/64.
    MAC addresses are notated like 0:1a:2b:3c:4d:5e.

    Note that subnets like 192.168.1.1/24 are invalid.

    Type: string

    Declared by:

    [18356]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18357]services.tinc.networks.<name>.hostSettings.<name>.subnets.*.prefixLength

    The prefix length of the subnet.

    If null, a subnet consisting of only that single address is assumed.

    This conforms to standard CIDR notation as described in RFC1519.

    Type: null or signed integer

    Default: null

    Declared by:

    [18358]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18359]services.tinc.networks.<name>.hostSettings.<name>.subnets.*.weight

    Indicates the priority over identical Subnets owned by different nodes.

    Lower values indicate higher priority. Packets will be sent to the node with the highest
    priority, unless that node is not reachable, in which case the node with the next highest
    priority will be tried, and so on.

    Type: unsigned integer, meaning >=0

    Default: 10

    Declared by:

    [18360]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18361]services.tinc.networks.<name>.hosts

    The name of the host in the network as well as the configuration for that host. This name
    should only contain alphanumerics and underscores.

    Note that using the declarative service.tinc.networks.<name>.hostSettings option is
    preferred.

    Type: attribute set of strings concatenated with "\n"s

    Default: { }

    Declared by:

    [18362]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18363]services.tinc.networks.<name>.interfaceType

    The type of virtual interface used for the network connection.

    Type: one of "tun", "tap"

    Default: "tun"

    Declared by:

    [18364]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18365]services.tinc.networks.<name>.listenAddress

    The ip address to listen on for incoming connections.

    Type: null or string

    Default: null

    Declared by:

    [18366]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18367]services.tinc.networks.<name>.name

    The name of the node which is used as an identifier when communicating with the remote nodes
    in the mesh. If null then the hostname of the system is used to derive a name (note that tinc
    may replace non-alphanumeric characters in hostnames by underscores).

    Type: null or string

    Default: null

    Declared by:

    [18368]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18369]services.tinc.networks.<name>.rsaPrivateKeyFile

    Path of the private RSA keyfile.

    Type: null or path

    Default: null

    Declared by:

    [18370]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18371]services.tinc.networks.<name>.settings

    Configuration of the Tinc daemon for this network.

    See [18372]https://tinc-vpn.org/documentation-1.1/Main-configuration-variables.html for
    supported values.

    Type: attribute set of boolean or string or signed integer or list of boolean or string or
    signed integerss

    Default: { }

    Example:

    {
      Interface = "custom.interface";
      DirectOnly = true;
      Mode = "switch";
    }

    Declared by:

    [18373]<nixpkgs/nixos/modules/services/networking/tinc.nix>

[18374]services.tinydns.enable

    Whether to run the tinydns dns server

    Type: boolean

    Default: false

    Declared by:

    [18375]<nixpkgs/nixos/modules/services/networking/tinydns.nix>

[18376]services.tinydns.data

    The DNS data to serve, in the format described by tinydns-data(8)

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [18377]<nixpkgs/nixos/modules/services/networking/tinydns.nix>

[18378]services.tinydns.ip

    IP address on which to listen for connections

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [18379]<nixpkgs/nixos/modules/services/networking/tinydns.nix>

[18380]services.tlp.enable

    Whether to enable the TLP power management daemon.

    Type: boolean

    Default: false

    Declared by:

    [18381]<nixpkgs/nixos/modules/services/hardware/tlp.nix>

[18382]services.tlp.extraConfig

    Verbatim additional configuration variables for TLP. DEPRECATED: use services.tlp.settings
    instead.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [18383]<nixpkgs/nixos/modules/services/hardware/tlp.nix>

[18384]services.tlp.settings

    Options passed to TLP. See https://linrunner.de/tlp for all supported options..

    Type: attribute set of boolean or signed integer or floating point number or string or list
    of stringss

    Default: { }

    Example: { SATA_LINKPWR_ON_BAT = "med_power_with_dipm"; USB_BLACKLIST_PHONE = 1; }

    Declared by:

    [18385]<nixpkgs/nixos/modules/services/hardware/tlp.nix>

[18386]services.tomcat.enable

    Whether to enable Apache Tomcat.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18387]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18388]services.tomcat.package

    Which tomcat package to use.

    Type: package

    Default: "pkgs.tomcat85"

    Example:

    pkgs.tomcat9

    Declared by:

    [18389]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18390]services.tomcat.axis2.enable

    Whether to enable an Apache Axis2 container

    Type: boolean

    Default: false

    Declared by:

    [18391]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18392]services.tomcat.axis2.services

    List containing AAR files or directories with AAR files which are web services to be deployed
    on Axis2

    Type: list of strings

    Default: [ ]

    Declared by:

    [18393]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18394]services.tomcat.baseDir

    Location where Tomcat stores configuration files, web applications and logfiles. Note that it
    is partially cleared on each service startup if `purifyOnStart` is enabled.

    Type: path

    Default: "/var/tomcat"

    Declared by:

    [18395]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18396]services.tomcat.catalinaOpts

    Parameters to pass to the Java Virtual Machine which spawns the Catalina servlet container

    Type: list of strings or string

    Default: ""

    Declared by:

    [18397]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18398]services.tomcat.commonLibs

    List containing JAR files or directories with JAR files which are libraries shared by the web
    applications and the servlet container

    Type: list of strings

    Default: [ ]

    Declared by:

    [18399]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18400]services.tomcat.extraConfigFiles

    Extra configuration files to pull into the tomcat conf directory

    Type: list of paths

    Default: [ ]

    Declared by:

    [18401]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18402]services.tomcat.extraEnvironment

    Environment Variables to pass to the tomcat service

    Type: list of strings

    Default: [ ]

    Example: [ "ENVIRONMENT=production" ]

    Declared by:

    [18403]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18404]services.tomcat.extraGroups

    Defines extra groups to which the tomcat user belongs.

    Type: list of strings

    Default: [ ]

    Example: [ "users" ]

    Declared by:

    [18405]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18406]services.tomcat.group

    Group account under which Apache Tomcat runs.

    Type: string

    Default: "tomcat"

    Declared by:

    [18407]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18408]services.tomcat.javaOpts

    Parameters to pass to the Java Virtual Machine which spawns Apache Tomcat

    Type: list of strings or string

    Default: ""

    Declared by:

    [18409]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18410]services.tomcat.jdk

    Which JDK to use.

    Type: package

    Default: "pkgs.jdk"

    Declared by:

    [18411]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18412]services.tomcat.logDirs

    Directories to create in baseDir/logs/

    Type: list of paths

    Default: [ ]

    Declared by:

    [18413]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18414]services.tomcat.logPerVirtualHost

    Whether to enable logging per virtual host.

    Type: boolean

    Default: false

    Declared by:

    [18415]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18416]services.tomcat.purifyOnStart

    On startup, the `baseDir` directory is populated with various files, subdirectories and
    symlinks. If this option is enabled, these items (except for the `logs` and `work`
    subdirectories) are first removed. This prevents interference from remainders of an old
    configuration (libraries, webapps, etc.), so it's recommended to enable this option.

    Type: boolean

    Default: false

    Declared by:

    [18417]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18418]services.tomcat.serverXml

    Verbatim server.xml configuration. This is mutually exclusive with the virtualHosts options.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [18419]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18420]services.tomcat.sharedLibs

    List containing JAR files or directories with JAR files which are libraries shared by the web
    applications

    Type: list of strings

    Default: [ ]

    Declared by:

    [18421]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18422]services.tomcat.user

    User account under which Apache Tomcat runs.

    Type: string

    Default: "tomcat"

    Declared by:

    [18423]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18424]services.tomcat.virtualHosts

    List consisting of a virtual host name and a list of web applications to deploy on each
    virtual host

    Type: list of submodules

    Default: [ ]

    Declared by:

    [18425]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18426]services.tomcat.virtualHosts.*.aliases

    aliases of the virtualhost

    Type: list of strings

    Default: [ ]

    Declared by:

    [18427]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18428]services.tomcat.virtualHosts.*.name

    name of the virtualhost

    Type: string

    Declared by:

    [18429]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18430]services.tomcat.virtualHosts.*.webapps

    List containing web application WAR files and/or directories containing web applications and
    configuration files for the virtual host.

    Type: list of paths

    Default: [ ]

    Declared by:

    [18431]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18432]services.tomcat.webapps

    List containing WAR files or directories with WAR files which are web applications to be
    deployed on Tomcat

    Type: list of paths

    Default: "[ pkgs.tomcat85.webapps ]"

    Declared by:

    [18433]<nixpkgs/nixos/modules/services/web-servers/tomcat.nix>

[18434]services.tor.enable

    Whether to enable Tor daemon. By default, the daemon is run without relay, exit, bridge or
    client connectivity.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18435]<nixpkgs/nixos/modules/services/security/tor.nix>

[18436]services.tor.enableGeoIP

    Whether to enable use of GeoIP databases. Disabling this will disable by-country statistics
    for bridges and relays and some client and third-party software functionality.

    Type: boolean

    Default: true

    Example: true

    Declared by:

    [18437]<nixpkgs/nixos/modules/services/security/tor.nix>

[18438]services.tor.package

    Tor package to use.

    Type: package

    Default: "pkgs.tor"

    Example:

    pkgs.tor

    Declared by:

    [18439]<nixpkgs/nixos/modules/services/security/tor.nix>

[18440]services.tor.client.enable

    Whether to enable the routing of application connections. You might want to disable this if
    you plan running a dedicated Tor relay.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18441]<nixpkgs/nixos/modules/services/security/tor.nix>

[18442]services.tor.client.dns.enable

    Whether to enable DNS resolver.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18443]<nixpkgs/nixos/modules/services/security/tor.nix>

[18444]services.tor.client.onionServices

    See [18445]torrc manual.

    Type: attribute set of submodules

    Default: { }

    Example: { xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = { clientAuthorizations
    = [ "/run/keys/tor/alice.prv.x25519" ] ; } ; }

    Declared by:

    [18446]<nixpkgs/nixos/modules/services/security/tor.nix>

[18447]services.tor.client.onionServices.<name>.clientAuthorizations

    Clients' authorizations for a v3 onion service, as a list of files containing each one
    private key, in the format:

    descriptor:x25519:<base32-private-key>

    See [18448]torrc manual.

    Type: list of paths

    Default: [ ]

    Example: [ "/run/keys/tor/alice.prv.x25519" ]

    Declared by:

    [18449]<nixpkgs/nixos/modules/services/security/tor.nix>

[18450]services.tor.client.socksListenAddress

    Bind to this address to listen for connections from Socks-speaking applications.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive) or submodule

    Default: { IsolateDestAddr = true; addr = "127.0.0.1"; port = 9050; }

    Example: { IsolateDestAddr = true; addr = "192.168.0.1"; port = 9090; }

    Declared by:

    [18451]<nixpkgs/nixos/modules/services/security/tor.nix>

[18452]services.tor.client.transparentProxy.enable

    Whether to enable transparent proxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18453]<nixpkgs/nixos/modules/services/security/tor.nix>

[18454]services.tor.controlSocket.enable

    Whether to enable control socket, created in /run/tor/control.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18455]<nixpkgs/nixos/modules/services/security/tor.nix>

[18456]services.tor.openFirewall

    Whether to enable opening of the relay port(s) in the firewall.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18457]<nixpkgs/nixos/modules/services/security/tor.nix>

[18458]services.tor.relay.enable

    Whether to enable relaying of Tor traffic for others.

    See [18459]https://www.torproject.org/docs/tor-doc-relay for details.

    Setting this to true requires setting services.tor.relay.role and
    services.tor.settings.ORPort options.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18460]<nixpkgs/nixos/modules/services/security/tor.nix>

[18461]services.tor.relay.onionServices

    See [18462]torrc manual.

    Type: attribute set of submodules

    Default: { }

    Example: { example.org/www = { authorizedClients = [
    "descriptor:x25519:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ] ; map = [ 80 ] ; }
    ; }

    Declared by:

    [18463]<nixpkgs/nixos/modules/services/security/tor.nix>

[18464]services.tor.relay.onionServices.<name>.authorizeClient

    See [18465]torrc manual.

    Type: null or submodule

    Default: null

    Declared by:

    [18466]<nixpkgs/nixos/modules/services/security/tor.nix>

[18467]services.tor.relay.onionServices.<name>.authorizeClient.authType

    Either "basic" for a general-purpose authorization protocol or "stealth" for a less scalable
    protocol that also hides service activity from unauthorized clients.

    Type: one of "basic", "stealth"

    Declared by:

    [18468]<nixpkgs/nixos/modules/services/security/tor.nix>

[18469]services.tor.relay.onionServices.<name>.authorizeClient.clientNames

    Only clients that are listed here are authorized to access the hidden service. Generated
    authorization data can be found in /var/lib/tor/onion/$name/hostname. Clients need to put
    this authorization data in their configuration file using [18470]
    services.tor.settings.HidServAuth.

    Type: non-empty list of string matching the pattern [A-Za-z0-9+-_]+s

    Declared by:

    [18471]<nixpkgs/nixos/modules/services/security/tor.nix>

[18472]services.tor.relay.onionServices.<name>.authorizedClients

    Authorized clients for a v3 onion service, as a list of public key, in the format:

    descriptor:x25519:<base32-public-key>

    See [18473]torrc manual.

    Type: list of strings

    Default: [ ]

    Example: [ "descriptor:x25519:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" ]

    Declared by:

    [18474]<nixpkgs/nixos/modules/services/security/tor.nix>

[18475]services.tor.relay.onionServices.<name>.map

    See [18476]torrc manual.

    Type: list of 16 bit unsigned integer; between 0 and 65535 (both inclusive) or submodules

    Declared by:

    [18477]<nixpkgs/nixos/modules/services/security/tor.nix>

[18478]services.tor.relay.onionServices.<name>.path

    Path where to store the data files of the hidden service. If the secretKey is null this
    defaults to /var/lib/tor/onion/$onion, otherwise to /run/tor/onion/$onion.

    Type: path

    Declared by:

    [18479]<nixpkgs/nixos/modules/services/security/tor.nix>

[18480]services.tor.relay.onionServices.<name>.secretKey

    Secret key of the onion service. If null, Tor reuses any preexisting secret key (in path) or
    generates a new one. The associated public key and hostname are deterministically regenerated
    from this file if they do not exist.

    Type: null or path

    Default: null

    Example: "/run/keys/tor/onion/expyuzz4wqqyqhjn/hs_ed25519_secret_key"

    Declared by:

    [18481]<nixpkgs/nixos/modules/services/security/tor.nix>

[18482]services.tor.relay.onionServices.<name>.settings

    Settings of the onion service. See [18483]torrc manual.

    Type: settings option

    Default: { }

    Declared by:

    [18484]<nixpkgs/nixos/modules/services/security/tor.nix>

[18485]services.tor.relay.onionServices.<name>.settings.HiddenServiceAllowUnknownPorts

    See [18486]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18487]<nixpkgs/nixos/modules/services/security/tor.nix>

[18488]services.tor.relay.onionServices.<name>.settings.HiddenServiceDirGroupReadable

    See [18489]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18490]<nixpkgs/nixos/modules/services/security/tor.nix>

[18491]services.tor.relay.onionServices.<name>.settings.HiddenServiceExportCircuitID

    See [18492]torrc manual.

    Type: null or one of "haproxy"

    Default: null

    Declared by:

    [18493]<nixpkgs/nixos/modules/services/security/tor.nix>

[18494]services.tor.relay.onionServices.<name>.settings.HiddenServiceMaxStreams

    See [18495]torrc manual.

    Type: null or integer between 0 and 65535 (both inclusive)

    Default: null

    Declared by:

    [18496]<nixpkgs/nixos/modules/services/security/tor.nix>

[18497]services.tor.relay.onionServices.<name>.settings.HiddenServiceMaxStreamsCloseCircuit

    See [18498]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18499]<nixpkgs/nixos/modules/services/security/tor.nix>

[18500]services.tor.relay.onionServices.<name>.settings.HiddenServiceNumIntroductionPoints

    See [18501]torrc manual.

    Type: null or integer between 0 and 20 (both inclusive)

    Default: null

    Declared by:

    [18502]<nixpkgs/nixos/modules/services/security/tor.nix>

[18503]services.tor.relay.onionServices.<name>.settings.HiddenServiceSingleHopMode

    See [18504]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18505]<nixpkgs/nixos/modules/services/security/tor.nix>

[18506]services.tor.relay.onionServices.<name>.settings.RendPostPeriod

    See [18507]torrc manual.

    Type: null or string

    Default: null

    Declared by:

    [18508]<nixpkgs/nixos/modules/services/security/tor.nix>

[18509]services.tor.relay.onionServices.<name>.version

    See [18510]torrc manual.

    Type: null or one of 2, 3

    Default: null

    Declared by:

    [18511]<nixpkgs/nixos/modules/services/security/tor.nix>

[18512]services.tor.relay.role

    Your role in Tor network. There're several options:

    exit

        An exit relay. This allows Tor users to access regular Internet services through your
        public IP.

        Important

        Running an exit relay may expose you to abuse complaints. See [18513]https://
        www.torproject.org/faq.html.en#ExitPolicies for more info.

        You can specify which services Tor users may access via your exit relay using
        settings.ExitPolicy option.

    relay

        Regular relay. This allows Tor users to relay onion traffic to other Tor nodes, but not
        to public Internet.

        Important

        Note that some misconfigured and/or disrespectful towards privacy sites will block you
        even if your relay is not an exit relay. That is, just being listed in a public relay
        directory can have unwanted consequences. Which means you might not want to use this role
        if you browse public Internet from the same network as your relay, unless you want to
        write e-mails to those sites (you should!).

        See [18514]https://www.torproject.org/docs/tor-doc-relay.html.en for more info.

    bridge

        Regular bridge. Works like a regular relay, but doesn't list you in the public relay
        directory and hides your Tor node behind obfs4proxy.

        Using this option will make Tor advertise your bridge to users through various mechanisms
        like [18515]https://bridges.torproject.org/, though.

        Important

        WARNING: THE FOLLOWING PARAGRAPH IS NOT LEGAL ADVICE. Consult with your lawyer when in
        doubt.

        This role should be safe to use in most situations (unless the act of forwarding traffic
        for others is a punishable offence under your local laws, which would be pretty insane as
        it would make ISP illegal).

        See [18516]https://www.torproject.org/docs/bridges.html.en for more info.

    private-bridge

        Private bridge. Works like regular bridge, but does not advertise your node in any way.

        Using this role means that you won't contribute to Tor network in any way unless you
        advertise your node yourself in some way.

        Use this if you want to run a private bridge, for example because you'll give out your
        bridge addr manually to your friends.

        Switching to this role after measurable time in "bridge" role is pretty useless as some
        Tor users would have learned about your node already. In the latter case you can still
        change port option.

        See [18517]https://www.torproject.org/docs/bridges.html.en for more info.

    Type: one of "exit", "relay", "bridge", "private-bridge"

    Declared by:

    [18518]<nixpkgs/nixos/modules/services/security/tor.nix>

[18519]services.tor.settings

    See [18520]torrc manual for documentation.

    Type: settings option

    Default: { }

    Declared by:

    [18521]<nixpkgs/nixos/modules/services/security/tor.nix>

[18522]services.tor.settings.AccountingMax

    See [18523]torrc manual.

    Type: null or signed integer or string

    Default: null

    Declared by:

    [18524]<nixpkgs/nixos/modules/services/security/tor.nix>

[18525]services.tor.settings.AccountingStart

    See [18526]torrc manual.

    Type: null or string

    Default: null

    Declared by:

    [18527]<nixpkgs/nixos/modules/services/security/tor.nix>

[18528]services.tor.settings.Address

    See [18529]torrc manual.

    Type: null or string

    Default: null

    Declared by:

    [18530]<nixpkgs/nixos/modules/services/security/tor.nix>

[18531]services.tor.settings.AssumeReachable

    See [18532]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18533]<nixpkgs/nixos/modules/services/security/tor.nix>

[18534]services.tor.settings.AuthDirHasIPv6Connectivity

    See [18535]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18536]<nixpkgs/nixos/modules/services/security/tor.nix>

[18537]services.tor.settings.AuthDirListBadExits

    See [18538]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18539]<nixpkgs/nixos/modules/services/security/tor.nix>

[18540]services.tor.settings.AuthDirPinKeys

    See [18541]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18542]<nixpkgs/nixos/modules/services/security/tor.nix>

[18543]services.tor.settings.AuthDirSharedRandomness

    See [18544]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18545]<nixpkgs/nixos/modules/services/security/tor.nix>

[18546]services.tor.settings.AuthDirTestEd25519LinkKeys

    See [18547]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18548]<nixpkgs/nixos/modules/services/security/tor.nix>

[18549]services.tor.settings.AuthoritativeDirectory

    See [18550]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18551]<nixpkgs/nixos/modules/services/security/tor.nix>

[18552]services.tor.settings.AutomapHostsOnResolve

    See [18553]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18554]<nixpkgs/nixos/modules/services/security/tor.nix>

[18555]services.tor.settings.AutomapHostsSuffixes

    See [18556]torrc manual.

    Type: list of strings

    Default: [ ".onion" ".exit" ]

    Example: [ ".onion" ]

    Declared by:

    [18557]<nixpkgs/nixos/modules/services/security/tor.nix>

[18558]services.tor.settings.BandwidthBurst

    See [18559]torrc manual.

    Type: null or signed integer or string

    Default: null

    Declared by:

    [18560]<nixpkgs/nixos/modules/services/security/tor.nix>

[18561]services.tor.settings.BandwidthRate

    See [18562]torrc manual.

    Type: null or signed integer or string

    Default: null

    Declared by:

    [18563]<nixpkgs/nixos/modules/services/security/tor.nix>

[18564]services.tor.settings.BridgeAuthoritativeDir

    See [18565]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18566]<nixpkgs/nixos/modules/services/security/tor.nix>

[18567]services.tor.settings.BridgeRecordUsageByCountry

    See [18568]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18569]<nixpkgs/nixos/modules/services/security/tor.nix>

[18570]services.tor.settings.BridgeRelay

    See [18571]torrc manual.

    Type: null or boolean

    Default: false

    Declared by:

    [18572]<nixpkgs/nixos/modules/services/security/tor.nix>

[18573]services.tor.settings.CacheDirectory

    See [18574]torrc manual.

    Type: null or path

    Default: null

    Declared by:

    [18575]<nixpkgs/nixos/modules/services/security/tor.nix>

[18576]services.tor.settings.CacheDirectoryGroupReadable

    See [18577]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18578]<nixpkgs/nixos/modules/services/security/tor.nix>

[18579]services.tor.settings.CellStatistics

    See [18580]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18581]<nixpkgs/nixos/modules/services/security/tor.nix>

[18582]services.tor.settings.ClientAutoIPv6ORPort

    See [18583]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18584]<nixpkgs/nixos/modules/services/security/tor.nix>

[18585]services.tor.settings.ClientDNSRejectInternalAddresses

    See [18586]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18587]<nixpkgs/nixos/modules/services/security/tor.nix>

[18588]services.tor.settings.ClientOnionAuthDir

    See [18589]torrc manual.

    Type: null or path

    Default: null

    Declared by:

    [18590]<nixpkgs/nixos/modules/services/security/tor.nix>

[18591]services.tor.settings.ClientPreferIPv6DirPort

    See [18592]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18593]<nixpkgs/nixos/modules/services/security/tor.nix>

[18594]services.tor.settings.ClientPreferIPv6ORPort

    See [18595]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18596]<nixpkgs/nixos/modules/services/security/tor.nix>

[18597]services.tor.settings.ClientRejectInternalAddresses

    See [18598]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18599]<nixpkgs/nixos/modules/services/security/tor.nix>

[18600]services.tor.settings.ClientUseIPv4

    See [18601]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18602]<nixpkgs/nixos/modules/services/security/tor.nix>

[18603]services.tor.settings.ClientUseIPv6

    See [18604]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18605]<nixpkgs/nixos/modules/services/security/tor.nix>

[18606]services.tor.settings.ConnDirectionStatistics

    See [18607]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18608]<nixpkgs/nixos/modules/services/security/tor.nix>

[18609]services.tor.settings.ConstrainedSockets

    See [18610]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18611]<nixpkgs/nixos/modules/services/security/tor.nix>

[18612]services.tor.settings.ContactInfo

    See [18613]torrc manual.

    Type: null or string

    Default: null

    Declared by:

    [18614]<nixpkgs/nixos/modules/services/security/tor.nix>

[18615]services.tor.settings.ControlPort

    See [18616]torrc manual.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive) or one of "auto" or list
    of 16 bit unsigned integer; between 0 and 65535 (both inclusive) or one of "auto" or
    submodules

    Default: [ ]

    Example: [ { port = 9051; } ]

    Declared by:

    [18617]<nixpkgs/nixos/modules/services/security/tor.nix>

[18618]services.tor.settings.ControlPortFileGroupReadable

    See [18619]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18620]<nixpkgs/nixos/modules/services/security/tor.nix>

[18621]services.tor.settings.ControlPortWriteToFile

    See [18622]torrc manual.

    Type: null or path

    Default: null

    Declared by:

    [18623]<nixpkgs/nixos/modules/services/security/tor.nix>

[18624]services.tor.settings.ControlSocket

    See [18625]torrc manual.

    Type: null or path

    Default: null

    Declared by:

    [18626]<nixpkgs/nixos/modules/services/security/tor.nix>

[18627]services.tor.settings.ControlSocketsGroupWritable

    See [18628]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18629]<nixpkgs/nixos/modules/services/security/tor.nix>

[18630]services.tor.settings.CookieAuthFile

    See [18631]torrc manual.

    Type: null or path

    Default: null

    Declared by:

    [18632]<nixpkgs/nixos/modules/services/security/tor.nix>

[18633]services.tor.settings.CookieAuthFileGroupReadable

    See [18634]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18635]<nixpkgs/nixos/modules/services/security/tor.nix>

[18636]services.tor.settings.CookieAuthentication

    See [18637]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18638]<nixpkgs/nixos/modules/services/security/tor.nix>

[18639]services.tor.settings.DNSPort

    See [18640]torrc manual.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive) or one of "auto" or
    submodule or list of 16 bit unsigned integer; between 0 and 65535 (both inclusive) or one of
    "auto" or submodules

    Default: [ ]

    Declared by:

    [18641]<nixpkgs/nixos/modules/services/security/tor.nix>

[18642]services.tor.settings.DataDirectory

    See [18643]torrc manual.

    Type: null or path

    Default: "/var/lib/tor"

    Declared by:

    [18644]<nixpkgs/nixos/modules/services/security/tor.nix>

[18645]services.tor.settings.DataDirectoryGroupReadable

    See [18646]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18647]<nixpkgs/nixos/modules/services/security/tor.nix>

[18648]services.tor.settings.DirAllowPrivateAddresses

    See [18649]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18650]<nixpkgs/nixos/modules/services/security/tor.nix>

[18651]services.tor.settings.DirCache

    See [18652]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18653]<nixpkgs/nixos/modules/services/security/tor.nix>

[18654]services.tor.settings.DirPolicy

    See [18655]torrc manual.

    Type: list of strings

    Default: [ ]

    Example: [ "accept *:*" ]

    Declared by:

    [18656]<nixpkgs/nixos/modules/services/security/tor.nix>

[18657]services.tor.settings.DirPort

    See [18658]torrc manual.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive) or one of "auto" or list
    of 16 bit unsigned integer; between 0 and 65535 (both inclusive) or one of "auto" or
    submodules

    Default: [ ]

    Example: 443

    Declared by:

    [18659]<nixpkgs/nixos/modules/services/security/tor.nix>

[18660]services.tor.settings.DirPortFrontPage

    See [18661]torrc manual.

    Type: null or path

    Default: null

    Declared by:

    [18662]<nixpkgs/nixos/modules/services/security/tor.nix>

[18663]services.tor.settings.DirReqStatistics

    See [18664]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18665]<nixpkgs/nixos/modules/services/security/tor.nix>

[18666]services.tor.settings.DisableAllSwap

    See [18667]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18668]<nixpkgs/nixos/modules/services/security/tor.nix>

[18669]services.tor.settings.DisableDebuggerAttachment

    See [18670]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18671]<nixpkgs/nixos/modules/services/security/tor.nix>

[18672]services.tor.settings.DisableNetwork

    See [18673]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18674]<nixpkgs/nixos/modules/services/security/tor.nix>

[18675]services.tor.settings.DisableOOSCheck

    See [18676]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18677]<nixpkgs/nixos/modules/services/security/tor.nix>

[18678]services.tor.settings.DoSCircuitCreationEnabled

    See [18679]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18680]<nixpkgs/nixos/modules/services/security/tor.nix>

[18681]services.tor.settings.DoSConnectionEnabled

    See [18682]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18683]<nixpkgs/nixos/modules/services/security/tor.nix>

[18684]services.tor.settings.DoSRefuseSingleHopClientRendezvous

    See [18685]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18686]<nixpkgs/nixos/modules/services/security/tor.nix>

[18687]services.tor.settings.DormantCanceledByStartup

    See [18688]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18689]<nixpkgs/nixos/modules/services/security/tor.nix>

[18690]services.tor.settings.DormantOnFirstStartup

    See [18691]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18692]<nixpkgs/nixos/modules/services/security/tor.nix>

[18693]services.tor.settings.DormantTimeoutDisabledByIdleStreams

    See [18694]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18695]<nixpkgs/nixos/modules/services/security/tor.nix>

[18696]services.tor.settings.DownloadExtraInfo

    See [18697]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18698]<nixpkgs/nixos/modules/services/security/tor.nix>

[18699]services.tor.settings.EnforceDistinctSubnets

    See [18700]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18701]<nixpkgs/nixos/modules/services/security/tor.nix>

[18702]services.tor.settings.EntryStatistics

    See [18703]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18704]<nixpkgs/nixos/modules/services/security/tor.nix>

[18705]services.tor.settings.ExitPolicy

    See [18706]torrc manual.

    Type: list of strings

    Default: [ "reject *:*" ]

    Example: [ "accept *:*" ]

    Declared by:

    [18707]<nixpkgs/nixos/modules/services/security/tor.nix>

[18708]services.tor.settings.ExitPolicyRejectLocalInterfaces

    See [18709]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18710]<nixpkgs/nixos/modules/services/security/tor.nix>

[18711]services.tor.settings.ExitPolicyRejectPrivate

    See [18712]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18713]<nixpkgs/nixos/modules/services/security/tor.nix>

[18714]services.tor.settings.ExitPortStatistics

    See [18715]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18716]<nixpkgs/nixos/modules/services/security/tor.nix>

[18717]services.tor.settings.ExitRelay

    See [18718]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18719]<nixpkgs/nixos/modules/services/security/tor.nix>

[18720]services.tor.settings.ExtORPort

    See [18721]torrc manual.

    Type: null or 16 bit unsigned integer; between 0 and 65535 (both inclusive) or one of "auto"
    or submodule

    Default: null

    Declared by:

    [18722]<nixpkgs/nixos/modules/services/security/tor.nix>

[18723]services.tor.settings.ExtORPortCookieAuthFile

    See [18724]torrc manual.

    Type: null or path

    Default: null

    Declared by:

    [18725]<nixpkgs/nixos/modules/services/security/tor.nix>

[18726]services.tor.settings.ExtORPortCookieAuthFileGroupReadable

    See [18727]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18728]<nixpkgs/nixos/modules/services/security/tor.nix>

[18729]services.tor.settings.ExtendAllowPrivateAddresses

    See [18730]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18731]<nixpkgs/nixos/modules/services/security/tor.nix>

[18732]services.tor.settings.ExtraInfoStatistics

    See [18733]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18734]<nixpkgs/nixos/modules/services/security/tor.nix>

[18735]services.tor.settings.FascistFirewall

    See [18736]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18737]<nixpkgs/nixos/modules/services/security/tor.nix>

[18738]services.tor.settings.FetchDirInfoEarly

    See [18739]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18740]<nixpkgs/nixos/modules/services/security/tor.nix>

[18741]services.tor.settings.FetchDirInfoExtraEarly

    See [18742]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18743]<nixpkgs/nixos/modules/services/security/tor.nix>

[18744]services.tor.settings.FetchHidServDescriptors

    See [18745]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18746]<nixpkgs/nixos/modules/services/security/tor.nix>

[18747]services.tor.settings.FetchServerDescriptors

    See [18748]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18749]<nixpkgs/nixos/modules/services/security/tor.nix>

[18750]services.tor.settings.FetchUselessDescriptors

    See [18751]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18752]<nixpkgs/nixos/modules/services/security/tor.nix>

[18753]services.tor.settings.GeoIPFile

    See [18754]torrc manual.

    Type: null or path

    Default: null

    Declared by:

    [18755]<nixpkgs/nixos/modules/services/security/tor.nix>

[18756]services.tor.settings.GeoIPv6File

    See [18757]torrc manual.

    Type: null or path

    Default: null

    Declared by:

    [18758]<nixpkgs/nixos/modules/services/security/tor.nix>

[18759]services.tor.settings.GuardfractionFile

    See [18760]torrc manual.

    Type: null or path

    Default: null

    Declared by:

    [18761]<nixpkgs/nixos/modules/services/security/tor.nix>

[18762]services.tor.settings.HSLayer2Nodes

    See [18763]torrc manual.

    Type: list of strings

    Default: [ ]

    Declared by:

    [18764]<nixpkgs/nixos/modules/services/security/tor.nix>

[18765]services.tor.settings.HSLayer3Nodes

    See [18766]torrc manual.

    Type: list of strings

    Default: [ ]

    Declared by:

    [18767]<nixpkgs/nixos/modules/services/security/tor.nix>

[18768]services.tor.settings.HTTPTunnelPort

    See [18769]torrc manual.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive) or one of "auto" or
    submodule or list of 16 bit unsigned integer; between 0 and 65535 (both inclusive) or one of
    "auto" or submodules

    Default: [ ]

    Declared by:

    [18770]<nixpkgs/nixos/modules/services/security/tor.nix>

[18771]services.tor.settings.HidServAuth

    See [18772]torrc manual.

    Type: list of submodules

    Default: [ ]

    Example: [ { auth = "xxxxxxxxxxxxxxxxxxxxxx"; onion = "xxxxxxxxxxxxxxxx.onion"; } ]

    Declared by:

    [18773]<nixpkgs/nixos/modules/services/security/tor.nix>

[18774]services.tor.settings.HidServAuth.*.auth

    Authentication cookie.

    Type: string matching the pattern [A-Za-z0-9+/]{22}

    Declared by:

    [18775]<nixpkgs/nixos/modules/services/security/tor.nix>

[18776]services.tor.settings.HidServAuth.*.onion

    Onion address.

    Type: string matching the pattern [a-z2-7]{16}\.onion

    Example: "xxxxxxxxxxxxxxxx.onion"

    Declared by:

    [18777]<nixpkgs/nixos/modules/services/security/tor.nix>

[18778]services.tor.settings.HiddenServiceNonAnonymousMode

    See [18779]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18780]<nixpkgs/nixos/modules/services/security/tor.nix>

[18781]services.tor.settings.HiddenServiceStatistics

    See [18782]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18783]<nixpkgs/nixos/modules/services/security/tor.nix>

[18784]services.tor.settings.IPv6Exit

    See [18785]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18786]<nixpkgs/nixos/modules/services/security/tor.nix>

[18787]services.tor.settings.KeyDirectory

    See [18788]torrc manual.

    Type: null or path

    Default: null

    Declared by:

    [18789]<nixpkgs/nixos/modules/services/security/tor.nix>

[18790]services.tor.settings.KeyDirectoryGroupReadable

    See [18791]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18792]<nixpkgs/nixos/modules/services/security/tor.nix>

[18793]services.tor.settings.LogMessageDomains

    See [18794]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18795]<nixpkgs/nixos/modules/services/security/tor.nix>

[18796]services.tor.settings.LongLivedPorts

    See [18797]torrc manual.

    Type: list of 16 bit unsigned integer; between 0 and 65535 (both inclusive)s

    Default: [ ]

    Declared by:

    [18798]<nixpkgs/nixos/modules/services/security/tor.nix>

[18799]services.tor.settings.MainloopStats

    See [18800]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18801]<nixpkgs/nixos/modules/services/security/tor.nix>

[18802]services.tor.settings.MaxAdvertisedBandwidth

    See [18803]torrc manual.

    Type: null or signed integer or string

    Default: null

    Declared by:

    [18804]<nixpkgs/nixos/modules/services/security/tor.nix>

[18805]services.tor.settings.MaxCircuitDirtiness

    See [18806]torrc manual.

    Type: null or signed integer

    Default: null

    Declared by:

    [18807]<nixpkgs/nixos/modules/services/security/tor.nix>

[18808]services.tor.settings.MaxClientCircuitsPending

    See [18809]torrc manual.

    Type: null or signed integer

    Default: null

    Declared by:

    [18810]<nixpkgs/nixos/modules/services/security/tor.nix>

[18811]services.tor.settings.NATDPort

    See [18812]torrc manual.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive) or one of "auto" or
    submodule or list of 16 bit unsigned integer; between 0 and 65535 (both inclusive) or one of
    "auto" or submodules

    Default: [ ]

    Declared by:

    [18813]<nixpkgs/nixos/modules/services/security/tor.nix>

[18814]services.tor.settings.NewCircuitPeriod

    See [18815]torrc manual.

    Type: null or signed integer

    Default: null

    Declared by:

    [18816]<nixpkgs/nixos/modules/services/security/tor.nix>

[18817]services.tor.settings.Nickname

    See [18818]torrc manual.

    Type: null or string

    Default: null

    Declared by:

    [18819]<nixpkgs/nixos/modules/services/security/tor.nix>

[18820]services.tor.settings.ORPort

    See [18821]torrc manual.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive) or one of "auto" or list
    of 16 bit unsigned integer; between 0 and 65535 (both inclusive) or one of "auto" or
    submodules

    Default: [ ]

    Example: 443

    Declared by:

    [18822]<nixpkgs/nixos/modules/services/security/tor.nix>

[18823]services.tor.settings.OfflineMasterKey

    See [18824]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18825]<nixpkgs/nixos/modules/services/security/tor.nix>

[18826]services.tor.settings.OptimisticData

    See [18827]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18828]<nixpkgs/nixos/modules/services/security/tor.nix>

[18829]services.tor.settings.PaddingStatistics

    See [18830]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18831]<nixpkgs/nixos/modules/services/security/tor.nix>

[18832]services.tor.settings.PerConnBWBurst

    See [18833]torrc manual.

    Type: null or signed integer or string

    Default: null

    Declared by:

    [18834]<nixpkgs/nixos/modules/services/security/tor.nix>

[18835]services.tor.settings.PerConnBWRate

    See [18836]torrc manual.

    Type: null or signed integer or string

    Default: null

    Declared by:

    [18837]<nixpkgs/nixos/modules/services/security/tor.nix>

[18838]services.tor.settings.PidFile

    See [18839]torrc manual.

    Type: null or path

    Default: null

    Declared by:

    [18840]<nixpkgs/nixos/modules/services/security/tor.nix>

[18841]services.tor.settings.ProtocolWarnings

    See [18842]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18843]<nixpkgs/nixos/modules/services/security/tor.nix>

[18844]services.tor.settings.PublishHidServDescriptors

    See [18845]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18846]<nixpkgs/nixos/modules/services/security/tor.nix>

[18847]services.tor.settings.PublishServerDescriptor

    See [18848]torrc manual.

    Type: null or one of false, true, 0, 1, "0", "1", "v3", "bridge"

    Default: null

    Declared by:

    [18849]<nixpkgs/nixos/modules/services/security/tor.nix>

[18850]services.tor.settings.ReachableAddresses

    See [18851]torrc manual.

    Type: list of strings

    Default: [ ]

    Declared by:

    [18852]<nixpkgs/nixos/modules/services/security/tor.nix>

[18853]services.tor.settings.ReachableDirAddresses

    See [18854]torrc manual.

    Type: list of strings

    Default: [ ]

    Declared by:

    [18855]<nixpkgs/nixos/modules/services/security/tor.nix>

[18856]services.tor.settings.ReachableORAddresses

    See [18857]torrc manual.

    Type: list of strings

    Default: [ ]

    Declared by:

    [18858]<nixpkgs/nixos/modules/services/security/tor.nix>

[18859]services.tor.settings.ReducedExitPolicy

    See [18860]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18861]<nixpkgs/nixos/modules/services/security/tor.nix>

[18862]services.tor.settings.RefuseUnknownExits

    See [18863]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18864]<nixpkgs/nixos/modules/services/security/tor.nix>

[18865]services.tor.settings.RejectPlaintextPorts

    See [18866]torrc manual.

    Type: list of 16 bit unsigned integer; between 0 and 65535 (both inclusive)s

    Default: [ ]

    Declared by:

    [18867]<nixpkgs/nixos/modules/services/security/tor.nix>

[18868]services.tor.settings.RelayBandwidthBurst

    See [18869]torrc manual.

    Type: null or signed integer or string

    Default: null

    Declared by:

    [18870]<nixpkgs/nixos/modules/services/security/tor.nix>

[18871]services.tor.settings.RelayBandwidthRate

    See [18872]torrc manual.

    Type: null or signed integer or string

    Default: null

    Declared by:

    [18873]<nixpkgs/nixos/modules/services/security/tor.nix>

[18874]services.tor.settings.SOCKSPort

    See [18875]torrc manual.

    Type: list of 16 bit unsigned integer; between 0 and 65535 (both inclusive) or submodules

    Default: [ ]

    Example: [ { port = 9090; } ]

    Declared by:

    [18876]<nixpkgs/nixos/modules/services/security/tor.nix>

[18877]services.tor.settings.Sandbox

    See [18878]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18879]<nixpkgs/nixos/modules/services/security/tor.nix>

[18880]services.tor.settings.ServerDNSAllowBrokenConfig

    See [18881]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18882]<nixpkgs/nixos/modules/services/security/tor.nix>

[18883]services.tor.settings.ServerDNSAllowNonRFC953Hostnames

    See [18884]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18885]<nixpkgs/nixos/modules/services/security/tor.nix>

[18886]services.tor.settings.ServerDNSDetectHijacking

    See [18887]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18888]<nixpkgs/nixos/modules/services/security/tor.nix>

[18889]services.tor.settings.ServerDNSRandomizeCase

    See [18890]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18891]<nixpkgs/nixos/modules/services/security/tor.nix>

[18892]services.tor.settings.ServerDNSResolvConfFile

    See [18893]torrc manual.

    Type: null or path

    Default: null

    Declared by:

    [18894]<nixpkgs/nixos/modules/services/security/tor.nix>

[18895]services.tor.settings.ServerDNSSearchDomains

    See [18896]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18897]<nixpkgs/nixos/modules/services/security/tor.nix>

[18898]services.tor.settings.ServerTransportPlugin

    See [18899]torrc manual.

    Type: null or submodule

    Default: null

    Declared by:

    [18900]<nixpkgs/nixos/modules/services/security/tor.nix>

[18901]services.tor.settings.ServerTransportPlugin.exec

    Command of pluggable transport.

    Type: string

    Declared by:

    [18902]<nixpkgs/nixos/modules/services/security/tor.nix>

[18903]services.tor.settings.ServerTransportPlugin.transports

    List of pluggable transports.

    Type: list of strings

    Example: [ "obfs2" "obfs3" "obfs4" "scramblesuit" ]

    Declared by:

    [18904]<nixpkgs/nixos/modules/services/security/tor.nix>

[18905]services.tor.settings.SocksPolicy

    See [18906]torrc manual.

    Type: list of strings

    Default: [ ]

    Example: [ "accept *:*" ]

    Declared by:

    [18907]<nixpkgs/nixos/modules/services/security/tor.nix>

[18908]services.tor.settings.TestingTorNetwork

    See [18909]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18910]<nixpkgs/nixos/modules/services/security/tor.nix>

[18911]services.tor.settings.TransPort

    See [18912]torrc manual.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive) or one of "auto" or
    submodule or list of 16 bit unsigned integer; between 0 and 65535 (both inclusive) or one of
    "auto" or submodules

    Default: [ ]

    Declared by:

    [18913]<nixpkgs/nixos/modules/services/security/tor.nix>

[18914]services.tor.settings.TransProxyType

    See [18915]torrc manual.

    Type: null or one of "default", "TPROXY", "ipfw", "pf-divert"

    Default: null

    Declared by:

    [18916]<nixpkgs/nixos/modules/services/security/tor.nix>

[18917]services.tor.settings.UnixSocksGroupWritable

    See [18918]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18919]<nixpkgs/nixos/modules/services/security/tor.nix>

[18920]services.tor.settings.UseDefaultFallbackDirs

    See [18921]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18922]<nixpkgs/nixos/modules/services/security/tor.nix>

[18923]services.tor.settings.UseMicrodescriptors

    See [18924]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18925]<nixpkgs/nixos/modules/services/security/tor.nix>

[18926]services.tor.settings.V3AuthUseLegacyKey

    See [18927]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18928]<nixpkgs/nixos/modules/services/security/tor.nix>

[18929]services.tor.settings.V3AuthoritativeDirectory

    See [18930]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18931]<nixpkgs/nixos/modules/services/security/tor.nix>

[18932]services.tor.settings.VersioningAuthoritativeDirectory

    See [18933]torrc manual.

    Type: null or boolean

    Default: null

    Declared by:

    [18934]<nixpkgs/nixos/modules/services/security/tor.nix>

[18935]services.tor.settings.VirtualAddrNetworkIPv4

    See [18936]torrc manual.

    Type: null or string

    Default: null

    Declared by:

    [18937]<nixpkgs/nixos/modules/services/security/tor.nix>

[18938]services.tor.settings.VirtualAddrNetworkIPv6

    See [18939]torrc manual.

    Type: null or string

    Default: null

    Declared by:

    [18940]<nixpkgs/nixos/modules/services/security/tor.nix>

[18941]services.tor.settings.WarnPlaintextPorts

    See [18942]torrc manual.

    Type: list of 16 bit unsigned integer; between 0 and 65535 (both inclusive)s

    Default: [ ]

    Declared by:

    [18943]<nixpkgs/nixos/modules/services/security/tor.nix>

[18944]services.tor.torsocks.enable

    Whether to build /etc/tor/torsocks.conf containing the specified global torsocks
    configuration.

    Type: boolean

    Default: false

    Declared by:

    [18945]<nixpkgs/nixos/modules/services/security/torsocks.nix>

[18946]services.tor.torsocks.allowInbound

    Set Torsocks to accept inbound connections. If set to true, listen() and accept() will be
    allowed to be used with non localhost address.

    Type: boolean

    Default: false

    Declared by:

    [18947]<nixpkgs/nixos/modules/services/security/torsocks.nix>

[18948]services.tor.torsocks.fasterServer

    IP/Port of the Tor SOCKS server for torsocks-faster wrapper suitable for HTTP. Currently,
    hostnames are NOT supported by torsocks.

    Type: string

    Default: "127.0.0.1:9063"

    Example: "192.168.0.20:1234"

    Declared by:

    [18949]<nixpkgs/nixos/modules/services/security/torsocks.nix>

[18950]services.tor.torsocks.onionAddrRange

    Tor hidden sites do not have real IP addresses. This specifies what range of IP addresses
    will be handed to the application as "cookies" for .onion names. Of course, you should pick a
    block of addresses which you aren't going to ever need to actually connect to. This is
    similar to the MapAddress feature of the main tor daemon.

    Type: string

    Default: "127.42.42.0/24"

    Declared by:

    [18951]<nixpkgs/nixos/modules/services/security/torsocks.nix>

[18952]services.tor.torsocks.server

    IP/Port of the Tor SOCKS server. Currently, hostnames are NOT supported by torsocks.

    Type: string

    Default: "127.0.0.1:9050"

    Example: "192.168.0.20:1234"

    Declared by:

    [18953]<nixpkgs/nixos/modules/services/security/torsocks.nix>

[18954]services.tor.torsocks.socks5Password

    SOCKS5 password. The TORSOCKS_PASSWORD environment variable overrides this option if it is
    set.

    Type: null or string

    Default: null

    Example: "sekret"

    Declared by:

    [18955]<nixpkgs/nixos/modules/services/security/torsocks.nix>

[18956]services.tor.torsocks.socks5Username

    SOCKS5 username. The TORSOCKS_USERNAME environment variable overrides this option if it is
    set.

    Type: null or string

    Default: null

    Example: "bob"

    Declared by:

    [18957]<nixpkgs/nixos/modules/services/security/torsocks.nix>

[18958]services.tor.tsocks.enable

    Whether to build tsocks wrapper script to relay application traffic via Tor.

    Important

    You shouldn't use this unless you know what you're doing because your installation of Tor
    already comes with its own superior (doesn't leak DNS queries) torsocks wrapper which does
    pretty much exactly the same thing as this.

    Type: boolean

    Default: false

    Declared by:

    [18959]<nixpkgs/nixos/modules/services/security/torify.nix>

[18960]services.tor.tsocks.config

    Extra configuration. Contents will be added verbatim to TSocks configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [18961]<nixpkgs/nixos/modules/services/security/torify.nix>

[18962]services.tor.tsocks.server

    IP address of TOR client to use.

    Type: string

    Default: "localhost:9050"

    Example: "192.168.0.20"

    Declared by:

    [18963]<nixpkgs/nixos/modules/services/security/torify.nix>

[18964]services.torque.mom.enable

    Whether to enable torque computing node.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18965]<nixpkgs/nixos/modules/services/computing/torque/mom.nix>

[18966]services.torque.mom.serverNode

    Hostname running pbs server.

    Type: string

    Declared by:

    [18967]<nixpkgs/nixos/modules/services/computing/torque/mom.nix>

[18968]services.torque.server.enable

    Whether to enable torque server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18969]<nixpkgs/nixos/modules/services/computing/torque/server.nix>

[18970]services.tox-node.enable

    Whether to enable Tox Node service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18971]<nixpkgs/nixos/modules/services/networking/tox-node.nix>

[18972]services.tox-node.keysFile

    Path to the file where DHT keys are stored.

    Type: string

    Default: "/var/lib/tox-node/keys"

    Declared by:

    [18973]<nixpkgs/nixos/modules/services/networking/tox-node.nix>

[18974]services.tox-node.lanDiscovery

    Enable local network discovery.

    Type: boolean

    Default: true

    Declared by:

    [18975]<nixpkgs/nixos/modules/services/networking/tox-node.nix>

[18976]services.tox-node.logType

    Logging implementation.

    Type: one of "Stderr", "Stdout", "Syslog", "None"

    Default: "Stderr"

    Declared by:

    [18977]<nixpkgs/nixos/modules/services/networking/tox-node.nix>

[18978]services.tox-node.motd

    Message of the day

    Type: string

    Default: "Hi from tox-rs! I'm up {{uptime}}. TCP: incoming {{tcp_packets_in}}, outgoing
    {{tcp_packets_out}}, UDP: incoming {{udp_packets_in}}, outgoing {{udp_packets_out}}"

    Declared by:

    [18979]<nixpkgs/nixos/modules/services/networking/tox-node.nix>

[18980]services.tox-node.tcpAddresses

    TCP addresses to run TCP relay.

    Type: list of strings

    Default: [ "0.0.0.0:33445" ]

    Declared by:

    [18981]<nixpkgs/nixos/modules/services/networking/tox-node.nix>

[18982]services.tox-node.tcpConnectionLimit

    Maximum number of active TCP connections relay can hold

    Type: signed integer

    Default: 8192

    Declared by:

    [18983]<nixpkgs/nixos/modules/services/networking/tox-node.nix>

[18984]services.tox-node.threads

    Number of threads for execution

    Type: signed integer

    Default: 1

    Declared by:

    [18985]<nixpkgs/nixos/modules/services/networking/tox-node.nix>

[18986]services.tox-node.udpAddress

    UDP address to run DHT node.

    Type: string

    Default: "0.0.0.0:33445"

    Declared by:

    [18987]<nixpkgs/nixos/modules/services/networking/tox-node.nix>

[18988]services.toxBootstrapd.enable

    Whether to enable the Tox DHT bootstrap daemon.

    Type: boolean

    Default: false

    Declared by:

    [18989]<nixpkgs/nixos/modules/services/networking/tox-bootstrapd.nix>

[18990]services.toxBootstrapd.extraConfig

    Configuration for bootstrap daemon. See [18991]https://github.com/irungentoo/toxcore/blob/
    master/other/bootstrap_daemon/tox-bootstrapd.conf and [18992]http://wiki.tox.im/Nodes.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [18993]<nixpkgs/nixos/modules/services/networking/tox-bootstrapd.nix>

[18994]services.toxBootstrapd.keysFile

    Node key file.

    Type: string

    Default: "/var/lib/tox-bootstrapd/keys"

    Declared by:

    [18995]<nixpkgs/nixos/modules/services/networking/tox-bootstrapd.nix>

[18996]services.toxBootstrapd.port

    Listening port (UDP).

    Type: signed integer

    Default: 33445

    Declared by:

    [18997]<nixpkgs/nixos/modules/services/networking/tox-bootstrapd.nix>

[18998]services.toxvpn.enable

    Whether to enable toxvpn running on startup.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [18999]<nixpkgs/nixos/modules/services/networking/toxvpn.nix>

[19000]services.toxvpn.auto_add_peers

    peers to automatically connect to on startup

    Type: list of strings

    Default: [ ]

    Example: ''[ "toxid1" "toxid2" ]''

    Declared by:

    [19001]<nixpkgs/nixos/modules/services/networking/toxvpn.nix>

[19002]services.toxvpn.localip

    your ip on the vpn

    Type: string

    Default: "10.123.123.1"

    Declared by:

    [19003]<nixpkgs/nixos/modules/services/networking/toxvpn.nix>

[19004]services.toxvpn.port

    udp port for toxcore, port-forward to help with connectivity if you run many nodes behind one
    NAT

    Type: signed integer

    Default: 33445

    Declared by:

    [19005]<nixpkgs/nixos/modules/services/networking/toxvpn.nix>

[19006]services.trac.enable

    Whether to enable Trac service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19007]<nixpkgs/nixos/modules/services/web-apps/trac.nix>

[19008]services.trac.dataDir

    The directory for storing the Trac data.

    Type: path

    Default: "/var/lib/trac"

    Declared by:

    [19009]<nixpkgs/nixos/modules/services/web-apps/trac.nix>

[19010]services.trac.listen.ip

    IP address that Trac should listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [19011]<nixpkgs/nixos/modules/services/web-apps/trac.nix>

[19012]services.trac.listen.port

    Listen port for Trac.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8000

    Declared by:

    [19013]<nixpkgs/nixos/modules/services/web-apps/trac.nix>

[19014]services.trac.openFirewall

    Open ports in the firewall for Trac.

    Type: boolean

    Default: false

    Declared by:

    [19015]<nixpkgs/nixos/modules/services/web-apps/trac.nix>

[19016]services.traefik.enable

    Whether to enable Traefik web server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19017]<nixpkgs/nixos/modules/services/web-servers/traefik.nix>

[19018]services.traefik.package

    Traefik package to use.

    Type: package

    Default: "pkgs.traefik"

    Declared by:

    [19019]<nixpkgs/nixos/modules/services/web-servers/traefik.nix>

[19020]services.traefik.dataDir

    Location for any persistent data traefik creates, ie. acme

    Type: path

    Default: "/var/lib/traefik"

    Declared by:

    [19021]<nixpkgs/nixos/modules/services/web-servers/traefik.nix>

[19022]services.traefik.dynamicConfigFile

    Path to traefik's dynamic configuration to use. (Using that option has precedence over
    dynamicConfigOptions)

    Type: null or path

    Default: null

    Example:

    /path/to/dynamic_config.toml

    Declared by:

    [19023]<nixpkgs/nixos/modules/services/web-servers/traefik.nix>

[19024]services.traefik.dynamicConfigOptions

    Dynamic configuration for Traefik.

    Type: JSON value

    Default: { }

    Example: { http = { routers = { router1 = { rule = "Host(`localhost`)"; service = "service1";
    } ; } ; services = { service1 = { loadBalancer = { servers = [ { url = "http://
    localhost:8080"; } ] ; } ; } ; } ; } ; }

    Declared by:

    [19025]<nixpkgs/nixos/modules/services/web-servers/traefik.nix>

[19026]services.traefik.group

    Set the group that traefik runs under. For the docker backend this needs to be set to docker
    instead.

    Type: string

    Default: "traefik"

    Example: "docker"

    Declared by:

    [19027]<nixpkgs/nixos/modules/services/web-servers/traefik.nix>

[19028]services.traefik.staticConfigFile

    Path to traefik's static configuration to use. (Using that option has precedence over
    staticConfigOptions and dynamicConfigOptions)

    Type: null or path

    Default: null

    Example:

    /path/to/static_config.toml

    Declared by:

    [19029]<nixpkgs/nixos/modules/services/web-servers/traefik.nix>

[19030]services.traefik.staticConfigOptions

    Static configuration for Traefik.

    Type: JSON value

    Default: { entryPoints = { http = { address = ":80"; } ; } ; }

    Example: { api = { } ; entryPoints = { http = { address = ":80"; } ; web = { address =
    ":8080"; } ; } ; }

    Declared by:

    [19031]<nixpkgs/nixos/modules/services/web-servers/traefik.nix>

[19032]services.trafficserver.enable

    Whether to enable Apache Traffic Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19033]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19034]services.trafficserver.cache

    Caching rules that overrule the origin's caching policy.

    Consult the [19035]upstream documentation for more details.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "dest_domain=example.com suffix=js action=never-cache"

    Declared by:

    [19036]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19037]services.trafficserver.hosting

    Partition the cache according to origin server or domain

    Consult the [19038] upstream documentation for more details.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "domain=example.com volume=1"

    Declared by:

    [19039]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19040]services.trafficserver.ipAllow

    Control client access to Traffic Server and Traffic Server connections to upstream servers.

    Consult the [19041]upstream documentation for more details.

    Type: null or YAML value

    Default: "upstream defaults"

    Example:

    Declared by:

    [19042]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19043]services.trafficserver.logging

    Configure logs.

    Consult the [19044]upstream documentation for more details.

    Type: null or YAML value

    Default: "upstream defaults"

    Example:

    Declared by:

    [19045]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19046]services.trafficserver.parent

    Identify the parent proxies used in an cache hierarchy.

    Consult the [19047]upstream documentation for more details.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    dest_domain=. method=get parent="p1.example:8080; p2.example:8080" round_robin=true
    ''

    Declared by:

    [19048]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19049]services.trafficserver.plugins

    Controls run-time loadable plugins available to Traffic Server, as well as their
    configuration.

    Consult the [19050]upstream documentation for more details.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [19051]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19052]services.trafficserver.plugins.*.arg

    arguments to pass to the plugin

    Type: string

    Default: ""

    Example: "--header=ATS-My-Debug"

    Declared by:

    [19053]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19054]services.trafficserver.plugins.*.path

    Path to plugin. The path can either be absolute, or relative to the plugin directory.

    Type: string

    Example: "xdebug.so"

    Declared by:

    [19055]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19056]services.trafficserver.records

    List of configurable variables used by Traffic Server.

    Consult the [19057] upstream documentation for more details.

    Type: Traffic Server records value

    Default: { }

    Example:

    Declared by:

    [19058]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19059]services.trafficserver.remap

    URL remapping rules used by Traffic Server.

    Consult the [19060] upstream documentation for more details.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "map http://from.example http://origin.example"

    Declared by:

    [19061]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19062]services.trafficserver.sni

    Configure aspects of TLS connection handling for both inbound and outbound connections.

    Consult the [19063]upstream documentation for more details.

    Type: null or YAML value

    Default: null

    Example:

    Declared by:

    [19064]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19065]services.trafficserver.splitDns

    Specify the DNS server that Traffic Server should use under specific conditions.

    Consult the [19066] upstream documentation for more details.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    dest_domain=internal.corp.example named="255.255.255.255:212 255.255.255.254" def_domain=corp.example search_list="corp.example corp1.example"
    dest_domain=!internal.corp.example named=255.255.255.253
    ''

    Declared by:

    [19067]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19068]services.trafficserver.sslMulticert

    Configure SSL server certificates to terminate the SSL sessions.

    Consult the [19069] upstream documentation for more details.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "dest_ip=* ssl_cert_name=default.pem"

    Declared by:

    [19070]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19071]services.trafficserver.storage

    List all the storage that make up the Traffic Server cache.

    Consult the [19072] upstream documentation for more details.

    Type: strings concatenated with "\n"

    Default: "/var/cache/trafficserver 256M"

    Example: "/dev/disk/by-id/XXXXX volume=1"

    Declared by:

    [19073]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19074]services.trafficserver.strategies

    Specify the next hop proxies used in an cache hierarchy and the algorithms used to select the
    next proxy.

    Consult the [19075] upstream documentation for more details.

    Type: null or YAML value

    Default: null

    Declared by:

    [19076]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19077]services.trafficserver.volume

    Manage cache space more efficiently and restrict disk usage by creating cache volumes of
    different sizes.

    Consult the [19078] upstream documentation for more details.

    Type: null or YAML value

    Default: ""

    Example: "volume=1 scheme=http size=20%"

    Declared by:

    [19079]<nixpkgs/nixos/modules/services/web-servers/trafficserver.nix>

[19080]services.transmission.enable

    Whether to enable the headless Transmission BitTorrent daemon.

    Transmission daemon can be controlled via the RPC interface using transmission-remote, the
    WebUI (http://127.0.0.1:9091/ by default), or other clients like stig or tremc.

    Torrents are downloaded to /var/lib/transmission/Downloads by default and are accessible to
    users in the "transmission" group.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19081]<nixpkgs/nixos/modules/services/torrent/transmission.nix>

[19082]services.transmission.credentialsFile

    Path to a JSON file to be merged with the settings. Useful to merge a file which is better
    kept out of the Nix store because it contains sensible data like [19083]settings.rpc-password
    .

    Type: path

    Default: "/dev/null"

    Example: "/var/lib/secrets/transmission/settings.json"

    Declared by:

    [19084]<nixpkgs/nixos/modules/services/torrent/transmission.nix>

[19085]services.transmission.downloadDirPermissions

    The permissions set by systemd.activationScripts.transmission-daemon on the directories 
    [19086]settings.download-dir and [19087]settings.incomplete-dir. Note that you may also want
    to change [19088]settings.umask.

    Type: string

    Default: "770"

    Example: "775"

    Declared by:

    [19089]<nixpkgs/nixos/modules/services/torrent/transmission.nix>

[19090]services.transmission.group

    Group account under which Transmission runs.

    Type: string

    Default: "transmission"

    Declared by:

    [19091]<nixpkgs/nixos/modules/services/torrent/transmission.nix>

[19092]services.transmission.home

    The directory where Transmission will create .config/transmission-daemon. as well as
    Downloads/ unless [19093]settings.download-dir is changed, and .incomplete/ unless [19094]
    settings.incomplete-dir is changed.

    Type: path

    Default: "/var/lib/transmission"

    Declared by:

    [19095]<nixpkgs/nixos/modules/services/torrent/transmission.nix>

[19096]services.transmission.openFirewall

    Whether to enable opening of the peer port(s) in the firewall.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19097]<nixpkgs/nixos/modules/services/torrent/transmission.nix>

[19098]services.transmission.performanceNetParameters

    Whether to enable tweaking of kernel parameters to open many more connections at the same
    time.

    Note that you may also want to increase [19099]settings.peer-limit-global. And be aware that
    these settings are quite aggressive and might not suite your regular desktop use. For
    instance, SSH sessions may time out more easily.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19100]<nixpkgs/nixos/modules/services/torrent/transmission.nix>

[19101]services.transmission.port

    TCP port number to run the RPC/web interface.

    If instead you want to change the peer port, use [19102]settings.peer-port or [19103]
    settings.peer-port-random-on-start.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Declared by:

    [19104]<nixpkgs/nixos/modules/services/torrent/transmission.nix>

[19105]services.transmission.settings

    Attribute set whose fields overwrites fields in .config/transmission-daemon/settings.json
    (each time the service starts). String values must be quoted, integer and boolean values must
    not.

    See [19106]Transmission's Wiki for documentation.

    Type: attribute set

    Default: { download-dir = "/var/lib/transmission/Downloads"; incomplete-dir = "/var/lib/
    transmission/.incomplete"; incomplete-dir-enabled = true; message-level = 1; peer-port =
    51413; peer-port-random-high = 65535; peer-port-random-low = 49152; peer-port-random-on-start
    = false; rpc-bind-address = "127.0.0.1"; rpc-port = 9091; script-torrent-done-enabled =
    false; script-torrent-done-filename = ""; umask = 2; utp-enabled = true; watch-dir = "/var/
    lib/transmission/watchdir"; watch-dir-enabled = false; }

    Example: { download-dir = "/srv/torrents/"; incomplete-dir = "/srv/torrents/.incomplete/";
    incomplete-dir-enabled = true; rpc-whitelist = "127.0.0.1,192.168.*.*"; }

    Declared by:

    [19107]<nixpkgs/nixos/modules/services/torrent/transmission.nix>

[19108]services.transmission.user

    User account under which Transmission runs.

    Type: string

    Default: "transmission"

    Declared by:

    [19109]<nixpkgs/nixos/modules/services/torrent/transmission.nix>

[19110]services.trezord.enable

    Enable Trezor bridge daemon, for use with Trezor hardware bitcoin wallets.

    Type: boolean

    Default: false

    Declared by:

    [19111]<nixpkgs/nixos/modules/services/hardware/trezord.nix>

[19112]services.trezord.emulator.enable

    Enable Trezor emulator support.

    Type: boolean

    Default: false

    Declared by:

    [19113]<nixpkgs/nixos/modules/services/hardware/trezord.nix>

[19114]services.trezord.emulator.port

    Listening port for the Trezor emulator.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 21324

    Declared by:

    [19115]<nixpkgs/nixos/modules/services/hardware/trezord.nix>

[19116]services.trickster.enable

    Enable Trickster.

    Type: boolean

    Default: false

    Declared by:

    [19117]<nixpkgs/nixos/modules/services/networking/trickster.nix>

[19118]services.trickster.package

    Package that should be used for trickster.

    Type: package

    Default: "pkgs.trickster"

    Declared by:

    [19119]<nixpkgs/nixos/modules/services/networking/trickster.nix>

[19120]services.trickster.configFile

    Path to configuration file.

    Type: null or path

    Default: null

    Declared by:

    [19121]<nixpkgs/nixos/modules/services/networking/trickster.nix>

[19122]services.trickster.instance-id

    Instance ID for when running multiple processes (default null).

    Type: null or signed integer

    Default: null

    Declared by:

    [19123]<nixpkgs/nixos/modules/services/networking/trickster.nix>

[19124]services.trickster.log-level

    Level of Logging to use (debug, info, warn, error) (default "info").

    Type: string

    Default: "info"

    Declared by:

    [19125]<nixpkgs/nixos/modules/services/networking/trickster.nix>

[19126]services.trickster.metrics-port

    Port that the /metrics endpoint will listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8082

    Declared by:

    [19127]<nixpkgs/nixos/modules/services/networking/trickster.nix>

[19128]services.trickster.origin

    URL to the Prometheus Origin. Enter it like you would in grafana, e.g., http://
    prometheus:9090 (default http://prometheus:9090).

    Type: string

    Default: "http://prometheus:9090"

    Declared by:

    [19129]<nixpkgs/nixos/modules/services/networking/trickster.nix>

[19130]services.trickster.profiler-port

    Port that the /debug/pprof endpoint will listen on.

    Type: null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: null

    Declared by:

    [19131]<nixpkgs/nixos/modules/services/networking/trickster.nix>

[19132]services.trickster.proxy-port

    Port that the Proxy server will listen on.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 9090

    Declared by:

    [19133]<nixpkgs/nixos/modules/services/networking/trickster.nix>

[19134]services.triggerhappy.enable

    Whether to enable the triggerhappy hotkey daemon.

    Type: boolean

    Default: false

    Declared by:

    [19135]<nixpkgs/nixos/modules/services/hardware/triggerhappy.nix>

[19136]services.triggerhappy.bindings

    Key bindings for triggerhappy.

    Type: list of submodules

    Default: [ ]

    Example:

    [ { keys = ["PLAYPAUSE"];  cmd = "${pkgs.mpc_cli}/bin/mpc -q toggle"; } ]

    Declared by:

    [19137]<nixpkgs/nixos/modules/services/hardware/triggerhappy.nix>

[19138]services.triggerhappy.bindings.*.cmd

    What to run.

    Type: string

    Declared by:

    [19139]<nixpkgs/nixos/modules/services/hardware/triggerhappy.nix>

[19140]services.triggerhappy.bindings.*.event

    Event to match.

    Type: one of "press", "hold", "release"

    Default: "press"

    Declared by:

    [19141]<nixpkgs/nixos/modules/services/hardware/triggerhappy.nix>

[19142]services.triggerhappy.bindings.*.keys

    List of keys to match. Key names as defined in linux/input-event-codes.h

    Type: list of strings

    Declared by:

    [19143]<nixpkgs/nixos/modules/services/hardware/triggerhappy.nix>

[19144]services.triggerhappy.extraConfig

    Literal contents to append to the end of triggerhappy configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [19145]<nixpkgs/nixos/modules/services/hardware/triggerhappy.nix>

[19146]services.triggerhappy.user

    User account under which triggerhappy runs.

    Type: string

    Default: "nobody"

    Example: "root"

    Declared by:

    [19147]<nixpkgs/nixos/modules/services/hardware/triggerhappy.nix>

[19148]services.trilium-server.enable

    Whether to enable trilium-server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19149]<nixpkgs/nixos/modules/services/web-apps/trilium.nix>

[19150]services.trilium-server.dataDir

    The directory storing the nodes database and the configuration.

    Type: string

    Default: "/var/lib/trilium"

    Declared by:

    [19151]<nixpkgs/nixos/modules/services/web-apps/trilium.nix>

[19152]services.trilium-server.host

    The host address to bind to (defaults to localhost).

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [19153]<nixpkgs/nixos/modules/services/web-apps/trilium.nix>

[19154]services.trilium-server.instanceName

    Instance name used to distinguish between different instances

    Type: string

    Default: "Trilium"

    Declared by:

    [19155]<nixpkgs/nixos/modules/services/web-apps/trilium.nix>

[19156]services.trilium-server.nginx

    Configuration for nginx reverse proxy.

    Type: submodule

    Default: { }

    Declared by:

    [19157]<nixpkgs/nixos/modules/services/web-apps/trilium.nix>

[19158]services.trilium-server.nginx.enable

    Configure the nginx reverse proxy settings.

    Type: boolean

    Default: false

    Declared by:

    [19159]<nixpkgs/nixos/modules/services/web-apps/trilium.nix>

[19160]services.trilium-server.nginx.hostName

    The hostname use to setup the virtualhost configuration

    Type: string

    Declared by:

    [19161]<nixpkgs/nixos/modules/services/web-apps/trilium.nix>

[19162]services.trilium-server.port

    The port number to bind to.

    Type: signed integer

    Default: 8080

    Declared by:

    [19163]<nixpkgs/nixos/modules/services/web-apps/trilium.nix>

[19164]services.tsmBackup.enable

    Whether to enable automatic backups with the IBM Spectrum Protect (Tivoli Storage Manager,
    TSM) client. This also enables programs.tsmClient.enable .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19165]<nixpkgs/nixos/modules/services/backup/tsm.nix>

[19166]services.tsmBackup.autoTime

    The backup service will be invoked automatically at the given date/time, which must be in the
    format described in systemd.time(5). The default null disables automatic backups.

    Type: null or string matching the pattern .+

    Default: null

    Example: "12:00"

    Declared by:

    [19167]<nixpkgs/nixos/modules/services/backup/tsm.nix>

[19168]services.tsmBackup.command

    The actual command passed to the dsmc executable to start the backup.

    Type: string matching the pattern .+

    Default: "backup"

    Example: "incr"

    Declared by:

    [19169]<nixpkgs/nixos/modules/services/backup/tsm.nix>

[19170]services.tsmBackup.servername

    Create a systemd system service tsm-backup.service that starts a backup based on the given
    servername's stanza. Note that this server's passwdDir will default to /var/lib/tsm-backup/
    password (but may be overridden); also, the service will use /var/lib/tsm-backup as HOME when
    calling dsmc.

    Type: string matching the pattern .+

    Example: "mainTsmServer"

    Declared by:

    [19171]<nixpkgs/nixos/modules/services/backup/tsm.nix>

[19172]services.tt-rss.enable

    Whether to enable tt-rss.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19173]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19174]services.tt-rss.enableGZipOutput

    Selectively gzip output to improve wire performance. This requires PHP Zlib extension on the
    server. Enabling this can break tt-rss in several httpd/php configurations, if you experience
    weird errors and tt-rss failing to start, blank pages after login, or content encoding
    errors, disable it.

    Type: boolean

    Default: true

    Declared by:

    [19175]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19176]services.tt-rss.auth.autoCreate

    Allow authentication modules to auto-create users in tt-rss internal database when
    authenticated successfully.

    Type: boolean

    Default: true

    Declared by:

    [19177]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19178]services.tt-rss.auth.autoLogin

    Automatically login user on remote or other kind of externally supplied authentication,
    otherwise redirect to login form as normal. If set to true, users won't be able to set
    application language and settings profile.

    Type: boolean

    Default: true

    Declared by:

    [19179]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19180]services.tt-rss.database.createLocally

    Create the database and database user locally.

    Type: boolean

    Default: true

    Declared by:

    [19181]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19182]services.tt-rss.database.host

    Host of the database. Leave null to use Unix domain socket.

    Type: null or string

    Default: null

    Declared by:

    [19183]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19184]services.tt-rss.database.name

    Name of the existing database.

    Type: string

    Default: "tt_rss"

    Declared by:

    [19185]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19186]services.tt-rss.database.password

    The database user's password.

    Type: null or string

    Default: null

    Declared by:

    [19187]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19188]services.tt-rss.database.passwordFile

    The database user's password.

    Type: null or string

    Default: null

    Declared by:

    [19189]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19190]services.tt-rss.database.port

    The database's port. If not set, the default ports will be provided (5432 and 3306 for pgsql
    and mysql respectively).

    Type: null or signed integer

    Default: null

    Declared by:

    [19191]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19192]services.tt-rss.database.type

    Database to store feeds. Supported are pgsql and mysql.

    Type: one of "pgsql", "mysql"

    Default: "pgsql"

    Declared by:

    [19193]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19194]services.tt-rss.database.user

    The database user. The user must exist and has access to the specified database.

    Type: string

    Default: "tt_rss"

    Declared by:

    [19195]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19196]services.tt-rss.email.digestSubject

    Subject line for email digests.

    Type: string

    Default: "[tt-rss] New headlines for last 24 hours"

    Declared by:

    [19197]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19198]services.tt-rss.email.fromAddress

    Address for sending outgoing mail. This applies to password reset notifications, digest
    emails and any other mail.

    Type: string

    Default: ""

    Declared by:

    [19199]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19200]services.tt-rss.email.fromName

    Name for sending outgoing mail. This applies to password reset notifications, digest emails
    and any other mail.

    Type: string

    Default: "Tiny Tiny RSS"

    Declared by:

    [19201]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19202]services.tt-rss.email.login

    SMTP authentication login used when sending outgoing mail.

    Type: string

    Default: ""

    Declared by:

    [19203]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19204]services.tt-rss.email.password

    SMTP authentication password used when sending outgoing mail.

    Type: string

    Default: ""

    Declared by:

    [19205]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19206]services.tt-rss.email.security

    Used to select a secure SMTP connection. Allowed values: ssl, tls, or empty.

    Type: one of "", "ssl", "tls"

    Default: ""

    Declared by:

    [19207]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19208]services.tt-rss.email.server

    Hostname:port combination to send outgoing mail. Blank - use system MTA.

    Type: string

    Default: ""

    Example: "localhost:25"

    Declared by:

    [19209]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19210]services.tt-rss.extraConfig

    Additional lines to append to config.php.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [19211]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19212]services.tt-rss.feedCryptKey

    Key used for encryption of passwords for password-protected feeds in the database. A string
    of 24 random characters. If left blank, encryption is not used. Requires mcrypt functions.
    Warning: changing this key will make your stored feed passwords impossible to decrypt.

    Type: string

    Default: ""

    Declared by:

    [19213]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19214]services.tt-rss.forceArticlePurge

    When this option is not 0, users ability to control feed purging intervals is disabled and
    all articles (which are not starred) older than this amount of days are purged.

    Type: signed integer

    Default: 0

    Declared by:

    [19215]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19216]services.tt-rss.logDestination

    Log destination to use. Possible values: sql (uses internal logging you can read in
    Preferences -> System), syslog - logs to system log. Setting this to blank uses PHP logging
    (usually to http server error.log).

    Type: one of "", "sql", "syslog"

    Default: "sql"

    Declared by:

    [19217]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19218]services.tt-rss.pluginPackages

    List of plugins to install. The list elements are expected to be derivations. All elements in
    this derivation are automatically copied to the plugins.local directory.

    Type: list of packages

    Default: [ ]

    Declared by:

    [19219]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19220]services.tt-rss.plugins

    List of plugins to load automatically for all users. System plugins have to be specified
    here. Please enable at least one authentication plugin here (auth_*). Users may enable other
    user plugins from Preferences/Plugins but may not disable plugins specified in this list.
    Disabling auth_internal in this list would automatically disable reset password link on the
    login form.

    Type: list of strings

    Default: [ "auth_internal" "note" ]

    Declared by:

    [19221]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19222]services.tt-rss.pool

    Name of existing phpfpm pool that is used to run web-application. If not specified a pool
    will be created automatically with default values.

    Type: string

    Default: "tt-rss"

    Declared by:

    [19223]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19224]services.tt-rss.pubSubHubbub.enable

    Enable client PubSubHubbub support in tt-rss. When disabled, tt-rss won't try to subscribe to
    PUSH feed updates.

    Type: boolean

    Default: false

    Declared by:

    [19225]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19226]services.tt-rss.pubSubHubbub.hub

    URL to a PubSubHubbub-compatible hub server. If defined, "Published articles" generated feed
    would automatically become PUSH-enabled.

    Type: string

    Default: ""

    Declared by:

    [19227]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19228]services.tt-rss.registration.enable

    Allow users to register themselves. Please be aware that allowing random people to access
    your tt-rss installation is a security risk and potentially might lead to data loss or server
    exploit. Disabled by default.

    Type: boolean

    Default: false

    Declared by:

    [19229]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19230]services.tt-rss.registration.maxUsers

    Maximum amount of users which will be allowed to register on this system. 0 - no limit.

    Type: signed integer

    Default: 0

    Declared by:

    [19231]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19232]services.tt-rss.registration.notifyAddress

    Email address to send new user notifications to.

    Type: string

    Default: ""

    Declared by:

    [19233]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19234]services.tt-rss.root

    Root of the application.

    Type: path

    Default: "/var/lib/tt-rss"

    Example: "/var/lib/tt-rss"

    Declared by:

    [19235]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19236]services.tt-rss.selfUrlPath

    Full URL of your tt-rss installation. This should be set to the location of tt-rss directory,
    e.g. http://example.org/tt-rss/ You need to set this option correctly otherwise several
    features including PUSH, bookmarklets and browser integration will not work properly.

    Type: string

    Example: "http://localhost"

    Declared by:

    [19237]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19238]services.tt-rss.sessionCookieLifetime

    Default lifetime of a session (e.g. login) cookie. In seconds, 0 means cookie will be deleted
    when browser closes.

    Type: signed integer

    Default: 86400

    Declared by:

    [19239]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19240]services.tt-rss.simpleUpdateMode

    Enables fallback update mode where tt-rss tries to update feeds in background while tt-rss is
    open in your browser. If you don't have a lot of feeds and don't want to or can't run
    background processes while not running tt-rss, this method is generally viable to keep your
    feeds up to date. Still, there are more robust (and recommended) updating methods available,
    you can read about them here: http://tt-rss.org/wiki/UpdatingFeeds

    Type: boolean

    Default: false

    Declared by:

    [19241]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19242]services.tt-rss.singleUserMode

    Operate in single user mode, disables all functionality related to multiple users and
    authentication. Enabling this assumes you have your tt-rss directory protected by other means
    (e.g. http auth).

    Type: boolean

    Default: false

    Declared by:

    [19243]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19244]services.tt-rss.sphinx.index

    Index names in Sphinx configuration. Example configuration files are available on tt-rss
    wiki.

    Type: list of strings

    Default: [ "ttrss" "delta" ]

    Declared by:

    [19245]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19246]services.tt-rss.sphinx.server

    Hostname:port combination for the Sphinx server.

    Type: string

    Default: "localhost:9312"

    Declared by:

    [19247]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19248]services.tt-rss.themePackages

    List of themes to install. The list elements are expected to be derivations. All elements in
    this derivation are automatically copied to the themes.local directory.

    Type: list of packages

    Default: [ ]

    Declared by:

    [19249]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19250]services.tt-rss.user

    User account under which both the update daemon and the web-application run.

    Type: string

    Default: "tt_rss"

    Example: "tt_rss"

    Declared by:

    [19251]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19252]services.tt-rss.virtualHost

    Name of the nginx virtualhost to use and setup. If null, do not setup any virtualhost.

    Type: null or string

    Default: "tt-rss"

    Declared by:

    [19253]<nixpkgs/nixos/modules/services/web-apps/tt-rss.nix>

[19254]services.ttyd.enable

    Whether to enable ttyd daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19255]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19256]services.ttyd.enableIPv6

    Whether or not to enable IPv6 support.

    Type: boolean

    Default: false

    Declared by:

    [19257]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19258]services.ttyd.enableSSL

    Whether or not to enable SSL (https) support.

    Type: boolean

    Default: false

    Declared by:

    [19259]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19260]services.ttyd.caFile

    SSL CA file path for client certificate verification.

    Type: null or path

    Default: null

    Declared by:

    [19261]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19262]services.ttyd.certFile

    SSL certificate file path.

    Type: null or path

    Default: null

    Declared by:

    [19263]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19264]services.ttyd.checkOrigin

    Whether to allow a websocket connection from a different origin.

    Type: boolean

    Default: false

    Declared by:

    [19265]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19266]services.ttyd.clientOptions

    Attribute set of client options for xtermjs. [19267]https://xtermjs.org/docs/api/terminal/
    interfaces/iterminaloptions/

    Type: attribute set of strings

    Default: { }

    Example:

    {
              fontSize = "16";
              fontFamily = "Fira Code";

            }

    Declared by:

    [19268]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19269]services.ttyd.indexFile

    Custom index.html path

    Type: null or path

    Default: null

    Declared by:

    [19270]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19271]services.ttyd.interface

    Network interface to bind.

    Type: null or string

    Default: null

    Example: "eth0"

    Declared by:

    [19272]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19273]services.ttyd.keyFile

    SSL key file path. For insecurely putting the keyFile in the globally readable store use
    pkgs.writeText "ttydKeyFile" "SSLKEY".

    Type: null or path

    Default: null

    Declared by:

    [19274]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19275]services.ttyd.logLevel

    Set log level.

    Type: signed integer

    Default: 7

    Declared by:

    [19276]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19277]services.ttyd.maxClients

    Maximum clients to support (0, no limit)

    Type: signed integer

    Default: 0

    Declared by:

    [19278]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19279]services.ttyd.passwordFile

    File containing the password to use for basic authentication. For insecurely putting the
    password in the globally readable store use pkgs.writeText "ttydpw" "MyPassword".

    Type: null or path

    Default: null

    Declared by:

    [19280]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19281]services.ttyd.port

    Port to listen on (use 0 for random port)

    Type: signed integer

    Default: 7681

    Declared by:

    [19282]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19283]services.ttyd.signal

    Signal to send to the command on session close.

    Type: 8 bit unsigned integer; between 0 and 255 (both inclusive)

    Default: 1

    Declared by:

    [19284]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19285]services.ttyd.socket

    UNIX domain socket path to bind.

    Type: null or path

    Default: null

    Example: "/var/run/ttyd.sock"

    Declared by:

    [19286]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19287]services.ttyd.terminalType

    Terminal type to report.

    Type: string

    Default: "xterm-256color"

    Declared by:

    [19288]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19289]services.ttyd.username

    Username for basic authentication.

    Type: null or string

    Default: null

    Declared by:

    [19290]<nixpkgs/nixos/modules/services/web-servers/ttyd.nix>

[19291]services.tumbler.enable

    Whether to enable Tumbler, A D-Bus thumbnailer service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19292]<nixpkgs/nixos/modules/services/desktops/tumbler.nix>

[19293]services.tuptime.enable

    Whether to enable the total uptime service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19294]<nixpkgs/nixos/modules/services/monitoring/tuptime.nix>

[19295]services.tuptime.timer.enable

    Whether to regularly log uptime to detect bad shutdowns.

    Type: boolean

    Default: true

    Declared by:

    [19296]<nixpkgs/nixos/modules/services/monitoring/tuptime.nix>

[19297]services.tuptime.timer.period

    systemd calendar event

    Type: string

    Default: "*:0/5"

    Declared by:

    [19298]<nixpkgs/nixos/modules/services/monitoring/tuptime.nix>

[19299]services.tvheadend.enable

    Whether to enable Tvheadend.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19300]<nixpkgs/nixos/modules/services/networking/tvheadend.nix>

[19301]services.tvheadend.htspPort

    Port to bind HTSP to.

    Type: signed integer

    Default: 9982

    Declared by:

    [19302]<nixpkgs/nixos/modules/services/networking/tvheadend.nix>

[19303]services.tvheadend.httpPort

    Port to bind HTTP to.

    Type: signed integer

    Default: 9981

    Declared by:

    [19304]<nixpkgs/nixos/modules/services/networking/tvheadend.nix>

[19305]services.tzupdate.enable

    Enable the tzupdate timezone updating service. This provides a one-shot service which can be
    activated with systemctl to update the timezone.

    Type: boolean

    Default: false

    Declared by:

    [19306]<nixpkgs/nixos/modules/services/misc/tzupdate.nix>

[19307]services.u9fs.enable

    Whether to run the u9fs 9P server for Unix.

    Type: boolean

    Default: false

    Declared by:

    [19308]<nixpkgs/nixos/modules/services/network-filesystems/u9fs.nix>

[19309]services.u9fs.extraArgs

    Extra arguments to pass on invocation, see man 4 u9fs

    Type: string

    Default: ""

    Example: "-a none"

    Declared by:

    [19310]<nixpkgs/nixos/modules/services/network-filesystems/u9fs.nix>

[19311]services.u9fs.listenStreams

    Sockets to listen for clients on. See man 5 systemd.socket for socket syntax.

    Type: list of strings

    Default: [ "564" ]

    Example: [ "192.168.16.1:564" ]

    Declared by:

    [19312]<nixpkgs/nixos/modules/services/network-filesystems/u9fs.nix>

[19313]services.u9fs.user

    User to run u9fs under.

    Type: string

    Default: "nobody"

    Declared by:

    [19314]<nixpkgs/nixos/modules/services/network-filesystems/u9fs.nix>

[19315]services.udev.packages

    List of packages containing udev rules. All files found in pkg/etc/udev/rules.d and pkg/lib/
    udev/rules.d will be included.

    Type: list of paths

    Default: [ ]

    Declared by:

    [19316]<nixpkgs/nixos/modules/services/hardware/udev.nix>

[19317]services.udev.extraHwdb

    Additional hwdb files. They'll be written into file 99-local.hwdb. Thus they are read after
    all other files.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    evdev:input:b0003v05AFp8277*
      KEYBOARD_KEY_70039=leftalt
      KEYBOARD_KEY_700e2=leftctrl
    ''

    Declared by:

    [19318]<nixpkgs/nixos/modules/services/hardware/udev.nix>

[19319]services.udev.extraRules

    Additional udev rules. They'll be written into file 99-local.rules. Thus they are read and
    applied after all other rules.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    ENV{ID_VENDOR_ID}=="046d", ENV{ID_MODEL_ID}=="0825", ENV{PULSE_IGNORE}="1"
    ''

    Declared by:

    [19320]<nixpkgs/nixos/modules/services/hardware/udev.nix>

[19321]services.udev.initrdRules

    udev rules to include in the initrd only. They'll be written into file 99-local.rules. Thus
    they are read and applied after the essential initrd rules.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    SUBSYSTEM=="net", ACTION=="add", DRIVERS=="?*", ATTR{address}=="00:1D:60:B9:6D:4F", KERNEL=="eth*", NAME="my_fast_network_card"
    ''

    Declared by:

    [19322]<nixpkgs/nixos/modules/services/hardware/udev.nix>

[19323]services.udev.path

    Packages added to the PATH environment variable when executing programs from Udev rules.

    Type: list of paths

    Default: [ ]

    Declared by:

    [19324]<nixpkgs/nixos/modules/services/hardware/udev.nix>

[19325]services.udisks2.enable

    Whether to enable Udisks, a DBus service that allows applications to query and manipulate
    storage devices.

    Type: boolean

    Default: true

    Declared by:

    [19326]<nixpkgs/nixos/modules/services/hardware/udisks2.nix>

[19327]services.uhub.enable

    Whether to enable the uhub ADC hub.

    Type: boolean

    Default: false

    Declared by:

    [19328]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19329]services.uhub.enableTLS

    Whether to enable TLS support.

    Type: boolean

    Default: false

    Declared by:

    [19330]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19331]services.uhub.aclConfig

    Contents of user ACL configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [19332]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19333]services.uhub.address

    Address to bind the hub to.

    Type: string

    Default: "any"

    Declared by:

    [19334]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19335]services.uhub.hubConfig

    Contents of uhub configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [19336]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19337]services.uhub.plugins.authSqlite.enable

    Whether to enable the Sqlite authentication database plugin

    Type: boolean

    Default: false

    Declared by:

    [19338]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19339]services.uhub.plugins.authSqlite.file

    Path to user database. Use the uhub-passwd utility to create the database and add/remove
    users.

    Type: path

    Example: "/var/db/uhub-users"

    Declared by:

    [19340]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19341]services.uhub.plugins.history.enable

    Whether to enable the history plugin.

    Type: boolean

    Default: false

    Declared by:

    [19342]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19343]services.uhub.plugins.history.connect

    The number of chat history messages to send when users connect (0 = do not send any history).

    Type: signed integer

    Default: 5

    Declared by:

    [19344]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19345]services.uhub.plugins.history.default

    When !history is provided without arguments, then this default number of messages are
    returned.

    Type: signed integer

    Default: 10

    Declared by:

    [19346]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19347]services.uhub.plugins.history.max

    The maximum number of messages to keep in history

    Type: signed integer

    Default: 200

    Declared by:

    [19348]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19349]services.uhub.plugins.logging.enable

    Whether to enable the logging plugin.

    Type: boolean

    Default: false

    Declared by:

    [19350]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19351]services.uhub.plugins.logging.file

    Path of log file.

    Type: string

    Default: ""

    Declared by:

    [19352]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19353]services.uhub.plugins.logging.syslog

    If true then the system log is used instead of writing to file.

    Type: boolean

    Default: false

    Declared by:

    [19354]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19355]services.uhub.plugins.welcome.enable

    Whether to enable the welcome plugin.

    Type: boolean

    Default: false

    Declared by:

    [19356]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19357]services.uhub.plugins.welcome.motd

    Welcome message displayed to clients after connecting and with the !motd command.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [19358]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19359]services.uhub.plugins.welcome.rules

    Rules message, displayed to clients with the !rules command.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [19360]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19361]services.uhub.port

    TCP port to bind the hub to.

    Type: signed integer

    Default: 1511

    Declared by:

    [19362]<nixpkgs/nixos/modules/services/misc/uhub.nix>

[19363]services.unbound.enable

    Whether to enable Unbound domain name server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19364]<nixpkgs/nixos/modules/services/networking/unbound.nix>

[19365]services.unbound.enableRootTrustAnchor

    Use and update root trust anchor for DNSSEC validation.

    Type: boolean

    Default: true

    Declared by:

    [19366]<nixpkgs/nixos/modules/services/networking/unbound.nix>

[19367]services.unbound.package

    The unbound package to use

    Type: package

    Default: "pkgs.unbound-with-systemd"

    Declared by:

    [19368]<nixpkgs/nixos/modules/services/networking/unbound.nix>

[19369]services.unbound.group

    Group under which unbound runs.

    Type: string

    Default: "unbound"

    Declared by:

    [19370]<nixpkgs/nixos/modules/services/networking/unbound.nix>

[19371]services.unbound.localControlSocketPath

    When not set to null this option defines the path at which the unbound remote control socket
    should be created at. The socket will be owned by the unbound user (unbound) and group will
    be nogroup.

    Users that should be permitted to access the socket must be in the
    config.services.unbound.group group.

    If this option is null remote control will not be enabled. Unbounds default values apply.

    Type: null or string

    Default: null

    Example: "/run/unbound/unbound.ctl"

    Declared by:

    [19372]<nixpkgs/nixos/modules/services/networking/unbound.nix>

[19373]services.unbound.resolveLocalQueries

    Whether unbound should resolve local queries (i.e. add 127.0.0.1 to /etc/resolv.conf).

    Type: boolean

    Default: true

    Declared by:

    [19374]<nixpkgs/nixos/modules/services/networking/unbound.nix>

[19375]services.unbound.settings

    Declarative Unbound configuration See the unbound.conf(5) manpage for a list of available
    options.

    Type: unbound.conf configuration type. The format consist of an attribute set of settings.
    Each settings can be either one value, a list of values or an attribute set. The allowed
    values are integers, strings, booleans or floats.

    Default: { }

    Example:

    {
      server = {
        interface = [ "127.0.0.1" ];
      };
      forward-zone = [
        {
          name = ".";
          forward-addr = "1.1.1.1@853#cloudflare-dns.com";
        }
        {
          name = "example.org.";
          forward-addr = [
            "1.1.1.1@853#cloudflare-dns.com"
            "1.0.0.1@853#cloudflare-dns.com"
          ];
        }
      ];
      remote-control.control-enable = true;
    };

    Declared by:

    [19376]<nixpkgs/nixos/modules/services/networking/unbound.nix>

[19377]services.unbound.stateDir

    Directory holding all state for unbound to run.

    Type: unspecified

    Default: "/var/lib/unbound"

    Declared by:

    [19378]<nixpkgs/nixos/modules/services/networking/unbound.nix>

[19379]services.unbound.user

    User account under which unbound runs.

    Type: string

    Default: "unbound"

    Declared by:

    [19380]<nixpkgs/nixos/modules/services/networking/unbound.nix>

[19381]services.unclutter.enable

    Enable unclutter to hide your mouse cursor when inactive

    Type: boolean

    Default: false

    Declared by:

    [19382]<nixpkgs/nixos/modules/services/x11/unclutter.nix>

[19383]services.unclutter.package

    unclutter derivation to use.

    Type: package

    Default: "pkgs.unclutter"

    Declared by:

    [19384]<nixpkgs/nixos/modules/services/x11/unclutter.nix>

[19385]services.unclutter.excluded

    Names of windows where unclutter should not apply

    Type: list of strings

    Default: [ ]

    Example: [ "" ]

    Declared by:

    [19386]<nixpkgs/nixos/modules/services/x11/unclutter.nix>

[19387]services.unclutter.extraOptions

    More arguments to pass to the unclutter command

    Type: list of strings

    Default: [ ]

    Example: [ "noevent" "grab" ]

    Declared by:

    [19388]<nixpkgs/nixos/modules/services/x11/unclutter.nix>

[19389]services.unclutter.keystroke

    Wait for a keystroke before hiding the cursor

    Type: boolean

    Default: false

    Declared by:

    [19390]<nixpkgs/nixos/modules/services/x11/unclutter.nix>

[19391]services.unclutter.threshold

    Minimum number of pixels considered cursor movement

    Type: signed integer

    Default: 1

    Declared by:

    [19392]<nixpkgs/nixos/modules/services/x11/unclutter.nix>

[19393]services.unclutter.timeout

    Number of seconds before the cursor is marked inactive

    Type: signed integer

    Default: 1

    Declared by:

    [19394]<nixpkgs/nixos/modules/services/x11/unclutter.nix>

[19395]services.unclutter-xfixes.enable

    Enable unclutter-xfixes to hide your mouse cursor when inactive.

    Type: boolean

    Default: false

    Declared by:

    [19396]<nixpkgs/nixos/modules/services/x11/unclutter-xfixes.nix>

[19397]services.unclutter-xfixes.package

    unclutter-xfixes derivation to use.

    Type: package

    Default: "pkgs.unclutter-xfixes"

    Declared by:

    [19398]<nixpkgs/nixos/modules/services/x11/unclutter-xfixes.nix>

[19399]services.unclutter-xfixes.extraOptions

    More arguments to pass to the unclutter-xfixes command.

    Type: list of strings

    Default: [ ]

    Example: [ "exclude-root" "ignore-scrolling" "fork" ]

    Declared by:

    [19400]<nixpkgs/nixos/modules/services/x11/unclutter-xfixes.nix>

[19401]services.unclutter-xfixes.threshold

    Minimum number of pixels considered cursor movement.

    Type: signed integer

    Default: 1

    Declared by:

    [19402]<nixpkgs/nixos/modules/services/x11/unclutter-xfixes.nix>

[19403]services.unclutter-xfixes.timeout

    Number of seconds before the cursor is marked inactive.

    Type: signed integer

    Default: 1

    Declared by:

    [19404]<nixpkgs/nixos/modules/services/x11/unclutter-xfixes.nix>

[19405]services.undervolt.enable

    Whether to enable Undervolting service for Intel CPUs.

    Warning: This service is not endorsed by Intel and may permanently damage your hardware. Use
    at your own risk! .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19406]<nixpkgs/nixos/modules/services/hardware/undervolt.nix>

[19407]services.undervolt.package

    undervolt derivation to use.

    Type: package

    Default: "pkgs.undervolt"

    Declared by:

    [19408]<nixpkgs/nixos/modules/services/hardware/undervolt.nix>

[19409]services.undervolt.analogioOffset

    The amount of voltage in mV to offset analogio by.

    Type: null or signed integer

    Default: null

    Declared by:

    [19410]<nixpkgs/nixos/modules/services/hardware/undervolt.nix>

[19411]services.undervolt.coreOffset

    The amount of voltage in mV to offset the CPU cores by.

    Type: null or signed integer

    Default: null

    Declared by:

    [19412]<nixpkgs/nixos/modules/services/hardware/undervolt.nix>

[19413]services.undervolt.gpuOffset

    The amount of voltage in mV to offset the GPU by.

    Type: null or signed integer

    Default: null

    Declared by:

    [19414]<nixpkgs/nixos/modules/services/hardware/undervolt.nix>

[19415]services.undervolt.p1.limit

    The P1 Power Limit in Watts. Both limit and window must be set.

    Type: null or signed integer

    Default: null

    Declared by:

    [19416]<nixpkgs/nixos/modules/services/hardware/undervolt.nix>

[19417]services.undervolt.p1.window

    The P1 Time Window in seconds. Both limit and window must be set.

    Type: null or floating point number or signed integer

    Default: null

    Declared by:

    [19418]<nixpkgs/nixos/modules/services/hardware/undervolt.nix>

[19419]services.undervolt.p2.limit

    The P2 Power Limit in Watts. Both limit and window must be set.

    Type: null or signed integer

    Default: null

    Declared by:

    [19420]<nixpkgs/nixos/modules/services/hardware/undervolt.nix>

[19421]services.undervolt.p2.window

    The P2 Time Window in seconds. Both limit and window must be set.

    Type: null or floating point number or signed integer

    Default: null

    Declared by:

    [19422]<nixpkgs/nixos/modules/services/hardware/undervolt.nix>

[19423]services.undervolt.temp

    The temperature target in Celsius degrees.

    Type: null or signed integer

    Default: null

    Declared by:

    [19424]<nixpkgs/nixos/modules/services/hardware/undervolt.nix>

[19425]services.undervolt.tempAc

    The temperature target on AC power in Celsius degrees.

    Type: null or signed integer

    Default: null

    Declared by:

    [19426]<nixpkgs/nixos/modules/services/hardware/undervolt.nix>

[19427]services.undervolt.tempBat

    The temperature target on battery power in Celsius degrees.

    Type: null or signed integer

    Default: null

    Declared by:

    [19428]<nixpkgs/nixos/modules/services/hardware/undervolt.nix>

[19429]services.undervolt.uncoreOffset

    The amount of voltage in mV to offset uncore by.

    Type: null or signed integer

    Default: null

    Declared by:

    [19430]<nixpkgs/nixos/modules/services/hardware/undervolt.nix>

[19431]services.undervolt.useTimer

    Whether to set a timer that applies the undervolt settings every 30s. This will cause spam in
    the journal but might be required for some hardware under specific conditions. Enable this if
    your undervolt settings don't hold.

    Type: boolean

    Default: false

    Declared by:

    [19432]<nixpkgs/nixos/modules/services/hardware/undervolt.nix>

[19433]services.undervolt.verbose

    Whether to enable verbose logging.

    Type: boolean

    Default: false

    Declared by:

    [19434]<nixpkgs/nixos/modules/services/hardware/undervolt.nix>

[19435]services.unifi.enable

    Whether or not to enable the unifi controller service.

    Type: boolean

    Default: false

    Declared by:

    [19436]<nixpkgs/nixos/modules/services/networking/unifi.nix>

[19437]services.unifi.dataDir

    Where to store the database and other data.

    This directory will be bind-mounted to /var/lib/unifi/data as part of the service startup.

    Type: string

    Default: "/var/lib/unifi/data"

    Declared by:

    [19438]<nixpkgs/nixos/modules/services/networking/unifi.nix>

[19439]services.unifi.initialJavaHeapSize

    Set the initial heap size for the JVM in MB. If this option isn't set, the JVM will decide
    this value at runtime.

    Type: null or signed integer

    Default: null

    Example: 1024

    Declared by:

    [19440]<nixpkgs/nixos/modules/services/networking/unifi.nix>

[19441]services.unifi.jrePackage

    The JRE package to use. Check the release notes to ensure it is supported.

    Type: package

    Default: "pkgs.jre8"

    Declared by:

    [19442]<nixpkgs/nixos/modules/services/networking/unifi.nix>

[19443]services.unifi.maximumJavaHeapSize

    Set the maximimum heap size for the JVM in MB. If this option isn't set, the JVM will decide
    this value at runtime.

    Type: null or signed integer

    Default: null

    Example: 4096

    Declared by:

    [19444]<nixpkgs/nixos/modules/services/networking/unifi.nix>

[19445]services.unifi.mongodbPackage

    The mongodb package to use.

    Type: package

    Default: "pkgs.mongodb"

    Declared by:

    [19446]<nixpkgs/nixos/modules/services/networking/unifi.nix>

[19447]services.unifi.openPorts

    Whether or not to open the minimum required ports on the firewall.

    This is necessary to allow firmware upgrades and device discovery to work. For remote login,
    you should additionally open (or forward) port 8443.

    Type: boolean

    Default: true

    Declared by:

    [19448]<nixpkgs/nixos/modules/services/networking/unifi.nix>

[19449]services.unifi.unifiPackage

    The unifi package to use.

    Type: package

    Default: "pkgs.unifiLTS"

    Declared by:

    [19450]<nixpkgs/nixos/modules/services/networking/unifi.nix>

[19451]services.unifi-poller.enable

    Whether to enable unifi-poller.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19452]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19453]services.unifi-poller.influxdb.db

    Database name. Database should exist.

    Type: string

    Default: "unifi"

    Declared by:

    [19454]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19455]services.unifi-poller.influxdb.disable

    Whether to disable the influxdb ouput plugin.

    Type: boolean

    Default: false

    Declared by:

    [19456]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19457]services.unifi-poller.influxdb.interval

    Setting this lower than the Unifi controller's refresh interval may lead to zeroes in your
    database.

    Type: string

    Default: "30s"

    Declared by:

    [19458]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19459]services.unifi-poller.influxdb.pass

    Path of a file containing the password for influxdb. This file needs to be readable by the
    unifi-poller user.

    Type: path

    Default: "unifi-poller-influxdb-default.password"

    Declared by:

    [19460]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19461]services.unifi-poller.influxdb.url

    URL of the influxdb host.

    Type: string

    Default: "http://127.0.0.1:8086"

    Declared by:

    [19462]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19463]services.unifi-poller.influxdb.user

    Username for the influxdb.

    Type: string

    Default: "unifipoller"

    Declared by:

    [19464]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19465]services.unifi-poller.influxdb.verify_ssl

    Verify the influxdb's certificate.

    Type: boolean

    Default: true

    Declared by:

    [19466]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19467]services.unifi-poller.poller.debug

    Turns on line numbers, microsecond logging, and a per-device log. This may be noisy if you
    have a lot of devices. It adds one line per device.

    Type: boolean

    Default: false

    Declared by:

    [19468]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19469]services.unifi-poller.poller.plugins

    Load additional plugins.

    Type: list of strings

    Default: [ ]

    Declared by:

    [19470]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19471]services.unifi-poller.poller.quiet

    Turns off per-interval logs. Only startup and error logs will be emitted.

    Type: boolean

    Default: false

    Declared by:

    [19472]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19473]services.unifi-poller.prometheus.disable

    Whether to disable the prometheus ouput plugin.

    Type: boolean

    Default: false

    Declared by:

    [19474]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19475]services.unifi-poller.prometheus.http_listen

    Bind the prometheus exporter to this IP or hostname.

    Type: string

    Default: "[::]:9130"

    Declared by:

    [19476]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19477]services.unifi-poller.prometheus.report_errors

    Whether to report errors.

    Type: boolean

    Default: false

    Declared by:

    [19478]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19479]services.unifi-poller.unifi.controllers

    List of Unifi controllers to poll. Use defaults if empty.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [19480]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19481]services.unifi-poller.unifi.controllers.*.hash_pii

    Hash, with md5, client names and MAC addresses. This attempts to protect personally
    identifiable information.

    Type: boolean

    Default: false

    Declared by:

    [19482]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19483]services.unifi-poller.unifi.controllers.*.pass

    Path of a file containing the password for the unifi service user. This file needs to be
    readable by the unifi-poller user.

    Type: path

    Default: "unifi-poller-unifi-default.password"

    Declared by:

    [19484]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19485]services.unifi-poller.unifi.controllers.*.save_dpi

    Collect and save data from deep packet inspection. Adds around 150 data points and impacts
    performance.

    Type: boolean

    Default: false

    Declared by:

    [19486]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19487]services.unifi-poller.unifi.controllers.*.save_ids

    Collect and save data from the intrusion detection system to influxdb.

    Type: boolean

    Default: false

    Declared by:

    [19488]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19489]services.unifi-poller.unifi.controllers.*.save_sites

    Collect and save site data.

    Type: boolean

    Default: true

    Declared by:

    [19490]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19491]services.unifi-poller.unifi.controllers.*.sites

    List of site names for which statistics should be exported. Or the string "default" for the
    default site or the string "all" for all sites.

    Type: one of "default", "all" or list of strings

    Default: "all"

    Declared by:

    [19492]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19493]services.unifi-poller.unifi.controllers.*.url

    URL of the Unifi controller.

    Type: string

    Default: "https://unifi:8443"

    Declared by:

    [19494]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19495]services.unifi-poller.unifi.controllers.*.user

    Unifi service user name.

    Type: string

    Default: "unifi"

    Declared by:

    [19496]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19497]services.unifi-poller.unifi.controllers.*.verify_ssl

    Verify the Unifi controller's certificate.

    Type: boolean

    Default: true

    Declared by:

    [19498]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19499]services.unifi-poller.unifi.defaults.hash_pii

    Hash, with md5, client names and MAC addresses. This attempts to protect personally
    identifiable information.

    Type: boolean

    Default: false

    Declared by:

    [19500]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19501]services.unifi-poller.unifi.defaults.pass

    Path of a file containing the password for the unifi service user. This file needs to be
    readable by the unifi-poller user.

    Type: path

    Default: "unifi-poller-unifi-default.password"

    Declared by:

    [19502]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19503]services.unifi-poller.unifi.defaults.save_dpi

    Collect and save data from deep packet inspection. Adds around 150 data points and impacts
    performance.

    Type: boolean

    Default: false

    Declared by:

    [19504]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19505]services.unifi-poller.unifi.defaults.save_ids

    Collect and save data from the intrusion detection system to influxdb.

    Type: boolean

    Default: false

    Declared by:

    [19506]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19507]services.unifi-poller.unifi.defaults.save_sites

    Collect and save site data.

    Type: boolean

    Default: true

    Declared by:

    [19508]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19509]services.unifi-poller.unifi.defaults.sites

    List of site names for which statistics should be exported. Or the string "default" for the
    default site or the string "all" for all sites.

    Type: one of "default", "all" or list of strings

    Default: "all"

    Declared by:

    [19510]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19511]services.unifi-poller.unifi.defaults.url

    URL of the Unifi controller.

    Type: string

    Default: "https://unifi:8443"

    Declared by:

    [19512]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19513]services.unifi-poller.unifi.defaults.user

    Unifi service user name.

    Type: string

    Default: "unifi"

    Declared by:

    [19514]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19515]services.unifi-poller.unifi.defaults.verify_ssl

    Verify the Unifi controller's certificate.

    Type: boolean

    Default: true

    Declared by:

    [19516]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19517]services.unifi-poller.unifi.dynamic

    Let prometheus select which controller to poll when scraping. Use with default credentials.
    See unifi-poller wiki for more.

    Type: boolean

    Default: false

    Declared by:

    [19518]<nixpkgs/nixos/modules/services/monitoring/unifi-poller.nix>

[19519]services.unit.enable

    Whether to enable Unit App Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19520]<nixpkgs/nixos/modules/services/web-servers/unit/default.nix>

[19521]services.unit.package

    Unit package to use.

    Type: package

    Default: "pkgs.unit"

    Declared by:

    [19522]<nixpkgs/nixos/modules/services/web-servers/unit/default.nix>

[19523]services.unit.config

    Unit configuration in JSON format. More details here https://unit.nginx.org/configuration

    Type: string

    Default:

    ''
    {
      "listeners": {},
      "applications": {}
    }
    ''

    Example:

    {
      "listeners": {
        "*:8300": {
          "application": "example-php-72"
        }
      },
      "applications": {
        "example-php-72": {
          "type": "php 7.2",
          "processes": 4,
          "user": "nginx",
          "group": "nginx",
          "root": "/var/www",
          "index": "index.php",
          "options": {
            "file": "/etc/php.d/default.ini",
            "admin": {
              "max_execution_time": "30",
              "max_input_time": "30",
              "display_errors": "off",
              "display_startup_errors": "off",
              "open_basedir": "/dev/urandom:/proc/cpuinfo:/proc/meminfo:/etc/ssl/certs:/var/www",
              "disable_functions": "exec,passthru,shell_exec,system"
            }
          }
        }
      }
    }

    Declared by:

    [19524]<nixpkgs/nixos/modules/services/web-servers/unit/default.nix>

[19525]services.unit.group

    Group account under which unit runs.

    Type: string

    Default: "unit"

    Declared by:

    [19526]<nixpkgs/nixos/modules/services/web-servers/unit/default.nix>

[19527]services.unit.logDir

    Unit log directory.

    Type: path

    Default: "/var/log/unit"

    Declared by:

    [19528]<nixpkgs/nixos/modules/services/web-servers/unit/default.nix>

[19529]services.unit.stateDir

    Unit data directory.

    Type: path

    Default: "/var/spool/unit"

    Declared by:

    [19530]<nixpkgs/nixos/modules/services/web-servers/unit/default.nix>

[19531]services.unit.user

    User account under which unit runs.

    Type: string

    Default: "unit"

    Declared by:

    [19532]<nixpkgs/nixos/modules/services/web-servers/unit/default.nix>

[19533]services.upower.enable

    Whether to enable Upower, a DBus service that provides power management support to
    applications.

    Type: boolean

    Default: false

    Declared by:

    [19534]<nixpkgs/nixos/modules/services/hardware/upower.nix>

[19535]services.upower.enableWattsUpPro

    Enable the Watts Up Pro device.

    The Watts Up Pro contains a generic FTDI USB device without a specific vendor and product ID.
    When we probe for WUP devices, we can cause the user to get a perplexing "Device or resource
    busy" error when attempting to use their non-WUP device.

    The generic FTDI device is known to also be used on:

      □ Sparkfun FT232 breakout board

      □ Parallax Propeller

    Type: boolean

    Default: false

    Declared by:

    [19536]<nixpkgs/nixos/modules/services/hardware/upower.nix>

[19537]services.upower.package

    Which upower package to use.

    Type: package

    Default: "pkgs.upower"

    Example:

    pkgs.upower

    Declared by:

    [19538]<nixpkgs/nixos/modules/services/hardware/upower.nix>

[19539]services.upower.criticalPowerAction

    The action to take when timeAction or percentageAction has been reached for the batteries
    (UPS or laptop batteries) supplying the computer

    Type: one of "PowerOff", "Hibernate", "HybridSleep"

    Default: "HybridSleep"

    Declared by:

    [19540]<nixpkgs/nixos/modules/services/hardware/upower.nix>

[19541]services.upower.ignoreLid

    Do we ignore the lid state

    Some laptops are broken. The lid state is either inverted, or stuck on or off. We can't do
    much to fix these problems, but this is a way for users to make the laptop panel vanish, a
    state that might be used by a couple of user-space daemons. On Linux systems, see also
    logind.conf(5).

    Type: boolean

    Default: false

    Declared by:

    [19542]<nixpkgs/nixos/modules/services/hardware/upower.nix>

[19543]services.upower.noPollBatteries

    Don't poll the kernel for battery level changes.

    Some hardware will send us battery level changes through events, rather than us having to
    poll for it. This option allows disabling polling for hardware that sends out events.

    Type: boolean

    Default: false

    Declared by:

    [19544]<nixpkgs/nixos/modules/services/hardware/upower.nix>

[19545]services.upower.percentageAction

    When usePercentageForPolicy is true, the levels at which UPower will take action for the
    critical battery level.

    This will also be used for batteries which don't have time information such as that of
    peripherals.

    If any value (of percentageLow, percentageCritical and percentageAction) is invalid, or not
    in descending order, the defaults will be used.

    Type: unsigned integer, meaning >=0

    Default: 2

    Declared by:

    [19546]<nixpkgs/nixos/modules/services/hardware/upower.nix>

[19547]services.upower.percentageCritical

    When usePercentageForPolicy is true, the levels at which UPower will consider the battery
    critical.

    This will also be used for batteries which don't have time information such as that of
    peripherals.

    If any value (of percentageLow, percentageCritical and percentageAction) is invalid, or not
    in descending order, the defaults will be used.

    Type: unsigned integer, meaning >=0

    Default: 3

    Declared by:

    [19548]<nixpkgs/nixos/modules/services/hardware/upower.nix>

[19549]services.upower.percentageLow

    When usePercentageForPolicy is true, the levels at which UPower will consider the battery
    low.

    This will also be used for batteries which don't have time information such as that of
    peripherals.

    If any value (of percentageLow, percentageCritical and percentageAction) is invalid, or not
    in descending order, the defaults will be used.

    Type: unsigned integer, meaning >=0

    Default: 10

    Declared by:

    [19550]<nixpkgs/nixos/modules/services/hardware/upower.nix>

[19551]services.upower.timeAction

    When usePercentageForPolicy is false, the time remaining at which UPower will take action for
    the critical battery level.

    If any value (of timeLow, timeCritical and timeAction) is invalid, or not in descending
    order, the defaults will be used.

    Type: unsigned integer, meaning >=0

    Default: 120

    Declared by:

    [19552]<nixpkgs/nixos/modules/services/hardware/upower.nix>

[19553]services.upower.timeCritical

    When usePercentageForPolicy is false, the time remaining at which UPower will consider the
    battery critical.

    If any value (of timeLow, timeCritical and timeAction) is invalid, or not in descending
    order, the defaults will be used.

    Type: unsigned integer, meaning >=0

    Default: 300

    Declared by:

    [19554]<nixpkgs/nixos/modules/services/hardware/upower.nix>

[19555]services.upower.timeLow

    When usePercentageForPolicy is false, the time remaining at which UPower will consider the
    battery low.

    If any value (of timeLow, timeCritical and timeAction) is invalid, or not in descending
    order, the defaults will be used.

    Type: unsigned integer, meaning >=0

    Default: 1200

    Declared by:

    [19556]<nixpkgs/nixos/modules/services/hardware/upower.nix>

[19557]services.upower.usePercentageForPolicy

    Policy for warnings and action based on battery levels

    Whether battery percentage based policy should be used. The default is to use the percentage,
    which should work around broken firmwares. It is also more reliable than the time left
    (frantically saving all your files is going to use more battery than letting it rest for
    example).

    Type: boolean

    Default: true

    Declared by:

    [19558]<nixpkgs/nixos/modules/services/hardware/upower.nix>

[19559]services.uptime.enableSeparateMonitoringService

    Whether to enable the uptime monitoring service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19560]<nixpkgs/nixos/modules/services/monitoring/uptime.nix>

[19561]services.uptime.enableWebService

    Whether to enable the uptime monitoring program web service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19562]<nixpkgs/nixos/modules/services/monitoring/uptime.nix>

[19563]services.uptime.configFile

    The uptime configuration file

    If mongodb: server != localhost, please set usesRemoteMongo = true

    If you only want to run the monitor, please set enableWebService = false and
    enableSeparateMonitoringService = true

    If autoStartMonitor: false (recommended) and you want to run both services, please set
    enableSeparateMonitoringService = true

    Type: null or path

    Default: null

    Declared by:

    [19564]<nixpkgs/nixos/modules/services/monitoring/uptime.nix>

[19565]services.uptime.nodeEnv

    The node environment to run in (development, production, etc.)

    Type: string

    Default: "production"

    Declared by:

    [19566]<nixpkgs/nixos/modules/services/monitoring/uptime.nix>

[19567]services.uptime.usesRemoteMongo

    Whether the configuration file specifies a remote mongo instance

    Type: boolean

    Default: false

    Declared by:

    [19568]<nixpkgs/nixos/modules/services/monitoring/uptime.nix>

[19569]services.uptimed.enable

    Enable uptimed, allowing you to track your highest uptimes.

    Type: boolean

    Default: false

    Declared by:

    [19570]<nixpkgs/nixos/modules/services/system/uptimed.nix>

[19571]services.urserver.enable

    Whether to enable urserver.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19572]<nixpkgs/nixos/modules/services/x11/urserver.nix>

[19573]services.urxvtd.enable

    Enable urxvtd, the urxvt terminal daemon. To use urxvtd, run "urxvtc".

    Type: boolean

    Default: false

    Declared by:

    [19574]<nixpkgs/nixos/modules/services/x11/urxvtd.nix>

[19575]services.urxvtd.package

    Package to install. Usually pkgs.rxvt-unicode.

    Type: package

    Default: "pkgs.rxvt-unicode"

    Declared by:

    [19576]<nixpkgs/nixos/modules/services/x11/urxvtd.nix>

[19577]services.usbguard.enable

    Whether to enable USBGuard daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19578]<nixpkgs/nixos/modules/services/security/usbguard.nix>

[19579]services.usbguard.package

    The usbguard package to use. If you do not need the Qt GUI, use pkgs.usbguard-nox to save
    disk space.

    Type: package

    Default: "pkgs.usbguard"

    Declared by:

    [19580]<nixpkgs/nixos/modules/services/security/usbguard.nix>

[19581]services.usbguard.IPCAllowedGroups

    A list of groupnames that the daemon will accept IPC connections from.

    Type: list of strings

    Default: [ ]

    Example: [ "wheel" ]

    Declared by:

    [19582]<nixpkgs/nixos/modules/services/security/usbguard.nix>

[19583]services.usbguard.IPCAllowedUsers

    A list of usernames that the daemon will accept IPC connections from.

    Type: list of strings

    Default: [ "root" ]

    Example: [ "root" "yourusername" ]

    Declared by:

    [19584]<nixpkgs/nixos/modules/services/security/usbguard.nix>

[19585]services.usbguard.deviceRulesWithPort

    Generate device specific rules including the "via-port" attribute.

    Type: boolean

    Default: false

    Declared by:

    [19586]<nixpkgs/nixos/modules/services/security/usbguard.nix>

[19587]services.usbguard.implictPolicyTarget

    How to treat USB devices that don't match any rule in the policy. Target should be one of
    allow, block or reject (logically remove the device node from the system).

    Type: one of "allow", "block", "reject", "keep", "apply-policy"

    Default: "block"

    Declared by:

    [19588]<nixpkgs/nixos/modules/services/security/usbguard.nix>

[19589]services.usbguard.insertedDevicePolicy

    How to treat USB devices that are already connected after the daemon starts. One of block,
    reject, apply-policy.

    Type: one of "allow", "block", "reject", "keep", "apply-policy"

    Default: "apply-policy"

    Declared by:

    [19590]<nixpkgs/nixos/modules/services/security/usbguard.nix>

[19591]services.usbguard.presentControllerPolicy

    How to treat USB controller devices that are already connected when the daemon starts. One of
    allow, block, reject, keep or apply-policy.

    Type: one of "allow", "block", "reject", "keep", "apply-policy"

    Default: "keep"

    Declared by:

    [19592]<nixpkgs/nixos/modules/services/security/usbguard.nix>

[19593]services.usbguard.presentDevicePolicy

    How to treat USB devices that are already connected when the daemon starts. Policy should be
    one of allow, block, reject, keep (keep whatever state the device is currently in) or
    apply-policy (evaluate the rule set for every present device).

    Type: one of "allow", "block", "reject", "keep", "apply-policy"

    Default: "apply-policy"

    Declared by:

    [19594]<nixpkgs/nixos/modules/services/security/usbguard.nix>

[19595]services.usbguard.restoreControllerDeviceState

    The USBGuard daemon modifies some attributes of controller devices like the default
    authorization state of new child device instances. Using this setting, you can controll
    whether the daemon will try to restore the attribute values to the state before modificaton
    on shutdown.

    Type: boolean

    Default: false

    Declared by:

    [19596]<nixpkgs/nixos/modules/services/security/usbguard.nix>

[19597]services.usbguard.rules

    The USBGuard daemon will load this as the policy rule set. As these rules are NixOS managed
    they are immutable and can't be changed by the IPC interface.

    If you do not set this option, the USBGuard daemon will load it's policy rule set from /var/
    lib/usbguard/rules.conf. This file can be changed manually or via the IPC interface.

    Running usbguard generate-policy as root will generate a config for your currently plugged in
    devices.

    For more details see usbguard-rules.conf(5).

    Type: null or strings concatenated with "\n"

    Default: null

    Example:

    ''
    allow with-interface equals { 08:*:* }
    ''

    Declared by:

    [19598]<nixpkgs/nixos/modules/services/security/usbguard.nix>

[19599]services.usbmuxd.enable

    Enable the usbmuxd ("USB multiplexing daemon") service. This daemon is in charge of
    multiplexing connections over USB to an iOS device. This is needed for transferring data from
    and to iOS devices (see ifuse). Also this may enable plug-n-play tethering for iPhones.

    Type: boolean

    Default: false

    Declared by:

    [19600]<nixpkgs/nixos/modules/services/hardware/usbmuxd.nix>

[19601]services.usbmuxd.group

    The group usbmuxd should use to run after startup.

    Type: string

    Default: "usbmux"

    Declared by:

    [19602]<nixpkgs/nixos/modules/services/hardware/usbmuxd.nix>

[19603]services.usbmuxd.user

    The user usbmuxd should use to run after startup.

    Type: string

    Default: "usbmux"

    Declared by:

    [19604]<nixpkgs/nixos/modules/services/hardware/usbmuxd.nix>

[19605]services.uvcvideo.dynctrl.enable

    Whether to enable uvcvideo dynamic controls.

    Note that enabling this brings the uvcdynctrl tool into your environment and register all
    dynamic controls from specified packages to the uvcvideo driver.

    Type: boolean

    Default: false

    Declared by:

    [19606]<nixpkgs/nixos/modules/hardware/video/uvcvideo/default.nix>

[19607]services.uvcvideo.dynctrl.packages

    List of packages containing uvcvideo dynamic controls rules. All files found in pkg/share/
    uvcdynctrl/data will be included.

    Note that these will serve as input to the libwebcam package which through its own udev rule
    will register the dynamic controls from specified packages to the uvcvideo driver.

    Type: list of paths

    Example:

    [ pkgs.tiscamera ]

    Declared by:

    [19608]<nixpkgs/nixos/modules/hardware/video/uvcvideo/default.nix>

[19609]services.uwsgi.enable

    Enable uWSGI

    Type: boolean

    Default: false

    Declared by:

    [19610]<nixpkgs/nixos/modules/services/web-servers/uwsgi.nix>

[19611]services.uwsgi.capabilities

    Grant capabilities to the uWSGI instance. See the capabilities(7) for available values.

    Note

    uWSGI runs as an unprivileged user (even as Emperor) with the minimal capabilities required.
    This option can be used to add fine-grained permissions without running the service as root.

    When in Emperor mode, any capability to be inherited by a vassal must be specified again in
    the vassal configuration using cap. See the uWSGI [19612]docs for more information.

    Type: list of strings

    Default: [ ]

    Example:

    [
      "CAP_NET_BIND_SERVICE" # bind on ports <1024
      "CAP_NET_RAW"          # open raw sockets
    ]

    Declared by:

    [19613]<nixpkgs/nixos/modules/services/web-servers/uwsgi.nix>

[19614]services.uwsgi.group

    Group account under which uWSGI runs.

    Type: string

    Default: "uwsgi"

    Declared by:

    [19615]<nixpkgs/nixos/modules/services/web-servers/uwsgi.nix>

[19616]services.uwsgi.instance

    uWSGI configuration. It awaits an attribute type inside which can be either normal or
    emperor.

    For normal mode you can specify pythonPackages as a function from libraries set into a list
    of libraries. pythonpath will be set accordingly.

    For emperor mode, you should use vassals attribute which should be either a set of names and
    configurations or a path to a directory.

    Other attributes will be used in configuration file as-is. Notice that you can redefine
    plugins setting here.

    Type: Json value or lambda

    Default: { type = "normal"; }

    Example:

    {
      type = "emperor";
      vassals = {
        moin = {
          type = "normal";
          pythonPackages = self: with self; [ moinmoin ];
          socket = "/run/uwsgi/uwsgi.sock";
        };
      };
    }

    Declared by:

    [19617]<nixpkgs/nixos/modules/services/web-servers/uwsgi.nix>

[19618]services.uwsgi.plugins

    Plugins used with uWSGI

    Type: list of strings

    Default: [ ]

    Declared by:

    [19619]<nixpkgs/nixos/modules/services/web-servers/uwsgi.nix>

[19620]services.uwsgi.runDir

    Where uWSGI communication sockets can live

    Type: path

    Default: "/run/uwsgi"

    Declared by:

    [19621]<nixpkgs/nixos/modules/services/web-servers/uwsgi.nix>

[19622]services.uwsgi.user

    User account under which uWSGI runs.

    Type: string

    Default: "uwsgi"

    Declared by:

    [19623]<nixpkgs/nixos/modules/services/web-servers/uwsgi.nix>

[19624]services.v2ray.enable

    Whether to run v2ray server.

    Either configFile or config must be specified.

    Type: boolean

    Default: false

    Declared by:

    [19625]<nixpkgs/nixos/modules/services/networking/v2ray.nix>

[19626]services.v2ray.config

    The configuration object.

    Either `configFile` or `config` must be specified.

    See [19627]https://v2ray.com/en/configuration/overview.html.

    Type: null or attribute set of unspecifieds

    Default: null

    Example: { inbounds = [ { listen = "127.0.0.1"; port = 1080; protocol = "http"; } ] ;
    outbounds = [ { protocol = "freedom"; } ] ; }

    Declared by:

    [19628]<nixpkgs/nixos/modules/services/networking/v2ray.nix>

[19629]services.v2ray.configFile

    The absolute path to the configuration file.

    Either configFile or config must be specified.

    See [19630]https://v2ray.com/en/configuration/overview.html.

    Type: null or string

    Default: null

    Example: "/etc/v2ray/config.json"

    Declared by:

    [19631]<nixpkgs/nixos/modules/services/networking/v2ray.nix>

[19632]services.varnish.enable

    Whether to enable Varnish Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19633]<nixpkgs/nixos/modules/services/web-servers/varnish/default.nix>

[19634]services.varnish.package

    The package to use

    Type: package

    Default: "pkgs.varnish"

    Declared by:

    [19635]<nixpkgs/nixos/modules/services/web-servers/varnish/default.nix>

[19636]services.varnish.config

    Verbatim default.vcl configuration.

    Type: strings concatenated with "\n"

    Declared by:

    [19637]<nixpkgs/nixos/modules/services/web-servers/varnish/default.nix>

[19638]services.varnish.extraCommandLine

    Command line switches for varnishd (run 'varnishd -?' to get list of options)

    Type: string

    Default: ""

    Example: "-s malloc,256M"

    Declared by:

    [19639]<nixpkgs/nixos/modules/services/web-servers/varnish/default.nix>

[19640]services.varnish.extraModules

    Varnish modules (except 'std').

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.varnishPackages.geoip ]

    Declared by:

    [19641]<nixpkgs/nixos/modules/services/web-servers/varnish/default.nix>

[19642]services.varnish.http_address

    HTTP listen address and port.

    Type: string

    Default: "*:6081"

    Declared by:

    [19643]<nixpkgs/nixos/modules/services/web-servers/varnish/default.nix>

[19644]services.varnish.stateDir

    Directory holding all state for Varnish to run.

    Type: path

    Default: "/var/spool/varnish/nixos"

    Declared by:

    [19645]<nixpkgs/nixos/modules/services/web-servers/varnish/default.nix>

[19646]services.vault.enable

    Whether to enable Vault daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19647]<nixpkgs/nixos/modules/services/security/vault.nix>

[19648]services.vault.package

    This option specifies the vault package to use.

    Type: package

    Default: "pkgs.vault"

    Declared by:

    [19649]<nixpkgs/nixos/modules/services/security/vault.nix>

[19650]services.vault.address

    The name of the ip interface to listen to

    Type: string

    Default: "127.0.0.1:8200"

    Declared by:

    [19651]<nixpkgs/nixos/modules/services/security/vault.nix>

[19652]services.vault.extraConfig

    Extra text appended to vault.hcl.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [19653]<nixpkgs/nixos/modules/services/security/vault.nix>

[19654]services.vault.extraSettingsPaths

    Configuration files to load besides the immutable one defined by the NixOS module. This can
    be used to avoid putting credentials in the Nix store, which can be read by any user.

    Each path can point to a JSON- or HCL-formatted file, or a directory to be scanned for files
    with .hcl or .json extensions.

    To upload the confidential file with NixOps, use for example:

    # https://releases.nixos.org/nixops/latest/manual/manual.html#opt-deployment.keys
    deployment.keys."vault.hcl" = let db = import ./db-credentials.nix; in {
      text = ''
        storage "postgresql" {
          connection_url = "postgres://${db.username}:${db.password}@host.example.com/exampledb?sslmode=verify-ca"
        }
      '';
      user = "vault";
    };
    services.vault.extraSettingsPaths = ["/run/keys/vault.hcl"];
    services.vault.storageBackend = "postgresql";
    users.users.vault.extraGroups = ["keys"];

    Type: list of paths

    Default: [ ]

    Declared by:

    [19655]<nixpkgs/nixos/modules/services/security/vault.nix>

[19656]services.vault.listenerExtraConfig

    Extra text appended to the listener section.

    Type: strings concatenated with "\n"

    Default:

    ''
    tls_min_version = "tls12"
    ''

    Declared by:

    [19657]<nixpkgs/nixos/modules/services/security/vault.nix>

[19658]services.vault.storageBackend

    The name of the type of storage backend

    Type: one of "inmem", "file", "consul", "zookeeper", "s3", "azure", "dynamodb", "etcd",
    "mssql", "mysql", "postgresql", "swift", "gcs", "raft"

    Default: "inmem"

    Declared by:

    [19659]<nixpkgs/nixos/modules/services/security/vault.nix>

[19660]services.vault.storageConfig

    HCL configuration to insert in the storageBackend section.

    Confidential values should not be specified here because this option's value is written to
    the Nix store, which is publicly readable. Provide credentials and such in a separate file
    using [19661]services.vault.extraSettingsPaths.

    Type: null or strings concatenated with "\n"

    Default: null

    Declared by:

    [19662]<nixpkgs/nixos/modules/services/security/vault.nix>

[19663]services.vault.storagePath

    Data directory for file backend

    Type: null or path

    Default: null

    Declared by:

    [19664]<nixpkgs/nixos/modules/services/security/vault.nix>

[19665]services.vault.telemetryConfig

    Telemetry configuration

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [19666]<nixpkgs/nixos/modules/services/security/vault.nix>

[19667]services.vault.tlsCertFile

    TLS certificate file. TLS will be disabled unless this option is set

    Type: null or string

    Default: null

    Example: "/path/to/your/cert.pem"

    Declared by:

    [19668]<nixpkgs/nixos/modules/services/security/vault.nix>

[19669]services.vault.tlsKeyFile

    TLS private key file. TLS will be disabled unless this option is set

    Type: null or string

    Default: null

    Example: "/path/to/your/key.pem"

    Declared by:

    [19670]<nixpkgs/nixos/modules/services/security/vault.nix>

[19671]services.vdr.enable

    Whether to enable VDR. Please put config into /var/lib/vdr.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19672]<nixpkgs/nixos/modules/services/hardware/vdr.nix>

[19673]services.vdr.enableLirc

    Whether to enable LIRC.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19674]<nixpkgs/nixos/modules/services/hardware/vdr.nix>

[19675]services.vdr.package

    Package to use.

    Type: package

    Default: "pkgs.vdr"

    Example:

    pkgs.wrapVdr.override { plugins = with pkgs.vdrPlugins; [ hello ]; }

    Declared by:

    [19676]<nixpkgs/nixos/modules/services/hardware/vdr.nix>

[19677]services.vdr.extraArguments

    Additional command line arguments to pass to VDR.

    Type: list of strings

    Default: [ ]

    Declared by:

    [19678]<nixpkgs/nixos/modules/services/hardware/vdr.nix>

[19679]services.vdr.videoDir

    Recording directory

    Type: path

    Default: "/srv/vdr/video"

    Declared by:

    [19680]<nixpkgs/nixos/modules/services/hardware/vdr.nix>

[19681]services.vector.enable

    Whether to enable Vector.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19682]<nixpkgs/nixos/modules/services/logging/vector.nix>

[19683]services.vector.journaldAccess

    Enable Vector to access journald.

    Type: boolean

    Default: false

    Declared by:

    [19684]<nixpkgs/nixos/modules/services/logging/vector.nix>

[19685]services.vector.settings

    Specify the configuration for Vector in Nix.

    Type: JSON value

    Default: { }

    Declared by:

    [19686]<nixpkgs/nixos/modules/services/logging/vector.nix>

[19687]services.victoriametrics.enable

    Whether to enable victoriametrics.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19688]<nixpkgs/nixos/modules/services/databases/victoriametrics.nix>

[19689]services.victoriametrics.package

    The VictoriaMetrics distribution to use.

    Type: package

    Default: "pkgs.victoriametrics"

    Declared by:

    [19690]<nixpkgs/nixos/modules/services/databases/victoriametrics.nix>

[19691]services.victoriametrics.extraOptions

    Extra options to pass to VictoriaMetrics. See the README: [19692]https://github.com/
    VictoriaMetrics/VictoriaMetrics/blob/master/README.md or victoriametrics -help for more
    information.

    Type: list of strings

    Default: [ ]

    Declared by:

    [19693]<nixpkgs/nixos/modules/services/databases/victoriametrics.nix>

[19694]services.victoriametrics.listenAddress

    The listen address for the http interface.

    Type: string

    Default: ":8428"

    Declared by:

    [19695]<nixpkgs/nixos/modules/services/databases/victoriametrics.nix>

[19696]services.victoriametrics.retentionPeriod

    Retention period in months.

    Type: signed integer

    Default: 1

    Declared by:

    [19697]<nixpkgs/nixos/modules/services/databases/victoriametrics.nix>

[19698]services.virtlyst.enable

    Whether to enable Virtlyst libvirt web interface.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19699]<nixpkgs/nixos/modules/services/web-apps/virtlyst.nix>

[19700]services.virtlyst.adminPassword

    Initial admin password with which the database will be seeded.

    Type: string

    Declared by:

    [19701]<nixpkgs/nixos/modules/services/web-apps/virtlyst.nix>

[19702]services.virtlyst.httpSocket

    IP and/or port to which to bind the http socket.

    Type: string

    Default: "localhost:3000"

    Declared by:

    [19703]<nixpkgs/nixos/modules/services/web-apps/virtlyst.nix>

[19704]services.virtuoso.enable

    Whether to enable Virtuoso Opensource database server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19705]<nixpkgs/nixos/modules/services/databases/virtuoso.nix>

[19706]services.virtuoso.config

    Extra options to put into Virtuoso configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [19707]<nixpkgs/nixos/modules/services/databases/virtuoso.nix>

[19708]services.virtuoso.dirsAllowed

    A list of directories Virtuoso is allowed to access

    Type: null or string

    Default: null

    Example: "/www, /home/"

    Declared by:

    [19709]<nixpkgs/nixos/modules/services/databases/virtuoso.nix>

[19710]services.virtuoso.httpListenAddress

    ip:port or port for Virtuoso HTTP server to listen on.

    Type: null or string

    Default: null

    Example: "myserver:8080"

    Declared by:

    [19711]<nixpkgs/nixos/modules/services/databases/virtuoso.nix>

[19712]services.virtuoso.listenAddress

    ip:port or port to listen on.

    Type: string

    Default: "1111"

    Example: "myserver:1323"

    Declared by:

    [19713]<nixpkgs/nixos/modules/services/databases/virtuoso.nix>

[19714]services.virtuoso.parameters

    Extra options to put into [Parameters] section of Virtuoso configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [19715]<nixpkgs/nixos/modules/services/databases/virtuoso.nix>

[19716]services.vnstat.enable

    Whether to enable update of network usage statistics via vnstatd.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19717]<nixpkgs/nixos/modules/services/monitoring/vnstat.nix>

[19718]services.vsftpd.enable

    Whether to enable vsftpd.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19719]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19720]services.vsftpd.enableVirtualUsers

    Whether to enable the pam_userdb-based virtual user system

    Type: boolean

    Default: false

    Declared by:

    [19721]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19722]services.vsftpd.allowWriteableChroot

    Allow the use of writeable root inside chroot().

    Type: boolean

    Default: false

    Declared by:

    [19723]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19724]services.vsftpd.anonymousMkdirEnable

    Whether any uploads are permitted to anonymous users.

    Type: boolean

    Default: false

    Declared by:

    [19725]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19726]services.vsftpd.anonymousUmask

    Anonymous write umask.

    Type: string

    Default: "077"

    Example: "002"

    Declared by:

    [19727]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19728]services.vsftpd.anonymousUploadEnable

    Whether any uploads are permitted to anonymous users.

    Type: boolean

    Default: false

    Declared by:

    [19729]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19730]services.vsftpd.anonymousUser

    Whether to enable the anonymous FTP user.

    Type: boolean

    Default: false

    Declared by:

    [19731]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19732]services.vsftpd.anonymousUserHome

    Directory to consider the HOME of the anonymous user.

    Type: path

    Default: "/home/ftp/"

    Declared by:

    [19733]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19734]services.vsftpd.anonymousUserNoPassword

    Whether to disable the password for the anonymous FTP user.

    Type: boolean

    Default: false

    Declared by:

    [19735]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19736]services.vsftpd.chrootlocalUser

    Whether local users are confined to their home directory.

    Type: boolean

    Default: false

    Declared by:

    [19737]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19738]services.vsftpd.extraConfig

    Extra configuration to add at the bottom of the generated configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "ftpd_banner=Hello"

    Declared by:

    [19739]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19740]services.vsftpd.forceLocalDataSSL

    Only applies if sslEnable is true. Non anonymous (local) users must use a secure SSL
    connection for sending/receiving data on data connection.

    Type: boolean

    Default: false

    Declared by:

    [19741]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19742]services.vsftpd.forceLocalLoginsSSL

    Only applies if sslEnable is true. Non anonymous (local) users must use a secure SSL
    connection to send a password.

    Type: boolean

    Default: false

    Declared by:

    [19743]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19744]services.vsftpd.localRoot

    This option represents a directory which vsftpd will try to change into after a local (i.e.
    non- anonymous) login.

    Failure is silently ignored.

    Type: null or string

    Default: null

    Example: "/var/www/\$USER"

    Declared by:

    [19745]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19746]services.vsftpd.localUsers

    Whether to enable FTP for local users.

    Type: boolean

    Default: false

    Declared by:

    [19747]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19748]services.vsftpd.portPromiscuous

    Set to YES if you want to disable the PORT security check that ensures that outgoing data
    connections can only connect to the client. Only enable if you know what you are doing!

    Type: boolean

    Default: false

    Declared by:

    [19749]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19750]services.vsftpd.rsaCertFile

    RSA certificate file.

    Type: null or path

    Default: null

    Declared by:

    [19751]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19752]services.vsftpd.rsaKeyFile

    RSA private key file.

    Type: null or path

    Default: null

    Declared by:

    [19753]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19754]services.vsftpd.ssl_sslv2

    Only applies if ssl_enable is activated. If enabled, this option will permit SSL v2 protocol
    connections. TLS v1 connections are preferred.

    Type: boolean

    Default: false

    Declared by:

    [19755]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19756]services.vsftpd.ssl_sslv3

    Only applies if ssl_enable is activated. If enabled, this option will permit SSL v3 protocol
    connections. TLS v1 connections are preferred.

    Type: boolean

    Default: false

    Declared by:

    [19757]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19758]services.vsftpd.ssl_tlsv1

    Only applies if ssl_enable is activated. If enabled, this option will permit TLS v1 protocol
    connections. TLS v1 connections are preferred.

    Type: boolean

    Default: true

    Declared by:

    [19759]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19760]services.vsftpd.userDbPath

    Only applies if enableVirtualUsers is true. Path pointing to the pam_userdb user database
    used by vsftpd to authenticate the virtual users.

    This user list should be stored in the Berkeley DB database format.

    To generate a new user database, create a text file, add your users using the following
    format:

    user1
    password1
    user2
    password2

    You can then install pkgs.db to generate the Berkeley DB using

    db_load -T -t hash -f logins.txt userDb.db

    Caution: pam_userdb will automatically append a .db suffix to the filename you provide though
    this option. This option shouldn't include this filetype suffix.

    Type: null or string

    Default: null

    Example: "/etc/vsftpd/userDb"

    Declared by:

    [19761]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19762]services.vsftpd.userlist

    See userlistFile.

    Type: unspecified

    Default: [ ]

    Declared by:

    [19763]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19764]services.vsftpd.userlistDeny

    Specifies whether userlistFile is a list of user names to allow or deny access. The default
    false means whitelist/allow.

    Type: boolean

    Default: false

    Declared by:

    [19765]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19766]services.vsftpd.userlistEnable

    Whether users are included.

    Type: boolean

    Default: false

    Declared by:

    [19767]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19768]services.vsftpd.userlistFile

    Newline separated list of names to be allowed/denied if userlistEnable is true. Meaning see
    userlistDeny.

    The default is a file containing the users from userlist.

    If explicitely set to null userlist_file will not be set in vsftpd's config file.

    Type: path

    Default:

    ''
    pkgs.writeText "userlist" (concatMapStrings (x: "''${x}
    ") cfg.userlist)''

    Declared by:

    [19769]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19770]services.vsftpd.virtualUseLocalPrivs

    If enabled, virtual users will use the same privileges as local users. By default, virtual
    users will use the same privileges as anonymous users, which tends to be more restrictive
    (especially in terms of write access).

    Type: boolean

    Default: false

    Declared by:

    [19771]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19772]services.vsftpd.writeEnable

    Whether any write activity is permitted to users.

    Type: boolean

    Default: false

    Declared by:

    [19773]<nixpkgs/nixos/modules/services/networking/vsftpd.nix>

[19774]services.wakeonlan.interfaces

    Interfaces where to enable Wake-On-LAN, and how. Two methods available: "magicpacket" and
    "password". The password has the shape of six bytes in hexadecimal separated by a colon each.
    For more information, check the ethtool manual.

    Type: unspecified

    Default: [ ]

    Example: [ { interface = "eth0"; method = "password"; password = "00:11:22:33:44:55"; } ]

    Declared by:

    [19775]<nixpkgs/nixos/modules/services/networking/wakeonlan.nix>

[19776]services.wasabibackend.enable

    Whether to enable Wasabi backend service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19777]<nixpkgs/nixos/modules/services/networking/wasabibackend.nix>

[19778]services.wasabibackend.customConfigFile

    Defines the path to a custom configuration file that is copied to the user's directory.
    Overrides any config options.

    Type: null or path

    Default: null

    Declared by:

    [19779]<nixpkgs/nixos/modules/services/networking/wasabibackend.nix>

[19780]services.wasabibackend.dataDir

    The data directory for the Wasabi backend node.

    Type: path

    Default: "/var/lib/wasabibackend"

    Declared by:

    [19781]<nixpkgs/nixos/modules/services/networking/wasabibackend.nix>

[19782]services.wasabibackend.endpoint.ip

    IP address for P2P connection to bitcoind.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [19783]<nixpkgs/nixos/modules/services/networking/wasabibackend.nix>

[19784]services.wasabibackend.endpoint.port

    Port for P2P connection to bitcoind.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8333

    Declared by:

    [19785]<nixpkgs/nixos/modules/services/networking/wasabibackend.nix>

[19786]services.wasabibackend.group

    The group as which to run the wasabibackend node.

    Type: string

    Default: "wasabibackend"

    Declared by:

    [19787]<nixpkgs/nixos/modules/services/networking/wasabibackend.nix>

[19788]services.wasabibackend.network

    The network to use for the Wasabi backend service.

    Type: one of "mainnet", "testnet", "regtest"

    Default: "mainnet"

    Declared by:

    [19789]<nixpkgs/nixos/modules/services/networking/wasabibackend.nix>

[19790]services.wasabibackend.rpc.ip

    IP address for RPC connection to bitcoind.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [19791]<nixpkgs/nixos/modules/services/networking/wasabibackend.nix>

[19792]services.wasabibackend.rpc.password

    RPC password for the bitcoin endpoint. Warning: this is stored in cleartext in the Nix store!
    Use configFile or passwordFile if needed.

    Type: string

    Default: "password"

    Declared by:

    [19793]<nixpkgs/nixos/modules/services/networking/wasabibackend.nix>

[19794]services.wasabibackend.rpc.passwordFile

    File that contains the password of the RPC user.

    Type: null or path

    Default: null

    Declared by:

    [19795]<nixpkgs/nixos/modules/services/networking/wasabibackend.nix>

[19796]services.wasabibackend.rpc.port

    Port for RPC connection to bitcoind.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8332

    Declared by:

    [19797]<nixpkgs/nixos/modules/services/networking/wasabibackend.nix>

[19798]services.wasabibackend.rpc.user

    RPC user for the bitcoin endpoint.

    Type: string

    Default: "bitcoin"

    Declared by:

    [19799]<nixpkgs/nixos/modules/services/networking/wasabibackend.nix>

[19800]services.wasabibackend.user

    The user as which to run the wasabibackend node.

    Type: string

    Default: "wasabibackend"

    Declared by:

    [19801]<nixpkgs/nixos/modules/services/networking/wasabibackend.nix>

[19802]services.weechat.enable

    Whether to enable weechat.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19803]<nixpkgs/nixos/modules/services/misc/weechat.nix>

[19804]services.weechat.binary

    Binary to execute (by default ${weechat}/bin/weechat).

    Type: path

    Default: "\${pkgs.weechat}/bin/weechat"

    Example:

    ${pkgs.weechat}/bin/weechat-headless

    Declared by:

    [19805]<nixpkgs/nixos/modules/services/misc/weechat.nix>

[19806]services.weechat.root

    Weechat state directory.

    Type: string

    Default: "/var/lib/weechat"

    Declared by:

    [19807]<nixpkgs/nixos/modules/services/misc/weechat.nix>

[19808]services.weechat.sessionName

    Name of the `screen' session for weechat.

    Type: string

    Default: "weechat-screen"

    Declared by:

    [19809]<nixpkgs/nixos/modules/services/misc/weechat.nix>

[19810]services.whitebophir.enable

    Whether to enable whitebophir, an online collaborative whiteboard server (persistent state
    will be maintained under /var/lib/whitebophir).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19811]<nixpkgs/nixos/modules/services/web-apps/whitebophir.nix>

[19812]services.whitebophir.package

    Whitebophir package to use.

    Type: package

    Default: "pkgs.whitebophir"

    Declared by:

    [19813]<nixpkgs/nixos/modules/services/web-apps/whitebophir.nix>

[19814]services.whitebophir.listenAddress

    Address to listen on (use 0.0.0.0 to allow access from any address).

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [19815]<nixpkgs/nixos/modules/services/web-apps/whitebophir.nix>

[19816]services.whitebophir.port

    Port to bind to.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 5001

    Declared by:

    [19817]<nixpkgs/nixos/modules/services/web-apps/whitebophir.nix>

[19818]services.wiki-js.enable

    Whether to enable wiki-js.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19819]<nixpkgs/nixos/modules/services/web-apps/wiki-js.nix>

[19820]services.wiki-js.environmentFile

    Environment fiel to inject e.g. secrets into the configuration.

    Type: null or path

    Default: null

    Example: "/root/wiki-js.env"

    Declared by:

    [19821]<nixpkgs/nixos/modules/services/web-apps/wiki-js.nix>

[19822]services.wiki-js.settings

    Settings to configure wiki-js. This directly corresponds to [19823]the upstream configuration
    options.

    Secrets can be injected via the environment by

      □ specifying [19824]services.wiki-js.environmentFile to contain secrets

      □ and setting sensitive values to $(ENVIRONMENT_VAR) with this value defined in the
        environment-file.

    Type: JSON value

    Default: { }

    Declared by:

    [19825]<nixpkgs/nixos/modules/services/web-apps/wiki-js.nix>

[19826]services.wiki-js.settings.bindIP

    IPs the service should listen to.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [19827]<nixpkgs/nixos/modules/services/web-apps/wiki-js.nix>

[19828]services.wiki-js.settings.db.db

    Name of the database to use.

    Type: string

    Default: "wiki"

    Declared by:

    [19829]<nixpkgs/nixos/modules/services/web-apps/wiki-js.nix>

[19830]services.wiki-js.settings.db.host

    Hostname or socket-path to connect to.

    Type: string

    Example: "/run/postgresql"

    Declared by:

    [19831]<nixpkgs/nixos/modules/services/web-apps/wiki-js.nix>

[19832]services.wiki-js.settings.db.type

    Database driver to use for persistence. Please note that sqlite is currently not supported as
    the build process for it is currently not implemented in pkgs.wiki-js and it's not
    recommended by upstream for production use.

    Type: one of "postgres", "mysql", "mariadb", "mssql"

    Default: "postgres"

    Declared by:

    [19833]<nixpkgs/nixos/modules/services/web-apps/wiki-js.nix>

[19834]services.wiki-js.settings.logLevel

    Define how much detail is supposed to be logged at runtime.

    Type: one of "error", "warn", "info", "verbose", "debug", "silly"

    Default: "info"

    Declared by:

    [19835]<nixpkgs/nixos/modules/services/web-apps/wiki-js.nix>

[19836]services.wiki-js.settings.offline

    Disable latest file updates and enable [19837]sideloading.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19838]<nixpkgs/nixos/modules/services/web-apps/wiki-js.nix>

[19839]services.wiki-js.settings.port

    TCP port the process should listen to.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 3000

    Declared by:

    [19840]<nixpkgs/nixos/modules/services/web-apps/wiki-js.nix>

[19841]services.wiki-js.stateDirectoryName

    Name of the directory in /var/lib.

    Type: string

    Default: "wiki-js"

    Declared by:

    [19842]<nixpkgs/nixos/modules/services/web-apps/wiki-js.nix>

[19843]services.wordpress

    Specification of one or more WordPress sites to serve via Apache.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [19844]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19845]services.wordpress.<name>.package

    Which WordPress package to use.

    Type: package

    Default: (build of wordpress-5.7.2)

    Declared by:

    [19846]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19847]services.wordpress.<name>.database.createLocally

    Create the database and database user locally.

    Type: boolean

    Default: true

    Declared by:

    [19848]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19849]services.wordpress.<name>.database.host

    Database host address.

    Type: string

    Default: "localhost"

    Declared by:

    [19850]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19851]services.wordpress.<name>.database.name

    Database name.

    Type: string

    Default: "wordpress"

    Declared by:

    [19852]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19853]services.wordpress.<name>.database.passwordFile

    A file containing the password corresponding to database.user.

    Type: null or path

    Default: null

    Example: "/run/keys/wordpress-dbpassword"

    Declared by:

    [19854]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19855]services.wordpress.<name>.database.port

    Database host port.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 3306

    Declared by:

    [19856]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19857]services.wordpress.<name>.database.socket

    Path to the unix socket file to use for authentication.

    Type: null or path

    Default: "/run/mysqld/mysqld.sock"

    Declared by:

    [19858]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19859]services.wordpress.<name>.database.tablePrefix

    The $table_prefix is the value placed in the front of your database tables. Change the value
    if you want to use something other than wp_ for your database prefix. Typically this is
    changed if you are installing multiple WordPress blogs in the same database.

    See [19860]https://codex.wordpress.org/Editing_wp-config.php#table_prefix.

    Type: string

    Default: "wp_"

    Declared by:

    [19861]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19862]services.wordpress.<name>.database.user

    Database user.

    Type: string

    Default: "wordpress"

    Declared by:

    [19863]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19864]services.wordpress.<name>.extraConfig

    Any additional text to be appended to the wp-config.php configuration file. This is a PHP
    script. For configuration settings, see [19865]https://codex.wordpress.org/
    Editing_wp-config.php.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    define( 'AUTOSAVE_INTERVAL', 60 ); // Seconds
    ''

    Declared by:

    [19866]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19867]services.wordpress.<name>.plugins

    List of path(s) to respective plugin(s) which are copied from the 'plugins' directory.

    Note: These plugins need to be packaged before use, see example.

    Type: list of paths

    Default: [ ]

    Example:

    ''
    # Wordpress plugin 'embed-pdf-viewer' installation example
    embedPdfViewerPlugin = pkgs.stdenv.mkDerivation {
      name = "embed-pdf-viewer-plugin";
      # Download the theme from the wordpress site
      src = pkgs.fetchurl {
        url = "https://downloads.wordpress.org/plugin/embed-pdf-viewer.2.0.3.zip";
        sha256 = "1rhba5h5fjlhy8p05zf0p14c9iagfh96y91r36ni0rmk6y891lyd";
      };
      # We need unzip to build this package
      nativeBuildInputs = [ pkgs.unzip ];
      # Installing simply means copying all files to the output directory
      installPhase = "mkdir -p $out; cp -R * $out/";
    };

    And then pass this theme to the themes list like this:
      plugins = [ embedPdfViewerPlugin ];
    ''

    Declared by:

    [19868]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19869]services.wordpress.<name>.poolConfig

    Options for the WordPress PHP pool. See the documentation on php-fpm.conf for details on
    configuration directives.

    Type: attribute set of string or signed integer or booleans

    Default: { pm = "dynamic"; pm.max_children = 32; pm.max_requests = 500; pm.max_spare_servers
    = 4; pm.min_spare_servers = 2; pm.start_servers = 2; }

    Declared by:

    [19870]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19871]services.wordpress.<name>.themes

    List of path(s) to respective theme(s) which are copied from the 'theme' directory.

    Note: These themes need to be packaged before use, see example.

    Type: list of paths

    Default: [ ]

    Example:

    ''
    # Let's package the responsive theme
    responsiveTheme = pkgs.stdenv.mkDerivation {
      name = "responsive-theme";
      # Download the theme from the wordpress site
      src = pkgs.fetchurl {
        url = "https://downloads.wordpress.org/theme/responsive.3.14.zip";
        sha256 = "0rjwm811f4aa4q43r77zxlpklyb85q08f9c8ns2akcarrvj5ydx3";
      };
      # We need unzip to build this package
      nativeBuildInputs = [ pkgs.unzip ];
      # Installing simply means copying all files to the output directory
      installPhase = "mkdir -p $out; cp -R * $out/";
    };

    And then pass this theme to the themes list like this:
      themes = [ responsiveTheme ];
    ''

    Declared by:

    [19872]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19873]services.wordpress.<name>.uploadsDir

    This directory is used for uploads of pictures. The directory passed here is automatically
    created and permissions adjusted as required.

    Type: path

    Default: "/var/lib/wordpress/‹name›/uploads"

    Declared by:

    [19874]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19875]services.wordpress.<name>.virtualHost

    Apache configuration can be done by adapting services.httpd.virtualHosts.

    Type: submodule

    Example:

    {
      adminAddr = "webmaster@example.org";
      forceSSL = true;
      enableACME = true;
    }

    Declared by:

    [19876]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19877]services.wordpress.<name>.virtualHost.enableACME

    Whether to ask Let's Encrypt to sign a certificate for this vhost. Alternately, you can use
    an existing certificate through useACMEHost.

    Type: boolean

    Default: false

    Declared by:

    [19878]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19879]services.wordpress.<name>.virtualHost.enableUserDir

    Whether to enable serving ~/public_html as /~username.

    Type: boolean

    Default: false

    Declared by:

    [19880]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19881]services.wordpress.<name>.virtualHost.acmeRoot

    Directory for the acme challenge which is PUBLIC, don't put certs or keys in here

    Type: string

    Default: "/var/lib/acme/acme-challenge"

    Declared by:

    [19882]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19883]services.wordpress.<name>.virtualHost.addSSL

    Whether to enable HTTPS in addition to plain HTTP. This will set defaults for listen to
    listen on all interfaces on the respective default ports (80, 443).

    Type: boolean

    Default: false

    Declared by:

    [19884]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19885]services.wordpress.<name>.virtualHost.adminAddr

    E-mail address of the server administrator.

    Type: null or string

    Default: null

    Example: "admin@example.org"

    Declared by:

    [19886]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19887]services.wordpress.<name>.virtualHost.documentRoot

    The path of Apache's document root directory. If left undefined, an empty directory in the
    Nix store will be used as root.

    Type: null or path

    Default: null

    Example: "/data/webserver/docs"

    Declared by:

    [19888]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19889]services.wordpress.<name>.virtualHost.extraConfig

    These lines go to httpd.conf verbatim. They will go after directories and directory aliases
    defined by default.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    <Directory /home>
      Options FollowSymlinks
      AllowOverride All
    </Directory>
    ''

    Declared by:

    [19890]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19891]services.wordpress.<name>.virtualHost.forceSSL

    Whether to add a separate nginx server block that permanently redirects (301) all plain HTTP
    traffic to HTTPS. This will set defaults for listen to listen on all interfaces on the
    respective default ports (80, 443), where the non-SSL listens are used for the redirect
    vhosts.

    Type: boolean

    Default: false

    Declared by:

    [19892]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19893]services.wordpress.<name>.virtualHost.globalRedirect

    If set, all requests for this host are redirected permanently to the given URL.

    Type: null or string

    Default: null

    Example: "http://newserver.example.org/"

    Declared by:

    [19894]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19895]services.wordpress.<name>.virtualHost.hostName

    Canonical hostname for the server.

    Type: string

    Default: "‹name›"

    Declared by:

    [19896]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19897]services.wordpress.<name>.virtualHost.http2

    Whether to enable HTTP 2. HTTP/2 is supported in all multi-processing modules that come with
    httpd. However, if you use the prefork mpm, there will be severe restrictions. Refer to 
    [19898]https://httpd.apache.org/docs/2.4/howto/http2.html#mpm-config for details.

    Type: boolean

    Default: true

    Declared by:

    [19899]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19900]services.wordpress.<name>.virtualHost.listen

    Listen addresses and ports for this virtual host.

    Note: This option overrides addSSL, forceSSL and onlySSL.

    Type: list of submodules

    Default: [ ]

    Example: [ { ip = "195.154.1.1"; port = 443; ssl = true; } { ip = "192.154.1.1"; port = 80; }
    { ip = "*"; port = 8080; } ]

    Declared by:

    [19901]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19902]services.wordpress.<name>.virtualHost.listen.*.ip

    IP to listen on. 0.0.0.0 for IPv4 only, * for all.

    Type: string

    Default: "*"

    Declared by:

    [19903]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19904]services.wordpress.<name>.virtualHost.listen.*.port

    Port to listen on

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Declared by:

    [19905]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19906]services.wordpress.<name>.virtualHost.listen.*.ssl

    Whether to enable SSL (https) support.

    Type: boolean

    Default: false

    Declared by:

    [19907]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19908]services.wordpress.<name>.virtualHost.locations

    Declarative location config. See [19909]https://httpd.apache.org/docs/2.4/mod/core.html#
    location for details.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "/" = {
        proxyPass = "http://localhost:3000";
      };
      "/foo/bar.png" = {
        alias = "/home/eelco/some-file.png";
      };
    };

    Declared by:

    [19910]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19911]services.wordpress.<name>.virtualHost.locations.<name>.alias

    Alias directory for requests. See [19912]https://httpd.apache.org/docs/2.4/mod/mod_alias.html
    #alias.

    Type: null or path

    Default: null

    Example: "/your/alias/directory"

    Declared by:

    [19913]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19914]services.wordpress.<name>.virtualHost.locations.<name>.extraConfig

    These lines go to the end of the location verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [19915]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19916]services.wordpress.<name>.virtualHost.locations.<name>.index

    Adds DirectoryIndex directive. See [19917]https://httpd.apache.org/docs/2.4/mod/mod_dir.html#
    directoryindex.

    Type: null or string

    Default: null

    Example: "index.php index.html"

    Declared by:

    [19918]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19919]services.wordpress.<name>.virtualHost.locations.<name>.priority

    Order of this location block in relation to the others in the vhost. The semantics are the
    same as with `lib.mkOrder`. Smaller values have a greater priority.

    Type: signed integer

    Default: 1000

    Declared by:

    [19920]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19921]services.wordpress.<name>.virtualHost.locations.<name>.proxyPass

    Sets up a simple reverse proxy as described by [19922]https://httpd.apache.org/docs/2.4/howto
    /reverse_proxy.html#simple.

    Type: null or string

    Default: null

    Example: "http://www.example.org/"

    Declared by:

    [19923]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19924]services.wordpress.<name>.virtualHost.logFormat

    Log format for Apache's log files. Possible values are: combined, common, referer, agent.

    Type: string

    Default: "common"

    Example: "combined"

    Declared by:

    [19925]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19926]services.wordpress.<name>.virtualHost.onlySSL

    Whether to enable HTTPS and reject plain HTTP connections. This will set defaults for listen
    to listen on all interfaces on port 443.

    Type: boolean

    Default: false

    Declared by:

    [19927]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19928]services.wordpress.<name>.virtualHost.robotsEntries

    Specification of pages to be ignored by web crawlers. See [19929]http://www.robotstxt.org/
    for details.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "Disallow: /foo/"

    Declared by:

    [19930]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19931]services.wordpress.<name>.virtualHost.servedDirs

    This option provides a simple way to serve static directories.

    Type: list of attribute sets

    Default: [ ]

    Example: [ { dir = "/home/eelco/Dev/nix-homepage"; urlPath = "/nix"; } ]

    Declared by:

    [19932]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19933]services.wordpress.<name>.virtualHost.servedFiles

    This option provides a simple way to serve individual, static files.

    Note: This option has been deprecated and will be removed in a future version of NixOS. You
    can achieve the same result by making use of the locations.<name>.alias option.

    Type: list of attribute sets

    Default: [ ]

    Example: [ { file = "/home/eelco/some-file.png"; urlPath = "/foo/bar.png"; } ]

    Declared by:

    [19934]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19935]services.wordpress.<name>.virtualHost.serverAliases

    Additional names of virtual hosts served by this virtual host configuration.

    Type: list of strings

    Default: [ ]

    Example: [ "www.example.org" "www.example.org:8080" "example.org" ]

    Declared by:

    [19936]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19937]services.wordpress.<name>.virtualHost.sslServerCert

    Path to server SSL certificate.

    Type: path

    Example: "/var/host.cert"

    Declared by:

    [19938]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19939]services.wordpress.<name>.virtualHost.sslServerChain

    Path to server SSL chain file.

    Type: null or path

    Default: null

    Example: "/var/ca.pem"

    Declared by:

    [19940]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19941]services.wordpress.<name>.virtualHost.sslServerKey

    Path to server SSL certificate key.

    Type: path

    Example: "/var/host.key"

    Declared by:

    [19942]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19943]services.wordpress.<name>.virtualHost.useACMEHost

    A host of an existing Let's Encrypt certificate to use. This is useful if you have many
    subdomains and want to avoid hitting the [19944]rate limit. Alternately, you can generate a
    certificate through enableACME. Note that this option does not create any certificates, nor
    it does add subdomains to existing ones – you will need to create them manually using [19945]
    security.acme.certs.

    Type: null or string

    Default: null

    Declared by:

    [19946]<nixpkgs/nixos/modules/services/web-apps/wordpress.nix>

[19947]services.xandikos.enable

    Whether to enable Xandikos CalDAV and CardDAV server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19948]<nixpkgs/nixos/modules/services/networking/xandikos.nix>

[19949]services.xandikos.package

    The Xandikos package to use.

    Type: package

    Default: "pkgs.xandikos"

    Declared by:

    [19950]<nixpkgs/nixos/modules/services/networking/xandikos.nix>

[19951]services.xandikos.address

    The IP address on which Xandikos will listen. By default listens on localhost.

    Type: string

    Default: "localhost"

    Declared by:

    [19952]<nixpkgs/nixos/modules/services/networking/xandikos.nix>

[19953]services.xandikos.extraOptions

    Extra command line arguments to pass to xandikos.

    Type: list of strings

    Default: [ ]

    Example:

    [ "--autocreate"
      "--defaults"
      "--current-user-principal user"
      "--dump-dav-xml"
    ]

    Declared by:

    [19954]<nixpkgs/nixos/modules/services/networking/xandikos.nix>

[19955]services.xandikos.nginx

    Configuration for nginx reverse proxy.

    Type: submodule

    Default: { }

    Declared by:

    [19956]<nixpkgs/nixos/modules/services/networking/xandikos.nix>

[19957]services.xandikos.nginx.enable

    Configure the nginx reverse proxy settings.

    Type: boolean

    Default: false

    Declared by:

    [19958]<nixpkgs/nixos/modules/services/networking/xandikos.nix>

[19959]services.xandikos.nginx.hostName

    The hostname use to setup the virtualhost configuration

    Type: string

    Declared by:

    [19960]<nixpkgs/nixos/modules/services/networking/xandikos.nix>

[19961]services.xandikos.port

    The port of the Xandikos web application

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 8080

    Declared by:

    [19962]<nixpkgs/nixos/modules/services/networking/xandikos.nix>

[19963]services.xandikos.routePrefix

    Path to Xandikos. Useful when Xandikos is behind a reverse proxy.

    Type: string

    Default: "/"

    Declared by:

    [19964]<nixpkgs/nixos/modules/services/networking/xandikos.nix>

[19965]services.xbanish.enable

    Whether to enable xbanish.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19966]<nixpkgs/nixos/modules/services/x11/xbanish.nix>

[19967]services.xbanish.arguments

    Arguments to pass to xbanish command

    Type: string

    Default: ""

    Example: "-d -i shift"

    Declared by:

    [19968]<nixpkgs/nixos/modules/services/x11/xbanish.nix>

[19969]services.xe-guest-utilities.enable

    Whether to enable the Xen guest utilities daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19970]<nixpkgs/nixos/modules/virtualisation/xe-guest-utilities.nix>

[19971]services.xfs.enable

    Whether to enable the X Font Server.

    Type: boolean

    Default: false

    Declared by:

    [19972]<nixpkgs/nixos/modules/services/x11/xfs.nix>

[19973]services.xinetd.enable

    Whether to enable the xinetd super-server daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19974]<nixpkgs/nixos/modules/services/networking/xinetd.nix>

[19975]services.xinetd.extraDefaults

    Additional configuration lines added to the default section of xinetd's configuration.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [19976]<nixpkgs/nixos/modules/services/networking/xinetd.nix>

[19977]services.xinetd.services

    A list of services provided by xinetd.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [19978]<nixpkgs/nixos/modules/services/networking/xinetd.nix>

[19979]services.xinetd.services.*.extraConfig

    Extra configuration-lines added to the section of the service.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [19980]<nixpkgs/nixos/modules/services/networking/xinetd.nix>

[19981]services.xinetd.services.*.flags

    Type: string

    Default: ""

    Declared by:

    [19982]<nixpkgs/nixos/modules/services/networking/xinetd.nix>

[19983]services.xinetd.services.*.name

    Name of the service.

    Type: string

    Example: "login"

    Declared by:

    [19984]<nixpkgs/nixos/modules/services/networking/xinetd.nix>

[19985]services.xinetd.services.*.port

    Port number of the service.

    Type: signed integer

    Default: 0

    Example: 123

    Declared by:

    [19986]<nixpkgs/nixos/modules/services/networking/xinetd.nix>

[19987]services.xinetd.services.*.protocol

    Protocol of the service. Usually tcp or udp.

    Type: string

    Default: "tcp"

    Declared by:

    [19988]<nixpkgs/nixos/modules/services/networking/xinetd.nix>

[19989]services.xinetd.services.*.server

    Path of the program that implements the service.

    Type: string

    Example: "/foo/bin/ftpd"

    Declared by:

    [19990]<nixpkgs/nixos/modules/services/networking/xinetd.nix>

[19991]services.xinetd.services.*.serverArgs

    Command-line arguments for the server program.

    Type: strings concatenated with " "

    Default: ""

    Declared by:

    [19992]<nixpkgs/nixos/modules/services/networking/xinetd.nix>

[19993]services.xinetd.services.*.unlisted

    Whether this server is listed in /etc/services. If so, the port number can be omitted.

    Type: boolean

    Default: false

    Declared by:

    [19994]<nixpkgs/nixos/modules/services/networking/xinetd.nix>

[19995]services.xinetd.services.*.user

    User account for the service

    Type: string

    Default: "nobody"

    Declared by:

    [19996]<nixpkgs/nixos/modules/services/networking/xinetd.nix>

[19997]services.xl2tpd.enable

    Whether to enable xl2tpd, the Layer 2 Tunnelling Protocol Daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [19998]<nixpkgs/nixos/modules/services/networking/xl2tpd.nix>

[19999]services.xl2tpd.clientIpRange

    The range from which client IPs are drawn.

    Type: string

    Default: "10.125.125.2-11"

    Declared by:

    [20000]<nixpkgs/nixos/modules/services/networking/xl2tpd.nix>

[20001]services.xl2tpd.extraPppdOptions

    Adds extra lines to the pppd options file.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    ms-dns 8.8.8.8
    ms-dns 8.8.4.4
    ''

    Declared by:

    [20002]<nixpkgs/nixos/modules/services/networking/xl2tpd.nix>

[20003]services.xl2tpd.extraXl2tpOptions

    Adds extra lines to the xl2tpd configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [20004]<nixpkgs/nixos/modules/services/networking/xl2tpd.nix>

[20005]services.xl2tpd.serverIp

    The server-side IP address.

    Type: string

    Default: "10.125.125.1"

    Declared by:

    [20006]<nixpkgs/nixos/modules/services/networking/xl2tpd.nix>

[20007]services.xmr-stak.enable

    Whether to enable xmr-stak miner.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20008]<nixpkgs/nixos/modules/services/misc/xmr-stak.nix>

[20009]services.xmr-stak.configFiles

    Content of config files like config.txt, pools.txt or cpu.txt.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      "config.txt" = ''
        "verbose_level" : 4,
        "h_print_time" : 60,
        "tls_secure_algo" : true,
      '';
      "pools.txt" = ''
        "currency" : "monero7",
        "pool_list" :
        [ { "pool_address" : "pool.supportxmr.com:443",
            "wallet_address" : "my-wallet-address",
            "rig_id" : "",
            "pool_password" : "nixos",
            "use_nicehash" : false,
            "use_tls" : true,
            "tls_fingerprint" : "",
            "pool_weight" : 23
          },
        ],
      '';
    }

    Declared by:

    [20010]<nixpkgs/nixos/modules/services/misc/xmr-stak.nix>

[20011]services.xmr-stak.cudaSupport

    Whether to enable support for CUDA (NVidia graphics cards).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20012]<nixpkgs/nixos/modules/services/misc/xmr-stak.nix>

[20013]services.xmr-stak.extraArgs

    List of parameters to pass to xmr-stak.

    Type: list of strings

    Default: [ ]

    Example: [ "--noCPU" "--currency monero" ]

    Declared by:

    [20014]<nixpkgs/nixos/modules/services/misc/xmr-stak.nix>

[20015]services.xmr-stak.openclSupport

    Whether to enable support for OpenCL (AMD/ATI graphics cards).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20016]<nixpkgs/nixos/modules/services/misc/xmr-stak.nix>

[20017]services.xrdp.enable

    Whether to enable xrdp, the Remote Desktop Protocol server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20018]<nixpkgs/nixos/modules/services/networking/xrdp.nix>

[20019]services.xrdp.package

    The package to use for the xrdp daemon's binary.

    Type: package

    Default: "pkgs.xrdp"

    Declared by:

    [20020]<nixpkgs/nixos/modules/services/networking/xrdp.nix>

[20021]services.xrdp.defaultWindowManager

    The script to run when user log in, usually a window manager, e.g. "icewm", "xfce4-session"
    This is per-user overridable, if file ~/startwm.sh exists it will be used instead.

    Type: string

    Default: "xterm"

    Example: "xfce4-session"

    Declared by:

    [20022]<nixpkgs/nixos/modules/services/networking/xrdp.nix>

[20023]services.xrdp.port

    Specifies on which port the xrdp daemon listens.

    Type: signed integer

    Default: 3389

    Declared by:

    [20024]<nixpkgs/nixos/modules/services/networking/xrdp.nix>

[20025]services.xrdp.sslCert

    ssl certificate path A self-signed certificate will be generated if file not exists.

    Type: string

    Default: "/etc/xrdp/cert.pem"

    Example: "/path/to/your/cert.pem"

    Declared by:

    [20026]<nixpkgs/nixos/modules/services/networking/xrdp.nix>

[20027]services.xrdp.sslKey

    ssl private key path A self-signed certificate will be generated if file not exists.

    Type: string

    Default: "/etc/xrdp/key.pem"

    Example: "/path/to/your/key.pem"

    Declared by:

    [20028]<nixpkgs/nixos/modules/services/networking/xrdp.nix>

[20029]services.xserver.enable

    Whether to enable the X server.

    Type: boolean

    Default: false

    Declared by:

    [20030]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20031]services.xserver.enableCtrlAltBackspace

    Whether to enable the DontZap option, which binds Ctrl+Alt+Backspace to forcefully kill X.
    This can lead to data loss and is disabled by default.

    Type: boolean

    Default: false

    Declared by:

    [20032]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20033]services.xserver.enableTCP

    Whether to allow the X server to accept TCP connections.

    Type: boolean

    Default: false

    Declared by:

    [20034]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20035]services.xserver.autoRepeatDelay

    Sets the autorepeat delay (length of time in milliseconds that a key must be depressed before
    autorepeat starts).

    Type: null or signed integer

    Default: null

    Declared by:

    [20036]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20037]services.xserver.autoRepeatInterval

    Sets the autorepeat interval (length of time in milliseconds that should elapse between
    autorepeat-generated keystrokes).

    Type: null or signed integer

    Default: null

    Declared by:

    [20038]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20039]services.xserver.autorun

    Whether to start the X server automatically.

    Type: boolean

    Default: true

    Declared by:

    [20040]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20041]services.xserver.cmt.enable

    Enable chrome multitouch input (cmt). Touchpad drivers that are configured for chromebooks.

    Type: boolean

    Default: false

    Declared by:

    [20042]<nixpkgs/nixos/modules/services/x11/hardware/cmt.nix>

[20043]services.xserver.cmt.models

    Which models to enable cmt for. Enter the Code Name for your Chromebook. Code Name can be
    found at [20044]https://www.chromium.org/chromium-os/
    developer-information-for-chrome-os-devices.

    Type: one of "atlas", "banjo", "candy", "caroline", "cave", "celes", "clapper", "cyan",
    "daisy", "elan", "elm", "enguarde", "eve", "expresso", "falco", "gandof", "glimmer",
    "gnawty", "heli", "kevin", "kip", "leon", "lulu", "orco", "pbody", "peppy", "pi", "pit",
    "puppy", "quawks", "rambi", "samus", "snappy", "spring", "squawks", "swanky", "winky",
    "wolf", "auron_paine", "auron_yuna", "daisy_skate", "nyan_big", "nyan_blaze", "veyron_jaq",
    "veyron_jerry", "veyron_mighty", "veyron_minnie", "veyron_speedy"

    Example: "banjo"

    Declared by:

    [20045]<nixpkgs/nixos/modules/services/x11/hardware/cmt.nix>

[20046]services.xserver.config

    The contents of the configuration file of the X server (xorg.conf).

    Type: strings concatenated with "\n"

    Declared by:

    [20047]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20048]services.xserver.defaultDepth

    Default colour depth.

    Type: signed integer

    Default: 0

    Example: 8

    Declared by:

    [20049]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20050]services.xserver.desktopManager.cde.enable

    Whether to enable Common Desktop Environment.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20051]<nixpkgs/nixos/modules/services/x11/desktop-managers/cde.nix>

[20052]services.xserver.desktopManager.cde.extraPackages

    Extra packages to be installed system wide.

    Type: list of packages

    Default: [ (build of xclock-1.0.9) (build of bitmap-1.0.9) (build of xlsfonts-1.0.6) (build
    of xfd-1.1.3) (build of xrefresh-1.0.6) (build of xload-1.1.3) (build of xwininfo-1.1.4)
    (build of xdpyinfo-1.3.2) (build of xwd-1.0.7) (build of xwud-1.0.5) ]

    Example:

    with pkgs.xorg; [
      xclock bitmap xlsfonts xfd xrefresh xload xwininfo xdpyinfo xwd xwud
    ]

    Declared by:

    [20053]<nixpkgs/nixos/modules/services/x11/desktop-managers/cde.nix>

[20054]services.xserver.desktopManager.cinnamon.enable

    Whether to enable the cinnamon desktop manager.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20055]<nixpkgs/nixos/modules/services/x11/desktop-managers/cinnamon.nix>

[20056]services.xserver.desktopManager.cinnamon.extraGSettingsOverridePackages

    List of packages for which gsettings are overridden.

    Type: list of paths

    Default: [ ]

    Declared by:

    [20057]<nixpkgs/nixos/modules/services/x11/desktop-managers/cinnamon.nix>

[20058]services.xserver.desktopManager.cinnamon.extraGSettingsOverrides

    Additional gsettings overrides.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [20059]<nixpkgs/nixos/modules/services/x11/desktop-managers/cinnamon.nix>

[20060]services.xserver.desktopManager.cinnamon.sessionPath

    Additional list of packages to be added to the session search path. Useful for
    GSettings-conditional autostart.

    Note that this should be a last resort; patching the package is preferred (see GPaste).

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.gnome.gpaste ]

    Declared by:

    [20061]<nixpkgs/nixos/modules/services/x11/desktop-managers/cinnamon.nix>

[20062]services.xserver.desktopManager.default

    Deprecated, please use [20063]services.xserver.displayManager.defaultSession instead.

    Default desktop manager loaded if none have been chosen.

    Type: null or string

    Default: null

    Example: "none"

    Declared by:

    [20064]<nixpkgs/nixos/modules/services/x11/desktop-managers/default.nix>

[20065]services.xserver.desktopManager.enlightenment.enable

    Enable the Enlightenment desktop environment.

    Type: boolean

    Default: false

    Declared by:

    [20066]<nixpkgs/nixos/modules/services/x11/desktop-managers/enlightenment.nix>

[20067]services.xserver.desktopManager.gnome.enable

    Enable GNOME desktop manager.

    Type: boolean

    Default: false

    Declared by:

    [20068]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[20069]services.xserver.desktopManager.gnome.debug

    Whether to enable gnome-session debug messages.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20070]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[20071]services.xserver.desktopManager.gnome.extraGSettingsOverridePackages

    List of packages for which gsettings are overridden.

    Type: list of paths

    Default: [ ]

    Declared by:

    [20072]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[20073]services.xserver.desktopManager.gnome.extraGSettingsOverrides

    Additional gsettings overrides.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [20074]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[20075]services.xserver.desktopManager.gnome.flashback.enableMetacity

    Whether to enable the standard GNOME Flashback session with Metacity.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20076]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[20077]services.xserver.desktopManager.gnome.flashback.customSessions

    Other GNOME Flashback sessions to enable.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [20078]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[20079]services.xserver.desktopManager.gnome.flashback.customSessions.*.wmCommand

    The executable of the window manager to use.

    Type: string

    Example: "\${pkgs.haskellPackages.xmonad}/bin/xmonad"

    Declared by:

    [20080]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[20081]services.xserver.desktopManager.gnome.flashback.customSessions.*.wmLabel

    The pretty name of the window manager to use.

    Type: string

    Example: "XMonad"

    Declared by:

    [20082]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[20083]services.xserver.desktopManager.gnome.flashback.customSessions.*.wmName

    The filename-compatible name of the window manager to use.

    Type: string

    Example: "xmonad"

    Declared by:

    [20084]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[20085]services.xserver.desktopManager.gnome.sessionPath

    Additional list of packages to be added to the session search path. Useful for GNOME Shell
    extensions or GSettings-conditional autostart.

    Note that this should be a last resort; patching the package is preferred (see GPaste).

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.gnome.gpaste ]

    Declared by:

    [20086]<nixpkgs/nixos/modules/services/x11/desktop-managers/gnome.nix>

[20087]services.xserver.desktopManager.kodi.enable

    Enable the kodi multimedia center.

    Type: boolean

    Default: false

    Declared by:

    [20088]<nixpkgs/nixos/modules/services/x11/desktop-managers/kodi.nix>

[20089]services.xserver.desktopManager.kodi.package

    Package that should be used for Kodi.

    Type: package

    Default: "pkgs.kodi"

    Example: "pkgs.kodi.withPackages (p: with p; [ jellyfin pvr-iptvsimple vfs-sftp ])"

    Declared by:

    [20090]<nixpkgs/nixos/modules/services/x11/desktop-managers/kodi.nix>

[20091]services.xserver.desktopManager.lumina.enable

    Enable the Lumina desktop manager

    Type: boolean

    Default: false

    Declared by:

    [20092]<nixpkgs/nixos/modules/services/x11/desktop-managers/lumina.nix>

[20093]services.xserver.desktopManager.lxqt.enable

    Enable the LXQt desktop manager

    Type: boolean

    Default: false

    Declared by:

    [20094]<nixpkgs/nixos/modules/services/x11/desktop-managers/lxqt.nix>

[20095]services.xserver.desktopManager.mate.enable

    Enable the MATE desktop environment

    Type: boolean

    Default: false

    Declared by:

    [20096]<nixpkgs/nixos/modules/services/x11/desktop-managers/mate.nix>

[20097]services.xserver.desktopManager.mate.debug

    Whether to enable mate-session debug messages.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20098]<nixpkgs/nixos/modules/services/x11/desktop-managers/mate.nix>

[20099]services.xserver.desktopManager.pantheon.enable

    Enable the pantheon desktop manager

    Type: boolean

    Default: false

    Declared by:

    [20100]<nixpkgs/nixos/modules/services/x11/desktop-managers/pantheon.nix>

[20101]services.xserver.desktopManager.pantheon.debug

    Whether to enable gnome-session debug messages.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20102]<nixpkgs/nixos/modules/services/x11/desktop-managers/pantheon.nix>

[20103]services.xserver.desktopManager.pantheon.extraGSettingsOverridePackages

    List of packages for which gsettings are overridden.

    Type: list of paths

    Default: [ ]

    Declared by:

    [20104]<nixpkgs/nixos/modules/services/x11/desktop-managers/pantheon.nix>

[20105]services.xserver.desktopManager.pantheon.extraGSettingsOverrides

    Additional gsettings overrides.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [20106]<nixpkgs/nixos/modules/services/x11/desktop-managers/pantheon.nix>

[20107]services.xserver.desktopManager.pantheon.extraSwitchboardPlugs

    Plugs to add to Switchboard.

    Type: null or list of packages

    Default: null

    Declared by:

    [20108]<nixpkgs/nixos/modules/services/x11/desktop-managers/pantheon.nix>

[20109]services.xserver.desktopManager.pantheon.extraWingpanelIndicators

    Indicators to add to Wingpanel.

    Type: null or list of packages

    Default: null

    Declared by:

    [20110]<nixpkgs/nixos/modules/services/x11/desktop-managers/pantheon.nix>

[20111]services.xserver.desktopManager.pantheon.sessionPath

    Additional list of packages to be added to the session search path. Useful for
    GSettings-conditional autostart.

    Note that this should be a last resort; patching the package is preferred (see GPaste).

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.gnome.gpaste ]

    Declared by:

    [20112]<nixpkgs/nixos/modules/services/x11/desktop-managers/pantheon.nix>

[20113]services.xserver.desktopManager.plasma5.enable

    Enable the Plasma 5 (KDE 5) desktop environment.

    Type: boolean

    Default: false

    Declared by:

    [20114]<nixpkgs/nixos/modules/services/x11/desktop-managers/plasma5.nix>

[20115]services.xserver.desktopManager.plasma5.phononBackend

    Phonon audio backend to install.

    Type: one of "gstreamer", "vlc"

    Default: "gstreamer"

    Example: "vlc"

    Declared by:

    [20116]<nixpkgs/nixos/modules/services/x11/desktop-managers/plasma5.nix>

[20117]services.xserver.desktopManager.plasma5.supportDDC

    Support setting monitor brightness via DDC.

    This is not needed for controlling brightness of the internal monitor of a laptop and as it
    is considered experimental by upstream, it is disabled by default.

    Type: boolean

    Default: false

    Declared by:

    [20118]<nixpkgs/nixos/modules/services/x11/desktop-managers/plasma5.nix>

[20119]services.xserver.desktopManager.surf-display.enable

    Whether to enable surf-display as a kiosk browser session.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20120]<nixpkgs/nixos/modules/services/x11/desktop-managers/surf-display.nix>

[20121]services.xserver.desktopManager.surf-display.defaultWwwUri

    Default URI to display.

    Type: string

    Default: "\${pkgs.surf-display}/share/surf-display/empty-page.html"

    Example: "https://www.example.com/"

    Declared by:

    [20122]<nixpkgs/nixos/modules/services/x11/desktop-managers/surf-display.nix>

[20123]services.xserver.desktopManager.surf-display.extraConfig

    Extra configuration options to append to /etc/default/surf-display.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    # Enforce fixed resolution for all displays (default: not set):
    DEFAULT_RESOLUTION="1920x1080"

    # HTTP proxy URL, if needed (default: not set).
    HTTP_PROXY_URL="http://webcache:3128"

    # Configure individual display screens with host specific parameters:
    DISPLAYS['display-host-0']="www_uri=https://www.displayserver.comany.net/display-1/index.html"
    DISPLAYS['display-host-1']="www_uri=https://www.displayserver.comany.net/display-2/index.html"
    DISPLAYS['display-host-2']="www_uri=https://www.displayserver.comany.net/display-3/index.html|res=1920x1280"
    DISPLAYS['display-host-3']="www_uri=https://www.displayserver.comany.net/display-4/index.html"|res=1280x1024"
    DISPLAYS['display-host-local-file']="www_uri=file:///usr/share/doc/surf-display/empty-page.html"
    ''

    Declared by:

    [20124]<nixpkgs/nixos/modules/services/x11/desktop-managers/surf-display.nix>

[20125]services.xserver.desktopManager.surf-display.hideIdlePointer

    Hide idle mouse pointer.

    Type: string

    Default: "yes"

    Example: "no"

    Declared by:

    [20126]<nixpkgs/nixos/modules/services/x11/desktop-managers/surf-display.nix>

[20127]services.xserver.desktopManager.surf-display.inactivityInterval

    Setting for internal inactivity timer to restart surf-display if the user goes inactive/idle
    to get a fresh session for the next user of the kiosk.

    If this value is set to zero, the whole feature of restarting due to inactivity is disabled.

    Type: signed integer

    Default: 300

    Example: "0"

    Declared by:

    [20128]<nixpkgs/nixos/modules/services/x11/desktop-managers/surf-display.nix>

[20129]services.xserver.desktopManager.surf-display.pointerButtonMap

    Disable right and middle pointer device click in browser sessions while keeping scrolling
    wheels' functionality intact. See pointer subcommand on man xmodmap for details.

    Type: string

    Default: "1 0 0 4 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"

    Declared by:

    [20130]<nixpkgs/nixos/modules/services/x11/desktop-managers/surf-display.nix>

[20131]services.xserver.desktopManager.surf-display.screensaverSettings

    Screensaver settings, see man 1 xset for possible options.

    Type: strings concatenated with " "

    Default: ""

    Declared by:

    [20132]<nixpkgs/nixos/modules/services/x11/desktop-managers/surf-display.nix>

[20133]services.xserver.desktopManager.wallpaper.combineScreens

    When set to true the wallpaper will stretch across all screens. When set to false the
    wallpaper is duplicated to all screens.

    Type: boolean

    Default: false

    Declared by:

    [20134]<nixpkgs/nixos/modules/services/x11/desktop-managers/default.nix>

[20135]services.xserver.desktopManager.wallpaper.mode

    The file ~/.background-image is used as a background image. This option specifies the
    placement of this image onto your desktop.

    Possible values: center: Center the image on the background. If it is too small, it will be
    surrounded by a black border. fill: Like scale, but preserves aspect ratio by zooming the
    image until it fits. Either a horizontal or a vertical part of the image will be cut off.
    max: Like fill, but scale the image to the maximum size that fits the screen with black
    borders on one side. scale: Fit the file into the background without repeating it, cutting
    off stuff or using borders. But the aspect ratio is not preserved either. tile: Tile (repeat)
    the image in case it is too small for the screen.

    Type: one of "center", "fill", "max", "scale", "tile"

    Default: "scale"

    Example: "fill"

    Declared by:

    [20136]<nixpkgs/nixos/modules/services/x11/desktop-managers/default.nix>

[20137]services.xserver.desktopManager.xfce.enable

    Enable the Xfce desktop environment.

    Type: boolean

    Default: false

    Declared by:

    [20138]<nixpkgs/nixos/modules/services/x11/desktop-managers/xfce.nix>

[20139]services.xserver.desktopManager.xfce.enableXfwm

    Enable the XFWM (default) window manager.

    Type: boolean

    Default: true

    Declared by:

    [20140]<nixpkgs/nixos/modules/services/x11/desktop-managers/xfce.nix>

[20141]services.xserver.desktopManager.xfce.noDesktop

    Don't install XFCE desktop components (xfdesktop and panel).

    Type: boolean

    Default: false

    Declared by:

    [20142]<nixpkgs/nixos/modules/services/x11/desktop-managers/xfce.nix>

[20143]services.xserver.desktopManager.xfce.thunarPlugins

    A list of plugin that should be installed with Thunar.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.xfce.thunar-archive-plugin ]

    Declared by:

    [20144]<nixpkgs/nixos/modules/services/x11/desktop-managers/xfce.nix>

[20145]services.xserver.desktopManager.xterm.enable

    Enable a xterm terminal as a desktop manager.

    Type: boolean

    Default: "false"

    Declared by:

    [20146]<nixpkgs/nixos/modules/services/x11/desktop-managers/xterm.nix>

[20147]services.xserver.deviceSection

    Contents of the first Device section of the X server configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "VideoRAM 131072"

    Declared by:

    [20148]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20149]services.xserver.digimend.enable

    Whether to enable the digimend drivers for Huion/XP-Pen/etc. tablets.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20150]<nixpkgs/nixos/modules/services/x11/hardware/digimend.nix>

[20151]services.xserver.display

    Display number for the X server.

    Type: null or signed integer

    Default: 0

    Declared by:

    [20152]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20153]services.xserver.displayManager.autoLogin

    Auto login configuration attrset.

    Type: submodule

    Default: { }

    Declared by:

    [20154]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20155]services.xserver.displayManager.autoLogin.enable

    Automatically log in as autoLogin.user.

    Type: boolean

    Default: false

    Declared by:

    [20156]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20157]services.xserver.displayManager.autoLogin.user

    User to be used for the automatic login.

    Type: null or string

    Default: null

    Declared by:

    [20158]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20159]services.xserver.displayManager.defaultSession

    Graphical session to pre-select in the session chooser (only effective for GDM and LightDM).

    On GDM, LightDM and SDDM, it will also be used as a session for auto-login.

    Type: session name

    Default: null

    Example: "gnome"

    Declared by:

    [20160]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20161]services.xserver.displayManager.gdm.enable

    Whether to enable GDM, the GNOME Display Manager.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20162]<nixpkgs/nixos/modules/services/x11/display-managers/gdm.nix>

[20163]services.xserver.displayManager.gdm.autoLogin.delay

    Seconds of inactivity after which the autologin will be performed.

    Type: signed integer

    Default: 0

    Declared by:

    [20164]<nixpkgs/nixos/modules/services/x11/display-managers/gdm.nix>

[20165]services.xserver.displayManager.gdm.autoSuspend

    Suspend the machine after inactivity.

    Type: boolean

    Default: true

    Declared by:

    [20166]<nixpkgs/nixos/modules/services/x11/display-managers/gdm.nix>

[20167]services.xserver.displayManager.gdm.debug

    Whether to enable debugging messages in GDM.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20168]<nixpkgs/nixos/modules/services/x11/display-managers/gdm.nix>

[20169]services.xserver.displayManager.gdm.nvidiaWayland

    Whether to allow wayland to be used with the proprietary NVidia graphics driver.

    Type: boolean

    Default: false

    Declared by:

    [20170]<nixpkgs/nixos/modules/services/x11/display-managers/gdm.nix>

[20171]services.xserver.displayManager.gdm.wayland

    Allow GDM to run on Wayland instead of Xserver. Note to enable Wayland with Nvidia you need
    to enable the nvidiaWayland.

    Type: boolean

    Default: true

    Declared by:

    [20172]<nixpkgs/nixos/modules/services/x11/display-managers/gdm.nix>

[20173]services.xserver.displayManager.hiddenUsers

    A list of users which will not be shown in the display manager.

    Type: list of strings

    Default: [ "nobody" ]

    Declared by:

    [20174]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20175]services.xserver.displayManager.job.environment

    Additional environment variables needed by the display manager.

    Type: attribute set of unspecifieds

    Default: { }

    Declared by:

    [20176]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20177]services.xserver.displayManager.job.execCmd

    Command to start the display manager.

    Type: string

    Example:

    "${pkgs.lightdm}/bin/lightdm"

    Declared by:

    [20178]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20179]services.xserver.displayManager.job.logToFile

    Whether the display manager redirects the output of the session script to ~/.xsession-errors.

    Type: boolean

    Default: false

    Declared by:

    [20180]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20181]services.xserver.displayManager.job.logToJournal

    Whether the display manager redirects the output of the session script to the systemd
    journal.

    Type: boolean

    Default: true

    Declared by:

    [20182]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20183]services.xserver.displayManager.job.preStart

    Script executed before the display manager is started.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "rm -f /var/log/my-display-manager.log"

    Declared by:

    [20184]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20185]services.xserver.displayManager.lightdm.enable

    Whether to enable lightdm as the display manager.

    Type: boolean

    Default: false

    Declared by:

    [20186]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm.nix>

[20187]services.xserver.displayManager.lightdm.autoLogin.timeout

    Show the greeter for this many seconds before automatic login occurs.

    Type: signed integer

    Default: 0

    Declared by:

    [20188]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm.nix>

[20189]services.xserver.displayManager.lightdm.background

    The background image or color to use.

    Type: path

    Default: "pkgs.nixos-artwork.wallpapers.simple-dark-gray-bottom.gnomeFilePath"

    Declared by:

    [20190]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm.nix>

[20191]services.xserver.displayManager.lightdm.extraConfig

    Extra lines to append to LightDM section.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    user-authority-in-system-dir = true
    ''

    Declared by:

    [20192]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm.nix>

[20193]services.xserver.displayManager.lightdm.extraSeatDefaults

    Extra lines to append to SeatDefaults section.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    greeter-show-manual-login=true
    ''

    Declared by:

    [20194]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm.nix>

[20195]services.xserver.displayManager.lightdm.greeter.enable

    If set to false, run lightdm in greeterless mode. This only works if autologin is enabled and
    autoLogin.timeout is zero.

    Type: boolean

    Default: true

    Declared by:

    [20196]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm.nix>

[20197]services.xserver.displayManager.lightdm.greeter.package

    The LightDM greeter to login via. The package should be a directory containing a .desktop
    file matching the name in the 'name' option.

    Type: package

    Declared by:

    [20198]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm.nix>

[20199]services.xserver.displayManager.lightdm.greeter.name

    The name of a .desktop file in the directory specified in the 'package' option.

    Type: string

    Declared by:

    [20200]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm.nix>

[20201]services.xserver.displayManager.lightdm.greeters.enso.enable

    Whether to enable enso-os-greeter as the lightdm greeter

    Type: boolean

    Default: false

    Declared by:

    [20202]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/enso-os.nix>

[20203]services.xserver.displayManager.lightdm.greeters.enso.blur

    Whether or not to enable blur

    Type: boolean

    Default: false

    Declared by:

    [20204]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/enso-os.nix>

[20205]services.xserver.displayManager.lightdm.greeters.enso.brightness

    Brightness

    Type: signed integer

    Default: 7

    Declared by:

    [20206]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/enso-os.nix>

[20207]services.xserver.displayManager.lightdm.greeters.enso.cursorTheme.package

    The package path that contains the cursor theme given in the name option.

    Type: package

    Default: "pkgs.capitaine-cursors"

    Declared by:

    [20208]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/enso-os.nix>

[20209]services.xserver.displayManager.lightdm.greeters.enso.cursorTheme.name

    Name of the cursor theme to use for the lightdm-enso-os-greeter

    Type: string

    Default: "capitane-cursors"

    Declared by:

    [20210]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/enso-os.nix>

[20211]services.xserver.displayManager.lightdm.greeters.enso.extraConfig

    Extra configuration that should be put in the greeter.conf configuration file

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [20212]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/enso-os.nix>

[20213]services.xserver.displayManager.lightdm.greeters.enso.iconTheme.package

    The package path that contains the icon theme given in the name option.

    Type: package

    Default: "pkgs.papirus-icon-theme"

    Declared by:

    [20214]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/enso-os.nix>

[20215]services.xserver.displayManager.lightdm.greeters.enso.iconTheme.name

    Name of the icon theme to use for the lightdm-enso-os-greeter

    Type: string

    Default: "ePapirus"

    Declared by:

    [20216]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/enso-os.nix>

[20217]services.xserver.displayManager.lightdm.greeters.enso.theme.package

    The package path that contains the theme given in the name option.

    Type: package

    Default: "pkgs.gnome.gnome-themes-extra"

    Declared by:

    [20218]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/enso-os.nix>

[20219]services.xserver.displayManager.lightdm.greeters.enso.theme.name

    Name of the theme to use for the lightdm-enso-os-greeter

    Type: string

    Default: "Adwaita"

    Declared by:

    [20220]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/enso-os.nix>

[20221]services.xserver.displayManager.lightdm.greeters.gtk.enable

    Whether to enable lightdm-gtk-greeter as the lightdm greeter.

    Type: boolean

    Default: true

    Declared by:

    [20222]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix>

[20223]services.xserver.displayManager.lightdm.greeters.gtk.clock-format

    Clock format string (as expected by strftime, e.g. "%H:%M") to use with the lightdm gtk
    greeter panel.

    If set to null the default clock format is used.

    Type: null or string

    Default: null

    Example: "%F"

    Declared by:

    [20224]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix>

[20225]services.xserver.displayManager.lightdm.greeters.gtk.cursorTheme.package

    The package path that contains the cursor theme given in the name option.

    Type: package

    Default: "pkgs.gnome.adwaita-icon-theme"

    Declared by:

    [20226]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix>

[20227]services.xserver.displayManager.lightdm.greeters.gtk.cursorTheme.name

    Name of the cursor theme to use for the lightdm-gtk-greeter.

    Type: string

    Default: "Adwaita"

    Declared by:

    [20228]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix>

[20229]services.xserver.displayManager.lightdm.greeters.gtk.cursorTheme.size

    Size of the cursor theme to use for the lightdm-gtk-greeter.

    Type: signed integer

    Default: 16

    Declared by:

    [20230]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix>

[20231]services.xserver.displayManager.lightdm.greeters.gtk.extraConfig

    Extra configuration that should be put in the lightdm-gtk-greeter.conf configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [20232]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix>

[20233]services.xserver.displayManager.lightdm.greeters.gtk.iconTheme.package

    The package path that contains the icon theme given in the name option.

    Type: package

    Default: "pkgs.gnome.adwaita-icon-theme"

    Declared by:

    [20234]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix>

[20235]services.xserver.displayManager.lightdm.greeters.gtk.iconTheme.name

    Name of the icon theme to use for the lightdm-gtk-greeter.

    Type: string

    Default: "Adwaita"

    Declared by:

    [20236]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix>

[20237]services.xserver.displayManager.lightdm.greeters.gtk.indicators

    List of allowed indicator modules to use for the lightdm gtk greeter panel.

    Built-in indicators include "~a11y", "~language", "~session", "~power", "~clock", "~host",
    "~spacer". Unity indicators can be represented by short name (e.g. "sound", "power"), service
    file name, or absolute path.

    If set to null the default indicators are used.

    Type: null or list of strings

    Default: null

    Example: [ "~host" "~spacer" "~clock" "~spacer" "~session" "~language" "~a11y" "~power" ]

    Declared by:

    [20238]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix>

[20239]services.xserver.displayManager.lightdm.greeters.gtk.theme.package

    The package path that contains the theme given in the name option.

    Type: package

    Default: "pkgs.gnome.gnome-themes-extra"

    Declared by:

    [20240]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix>

[20241]services.xserver.displayManager.lightdm.greeters.gtk.theme.name

    Name of the theme to use for the lightdm-gtk-greeter.

    Type: string

    Default: "Adwaita"

    Declared by:

    [20242]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/gtk.nix>

[20243]services.xserver.displayManager.lightdm.greeters.mini.enable

    Whether to enable lightdm-mini-greeter as the lightdm greeter.

    Note that this greeter starts only the default X session. You can configure the default X
    session using [20244]services.xserver.displayManager.defaultSession.

    Type: boolean

    Default: false

    Declared by:

    [20245]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/mini.nix>

[20246]services.xserver.displayManager.lightdm.greeters.mini.extraConfig

    Extra configuration that should be put in the lightdm-mini-greeter.conf configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [20247]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/mini.nix>

[20248]services.xserver.displayManager.lightdm.greeters.mini.user

    The user to login as.

    Type: string

    Default: "root"

    Declared by:

    [20249]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/mini.nix>

[20250]services.xserver.displayManager.lightdm.greeters.pantheon.enable

    Whether to enable elementary-greeter as the lightdm greeter.

    Type: boolean

    Default: false

    Declared by:

    [20251]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/pantheon.nix>

[20252]services.xserver.displayManager.lightdm.greeters.tiny.enable

    Whether to enable lightdm-tiny-greeter as the lightdm greeter.

    Note that this greeter starts only the default X session. You can configure the default X
    session using [20253]services.xserver.displayManager.defaultSession.

    Type: boolean

    Default: false

    Declared by:

    [20254]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/tiny.nix>

[20255]services.xserver.displayManager.lightdm.greeters.tiny.extraConfig

    Section to describe style and ui.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [20256]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/tiny.nix>

[20257]services.xserver.displayManager.lightdm.greeters.tiny.label.pass

    The string to represent the pass_text label.

    Type: string

    Default: "Password"

    Declared by:

    [20258]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/tiny.nix>

[20259]services.xserver.displayManager.lightdm.greeters.tiny.label.user

    The string to represent the user_text label.

    Type: string

    Default: "Username"

    Declared by:

    [20260]<nixpkgs/nixos/modules/services/x11/display-managers/lightdm-greeters/tiny.nix>

[20261]services.xserver.displayManager.sddm.enable

    Whether to enable sddm as the display manager.

    Type: boolean

    Default: false

    Declared by:

    [20262]<nixpkgs/nixos/modules/services/x11/display-managers/sddm.nix>

[20263]services.xserver.displayManager.sddm.enableHidpi

    Whether to enable automatic HiDPI mode.

    Type: boolean

    Default: true

    Declared by:

    [20264]<nixpkgs/nixos/modules/services/x11/display-managers/sddm.nix>

[20265]services.xserver.displayManager.sddm.autoLogin.minimumUid

    Minimum user ID for auto-login user.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 1000

    Declared by:

    [20266]<nixpkgs/nixos/modules/services/x11/display-managers/sddm.nix>

[20267]services.xserver.displayManager.sddm.autoLogin.relogin

    If true automatic login will kick in again on session exit (logout), otherwise it will only
    log in automatically when the display-manager is started.

    Type: boolean

    Default: false

    Declared by:

    [20268]<nixpkgs/nixos/modules/services/x11/display-managers/sddm.nix>

[20269]services.xserver.displayManager.sddm.autoNumlock

    Enable numlock at login.

    Type: boolean

    Default: false

    Declared by:

    [20270]<nixpkgs/nixos/modules/services/x11/display-managers/sddm.nix>

[20271]services.xserver.displayManager.sddm.settings

    Extra settings merged in and overwritting defaults in sddm.conf.

    Type: attribute set of attribute set of INI atom (null, bool, int, float or string)ss

    Default: { }

    Example:

    ''
    {
      Autologin = {
        User = "john";
        Session = "plasma.desktop";
      };
    }
    ''

    Declared by:

    [20272]<nixpkgs/nixos/modules/services/x11/display-managers/sddm.nix>

[20273]services.xserver.displayManager.sddm.setupScript

    A script to execute when starting the display server. DEPRECATED, please use
    services.xserver.displayManager.setupCommands.

    Type: string

    Default: ""

    Example:

    ''
    # workaround for using NVIDIA Optimus without Bumblebee
    xrandr --setprovideroutputsource modesetting NVIDIA-0
    xrandr --auto
    ''

    Declared by:

    [20274]<nixpkgs/nixos/modules/services/x11/display-managers/sddm.nix>

[20275]services.xserver.displayManager.sddm.stopScript

    A script to execute when stopping the display server.

    Type: string

    Default: ""

    Declared by:

    [20276]<nixpkgs/nixos/modules/services/x11/display-managers/sddm.nix>

[20277]services.xserver.displayManager.sddm.theme

    Greeter theme to use.

    Type: string

    Default: ""

    Declared by:

    [20278]<nixpkgs/nixos/modules/services/x11/display-managers/sddm.nix>

[20279]services.xserver.displayManager.session

    List of sessions supported with the command used to start each session. Each session script
    can set the waitPID shell variable to make this script wait until the end of the user
    session. Each script is used to define either a window manager or a desktop manager. These
    can be differentiated by setting the attribute manage either to "window" or "desktop".

    The list of desktop manager and window manager should appear inside the display manager with
    the desktop manager name followed by the window manager name.

    Type: unspecified

    Default: [ ]

    Example:

    [ { manage = "desktop";
        name = "xterm";
        start = ''
          ${pkgs.xterm}/bin/xterm -ls &
          waitPID=$!
        '';
      }
    ]

    Declared by:

    [20280]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20281]services.xserver.displayManager.sessionCommands

    Shell commands executed just before the window or desktop manager is started. These commands
    are not currently sourced for Wayland sessions.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    xmessage "Hello World!" &
    ''

    Declared by:

    [20282]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20283]services.xserver.displayManager.sessionPackages

    A list of packages containing x11 or wayland session files to be passed to the display
    manager.

    Type: list of package with provided sessionss

    Default: [ ]

    Declared by:

    [20284]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20285]services.xserver.displayManager.setupCommands

    Shell commands executed just after the X server has started.

    This option is only effective for display managers for which this feature is supported;
    currently these are LightDM, GDM and SDDM.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [20286]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20287]services.xserver.displayManager.startx.enable

    Whether to enable the dummy "startx" pseudo-display manager, which allows users to start X
    manually via the "startx" command from a vt shell. The X server runs under the user's id, not
    as root. The user must provide a ~/.xinitrc file containing session startup commands, see
    startx(1). This is not automatically generated from the desktopManager and windowManager
    settings.

    Type: boolean

    Default: false

    Declared by:

    [20288]<nixpkgs/nixos/modules/services/x11/display-managers/startx.nix>

[20289]services.xserver.displayManager.xpra.enable

    Whether to enable xpra as display manager.

    Type: boolean

    Default: false

    Declared by:

    [20290]<nixpkgs/nixos/modules/services/x11/display-managers/xpra.nix>

[20291]services.xserver.displayManager.xpra.auth

    Authentication to use when connecting to xpra

    Type: string

    Default: "pam"

    Example: "password:value=mysecret"

    Declared by:

    [20292]<nixpkgs/nixos/modules/services/x11/display-managers/xpra.nix>

[20293]services.xserver.displayManager.xpra.bindTcp

    Bind xpra to TCP

    Type: null or string

    Default: "127.0.0.1:10000"

    Example: "0.0.0.0:10000"

    Declared by:

    [20294]<nixpkgs/nixos/modules/services/x11/display-managers/xpra.nix>

[20295]services.xserver.displayManager.xpra.extraOptions

    Extra xpra options

    Type: list of strings

    Default: [ ]

    Declared by:

    [20296]<nixpkgs/nixos/modules/services/x11/display-managers/xpra.nix>

[20297]services.xserver.displayManager.xpra.pulseaudio

    Whether to enable pulseaudio audio streaming.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20298]<nixpkgs/nixos/modules/services/x11/display-managers/xpra.nix>

[20299]services.xserver.displayManager.xserverArgs

    List of arguments for the X server.

    Type: list of strings

    Default: [ ]

    Example: [ "-ac" "-logverbose" "-verbose" "-nolisten tcp" ]

    Declared by:

    [20300]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20301]services.xserver.displayManager.xserverBin

    Path to the X server used by display managers.

    Type: path

    Declared by:

    [20302]<nixpkgs/nixos/modules/services/x11/display-managers/default.nix>

[20303]services.xserver.dpi

    DPI resolution to use for X server.

    Type: null or signed integer

    Default: null

    Declared by:

    [20304]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20305]services.xserver.exportConfiguration

    Whether to symlink the X server configuration under /etc/X11/xorg.conf.

    Type: boolean

    Default: false

    Declared by:

    [20306]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20307]services.xserver.extraConfig

    Additional contents (sections) included in the X server configuration file

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [20308]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20309]services.xserver.extraDisplaySettings

    Lines to be added to every Display subsection of the Screen section.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "Virtual 2048 2048"

    Declared by:

    [20310]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20311]services.xserver.extraLayouts

    Extra custom layouts that will be included in the xkb configuration. Information on how to
    create a new layout can be found here: [20312]https://www.x.org/releases/current/doc/
    xorg-docs/input/XKB-Enhancing.html#Defining_New_Layouts. For more examples see [20313]https:/
    /wiki.archlinux.org/index.php/X_KeyBoard_extension#Basic_examples

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      mine = {
        description = "My custom xkb layout.";
        languages = [ "eng" ];
        symbolsFile = /path/to/my/layout;
      };
    }

    Declared by:

    [20314]<nixpkgs/nixos/modules/services/x11/extra-layouts.nix>

[20315]services.xserver.extraLayouts.<name>.compatFile

    The path to the xkb compat file. This file sets the compatibility state, used to preserve
    compatibility with xkb-unaware programs. It must contain a xkb_compat "name" { ... } block.

    Type: null or path

    Default: null

    Declared by:

    [20316]<nixpkgs/nixos/modules/services/x11/extra-layouts.nix>

[20317]services.xserver.extraLayouts.<name>.description

    A short description of the layout.

    Type: string

    Declared by:

    [20318]<nixpkgs/nixos/modules/services/x11/extra-layouts.nix>

[20319]services.xserver.extraLayouts.<name>.geometryFile

    The path to the xkb geometry file. This (completely optional) file describes the physical
    layout of keyboard, which maybe be used by programs to depict it. It must contain a
    xkb_geometry "name" { ... } block.

    Type: null or path

    Default: null

    Declared by:

    [20320]<nixpkgs/nixos/modules/services/x11/extra-layouts.nix>

[20321]services.xserver.extraLayouts.<name>.keycodesFile

    The path to the xkb keycodes file. This file specifies the range and the interpretation of
    the raw keycodes sent by the keyboard. It must contain a xkb_keycodes "name" { ... } block.

    Type: null or path

    Default: null

    Declared by:

    [20322]<nixpkgs/nixos/modules/services/x11/extra-layouts.nix>

[20323]services.xserver.extraLayouts.<name>.languages

    A list of languages provided by the layout. (Use ISO 639-2 codes, for example: "eng" for
    english)

    Type: list of strings

    Declared by:

    [20324]<nixpkgs/nixos/modules/services/x11/extra-layouts.nix>

[20325]services.xserver.extraLayouts.<name>.symbolsFile

    The path to the xkb symbols file. This is the most important file: it defines which symbol or
    action maps to each key and must contain a xkb_symbols "name" { ... } block.

    Type: null or path

    Default: null

    Declared by:

    [20326]<nixpkgs/nixos/modules/services/x11/extra-layouts.nix>

[20327]services.xserver.extraLayouts.<name>.typesFile

    The path to the xkb types file. This file specifies the key types that can be associated with
    the various keyboard keys. It must contain a xkb_types "name" { ... } block.

    Type: null or path

    Default: null

    Declared by:

    [20328]<nixpkgs/nixos/modules/services/x11/extra-layouts.nix>

[20329]services.xserver.filesSection

    Contents of the first Files section of the X server configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Example: ''FontPath "/path/to/my/fonts"''

    Declared by:

    [20330]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20331]services.xserver.fontPath

    Set the X server FontPath. Defaults to null, which means the compiled in defaults will be
    used. See man xorg.conf for details.

    Type: null or string

    Default: null

    Example: "unix/:7100"

    Declared by:

    [20332]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20333]services.xserver.gdk-pixbuf.modulePackages

    Packages providing GDK-Pixbuf modules, for cache generation.

    Type: list of packages

    Default: [ ]

    Declared by:

    [20334]<nixpkgs/nixos/modules/services/x11/gdk-pixbuf.nix>

[20335]services.xserver.imwheel.enable

    Whether to enable IMWheel service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20336]<nixpkgs/nixos/modules/services/x11/imwheel.nix>

[20337]services.xserver.imwheel.extraOptions

    Additional command-line arguments to pass to imwheel.

    Type: list of strings

    Default: [ "--buttons=45" ]

    Example: [ "--debug" ]

    Declared by:

    [20338]<nixpkgs/nixos/modules/services/x11/imwheel.nix>

[20339]services.xserver.imwheel.rules

    Window class translation rules. /etc/X11/imwheelrc is generated based on this config which
    means this config is global for all users. See [20340]offical man pages for more
    informations.

    Type: attribute set of strings

    Default: { }

    Example:

    ".*" = ''
      None,      Up,   Button4, 8
      None,      Down, Button5, 8
      Shift_L,   Up,   Shift_L|Button4, 4
      Shift_L,   Down, Shift_L|Button5, 4
      Control_L, Up,   Control_L|Button4
      Control_L, Down, Control_L|Button5
    '';

    Declared by:

    [20341]<nixpkgs/nixos/modules/services/x11/imwheel.nix>

[20342]services.xserver.inputClassSections

    Content of additional InputClass sections of the X server configuration file.

    Type: list of strings concatenated with "\n"s

    Default: [ ]

    Example:

    [ ''
        Identifier      "Trackpoint Wheel Emulation"
        MatchProduct    "ThinkPad USB Keyboard with TrackPoint"
        Option          "EmulateWheel"          "true"
        Option          "EmulateWheelButton"    "2"
        Option          "Emulate3Buttons"       "false"
      ''
    ]

    Declared by:

    [20343]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20344]services.xserver.layout

    Keyboard layout, or multiple keyboard layouts separated by commas.

    Type: string

    Default: "us"

    Declared by:

    [20345]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20346]services.xserver.libinput.enable

    Whether to enable libinput.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20347]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20348]services.xserver.libinput.mouse.accelProfile

    Sets the pointer acceleration profile to the given profile. Permitted values are adaptive,
    flat. Not all devices support this option or all profiles. If a profile is unsupported, the
    default profile for this is used. flat: Pointer motion is accelerated by a constant
    (device-specific) factor, depending on the current speed. adaptive: Pointer acceleration
    depends on the input speed. This is the default profile for most devices.

    Type: one of "flat", "adaptive"

    Default: "adaptive"

    Example: "flat"

    Declared by:

    [20349]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20350]services.xserver.libinput.mouse.accelSpeed

    Cursor acceleration (how fast speed increases from minSpeed to maxSpeed).

    Type: null or string

    Default: null

    Declared by:

    [20351]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20352]services.xserver.libinput.mouse.additionalOptions

    Additional options for libinput mouse driver. See libinput(4) for available options.";

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    Option "DragLockButtons" "L1 B1 L2 B2"
    ''

    Declared by:

    [20353]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20354]services.xserver.libinput.mouse.buttonMapping

    Sets the logical button mapping for this device, see XSetPointerMapping(3). The string must
    be a space-separated list of button mappings in the order of the logical buttons on the
    device, starting with button 1. The default mapping is "1 2 3 ... 32". A mapping of 0 deac‐
    tivates the button. Multiple buttons can have the same mapping. Invalid mapping strings are
    discarded and the default mapping is used for all buttons. Buttons not specified in the
    user's mapping use the default mapping. See section BUTTON MAPPING for more details.

    Type: null or string

    Default: null

    Declared by:

    [20355]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20356]services.xserver.libinput.mouse.calibrationMatrix

    A string of 9 space-separated floating point numbers. Sets the calibration matrix to the 3x3
    matrix where the first row is (abc), the second row is (def) and the third row is (ghi).

    Type: null or string

    Default: null

    Declared by:

    [20357]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20358]services.xserver.libinput.mouse.clickMethod

    Enables a click method. Permitted values are none, buttonareas, clickfinger. Not all devices
    support all methods, if an option is unsupported, the default click method for this device is
    used.

    Type: null or one of "none", "buttonareas", "clickfinger"

    Default: null

    Declared by:

    [20359]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20360]services.xserver.libinput.mouse.dev

    Path for mouse device. Set to null to apply to any auto-detected mouse.

    Type: null or string

    Default: null

    Example: "/dev/input/event0"

    Declared by:

    [20361]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20362]services.xserver.libinput.mouse.disableWhileTyping

    Disable input method while typing.

    Type: boolean

    Default: false

    Declared by:

    [20363]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20364]services.xserver.libinput.mouse.horizontalScrolling

    Disables horizontal scrolling. When disabled, this driver will discard any horizontal scroll
    events from libinput. Note that this does not disable horizontal scrolling, it merely
    discards the horizontal axis from any scroll events.

    Type: boolean

    Default: true

    Declared by:

    [20365]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20366]services.xserver.libinput.mouse.leftHanded

    Enables left-handed button orientation, i.e. swapping left and right buttons.

    Type: boolean

    Default: false

    Declared by:

    [20367]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20368]services.xserver.libinput.mouse.middleEmulation

    Enables middle button emulation. When enabled, pressing the left and right buttons
    simultaneously produces a middle mouse button click.

    Type: boolean

    Default: true

    Declared by:

    [20369]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20370]services.xserver.libinput.mouse.naturalScrolling

    Enables or disables natural scrolling behavior.

    Type: boolean

    Default: false

    Declared by:

    [20371]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20372]services.xserver.libinput.mouse.scrollButton

    Designates a button as scroll button. If the ScrollMethod is button and the button is
    logically held down, x/y axis movement is converted into scroll events.

    Type: null or signed integer

    Default: null

    Example: 1

    Declared by:

    [20373]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20374]services.xserver.libinput.mouse.scrollMethod

    Specify the scrolling method: twofinger, edge, button, or none

    Type: one of "twofinger", "edge", "button", "none"

    Default: "twofinger"

    Example: "edge"

    Declared by:

    [20375]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20376]services.xserver.libinput.mouse.sendEventsMode

    Sets the send events mode to disabled, enabled, or disabled-on-external-mouse

    Type: one of "disabled", "enabled", "disabled-on-external-mouse"

    Default: "enabled"

    Example: "disabled"

    Declared by:

    [20377]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20378]services.xserver.libinput.mouse.tapping

    Enables or disables tap-to-click behavior.

    Type: boolean

    Default: true

    Declared by:

    [20379]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20380]services.xserver.libinput.mouse.tappingDragLock

    Enables or disables drag lock during tapping behavior. When enabled, a finger up during tap-
    and-drag will not immediately release the button. If the finger is set down again within the
    timeout, the draging process continues.

    Type: boolean

    Default: true

    Declared by:

    [20381]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20382]services.xserver.libinput.touchpad.accelProfile

    Sets the pointer acceleration profile to the given profile. Permitted values are adaptive,
    flat. Not all devices support this option or all profiles. If a profile is unsupported, the
    default profile for this is used. flat: Pointer motion is accelerated by a constant
    (device-specific) factor, depending on the current speed. adaptive: Pointer acceleration
    depends on the input speed. This is the default profile for most devices.

    Type: one of "flat", "adaptive"

    Default: "adaptive"

    Example: "flat"

    Declared by:

    [20383]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20384]services.xserver.libinput.touchpad.accelSpeed

    Cursor acceleration (how fast speed increases from minSpeed to maxSpeed).

    Type: null or string

    Default: null

    Declared by:

    [20385]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20386]services.xserver.libinput.touchpad.additionalOptions

    Additional options for libinput touchpad driver. See libinput(4) for available options.";

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    Option "DragLockButtons" "L1 B1 L2 B2"
    ''

    Declared by:

    [20387]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20388]services.xserver.libinput.touchpad.buttonMapping

    Sets the logical button mapping for this device, see XSetPointerMapping(3). The string must
    be a space-separated list of button mappings in the order of the logical buttons on the
    device, starting with button 1. The default mapping is "1 2 3 ... 32". A mapping of 0 deac‐
    tivates the button. Multiple buttons can have the same mapping. Invalid mapping strings are
    discarded and the default mapping is used for all buttons. Buttons not specified in the
    user's mapping use the default mapping. See section BUTTON MAPPING for more details.

    Type: null or string

    Default: null

    Declared by:

    [20389]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20390]services.xserver.libinput.touchpad.calibrationMatrix

    A string of 9 space-separated floating point numbers. Sets the calibration matrix to the 3x3
    matrix where the first row is (abc), the second row is (def) and the third row is (ghi).

    Type: null or string

    Default: null

    Declared by:

    [20391]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20392]services.xserver.libinput.touchpad.clickMethod

    Enables a click method. Permitted values are none, buttonareas, clickfinger. Not all devices
    support all methods, if an option is unsupported, the default click method for this device is
    used.

    Type: null or one of "none", "buttonareas", "clickfinger"

    Default: null

    Declared by:

    [20393]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20394]services.xserver.libinput.touchpad.dev

    Path for touchpad device. Set to null to apply to any auto-detected touchpad.

    Type: null or string

    Default: null

    Example: "/dev/input/event0"

    Declared by:

    [20395]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20396]services.xserver.libinput.touchpad.disableWhileTyping

    Disable input method while typing.

    Type: boolean

    Default: false

    Declared by:

    [20397]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20398]services.xserver.libinput.touchpad.horizontalScrolling

    Disables horizontal scrolling. When disabled, this driver will discard any horizontal scroll
    events from libinput. Note that this does not disable horizontal scrolling, it merely
    discards the horizontal axis from any scroll events.

    Type: boolean

    Default: true

    Declared by:

    [20399]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20400]services.xserver.libinput.touchpad.leftHanded

    Enables left-handed button orientation, i.e. swapping left and right buttons.

    Type: boolean

    Default: false

    Declared by:

    [20401]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20402]services.xserver.libinput.touchpad.middleEmulation

    Enables middle button emulation. When enabled, pressing the left and right buttons
    simultaneously produces a middle mouse button click.

    Type: boolean

    Default: true

    Declared by:

    [20403]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20404]services.xserver.libinput.touchpad.naturalScrolling

    Enables or disables natural scrolling behavior.

    Type: boolean

    Default: false

    Declared by:

    [20405]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20406]services.xserver.libinput.touchpad.scrollButton

    Designates a button as scroll button. If the ScrollMethod is button and the button is
    logically held down, x/y axis movement is converted into scroll events.

    Type: null or signed integer

    Default: null

    Example: 1

    Declared by:

    [20407]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20408]services.xserver.libinput.touchpad.scrollMethod

    Specify the scrolling method: twofinger, edge, button, or none

    Type: one of "twofinger", "edge", "button", "none"

    Default: "twofinger"

    Example: "edge"

    Declared by:

    [20409]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20410]services.xserver.libinput.touchpad.sendEventsMode

    Sets the send events mode to disabled, enabled, or disabled-on-external-mouse

    Type: one of "disabled", "enabled", "disabled-on-external-mouse"

    Default: "enabled"

    Example: "disabled"

    Declared by:

    [20411]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20412]services.xserver.libinput.touchpad.tapping

    Enables or disables tap-to-click behavior.

    Type: boolean

    Default: true

    Declared by:

    [20413]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20414]services.xserver.libinput.touchpad.tappingDragLock

    Enables or disables drag lock during tapping behavior. When enabled, a finger up during tap-
    and-drag will not immediately release the button. If the finger is set down again within the
    timeout, the draging process continues.

    Type: boolean

    Default: true

    Declared by:

    [20415]<nixpkgs/nixos/modules/services/x11/hardware/libinput.nix>

[20416]services.xserver.logFile

    Controls the file Xorg logs to.

    The default of /dev/null is set so that systemd services (like displayManagers) only log to
    the journal and don't create their own log files.

    Setting this to null will not pass the -logfile argument to Xorg which allows it to log to
    its default logfile locations instead (see man Xorg). You probably only want this behaviour
    when running Xorg manually (e.g. via startx).

    Type: null or string

    Default: "/dev/null"

    Example: "/var/log/Xorg.0.log"

    Declared by:

    [20417]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20418]services.xserver.moduleSection

    Contents of the Module section of the X server configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    SubSection "extmod"
    EndSubsection
    ''

    Declared by:

    [20419]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20420]services.xserver.modules

    Packages to be added to the module search path of the X server.

    Type: list of paths

    Default: [ ]

    Example:

    [ pkgs.xf86_input_wacom ]

    Declared by:

    [20421]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20422]services.xserver.monitorSection

    Contents of the first Monitor section of the X server configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "HorizSync 28-49"

    Declared by:

    [20423]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20424]services.xserver.resolutions

    The screen resolutions for the X server. The first element is the default resolution. If this
    list is empty, the X server will automatically configure the resolution.

    Type: list of attribute sets

    Default: [ ]

    Example: [ { x = 1600; y = 1200; } { x = 1024; y = 786; } ]

    Declared by:

    [20425]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20426]services.xserver.screenSection

    Contents of the first Screen section of the X server configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    Option "RandRRotation" "on"
    ''

    Declared by:

    [20427]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20428]services.xserver.serverFlagsSection

    Contents of the ServerFlags section of the X server configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    Option "BlankTime" "0"
    Option "StandbyTime" "0"
    Option "SuspendTime" "0"
    Option "OffTime" "0"
    ''

    Declared by:

    [20429]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20430]services.xserver.serverLayoutSection

    Contents of the ServerLayout section of the X server configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    Option "AIGLX" "true"
    ''

    Declared by:

    [20431]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20432]services.xserver.synaptics.enable

    Whether to enable touchpad support. Deprecated: Consider services.xserver.libinput.enable.

    Type: boolean

    Default: false

    Declared by:

    [20433]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20434]services.xserver.synaptics.accelFactor

    Cursor acceleration (how fast speed increases from minSpeed to maxSpeed).

    Type: null or string

    Default: "0.001"

    Declared by:

    [20435]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20436]services.xserver.synaptics.additionalOptions

    Additional options for synaptics touchpad driver.

    Type: string

    Default: ""

    Example:

    ''
    Option "RTCornerButton" "2"
    Option "RBCornerButton" "3"
    ''

    Declared by:

    [20437]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20438]services.xserver.synaptics.buttonsMap

    Remap touchpad buttons.

    Type: list of signed integers

    Default: [ 1 2 3 ]

    Example: [ 1 3 2 ]

    Declared by:

    [20439]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20440]services.xserver.synaptics.dev

    Path for touchpad device. Set to null to apply to any auto-detected touchpad.

    Type: null or string

    Default: null

    Example: "/dev/input/event0"

    Declared by:

    [20441]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20442]services.xserver.synaptics.fingersMap

    Remap several-fingers taps.

    Type: list of signed integers

    Default: [ 1 2 3 ]

    Example: [ 1 3 2 ]

    Declared by:

    [20443]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20444]services.xserver.synaptics.horizEdgeScroll

    Whether to enable horizontal edge drag-scrolling.

    Type: boolean

    Default: true

    Declared by:

    [20445]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20446]services.xserver.synaptics.horizTwoFingerScroll

    Whether to enable horizontal two-finger drag-scrolling.

    Type: boolean

    Default: false

    Declared by:

    [20447]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20448]services.xserver.synaptics.horizontalScroll

    Whether to enable horizontal scrolling (on touchpad)

    Type: boolean

    Default: true

    Declared by:

    [20449]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20450]services.xserver.synaptics.maxSpeed

    Cursor speed factor for highest-speed finger motion.

    Type: null or string

    Default: "1.0"

    Declared by:

    [20451]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20452]services.xserver.synaptics.minSpeed

    Cursor speed factor for precision finger motion.

    Type: null or string

    Default: "0.6"

    Declared by:

    [20453]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20454]services.xserver.synaptics.palmDetect

    Whether to enable palm detection (hardware support required)

    Type: boolean

    Default: false

    Declared by:

    [20455]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20456]services.xserver.synaptics.palmMinWidth

    Minimum finger width at which touch is considered a palm

    Type: null or signed integer

    Default: null

    Example: 5

    Declared by:

    [20457]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20458]services.xserver.synaptics.palmMinZ

    Minimum finger pressure at which touch is considered a palm

    Type: null or signed integer

    Default: null

    Example: 20

    Declared by:

    [20459]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20460]services.xserver.synaptics.scrollDelta

    Move distance of the finger for a scroll event.

    Type: null or signed integer

    Default: null

    Example: 75

    Declared by:

    [20461]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20462]services.xserver.synaptics.tapButtons

    Whether to enable tap buttons.

    Type: boolean

    Default: true

    Declared by:

    [20463]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20464]services.xserver.synaptics.twoFingerScroll

    Whether to enable two-finger drag-scrolling. Overridden by horizTwoFingerScroll and
    vertTwoFingerScroll.

    Type: boolean

    Default: false

    Declared by:

    [20465]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20466]services.xserver.synaptics.vertEdgeScroll

    Whether to enable vertical edge drag-scrolling.

    Type: boolean

    Default: true

    Declared by:

    [20467]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20468]services.xserver.synaptics.vertTwoFingerScroll

    Whether to enable vertical two-finger drag-scrolling.

    Type: boolean

    Default: false

    Declared by:

    [20469]<nixpkgs/nixos/modules/services/x11/hardware/synaptics.nix>

[20470]services.xserver.terminateOnReset

    Whether to terminate X upon server reset.

    Type: boolean

    Default: true

    Declared by:

    [20471]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20472]services.xserver.tty

    Virtual console for the X server.

    Type: null or signed integer

    Default: 7

    Declared by:

    [20473]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20474]services.xserver.updateDbusEnvironment

    Whether to update the DBus activation environment after launching the desktop manager.

    Type: boolean

    Default: false

    Declared by:

    [20475]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20476]services.xserver.useGlamor

    Whether to use the Glamor module for 2D acceleration, if possible.

    Type: boolean

    Default: false

    Declared by:

    [20477]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20478]services.xserver.verbose

    Controls verbosity of X logging.

    Type: null or signed integer

    Default: 3

    Example: 7

    Declared by:

    [20479]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20480]services.xserver.videoDriver

    The name of the video driver for your graphics card. This option is obsolete; please set the
    services.xserver.videoDrivers instead.

    Type: null or string

    Default: null

    Example: "i810"

    Declared by:

    [20481]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20482]services.xserver.videoDrivers

    The names of the video drivers the configuration supports. They will be tried in order until
    one that supports your card is found. Don't combine those with "incompatible" OpenGL
    implementations, e.g. free ones (mesa-based) with proprietary ones.

    For unfree "nvidia*", the supported GPU lists are on https://www.nvidia.com/object/unix.html

    Type: list of strings

    Default: [ "amdgpu" "radeon" "nouveau" "modesetting" "fbdev" ]

    Example: [ "nvidia" "nvidiaLegacy390" "nvidiaLegacy340" "nvidiaLegacy304" "amdgpu-pro" ]

    Related packages:

      □ amdgpu aka pkgs.xorg.xf86videoamdgpu (xf86-video-amdgpu-19.1.0): ???.

      □ apm aka pkgs.xorg.xf86videoapm (xf86-video-apm-1.3.0): ???.

      □ ark aka pkgs.xorg.xf86videoark (xf86-video-ark-0.7.5) [UNAVAILABLE]: ???.

      □ ast aka pkgs.xorg.xf86videoast (xf86-video-ast-1.1.5): ???.

      □ ati aka pkgs.xorg.xf86videoati (xf86-video-ati-19.1.0): ???.

      □ chips aka pkgs.xorg.xf86videochips (xf86-video-chips-1.4.0): ???.

      □ cirrus aka pkgs.xorg.xf86videocirrus (xf86-video-cirrus-1.5.3): ???.

      □ dummy aka pkgs.xorg.xf86videodummy (xf86-video-dummy-0.3.8): ???.

      □ fbdev aka pkgs.xorg.xf86videofbdev (xf86-video-fbdev-0.5.0): ???.

      □ geode aka pkgs.xorg.xf86videogeode (xf86-video-geode-2.11.19) [UNAVAILABLE]: ???.

      □ glide aka pkgs.xorg.xf86videoglide (xf86-video-glide-1.2.2) [UNAVAILABLE]: ???.

      □ glint aka pkgs.xorg.xf86videoglint (xf86-video-glint-1.2.9): ???.

      □ i128 aka pkgs.xorg.xf86videoi128 (xf86-video-i128-1.4.0) [UNAVAILABLE]: ???.

      □ i740 aka pkgs.xorg.xf86videoi740 (xf86-video-i740-1.4.0): ???.

      □ intel aka pkgs.xorg.xf86videointel (xf86-video-intel-2019-12-09): ???.

      □ mach64 aka pkgs.xorg.xf86videomach64 (xf86-video-mach64-6.9.6): ???.

      □ mga aka pkgs.xorg.xf86videomga (xf86-video-mga-2.0.0): ???.

      □ neomagic aka pkgs.xorg.xf86videoneomagic (xf86-video-neomagic-1.3.0): ???.

      □ newport aka pkgs.xorg.xf86videonewport (xf86-video-newport-0.2.4) [UNAVAILABLE]: ???.

      □ nouveau aka pkgs.xorg.xf86videonouveau (xf86-video-nouveau-1.0.17): ???.

      □ nv aka pkgs.xorg.xf86videonv (xf86-video-nv-2.1.21): ???.

      □ omap aka pkgs.xorg.xf86videoomap (xf86-video-omap-0.4.5): ???.

      □ openchrome aka pkgs.xorg.xf86videoopenchrome (xf86-video-openchrome-0.6.0): ???.

      □ qxl aka pkgs.xorg.xf86videoqxl (xf86-video-qxl-0.1.5): ???.

      □ r128 aka pkgs.xorg.xf86videor128 (xf86-video-r128-6.11.0): ???.

      □ rendition aka pkgs.xorg.xf86videorendition (xf86-video-rendition-4.2.7): ???.

      □ s3virge aka pkgs.xorg.xf86videos3virge (xf86-video-s3virge-1.11.0) [UNAVAILABLE]: ???.

      □ savage aka pkgs.xorg.xf86videosavage (xf86-video-savage-2.3.9) [UNAVAILABLE]: ???.

      □ siliconmotion aka pkgs.xorg.xf86videosiliconmotion (xf86-video-siliconmotion-1.7.9): ???.

      □ sis aka pkgs.xorg.xf86videosis (xf86-video-sis-0.11.0): ???.

      □ sisusb aka pkgs.xorg.xf86videosisusb (xf86-video-sisusb-0.9.7): ???.

      □ suncg6 aka pkgs.xorg.xf86videosuncg6 (xf86-video-suncg6-1.1.2): ???.

      □ sunffb aka pkgs.xorg.xf86videosunffb (xf86-video-sunffb-1.2.2): ???.

      □ sunleo aka pkgs.xorg.xf86videosunleo (xf86-video-sunleo-1.2.2): ???.

      □ tdfx aka pkgs.xorg.xf86videotdfx (xf86-video-tdfx-1.5.0): ???.

      □ tga aka pkgs.xorg.xf86videotga (xf86-video-tga-1.2.2) [UNAVAILABLE]: ???.

      □ trident aka pkgs.xorg.xf86videotrident (xf86-video-trident-1.3.8): ???.

      □ v4l aka pkgs.xorg.xf86videov4l (xf86-video-v4l-0.3.0) [UNAVAILABLE]: ???.

      □ vboxvideo aka pkgs.xorg.xf86videovboxvideo (xf86-video-vboxvideo-1.0.0): ???.

      □ vesa aka pkgs.xorg.xf86videovesa (xf86-video-vesa-2.5.0): ???.

      □ vmware aka pkgs.xorg.xf86videovmware (xf86-video-vmware-13.3.0): ???.

      □ voodoo aka pkgs.xorg.xf86videovoodoo (xf86-video-voodoo-1.2.5) [UNAVAILABLE]: ???.

      □ wsfb aka pkgs.xorg.xf86videowsfb (xf86-video-wsfb-0.4.0) [UNAVAILABLE]: ???.

      □ xgi aka pkgs.xorg.xf86videoxgi (xf86-video-xgi-1.6.1): ???.

    Declared by:

    [20483]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20484]services.xserver.virtualScreen

    Virtual screen size for Xrandr.

    Type: null or attribute set

    Default: null

    Example: { x = 2048; y = 2048; }

    Declared by:

    [20485]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20486]services.xserver.wacom.enable

    Whether to enable the Wacom touchscreen/digitizer/tablet. If you ever have any issues such
    as, try switching to terminal (ctrl-alt-F1) and back which will make Xorg reconfigure the
    device ?

    If you're not satisfied by the default behaviour you can override environment.etc."X11/
    xorg.conf.d/70-wacom.conf" in configuration.nix easily.

    Type: boolean

    Default: false

    Declared by:

    [20487]<nixpkgs/nixos/modules/services/x11/hardware/wacom.nix>

[20488]services.xserver.windowManager.2bwm.enable

    Whether to enable 2bwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20489]<nixpkgs/nixos/modules/services/x11/window-managers/2bwm.nix>

[20490]services.xserver.windowManager.afterstep.enable

    Whether to enable afterstep.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20491]<nixpkgs/nixos/modules/services/x11/window-managers/afterstep.nix>

[20492]services.xserver.windowManager.awesome.enable

    Whether to enable Awesome window manager.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20493]<nixpkgs/nixos/modules/services/x11/window-managers/awesome.nix>

[20494]services.xserver.windowManager.awesome.package

    Package to use for running the Awesome WM.

    Type: null or package

    Default: null

    Declared by:

    [20495]<nixpkgs/nixos/modules/services/x11/window-managers/awesome.nix>

[20496]services.xserver.windowManager.awesome.luaModules

    List of lua packages available for being used in the Awesome configuration.

    Type: list of packages

    Default: [ ]

    Example:

    [ luaPackages.oocairo ]

    Declared by:

    [20497]<nixpkgs/nixos/modules/services/x11/window-managers/awesome.nix>

[20498]services.xserver.windowManager.awesome.noArgb

    Disable client transparency support, which can be greatly detrimental to performance in some
    setups

    Type: boolean

    Default: false

    Declared by:

    [20499]<nixpkgs/nixos/modules/services/x11/window-managers/awesome.nix>

[20500]services.xserver.windowManager.berry.enable

    Whether to enable berry.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20501]<nixpkgs/nixos/modules/services/x11/window-managers/berry.nix>

[20502]services.xserver.windowManager.bspwm.enable

    Whether to enable bspwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20503]<nixpkgs/nixos/modules/services/x11/window-managers/bspwm.nix>

[20504]services.xserver.windowManager.bspwm.package

    bspwm package to use.

    Type: package

    Default: "pkgs.bspwm"

    Example: "pkgs.bspwm-unstable"

    Declared by:

    [20505]<nixpkgs/nixos/modules/services/x11/window-managers/bspwm.nix>

[20506]services.xserver.windowManager.bspwm.configFile

    Path to the bspwm configuration file. If null, $HOME/.config/bspwm/bspwmrc will be used.

    Type: null or path

    Default: null

    Example: "\${pkgs.bspwm}/share/doc/bspwm/examples/bspwmrc"

    Declared by:

    [20507]<nixpkgs/nixos/modules/services/x11/window-managers/bspwm.nix>

[20508]services.xserver.windowManager.bspwm.sxhkd.package

    sxhkd package to use.

    Type: package

    Default: "pkgs.sxhkd"

    Example: "pkgs.sxhkd-unstable"

    Declared by:

    [20509]<nixpkgs/nixos/modules/services/x11/window-managers/bspwm.nix>

[20510]services.xserver.windowManager.bspwm.sxhkd.configFile

    Path to the sxhkd configuration file. If null, $HOME/.config/sxhkd/sxhkdrc will be used.

    Type: null or path

    Default: null

    Example: "\${pkgs.bspwm}/share/doc/bspwm/examples/sxhkdrc"

    Declared by:

    [20511]<nixpkgs/nixos/modules/services/x11/window-managers/bspwm.nix>

[20512]services.xserver.windowManager.clfswm.enable

    Whether to enable clfswm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20513]<nixpkgs/nixos/modules/services/x11/window-managers/clfswm.nix>

[20514]services.xserver.windowManager.cwm.enable

    Whether to enable cwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20515]<nixpkgs/nixos/modules/services/x11/window-managers/cwm.nix>

[20516]services.xserver.windowManager.default

    Deprecated, please use [20517]services.xserver.displayManager.defaultSession instead.

    Default window manager loaded if none have been chosen.

    Type: null or string

    Default: null

    Example: "wmii"

    Declared by:

    [20518]<nixpkgs/nixos/modules/services/x11/window-managers/default.nix>

[20519]services.xserver.windowManager.dwm.enable

    Whether to enable dwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20520]<nixpkgs/nixos/modules/services/x11/window-managers/dwm.nix>

[20521]services.xserver.windowManager.e16.enable

    Whether to enable e16.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20522]<nixpkgs/nixos/modules/services/x11/window-managers/e16.nix>

[20523]services.xserver.windowManager.evilwm.enable

    Whether to enable evilwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20524]<nixpkgs/nixos/modules/services/x11/window-managers/evilwm.nix>

[20525]services.xserver.windowManager.exwm.enable

    Whether to enable exwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20526]<nixpkgs/nixos/modules/services/x11/window-managers/exwm.nix>

[20527]services.xserver.windowManager.exwm.enableDefaultConfig

    Enable an uncustomised exwm configuration.

    Type: boolean

    Default: true

    Declared by:

    [20528]<nixpkgs/nixos/modules/services/x11/window-managers/exwm.nix>

[20529]services.xserver.windowManager.exwm.extraPackages

    Extra packages available to Emacs. The value must be a function which receives the attrset
    defined in emacs.pkgs as the sole argument.

    Type: function that evaluates to a(n) listOf

    Default: "<function>"

    Example:

    epkgs: [
      epkgs.emms
      epkgs.magit
      epkgs.proofgeneral
    ]

    Declared by:

    [20530]<nixpkgs/nixos/modules/services/x11/window-managers/exwm.nix>

[20531]services.xserver.windowManager.exwm.loadScript

    Emacs lisp code to be run after loading the user's init file. If enableDefaultConfig is true,
    this will be run before loading the default config.

    Type: strings concatenated with "\n"

    Default: "(require 'exwm)"

    Example:

    (require 'exwm)
    (exwm-enable)

    Declared by:

    [20532]<nixpkgs/nixos/modules/services/x11/window-managers/exwm.nix>

[20533]services.xserver.windowManager.fluxbox.enable

    Whether to enable fluxbox.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20534]<nixpkgs/nixos/modules/services/x11/window-managers/fluxbox.nix>

[20535]services.xserver.windowManager.fvwm.enable

    Whether to enable Fvwm window manager.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20536]<nixpkgs/nixos/modules/services/x11/window-managers/fvwm.nix>

[20537]services.xserver.windowManager.fvwm.gestures

    Whether or not to enable libstroke for gesture support

    Type: boolean

    Default: false

    Declared by:

    [20538]<nixpkgs/nixos/modules/services/x11/window-managers/fvwm.nix>

[20539]services.xserver.windowManager.herbstluftwm.enable

    Whether to enable herbstluftwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20540]<nixpkgs/nixos/modules/services/x11/window-managers/herbstluftwm.nix>

[20541]services.xserver.windowManager.herbstluftwm.package

    Herbstluftwm package to use.

    Type: package

    Default: "pkgs.herbstluftwm"

    Declared by:

    [20542]<nixpkgs/nixos/modules/services/x11/window-managers/herbstluftwm.nix>

[20543]services.xserver.windowManager.herbstluftwm.configFile

    Path to the herbstluftwm configuration file. If left at the default value, $XDG_CONFIG_HOME/
    herbstluftwm/autostart will be used.

    Type: null or path

    Default: null

    Declared by:

    [20544]<nixpkgs/nixos/modules/services/x11/window-managers/herbstluftwm.nix>

[20545]services.xserver.windowManager.i3.enable

    Whether to enable i3 window manager.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20546]<nixpkgs/nixos/modules/services/x11/window-managers/i3.nix>

[20547]services.xserver.windowManager.i3.package

    i3 package to use.

    Type: package

    Default: "pkgs.i3"

    Example: "pkgs.i3-gaps"

    Declared by:

    [20548]<nixpkgs/nixos/modules/services/x11/window-managers/i3.nix>

[20549]services.xserver.windowManager.i3.configFile

    Path to the i3 configuration file. If left at the default value, $HOME/.i3/config will be
    used.

    Type: null or path

    Default: null

    Declared by:

    [20550]<nixpkgs/nixos/modules/services/x11/window-managers/i3.nix>

[20551]services.xserver.windowManager.i3.extraPackages

    Extra packages to be installed system wide.

    Type: list of packages

    Default: [ (build of dmenu-5.0) (build of i3status-2.13) (build of i3lock-2.13) ]

    Example:

    with pkgs; [
      dmenu
      i3status
      i3lock
    ]

    Declared by:

    [20552]<nixpkgs/nixos/modules/services/x11/window-managers/i3.nix>

[20553]services.xserver.windowManager.i3.extraSessionCommands

    Shell commands executed just before i3 is started.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [20554]<nixpkgs/nixos/modules/services/x11/window-managers/i3.nix>

[20555]services.xserver.windowManager.icewm.enable

    Whether to enable icewm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20556]<nixpkgs/nixos/modules/services/x11/window-managers/icewm.nix>

[20557]services.xserver.windowManager.jwm.enable

    Whether to enable jwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20558]<nixpkgs/nixos/modules/services/x11/window-managers/jwm.nix>

[20559]services.xserver.windowManager.leftwm.enable

    Whether to enable leftwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20560]<nixpkgs/nixos/modules/services/x11/window-managers/leftwm.nix>

[20561]services.xserver.windowManager.lwm.enable

    Whether to enable lwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20562]<nixpkgs/nixos/modules/services/x11/window-managers/lwm.nix>

[20563]services.xserver.windowManager.metacity.enable

    Whether to enable metacity.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20564]<nixpkgs/nixos/modules/services/x11/window-managers/metacity.nix>

[20565]services.xserver.windowManager.mwm.enable

    Whether to enable mwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20566]<nixpkgs/nixos/modules/services/x11/window-managers/mwm.nix>

[20567]services.xserver.windowManager.notion.enable

    Whether to enable notion.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20568]<nixpkgs/nixos/modules/services/x11/window-managers/notion.nix>

[20569]services.xserver.windowManager.openbox.enable

    Whether to enable openbox.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20570]<nixpkgs/nixos/modules/services/x11/window-managers/openbox.nix>

[20571]services.xserver.windowManager.pekwm.enable

    Whether to enable pekwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20572]<nixpkgs/nixos/modules/services/x11/window-managers/pekwm.nix>

[20573]services.xserver.windowManager.qtile.enable

    Whether to enable qtile.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20574]<nixpkgs/nixos/modules/services/x11/window-managers/qtile.nix>

[20575]services.xserver.windowManager.ratpoison.enable

    Whether to enable ratpoison.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20576]<nixpkgs/nixos/modules/services/x11/window-managers/ratpoison.nix>

[20577]services.xserver.windowManager.sawfish.enable

    Whether to enable sawfish.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20578]<nixpkgs/nixos/modules/services/x11/window-managers/sawfish.nix>

[20579]services.xserver.windowManager.smallwm.enable

    Whether to enable smallwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20580]<nixpkgs/nixos/modules/services/x11/window-managers/smallwm.nix>

[20581]services.xserver.windowManager.spectrwm.enable

    Whether to enable spectrwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20582]<nixpkgs/nixos/modules/services/x11/window-managers/spectrwm.nix>

[20583]services.xserver.windowManager.stumpwm.enable

    Whether to enable stumpwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20584]<nixpkgs/nixos/modules/services/x11/window-managers/stumpwm.nix>

[20585]services.xserver.windowManager.tinywm.enable

    Whether to enable tinywm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20586]<nixpkgs/nixos/modules/services/x11/window-managers/tinywm.nix>

[20587]services.xserver.windowManager.twm.enable

    Whether to enable twm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20588]<nixpkgs/nixos/modules/services/x11/window-managers/twm.nix>

[20589]services.xserver.windowManager.windowlab.enable

    Whether to enable windowlab.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20590]<nixpkgs/nixos/modules/services/x11/window-managers/windowlab.nix>

[20591]services.xserver.windowManager.windowmaker.enable

    Whether to enable windowmaker.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20592]<nixpkgs/nixos/modules/services/x11/window-managers/windowmaker.nix>

[20593]services.xserver.windowManager.wmderland.enable

    Whether to enable wmderland.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20594]<nixpkgs/nixos/modules/services/x11/window-managers/wmderland.nix>

[20595]services.xserver.windowManager.wmderland.extraPackages

    Extra packages to be installed system wide.

    Type: list of packages

    Default: [ (build of rofi-1.6.1) (build of dunst-1.6.1) (build of light-1.2.2) (build of
    hsetroot-1.0.5) (build of feh-3.7) (build of rxvt-unicode-9.26) ]

    Example:

    with pkgs; [
      rofi
      dunst
      light
      hsetroot
      feh
      rxvt-unicode
    ]

    Declared by:

    [20596]<nixpkgs/nixos/modules/services/x11/window-managers/wmderland.nix>

[20597]services.xserver.windowManager.wmderland.extraSessionCommands

    Shell commands executed just before wmderland is started.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [20598]<nixpkgs/nixos/modules/services/x11/window-managers/wmderland.nix>

[20599]services.xserver.windowManager.wmii.enable

    Whether to enable wmii.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20600]<nixpkgs/nixos/modules/services/x11/window-managers/wmii.nix>

[20601]services.xserver.windowManager.xmonad.enable

    Whether to enable xmonad.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20602]<nixpkgs/nixos/modules/services/x11/window-managers/xmonad.nix>

[20603]services.xserver.windowManager.xmonad.enableContribAndExtras

    Enable xmonad-{contrib,extras} in Xmonad.

    Type: boolean

    Default: false

    Declared by:

    [20604]<nixpkgs/nixos/modules/services/x11/window-managers/xmonad.nix>

[20605]services.xserver.windowManager.xmonad.config

    Configuration from which XMonad gets compiled. If no value is specified, a vanilla xmonad
    binary is put in PATH, which will attempt to recompile and exec your xmonad config from $HOME
    /.xmonad. This setup is then analogous to other (non-NixOS) linux distributions.

    If you do set this option, you likely want to use "launch" as your entry point for xmonad (as
    in the example), to avoid xmonad's recompilation logic on startup. Doing so will render the
    default "mod+q" restart key binding dysfunctional though, because that attempts to call your
    binary with the "--restart" command line option, unless you implement that yourself. You way
    mant to bind "mod+q" to (restart "xmonad" True) instead, which will just restart xmonad from
    PATH. This allows e.g. switching to the new xmonad binary after rebuilding your system with
    nixos-rebuild.

    If you actually want to run xmonad with a config specified here, but also be able to
    recompile and restart it from a copy of that source in $HOME/.xmonad on the fly, you will
    have to implement that yourself using something like "compileRestart" from the example. This
    should allow you to switch at will between the local xmonad and the one NixOS puts in your
    PATH.

    Type: null or path or string

    Default: null

    Example:

    ''
    import XMonad
    import XMonad.Util.EZConfig (additionalKeys)
    import Control.Monad (when)
    import Text.Printf (printf)
    import System.Posix.Process (executeFile)
    import System.Info (arch,os)
    import System.Environment (getArgs)
    import System.FilePath ((</>))

    compiledConfig = printf "xmonad-%s-%s" arch os

    compileRestart resume =
      whenX (recompile True) $
        when resume writeStateToFile
          *> catchIO
            ( do
                dir <- getXMonadDataDir
                args <- getArgs
                executeFile (dir </> compiledConfig) False args Nothing
            )

    main = launch defaultConfig
        { modMask = mod4Mask -- Use Super instead of Alt
        , terminal = "urxvt" }
        `additionalKeys`
        [ ( (mod4Mask,xK_r), compileRestart True)
        , ( (mod4Mask,xK_q), restart "xmonad" True ) ]
    ''

    Declared by:

    [20606]<nixpkgs/nixos/modules/services/x11/window-managers/xmonad.nix>

[20607]services.xserver.windowManager.xmonad.extraPackages

    Extra packages available to ghc when rebuilding Xmonad. The value must be a function which
    receives the attrset defined in haskellPackages as the sole argument.

    Type: function that evaluates to a(n) listOf

    Default: "self: []"

    Example:

    haskellPackages: [
      haskellPackages.xmonad-contrib
      haskellPackages.monad-logger
    ]

    Declared by:

    [20608]<nixpkgs/nixos/modules/services/x11/window-managers/xmonad.nix>

[20609]services.xserver.windowManager.xmonad.ghcArgs

    Command line arguments passed to the compiler (ghc) invocation when xmonad.config is set.

    Type: list of strings

    Default: [ ]

    Declared by:

    [20610]<nixpkgs/nixos/modules/services/x11/window-managers/xmonad.nix>

[20611]services.xserver.windowManager.xmonad.haskellPackages

    haskellPackages used to build Xmonad and other packages. This can be used to change the GHC
    version used to build Xmonad and the packages listed in extraPackages.

    Type: unspecified

    Default: "pkgs.haskellPackages"

    Example:

    pkgs.haskell.packages.ghc784

    Declared by:

    [20612]<nixpkgs/nixos/modules/services/x11/window-managers/xmonad.nix>

[20613]services.xserver.windowManager.xmonad.xmonadCliArgs

    Command line arguments passed to the xmonad binary.

    Type: list of strings

    Default: [ ]

    Declared by:

    [20614]<nixpkgs/nixos/modules/services/x11/window-managers/xmonad.nix>

[20615]services.xserver.windowManager.yeahwm.enable

    Whether to enable yeahwm.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20616]<nixpkgs/nixos/modules/services/x11/window-managers/yeahwm.nix>

[20617]services.xserver.xautolock.enable

    Whether to enable xautolock.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20618]<nixpkgs/nixos/modules/services/x11/xautolock.nix>

[20619]services.xserver.xautolock.enableNotifier

    Whether to enable the notifier feature of xautolock. This publishes a notification before the
    autolock.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20620]<nixpkgs/nixos/modules/services/x11/xautolock.nix>

[20621]services.xserver.xautolock.extraOptions

    Additional command-line arguments to pass to xautolock.

    Type: list of strings

    Default: [ ]

    Example: [ "-detectsleep" ]

    Declared by:

    [20622]<nixpkgs/nixos/modules/services/x11/xautolock.nix>

[20623]services.xserver.xautolock.killer

    The script to use when nothing has happend for as long as killtime

    Type: null or string

    Default: null

    Example: "/run/current-system/systemd/bin/systemctl suspend"

    Declared by:

    [20624]<nixpkgs/nixos/modules/services/x11/xautolock.nix>

[20625]services.xserver.xautolock.killtime

    Minutes xautolock waits until it executes the script specified in killer (Has to be at least
    10 minutes)

    Type: signed integer

    Default: 20

    Declared by:

    [20626]<nixpkgs/nixos/modules/services/x11/xautolock.nix>

[20627]services.xserver.xautolock.locker

    The script to use when automatically locking the computer.

    Type: string

    Default: "\${pkgs.xlockmore}/bin/xlock"

    Example: "\${pkgs.i3lock}/bin/i3lock -i /path/to/img"

    Declared by:

    [20628]<nixpkgs/nixos/modules/services/x11/xautolock.nix>

[20629]services.xserver.xautolock.notifier

    Notification script to be used to warn about the pending autolock.

    Type: null or string

    Default: null

    Example: ''''${pkgs.libnotify}/bin/notify-send "Locking in 10 seconds"''

    Declared by:

    [20630]<nixpkgs/nixos/modules/services/x11/xautolock.nix>

[20631]services.xserver.xautolock.notify

    Time (in seconds) before the actual lock when the notification about the pending lock should
    be published.

    Type: signed integer

    Default: 10

    Declared by:

    [20632]<nixpkgs/nixos/modules/services/x11/xautolock.nix>

[20633]services.xserver.xautolock.nowlocker

    The script to use when manually locking the computer with xautolock -locknow.

    Type: null or string

    Default: null

    Example: "\${pkgs.i3lock}/bin/i3lock -i /path/to/img"

    Declared by:

    [20634]<nixpkgs/nixos/modules/services/x11/xautolock.nix>

[20635]services.xserver.xautolock.time

    Idle time (in minutes) to wait until xautolock locks the computer.

    Type: signed integer

    Default: 15

    Declared by:

    [20636]<nixpkgs/nixos/modules/services/x11/xautolock.nix>

[20637]services.xserver.xkbDir

    Path used for -xkbdir xserver parameter.

    Type: path

    Default: "\${pkgs.xkeyboard_config}/etc/X11/xkb"

    Declared by:

    [20638]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20639]services.xserver.xkbModel

    Keyboard model.

    Type: string

    Default: "pc104"

    Example: "presario"

    Declared by:

    [20640]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20641]services.xserver.xkbOptions

    X keyboard options; layout switching goes here.

    Type: strings concatenated with ","

    Default: "terminate:ctrl_alt_bksp"

    Example: "grp:caps_toggle,grp_led:scroll"

    Declared by:

    [20642]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20643]services.xserver.xkbVariant

    X keyboard variant.

    Type: string

    Default: ""

    Example: "colemak"

    Declared by:

    [20644]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20645]services.xserver.xrandrHeads

    Multiple monitor configuration, just specify a list of XRandR outputs. The individual
    elements should be either simple strings or an attribute set of output options.

    If the element is a string, it is denoting the physical output for a monitor, if it's an
    attribute set, you must at least provide the output option.

    The monitors will be mapped from left to right in the order of the list.

    By default, the first monitor will be set as the primary monitor if none of the elements
    contain an option that has set primary to true.

    Note: Only one monitor is allowed to be primary.

    Be careful using this option with multiple graphic adapters or with drivers that have poor
    support for XRandR, unexpected things might happen with those.

    Type: list of submodule or string convertible to its

    Default: [ ]

    Example: [ "HDMI-0" { output = "DVI-0"; primary = true; } { monitorConfig = ''Option "Rotate"
    "left"''; output = "DVI-1"; } ]

    Declared by:

    [20646]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20647]services.xserver.xrandrHeads.*.monitorConfig

    Extra lines to append to the Monitor section verbatim. Available options are documented in
    the MONITOR section in xorg.conf(5).

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    DisplaySize 408 306
    Option "DPMS" "false"
    ''

    Declared by:

    [20648]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20649]services.xserver.xrandrHeads.*.output

    The output name of the monitor, as shown by xrandr(1) invoked without arguments.

    Type: string

    Example: "DVI-0"

    Declared by:

    [20650]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20651]services.xserver.xrandrHeads.*.primary

    Whether this head is treated as the primary monitor,

    Type: boolean

    Default: false

    Declared by:

    [20652]<nixpkgs/nixos/modules/services/x11/xserver.nix>

[20653]services.xtreemfs.enable

    Whether to enable XtreemFS.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20654]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20655]services.xtreemfs.dir.enable

    Whether to enable XtreemFS DIR service.

    Type: boolean

    Default: true

    Declared by:

    [20656]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20657]services.xtreemfs.dir.address

    If specified, it defines the interface to listen on. If not specified, the service will
    listen on all interfaces (any).

    Type: string

    Default: ""

    Example: "127.0.0.1"

    Declared by:

    [20658]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20659]services.xtreemfs.dir.extraConfig

    Configuration of XtreemFS DIR service. WARNING: configuration is saved as plaintext inside
    nix store. For more options: http://www.xtreemfs.org/xtfs-guide-1.5.1/index.html

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    # specify whether SSL is required
    ssl.enabled = true
    ssl.service_creds.pw = passphrase
    ssl.service_creds.container = pkcs12
    ssl.service_creds = /etc/xos/xtreemfs/truststore/certs/dir.p12
    ssl.trusted_certs = /etc/xos/xtreemfs/truststore/certs/trusted.jks
    ssl.trusted_certs.pw = jks_passphrase
    ssl.trusted_certs.container = jks
    ''

    Declared by:

    [20660]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20661]services.xtreemfs.dir.httpPort

    Specifies the listen port for the HTTP service that returns the status page.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 30638

    Declared by:

    [20662]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20663]services.xtreemfs.dir.port

    The port to listen on for incoming connections (TCP).

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 32638

    Declared by:

    [20664]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20665]services.xtreemfs.dir.replication.enable

    Whether to enable XtreemFS DIR replication plugin.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20666]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20667]services.xtreemfs.dir.replication.extraConfig

    Configuration of XtreemFS DIR replication plugin. WARNING: configuration is saved as
    plaintext inside nix store. For more options: http://www.xtreemfs.org/xtfs-guide-1.5.1/
    index.html

    Type: strings concatenated with "\n"

    Example:

    ''
    # participants of the replication including this replica
    babudb.repl.participant.0 = 192.168.0.10
    babudb.repl.participant.0.port = 35676
    babudb.repl.participant.1 = 192.168.0.11
    babudb.repl.participant.1.port = 35676
    babudb.repl.participant.2 = 192.168.0.12
    babudb.repl.participant.2.port = 35676

    # number of servers that at least have to be up to date
    # To have a fault-tolerant system, this value has to be set to the
    # majority of nodes i.e., if you have three replicas, set this to 2
    # Please note that a setup with two nodes provides no fault-tolerance.
    babudb.repl.sync.n = 2

    # specify whether SSL is required
    babudb.ssl.enabled = true

    babudb.ssl.protocol = tlsv12

    # server credentials for SSL handshakes
    babudb.ssl.service_creds = /etc/xos/xtreemfs/truststore/certs/osd.p12
    babudb.ssl.service_creds.pw = passphrase
    babudb.ssl.service_creds.container = pkcs12

    # trusted certificates for SSL handshakes
    babudb.ssl.trusted_certs = /etc/xos/xtreemfs/truststore/certs/trusted.jks
    babudb.ssl.trusted_certs.pw = jks_passphrase
    babudb.ssl.trusted_certs.container = jks

    babudb.ssl.authenticationWithoutEncryption = false
    ''

    Declared by:

    [20668]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20669]services.xtreemfs.dir.syncMode

    The sync mode influences how operations are committed to the disk log before the operation is
    acknowledged to the caller.

    -ASYNC mode the writes to the disk log are buffered in memory by the operating system. This
    is the fastest mode but will lead to data loss in case of a crash, kernel panic or power
    failure. -SYNC_WRITE_METADATA opens the file with O_SYNC, the system will not buffer any
    writes. The operation will be acknowledged when data has been safely written to disk. This
    mode is slow but offers maximum data safety. However, BabuDB cannot influence the disk drive
    caches, this depends on the OS and hard disk model. -SYNC_WRITE similar to
    SYNC_WRITE_METADATA but opens file with O_DSYNC which means that only the data is commit to
    disk. This can lead to some data loss depending on the implementation of the underlying file
    system. Linux does not implement this mode. -FDATASYNC is similar to SYNC_WRITE but opens the
    file in asynchronous mode and calls fdatasync() after writing the data to disk. -FSYNC is
    similar to SYNC_WRITE_METADATA but opens the file in asynchronous mode and calls fsync()
    after writing the data to disk.

    For best throughput use ASYNC, for maximum data safety use FSYNC.

    (If xtreemfs.dir.replication.enable is true then FDATASYNC is forced)

    Type: one of "ASYNC", "SYNC_WRITE_METADATA", "SYNC_WRITE", "FDATASYNC", "ASYNC"

    Default: "FSYNC"

    Example: "FDATASYNC"

    Declared by:

    [20670]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20671]services.xtreemfs.dir.uuid

    Must be set to a unique identifier, preferably a UUID according to RFC 4122. UUIDs can be
    generated with `uuidgen` command, found in the `util-linux` package.

    Type: string

    Example: "eacb6bab-f444-4ebf-a06a-3f72d7465e40"

    Declared by:

    [20672]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20673]services.xtreemfs.homeDir

    XtreemFS home dir for the xtreemfs user.

    Type: path

    Default: "/var/lib/xtreemfs"

    Declared by:

    [20674]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20675]services.xtreemfs.mrc.enable

    Whether to enable XtreemFS MRC service.

    Type: boolean

    Default: true

    Declared by:

    [20676]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20677]services.xtreemfs.mrc.address

    If specified, it defines the interface to listen on. If not specified, the service will
    listen on all interfaces (any).

    Type: string

    Default: ""

    Example: "127.0.0.1"

    Declared by:

    [20678]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20679]services.xtreemfs.mrc.extraConfig

    Configuration of XtreemFS MRC service. WARNING: configuration is saved as plaintext inside
    nix store. For more options: http://www.xtreemfs.org/xtfs-guide-1.5.1/index.html

    Type: strings concatenated with "\n"

    Example:

    ''
    osd_check_interval = 300
    no_atime = true
    local_clock_renewal = 0
    remote_time_sync = 30000
    authentication_provider = org.xtreemfs.common.auth.NullAuthProvider

    # shared secret between the MRC and all OSDs
    capability_secret = iNG8UuQJrJ6XVDTe

    dir_service.host = 192.168.0.10
    dir_service.port = 32638

    # if replication is enabled
    dir_service.1.host = 192.168.0.11
    dir_service.1.port = 32638
    dir_service.2.host = 192.168.0.12
    dir_service.2.port = 32638

    # specify whether SSL is required
    ssl.enabled = true
    ssl.protocol = tlsv12
    ssl.service_creds.pw = passphrase
    ssl.service_creds.container = pkcs12
    ssl.service_creds = /etc/xos/xtreemfs/truststore/certs/mrc.p12
    ssl.trusted_certs = /etc/xos/xtreemfs/truststore/certs/trusted.jks
    ssl.trusted_certs.pw = jks_passphrase
    ssl.trusted_certs.container = jks
    ''

    Declared by:

    [20680]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20681]services.xtreemfs.mrc.httpPort

    Specifies the listen port for the HTTP service that returns the status page.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 30636

    Declared by:

    [20682]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20683]services.xtreemfs.mrc.port

    The port to listen on for incoming connections (TCP).

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 32636

    Declared by:

    [20684]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20685]services.xtreemfs.mrc.replication.enable

    Whether to enable XtreemFS MRC replication plugin.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20686]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20687]services.xtreemfs.mrc.replication.extraConfig

    Configuration of XtreemFS MRC replication plugin. WARNING: configuration is saved as
    plaintext inside nix store. For more options: http://www.xtreemfs.org/xtfs-guide-1.5.1/
    index.html

    Type: strings concatenated with "\n"

    Example:

    ''
    # participants of the replication including this replica
    babudb.repl.participant.0 = 192.168.0.10
    babudb.repl.participant.0.port = 35678
    babudb.repl.participant.1 = 192.168.0.11
    babudb.repl.participant.1.port = 35678
    babudb.repl.participant.2 = 192.168.0.12
    babudb.repl.participant.2.port = 35678

    # number of servers that at least have to be up to date
    # To have a fault-tolerant system, this value has to be set to the
    # majority of nodes i.e., if you have three replicas, set this to 2
    # Please note that a setup with two nodes provides no fault-tolerance.
    babudb.repl.sync.n = 2

    # specify whether SSL is required
    babudb.ssl.enabled = true

    babudb.ssl.protocol = tlsv12

    # server credentials for SSL handshakes
    babudb.ssl.service_creds = /etc/xos/xtreemfs/truststore/certs/osd.p12
    babudb.ssl.service_creds.pw = passphrase
    babudb.ssl.service_creds.container = pkcs12

    # trusted certificates for SSL handshakes
    babudb.ssl.trusted_certs = /etc/xos/xtreemfs/truststore/certs/trusted.jks
    babudb.ssl.trusted_certs.pw = jks_passphrase
    babudb.ssl.trusted_certs.container = jks

    babudb.ssl.authenticationWithoutEncryption = false
    ''

    Declared by:

    [20688]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20689]services.xtreemfs.mrc.syncMode

    The sync mode influences how operations are committed to the disk log before the operation is
    acknowledged to the caller.

    -ASYNC mode the writes to the disk log are buffered in memory by the operating system. This
    is the fastest mode but will lead to data loss in case of a crash, kernel panic or power
    failure. -SYNC_WRITE_METADATA opens the file with O_SYNC, the system will not buffer any
    writes. The operation will be acknowledged when data has been safely written to disk. This
    mode is slow but offers maximum data safety. However, BabuDB cannot influence the disk drive
    caches, this depends on the OS and hard disk model. -SYNC_WRITE similar to
    SYNC_WRITE_METADATA but opens file with O_DSYNC which means that only the data is commit to
    disk. This can lead to some data loss depending on the implementation of the underlying file
    system. Linux does not implement this mode. -FDATASYNC is similar to SYNC_WRITE but opens the
    file in asynchronous mode and calls fdatasync() after writing the data to disk. -FSYNC is
    similar to SYNC_WRITE_METADATA but opens the file in asynchronous mode and calls fsync()
    after writing the data to disk.

    For best throughput use ASYNC, for maximum data safety use FSYNC.

    (If xtreemfs.mrc.replication.enable is true then FDATASYNC is forced)

    Type: one of "ASYNC", "SYNC_WRITE_METADATA", "SYNC_WRITE", "FDATASYNC", "ASYNC"

    Default: "FSYNC"

    Example: "FDATASYNC"

    Declared by:

    [20690]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20691]services.xtreemfs.mrc.uuid

    Must be set to a unique identifier, preferably a UUID according to RFC 4122. UUIDs can be
    generated with `uuidgen` command, found in the `util-linux` package.

    Type: string

    Example: "eacb6bab-f444-4ebf-a06a-3f72d7465e41"

    Declared by:

    [20692]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20693]services.xtreemfs.osd.enable

    Whether to enable XtreemFS OSD service.

    Type: boolean

    Default: true

    Declared by:

    [20694]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20695]services.xtreemfs.osd.address

    If specified, it defines the interface to listen on. If not specified, the service will
    listen on all interfaces (any).

    Type: string

    Default: ""

    Example: "127.0.0.1"

    Declared by:

    [20696]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20697]services.xtreemfs.osd.extraConfig

    Configuration of XtreemFS OSD service. WARNING: configuration is saved as plaintext inside
    nix store. For more options: http://www.xtreemfs.org/xtfs-guide-1.5.1/index.html

    Type: strings concatenated with "\n"

    Example:

    ''
    local_clock_renewal = 0
    remote_time_sync = 30000
    report_free_space = true
    capability_secret = iNG8UuQJrJ6XVDTe

    dir_service.host = 192.168.0.10
    dir_service.port = 32638

    # if replication is used
    dir_service.1.host = 192.168.0.11
    dir_service.1.port = 32638
    dir_service.2.host = 192.168.0.12
    dir_service.2.port = 32638

    # specify whether SSL is required
    ssl.enabled = true
    ssl.service_creds.pw = passphrase
    ssl.service_creds.container = pkcs12
    ssl.service_creds = /etc/xos/xtreemfs/truststore/certs/osd.p12
    ssl.trusted_certs = /etc/xos/xtreemfs/truststore/certs/trusted.jks
    ssl.trusted_certs.pw = jks_passphrase
    ssl.trusted_certs.container = jks
    ''

    Declared by:

    [20698]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20699]services.xtreemfs.osd.httpPort

    Specifies the listen port for the HTTP service that returns the status page.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 30640

    Declared by:

    [20700]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20701]services.xtreemfs.osd.port

    The port to listen on for incoming connections (TCP and UDP).

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 32640

    Declared by:

    [20702]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20703]services.xtreemfs.osd.uuid

    Must be set to a unique identifier, preferably a UUID according to RFC 4122. UUIDs can be
    generated with `uuidgen` command, found in the `util-linux` package.

    Type: string

    Example: "eacb6bab-f444-4ebf-a06a-3f72d7465e42"

    Declared by:

    [20704]<nixpkgs/nixos/modules/services/network-filesystems/xtreemfs.nix>

[20705]services.yandex-disk.enable

    Whether to enable Yandex-disk client. See https://disk.yandex.ru/

    Type: boolean

    Default: false

    Declared by:

    [20706]<nixpkgs/nixos/modules/services/network-filesystems/yandex-disk.nix>

[20707]services.yandex-disk.directory

    The directory to use for Yandex.Disk storage

    Type: path

    Default: "/home/Yandex.Disk"

    Declared by:

    [20708]<nixpkgs/nixos/modules/services/network-filesystems/yandex-disk.nix>

[20709]services.yandex-disk.excludes

    Comma-separated list of directories which are excluded from synchronization.

    Type: strings concatenated with ","

    Default: ""

    Example: "data,backup"

    Declared by:

    [20710]<nixpkgs/nixos/modules/services/network-filesystems/yandex-disk.nix>

[20711]services.yandex-disk.password

    Your yandex.com password. Warning: it will be world-readable in /nix/store.

    Type: string

    Default: ""

    Declared by:

    [20712]<nixpkgs/nixos/modules/services/network-filesystems/yandex-disk.nix>

[20713]services.yandex-disk.user

    The user the yandex-disk daemon should run as.

    Type: null or string

    Default: null

    Declared by:

    [20714]<nixpkgs/nixos/modules/services/network-filesystems/yandex-disk.nix>

[20715]services.yandex-disk.username

    Your yandex.com login name.

    Type: string

    Default: ""

    Declared by:

    [20716]<nixpkgs/nixos/modules/services/network-filesystems/yandex-disk.nix>

[20717]services.yggdrasil.enable

    Whether to enable the yggdrasil system service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20718]<nixpkgs/nixos/modules/services/networking/yggdrasil.nix>

[20719]services.yggdrasil.package

    Yggdrasil package to use.

    Type: package

    Default: "pkgs.yggdrasil"

    Declared by:

    [20720]<nixpkgs/nixos/modules/services/networking/yggdrasil.nix>

[20721]services.yggdrasil.config

    Configuration for yggdrasil, as a Nix attribute set.

    Warning: this is stored in the WORLD-READABLE Nix store! Therefore, it is not appropriate for
    private keys. If you wish to specify the keys, use configFile.

    If the persistentKeys is enabled then the keys that are generated during activation will
    override those in config or configFile.

    If no keys are specified then ephemeral keys are generated and the Yggdrasil interface will
    have a random IPv6 address each time the service is started, this is the default.

    If both configFile and config are supplied, they will be combined, with values from
    configFile taking precedence.

    You can use the command nix-shell -p yggdrasil --run "yggdrasil -genconf" to generate default
    configuration values with documentation.

    Type: attribute set

    Default: { }

    Example: { Listen = [ "tcp://0.0.0.0:xxxxx" ] ; Peers = [ "tcp://aa.bb.cc.dd:eeeee" "tcp://
    [aaaa:bbbb:cccc:dddd::eeee]:fffff" ] ; }

    Declared by:

    [20722]<nixpkgs/nixos/modules/services/networking/yggdrasil.nix>

[20723]services.yggdrasil.configFile

    A file which contains JSON configuration for yggdrasil. See the config option for more
    information.

    Type: null or path

    Default: null

    Example: "/run/keys/yggdrasil.conf"

    Declared by:

    [20724]<nixpkgs/nixos/modules/services/networking/yggdrasil.nix>

[20725]services.yggdrasil.denyDhcpcdInterfaces

    Disable the DHCP client for any interface whose name matches any of the shell glob patterns
    in this list. Use this option to prevent the DHCP client from broadcasting requests on the
    yggdrasil network. It is only necessary to do so when yggdrasil is running in TAP mode,
    because TUN interfaces do not support broadcasting.

    Type: list of strings

    Default: [ ]

    Example: [ "tap*" ]

    Declared by:

    [20726]<nixpkgs/nixos/modules/services/networking/yggdrasil.nix>

[20727]services.yggdrasil.group

    Group to grant access to the Yggdrasil control socket.

    Type: string

    Default: "root"

    Example: "wheel"

    Declared by:

    [20728]<nixpkgs/nixos/modules/services/networking/yggdrasil.nix>

[20729]services.yggdrasil.openMulticastPort

    Whether to open the UDP port used for multicast peer discovery. The NixOS firewall blocks
    link-local communication, so in order to make local peering work you will also need to set
    LinkLocalTCPPort in your yggdrasil configuration (config or configFile) to a port number
    other than 0, and then add that port to networking.firewall.allowedTCPPorts.

    Type: boolean

    Default: false

    Declared by:

    [20730]<nixpkgs/nixos/modules/services/networking/yggdrasil.nix>

[20731]services.yggdrasil.persistentKeys

    Whether to enable If enabled then keys will be generated once and Yggdrasil will retain the
    same IPv6 address when the service is restarted. Keys are stored at /var/lib/yggdrasil/
    keys.json. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20732]<nixpkgs/nixos/modules/services/networking/yggdrasil.nix>

[20733]services.ympd.enable

    Whether to enable ympd, the MPD Web GUI.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20734]<nixpkgs/nixos/modules/services/audio/ympd.nix>

[20735]services.ympd.mpd.host

    The host where MPD is listening.

    Type: string

    Default: "localhost"

    Example: "localhost"

    Declared by:

    [20736]<nixpkgs/nixos/modules/services/audio/ympd.nix>

[20737]services.ympd.mpd.port

    The port where MPD is listening.

    Type: signed integer

    Default: 6600

    Example: 6600

    Declared by:

    [20738]<nixpkgs/nixos/modules/services/audio/ympd.nix>

[20739]services.ympd.webPort

    The port where ympd's web interface will be available.

    Type: string or 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: "8080"

    Example: "ssl://8080:/path/to/ssl-private-key.pem"

    Declared by:

    [20740]<nixpkgs/nixos/modules/services/audio/ympd.nix>

[20741]services.youtrack.enable

    Whether to enable YouTrack service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20742]<nixpkgs/nixos/modules/services/web-apps/youtrack.nix>

[20743]services.youtrack.package

    Package to use.

    Type: package

    Default: "pkgs.youtrack"

    Declared by:

    [20744]<nixpkgs/nixos/modules/services/web-apps/youtrack.nix>

[20745]services.youtrack.address

    The interface youtrack will listen on.

    Type: string

    Default: "127.0.0.1"

    Declared by:

    [20746]<nixpkgs/nixos/modules/services/web-apps/youtrack.nix>

[20747]services.youtrack.baseUrl

    Base URL for youtrack. Will be auto-detected and stored in database.

    Type: null or string

    Default: null

    Declared by:

    [20748]<nixpkgs/nixos/modules/services/web-apps/youtrack.nix>

[20749]services.youtrack.extraParams

    Extra parameters to pass to youtrack. See https://www.jetbrains.com/help/youtrack/standalone/
    YouTrack-Java-Start-Parameters.html for more information.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      "jetbrains.youtrack.overrideRootPassword" = "tortuga";
    }

    Declared by:

    [20750]<nixpkgs/nixos/modules/services/web-apps/youtrack.nix>

[20751]services.youtrack.jvmOpts

    Extra options to pass to the JVM. See https://www.jetbrains.com/help/youtrack/standalone/
    Configure-JVM-Options.html for more information.

    Type: strings concatenated with " "

    Default: ""

    Example: "-XX:MetaspaceSize=250m"

    Declared by:

    [20752]<nixpkgs/nixos/modules/services/web-apps/youtrack.nix>

[20753]services.youtrack.maxMemory

    Maximum Java heap size

    Type: string

    Default: "1g"

    Declared by:

    [20754]<nixpkgs/nixos/modules/services/web-apps/youtrack.nix>

[20755]services.youtrack.maxMetaspaceSize

    Maximum java Metaspace memory.

    Type: string

    Default: "350m"

    Declared by:

    [20756]<nixpkgs/nixos/modules/services/web-apps/youtrack.nix>

[20757]services.youtrack.port

    The port youtrack will listen on.

    Type: signed integer

    Default: 8080

    Declared by:

    [20758]<nixpkgs/nixos/modules/services/web-apps/youtrack.nix>

[20759]services.youtrack.statePath

    Where to keep the youtrack database.

    Type: path

    Default: "/var/lib/youtrack"

    Declared by:

    [20760]<nixpkgs/nixos/modules/services/web-apps/youtrack.nix>

[20761]services.youtrack.virtualHost

    Name of the nginx virtual host to use and setup. If null, do not setup anything.

    Type: null or string

    Default: null

    Declared by:

    [20762]<nixpkgs/nixos/modules/services/web-apps/youtrack.nix>

[20763]services.yubikey-agent.enable

    Whether to start yubikey-agent when you log in. Also sets SSH_AUTH_SOCK to point at
    yubikey-agent.

    Note that yubikey-agent will use whatever pinentry is specified in
    programs.gnupg.agent.pinentryFlavor.

    Type: boolean

    Default: false

    Declared by:

    [20764]<nixpkgs/nixos/modules/services/security/yubikey-agent.nix>

[20765]services.yubikey-agent.package

    The package used for the yubikey-agent daemon.

    Type: package

    Default: "pkgs.yubikey-agent"

    Declared by:

    [20766]<nixpkgs/nixos/modules/services/security/yubikey-agent.nix>

[20767]services.zabbixAgent.enable

    Whether to enable the Zabbix Agent.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20768]<nixpkgs/nixos/modules/services/monitoring/zabbix-agent.nix>

[20769]services.zabbixAgent.package

    The Zabbix package to use.

    Type: package

    Default: "pkgs.zabbix.agent"

    Declared by:

    [20770]<nixpkgs/nixos/modules/services/monitoring/zabbix-agent.nix>

[20771]services.zabbixAgent.extraPackages

    Packages to be added to the Zabbix PATH. Typically used to add executables for scripts, but
    can be anything.

    Type: list of packages

    Default: "[ nettools ]"

    Example: "[ nettools mysql ]"

    Declared by:

    [20772]<nixpkgs/nixos/modules/services/monitoring/zabbix-agent.nix>

[20773]services.zabbixAgent.listen.ip

    List of comma delimited IP addresses that the agent should listen on.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [20774]<nixpkgs/nixos/modules/services/monitoring/zabbix-agent.nix>

[20775]services.zabbixAgent.listen.port

    Agent will listen on this port for connections from the server.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 10050

    Declared by:

    [20776]<nixpkgs/nixos/modules/services/monitoring/zabbix-agent.nix>

[20777]services.zabbixAgent.modules

    A set of modules to load.

    Type: attribute set of packages

    Default: { }

    Example:

    {
      "dummy.so" = pkgs.stdenv.mkDerivation {
        name = "zabbix-dummy-module-${cfg.package.version}";
        src = cfg.package.src;
        buildInputs = [ cfg.package ];
        sourceRoot = "zabbix-${cfg.package.version}/src/modules/dummy";
        installPhase = ''
          mkdir -p $out/lib
          cp dummy.so $out/lib/
        '';
      };
    }

    Declared by:

    [20778]<nixpkgs/nixos/modules/services/monitoring/zabbix-agent.nix>

[20779]services.zabbixAgent.openFirewall

    Open ports in the firewall for the Zabbix Agent.

    Type: boolean

    Default: false

    Declared by:

    [20780]<nixpkgs/nixos/modules/services/monitoring/zabbix-agent.nix>

[20781]services.zabbixAgent.server

    The IP address or hostname of the Zabbix server to connect to.

    Type: string

    Declared by:

    [20782]<nixpkgs/nixos/modules/services/monitoring/zabbix-agent.nix>

[20783]services.zabbixAgent.settings

    Zabbix Agent configuration. Refer to [20784]https://www.zabbix.com/documentation/current/
    manual/appendix/config/zabbix_agentd for details on supported values.

    Type: attribute set of signed integer or string or list of stringss

    Default: { }

    Example: { DebugLevel = 4; Hostname = "example.org"; }

    Declared by:

    [20785]<nixpkgs/nixos/modules/services/monitoring/zabbix-agent.nix>

[20786]services.zabbixProxy.enable

    Whether to enable the Zabbix Proxy.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20787]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20788]services.zabbixProxy.package

    The Zabbix package to use.

    Type: package

    Default: "pkgs.zabbix.proxy-pgsql"

    Declared by:

    [20789]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20790]services.zabbixProxy.database.createLocally

    Whether to create a local database automatically.

    Type: boolean

    Default: true

    Declared by:

    [20791]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20792]services.zabbixProxy.database.host

    Database host address.

    Type: string

    Default: "localhost"

    Declared by:

    [20793]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20794]services.zabbixProxy.database.name

    Database name.

    Type: string

    Default: "zabbix"

    Declared by:

    [20795]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20796]services.zabbixProxy.database.passwordFile

    A file containing the password corresponding to database.user.

    Type: null or path

    Default: null

    Example: "/run/keys/zabbix-dbpassword"

    Declared by:

    [20797]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20798]services.zabbixProxy.database.port

    Database host port.

    Type: signed integer

    Default: 5432

    Declared by:

    [20799]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20800]services.zabbixProxy.database.socket

    Path to the unix socket file to use for authentication.

    Type: null or path

    Default: null

    Example: "/run/postgresql"

    Declared by:

    [20801]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20802]services.zabbixProxy.database.type

    Database engine to use.

    Type: one of "mysql", "pgsql", "sqlite"

    Default: "pgsql"

    Example: "mysql"

    Declared by:

    [20803]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20804]services.zabbixProxy.database.user

    Database user.

    Type: string

    Default: "zabbix"

    Declared by:

    [20805]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20806]services.zabbixProxy.extraPackages

    Packages to be added to the Zabbix PATH. Typically used to add executables for scripts, but
    can be anything.

    Type: list of packages

    Default: "[ nettools nmap traceroute ]"

    Declared by:

    [20807]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20808]services.zabbixProxy.listen.ip

    List of comma delimited IP addresses that the trapper should listen on. Trapper will listen
    on all network interfaces if this parameter is missing.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [20809]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20810]services.zabbixProxy.listen.port

    Listen port for trapper.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 10051

    Declared by:

    [20811]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20812]services.zabbixProxy.modules

    A set of modules to load.

    Type: attribute set of packages

    Default: { }

    Example:

    {
      "dummy.so" = pkgs.stdenv.mkDerivation {
        name = "zabbix-dummy-module-${cfg.package.version}";
        src = cfg.package.src;
        buildInputs = [ cfg.package ];
        sourceRoot = "zabbix-${cfg.package.version}/src/modules/dummy";
        installPhase = ''
          mkdir -p $out/lib
          cp dummy.so $out/lib/
        '';
      };
    }

    Declared by:

    [20813]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20814]services.zabbixProxy.openFirewall

    Open ports in the firewall for the Zabbix Proxy.

    Type: boolean

    Default: false

    Declared by:

    [20815]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20816]services.zabbixProxy.server

    The IP address or hostname of the Zabbix server to connect to.

    Type: string

    Declared by:

    [20817]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20818]services.zabbixProxy.settings

    Zabbix Proxy configuration. Refer to [20819]https://www.zabbix.com/documentation/current/
    manual/appendix/config/zabbix_proxy for details on supported values.

    Type: attribute set of signed integer or string or list of stringss

    Default: { }

    Example: { CacheSize = "1G"; SSHKeyLocation = "/var/lib/zabbix/.ssh"; StartPingers = 32; }

    Declared by:

    [20820]<nixpkgs/nixos/modules/services/monitoring/zabbix-proxy.nix>

[20821]services.zabbixServer.enable

    Whether to enable the Zabbix Server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20822]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20823]services.zabbixServer.package

    The Zabbix package to use.

    Type: package

    Default: "pkgs.zabbix.server-pgsql"

    Declared by:

    [20824]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20825]services.zabbixServer.database.createLocally

    Whether to create a local database automatically.

    Type: boolean

    Default: true

    Declared by:

    [20826]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20827]services.zabbixServer.database.host

    Database host address.

    Type: string

    Default: "localhost"

    Declared by:

    [20828]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20829]services.zabbixServer.database.name

    Database name.

    Type: string

    Default: "zabbix"

    Declared by:

    [20830]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20831]services.zabbixServer.database.passwordFile

    A file containing the password corresponding to database.user.

    Type: null or path

    Default: null

    Example: "/run/keys/zabbix-dbpassword"

    Declared by:

    [20832]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20833]services.zabbixServer.database.port

    Database host port.

    Type: signed integer

    Default: 5432

    Declared by:

    [20834]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20835]services.zabbixServer.database.socket

    Path to the unix socket file to use for authentication.

    Type: null or path

    Default: null

    Example: "/run/postgresql"

    Declared by:

    [20836]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20837]services.zabbixServer.database.type

    Database engine to use.

    Type: one of "mysql", "pgsql"

    Default: "pgsql"

    Example: "mysql"

    Declared by:

    [20838]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20839]services.zabbixServer.database.user

    Database user.

    Type: string

    Default: "zabbix"

    Declared by:

    [20840]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20841]services.zabbixServer.extraPackages

    Packages to be added to the Zabbix PATH. Typically used to add executables for scripts, but
    can be anything.

    Type: list of packages

    Default: "[ nettools nmap traceroute ]"

    Declared by:

    [20842]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20843]services.zabbixServer.listen.ip

    List of comma delimited IP addresses that the trapper should listen on. Trapper will listen
    on all network interfaces if this parameter is missing.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [20844]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20845]services.zabbixServer.listen.port

    Listen port for trapper.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 10051

    Declared by:

    [20846]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20847]services.zabbixServer.modules

    A set of modules to load.

    Type: attribute set of packages

    Default: { }

    Example:

    {
      "dummy.so" = pkgs.stdenv.mkDerivation {
        name = "zabbix-dummy-module-${cfg.package.version}";
        src = cfg.package.src;
        buildInputs = [ cfg.package ];
        sourceRoot = "zabbix-${cfg.package.version}/src/modules/dummy";
        installPhase = ''
          mkdir -p $out/lib
          cp dummy.so $out/lib/
        '';
      };
    }

    Declared by:

    [20848]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20849]services.zabbixServer.openFirewall

    Open ports in the firewall for the Zabbix Server.

    Type: boolean

    Default: false

    Declared by:

    [20850]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20851]services.zabbixServer.settings

    Zabbix Server configuration. Refer to [20852]https://www.zabbix.com/documentation/current/
    manual/appendix/config/zabbix_server for details on supported values.

    Type: attribute set of signed integer or string or list of stringss

    Default: { }

    Example: { CacheSize = "1G"; SSHKeyLocation = "/var/lib/zabbix/.ssh"; StartPingers = 32; }

    Declared by:

    [20853]<nixpkgs/nixos/modules/services/monitoring/zabbix-server.nix>

[20854]services.zabbixWeb.enable

    Whether to enable the Zabbix web interface.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20855]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20856]services.zabbixWeb.package

    Which Zabbix package to use.

    Type: package

    Default: "zabbix.web"

    Declared by:

    [20857]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20858]services.zabbixWeb.database.host

    Database host address.

    Type: string

    Default: ""

    Declared by:

    [20859]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20860]services.zabbixWeb.database.name

    Database name.

    Type: string

    Default: "zabbix"

    Declared by:

    [20861]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20862]services.zabbixWeb.database.passwordFile

    A file containing the password corresponding to database.user.

    Type: null or path

    Default: null

    Example: "/run/keys/zabbix-dbpassword"

    Declared by:

    [20863]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20864]services.zabbixWeb.database.port

    Database host port.

    Type: signed integer

    Default: 5432

    Declared by:

    [20865]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20866]services.zabbixWeb.database.socket

    Path to the unix socket file to use for authentication.

    Type: null or path

    Default: null

    Example: "/run/postgresql"

    Declared by:

    [20867]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20868]services.zabbixWeb.database.type

    Database engine to use.

    Type: one of "mysql", "pgsql", "oracle"

    Default: "pgsql"

    Example: "mysql"

    Declared by:

    [20869]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20870]services.zabbixWeb.database.user

    Database user.

    Type: string

    Default: "zabbix"

    Declared by:

    [20871]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20872]services.zabbixWeb.extraConfig

    Additional configuration to be copied verbatim into zabbix.conf.php.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [20873]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20874]services.zabbixWeb.poolConfig

    Options for the Zabbix PHP pool. See the documentation on php-fpm.conf for details on
    configuration directives.

    Type: attribute set of string or signed integer or booleans

    Default: { pm = "dynamic"; pm.max_children = 32; pm.max_requests = 500; pm.max_spare_servers
    = 4; pm.min_spare_servers = 2; pm.start_servers = 2; }

    Declared by:

    [20875]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20876]services.zabbixWeb.server.address

    The IP address or hostname of the Zabbix server to connect to.

    Type: string

    Default: "localhost"

    Declared by:

    [20877]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20878]services.zabbixWeb.server.port

    The port of the Zabbix server to connect to.

    Type: signed integer

    Default: 10051

    Declared by:

    [20879]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20880]services.zabbixWeb.virtualHost

    Apache configuration can be done by adapting services.httpd.virtualHosts.<name>. See [20881]
    services.httpd.virtualHosts for further information.

    Type: submodule

    Example:

    {
      hostName = "zabbix.example.org";
      adminAddr = "webmaster@example.org";
      forceSSL = true;
      enableACME = true;
    }

    Declared by:

    [20882]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20883]services.zabbixWeb.virtualHost.enableACME

    Whether to ask Let's Encrypt to sign a certificate for this vhost. Alternately, you can use
    an existing certificate through useACMEHost.

    Type: boolean

    Default: false

    Declared by:

    [20884]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20885]services.zabbixWeb.virtualHost.enableUserDir

    Whether to enable serving ~/public_html as /~username.

    Type: boolean

    Default: false

    Declared by:

    [20886]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20887]services.zabbixWeb.virtualHost.acmeRoot

    Directory for the acme challenge which is PUBLIC, don't put certs or keys in here

    Type: string

    Default: "/var/lib/acme/acme-challenge"

    Declared by:

    [20888]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20889]services.zabbixWeb.virtualHost.addSSL

    Whether to enable HTTPS in addition to plain HTTP. This will set defaults for listen to
    listen on all interfaces on the respective default ports (80, 443).

    Type: boolean

    Default: false

    Declared by:

    [20890]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20891]services.zabbixWeb.virtualHost.adminAddr

    E-mail address of the server administrator.

    Type: null or string

    Default: null

    Example: "admin@example.org"

    Declared by:

    [20892]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20893]services.zabbixWeb.virtualHost.documentRoot

    The path of Apache's document root directory. If left undefined, an empty directory in the
    Nix store will be used as root.

    Type: null or path

    Default: null

    Example: "/data/webserver/docs"

    Declared by:

    [20894]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20895]services.zabbixWeb.virtualHost.extraConfig

    These lines go to httpd.conf verbatim. They will go after directories and directory aliases
    defined by default.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    <Directory /home>
      Options FollowSymlinks
      AllowOverride All
    </Directory>
    ''

    Declared by:

    [20896]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20897]services.zabbixWeb.virtualHost.forceSSL

    Whether to add a separate nginx server block that permanently redirects (301) all plain HTTP
    traffic to HTTPS. This will set defaults for listen to listen on all interfaces on the
    respective default ports (80, 443), where the non-SSL listens are used for the redirect
    vhosts.

    Type: boolean

    Default: false

    Declared by:

    [20898]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20899]services.zabbixWeb.virtualHost.globalRedirect

    If set, all requests for this host are redirected permanently to the given URL.

    Type: null or string

    Default: null

    Example: "http://newserver.example.org/"

    Declared by:

    [20900]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20901]services.zabbixWeb.virtualHost.hostName

    Canonical hostname for the server.

    Type: string

    Default: "‹name›"

    Declared by:

    [20902]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20903]services.zabbixWeb.virtualHost.http2

    Whether to enable HTTP 2. HTTP/2 is supported in all multi-processing modules that come with
    httpd. However, if you use the prefork mpm, there will be severe restrictions. Refer to 
    [20904]https://httpd.apache.org/docs/2.4/howto/http2.html#mpm-config for details.

    Type: boolean

    Default: true

    Declared by:

    [20905]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20906]services.zabbixWeb.virtualHost.listen

    Listen addresses and ports for this virtual host.

    Note: This option overrides addSSL, forceSSL and onlySSL.

    Type: list of submodules

    Default: [ ]

    Example: [ { ip = "195.154.1.1"; port = 443; ssl = true; } { ip = "192.154.1.1"; port = 80; }
    { ip = "*"; port = 8080; } ]

    Declared by:

    [20907]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20908]services.zabbixWeb.virtualHost.listen.*.ip

    IP to listen on. 0.0.0.0 for IPv4 only, * for all.

    Type: string

    Default: "*"

    Declared by:

    [20909]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20910]services.zabbixWeb.virtualHost.listen.*.port

    Port to listen on

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Declared by:

    [20911]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20912]services.zabbixWeb.virtualHost.listen.*.ssl

    Whether to enable SSL (https) support.

    Type: boolean

    Default: false

    Declared by:

    [20913]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20914]services.zabbixWeb.virtualHost.locations

    Declarative location config. See [20915]https://httpd.apache.org/docs/2.4/mod/core.html#
    location for details.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "/" = {
        proxyPass = "http://localhost:3000";
      };
      "/foo/bar.png" = {
        alias = "/home/eelco/some-file.png";
      };
    };

    Declared by:

    [20916]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20917]services.zabbixWeb.virtualHost.locations.<name>.alias

    Alias directory for requests. See [20918]https://httpd.apache.org/docs/2.4/mod/mod_alias.html
    #alias.

    Type: null or path

    Default: null

    Example: "/your/alias/directory"

    Declared by:

    [20919]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20920]services.zabbixWeb.virtualHost.locations.<name>.extraConfig

    These lines go to the end of the location verbatim.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [20921]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20922]services.zabbixWeb.virtualHost.locations.<name>.index

    Adds DirectoryIndex directive. See [20923]https://httpd.apache.org/docs/2.4/mod/mod_dir.html#
    directoryindex.

    Type: null or string

    Default: null

    Example: "index.php index.html"

    Declared by:

    [20924]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20925]services.zabbixWeb.virtualHost.locations.<name>.priority

    Order of this location block in relation to the others in the vhost. The semantics are the
    same as with `lib.mkOrder`. Smaller values have a greater priority.

    Type: signed integer

    Default: 1000

    Declared by:

    [20926]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20927]services.zabbixWeb.virtualHost.locations.<name>.proxyPass

    Sets up a simple reverse proxy as described by [20928]https://httpd.apache.org/docs/2.4/howto
    /reverse_proxy.html#simple.

    Type: null or string

    Default: null

    Example: "http://www.example.org/"

    Declared by:

    [20929]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20930]services.zabbixWeb.virtualHost.logFormat

    Log format for Apache's log files. Possible values are: combined, common, referer, agent.

    Type: string

    Default: "common"

    Example: "combined"

    Declared by:

    [20931]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20932]services.zabbixWeb.virtualHost.onlySSL

    Whether to enable HTTPS and reject plain HTTP connections. This will set defaults for listen
    to listen on all interfaces on port 443.

    Type: boolean

    Default: false

    Declared by:

    [20933]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20934]services.zabbixWeb.virtualHost.robotsEntries

    Specification of pages to be ignored by web crawlers. See [20935]http://www.robotstxt.org/
    for details.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "Disallow: /foo/"

    Declared by:

    [20936]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20937]services.zabbixWeb.virtualHost.servedDirs

    This option provides a simple way to serve static directories.

    Type: list of attribute sets

    Default: [ ]

    Example: [ { dir = "/home/eelco/Dev/nix-homepage"; urlPath = "/nix"; } ]

    Declared by:

    [20938]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20939]services.zabbixWeb.virtualHost.servedFiles

    This option provides a simple way to serve individual, static files.

    Note: This option has been deprecated and will be removed in a future version of NixOS. You
    can achieve the same result by making use of the locations.<name>.alias option.

    Type: list of attribute sets

    Default: [ ]

    Example: [ { file = "/home/eelco/some-file.png"; urlPath = "/foo/bar.png"; } ]

    Declared by:

    [20940]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20941]services.zabbixWeb.virtualHost.serverAliases

    Additional names of virtual hosts served by this virtual host configuration.

    Type: list of strings

    Default: [ ]

    Example: [ "www.example.org" "www.example.org:8080" "example.org" ]

    Declared by:

    [20942]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20943]services.zabbixWeb.virtualHost.sslServerCert

    Path to server SSL certificate.

    Type: path

    Example: "/var/host.cert"

    Declared by:

    [20944]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20945]services.zabbixWeb.virtualHost.sslServerChain

    Path to server SSL chain file.

    Type: null or path

    Default: null

    Example: "/var/ca.pem"

    Declared by:

    [20946]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20947]services.zabbixWeb.virtualHost.sslServerKey

    Path to server SSL certificate key.

    Type: path

    Example: "/var/host.key"

    Declared by:

    [20948]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20949]services.zabbixWeb.virtualHost.useACMEHost

    A host of an existing Let's Encrypt certificate to use. This is useful if you have many
    subdomains and want to avoid hitting the [20950]rate limit. Alternately, you can generate a
    certificate through enableACME. Note that this option does not create any certificates, nor
    it does add subdomains to existing ones – you will need to create them manually using [20951]
    security.acme.certs.

    Type: null or string

    Default: null

    Declared by:

    [20952]<nixpkgs/nixos/modules/services/web-apps/zabbix.nix>

[20953]services.zeitgeist.enable

    Whether to enable zeitgeist.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20954]<nixpkgs/nixos/modules/services/desktops/zeitgeist.nix>

[20955]services.zerobin.enable

    Whether to enable 0bin.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20956]<nixpkgs/nixos/modules/services/networking/zerobin.nix>

[20957]services.zerobin.dataDir

    Path to the 0bin data directory

    Type: string

    Default: "/var/lib/zerobin"

    Declared by:

    [20958]<nixpkgs/nixos/modules/services/networking/zerobin.nix>

[20959]services.zerobin.extraConfig

    Extra configuration to be appended to the 0bin config file (see https://0bin.readthedocs.org/
    en/latest/en/options.html)

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    MENU = (
    ('Home', '/'),
    )
    COMPRESSED_STATIC_FILE = True
    ''

    Declared by:

    [20960]<nixpkgs/nixos/modules/services/networking/zerobin.nix>

[20961]services.zerobin.group

    The group 0bin should run as

    Type: string

    Default: "zerobin"

    Declared by:

    [20962]<nixpkgs/nixos/modules/services/networking/zerobin.nix>

[20963]services.zerobin.listenAddress

    The address zerobin should listen to

    Type: string

    Default: "localhost"

    Example: "127.0.0.1"

    Declared by:

    [20964]<nixpkgs/nixos/modules/services/networking/zerobin.nix>

[20965]services.zerobin.listenPort

    The port zerobin should listen on

    Type: signed integer

    Default: 8000

    Example: 1357

    Declared by:

    [20966]<nixpkgs/nixos/modules/services/networking/zerobin.nix>

[20967]services.zerobin.user

    The user 0bin should run as

    Type: string

    Default: "zerobin"

    Declared by:

    [20968]<nixpkgs/nixos/modules/services/networking/zerobin.nix>

[20969]services.zeronet.enable

    Whether to enable zeronet.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20970]<nixpkgs/nixos/modules/services/networking/zeronet.nix>

[20971]services.zeronet.fileserverPort

    Zeronet fileserver port.

    Type: signed integer

    Default: 12261

    Example: 12261

    Declared by:

    [20972]<nixpkgs/nixos/modules/services/networking/zeronet.nix>

[20973]services.zeronet.port

    Optional zeronet web UI port.

    Type: signed integer

    Default: 43110

    Example: 43110

    Declared by:

    [20974]<nixpkgs/nixos/modules/services/networking/zeronet.nix>

[20975]services.zeronet.settings

    zeronet.conf configuration. Refer to [20976]https://zeronet.readthedocs.io/en/latest/faq/#
    is-it-possible-to-use-a-configuration-file for details on supported values;

    Type: attribute set of string or signed integer or boolean or list of stringss

    Default: { }

    Example:

    global.tor = enable;

    Declared by:

    [20977]<nixpkgs/nixos/modules/services/networking/zeronet.nix>

[20978]services.zeronet.tor

    Use TOR for zeronet traffic where possible.

    Type: boolean

    Default: false

    Declared by:

    [20979]<nixpkgs/nixos/modules/services/networking/zeronet.nix>

[20980]services.zeronet.torAlways

    Use TOR for all zeronet traffic.

    Type: boolean

    Default: false

    Declared by:

    [20981]<nixpkgs/nixos/modules/services/networking/zeronet.nix>

[20982]services.zerotierone.enable

    Whether to enable ZeroTierOne.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20983]<nixpkgs/nixos/modules/services/networking/zerotierone.nix>

[20984]services.zerotierone.package

    ZeroTier One package to use.

    Type: package

    Default: "pkgs.zerotierone"

    Declared by:

    [20985]<nixpkgs/nixos/modules/services/networking/zerotierone.nix>

[20986]services.zerotierone.joinNetworks

    List of ZeroTier Network IDs to join on startup

    Type: list of strings

    Default: [ ]

    Example: [ "a8a2c3c10c1a68de" ]

    Declared by:

    [20987]<nixpkgs/nixos/modules/services/networking/zerotierone.nix>

[20988]services.zerotierone.port

    Network port used by ZeroTier.

    Type: signed integer

    Default: 9993

    Example: 9993

    Declared by:

    [20989]<nixpkgs/nixos/modules/services/networking/zerotierone.nix>

[20990]services.zfs.autoReplication.enable

    Whether to enable ZFS snapshot replication..

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [20991]<nixpkgs/nixos/modules/services/backup/zfs-replication.nix>

[20992]services.zfs.autoReplication.followDelete

    Remove remote snapshots that don't have a local correspondant.

    Type: boolean

    Default: true

    Declared by:

    [20993]<nixpkgs/nixos/modules/services/backup/zfs-replication.nix>

[20994]services.zfs.autoReplication.host

    Remote host where snapshots should be sent. lz4 is expected to be installed on this host.

    Type: string

    Example: "example.com"

    Declared by:

    [20995]<nixpkgs/nixos/modules/services/backup/zfs-replication.nix>

[20996]services.zfs.autoReplication.identityFilePath

    Path to SSH key used to login to host.

    Type: path

    Example: "/home/username/.ssh/id_rsa"

    Declared by:

    [20997]<nixpkgs/nixos/modules/services/backup/zfs-replication.nix>

[20998]services.zfs.autoReplication.localFilesystem

    Local ZFS fileystem from which snapshots should be sent. Defaults to the attribute name.

    Type: string

    Example: "pool/file/path"

    Declared by:

    [20999]<nixpkgs/nixos/modules/services/backup/zfs-replication.nix>

[21000]services.zfs.autoReplication.recursive

    Recursively discover snapshots to send.

    Type: boolean

    Default: true

    Declared by:

    [21001]<nixpkgs/nixos/modules/services/backup/zfs-replication.nix>

[21002]services.zfs.autoReplication.remoteFilesystem

    Remote ZFS filesystem where snapshots should be sent.

    Type: string

    Example: "pool/file/path"

    Declared by:

    [21003]<nixpkgs/nixos/modules/services/backup/zfs-replication.nix>

[21004]services.zfs.autoReplication.username

    Username used by SSH to login to remote host.

    Type: string

    Example: "username"

    Declared by:

    [21005]<nixpkgs/nixos/modules/services/backup/zfs-replication.nix>

[21006]services.zfs.autoScrub.enable

    Whether to enable periodic scrubbing of ZFS pools.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [21007]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[21008]services.zfs.autoScrub.interval

    Systemd calendar expression when to scrub ZFS pools. See systemd.time(7).

    Type: string

    Default: "Sun, 02:00"

    Example: "daily"

    Declared by:

    [21009]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[21010]services.zfs.autoScrub.pools

    List of ZFS pools to periodically scrub. If empty, all pools will be scrubbed.

    Type: list of strings

    Default: [ ]

    Example: [ "tank" ]

    Declared by:

    [21011]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[21012]services.zfs.autoSnapshot.enable

    Enable the (OpenSolaris-compatible) ZFS auto-snapshotting service. Note that you must set the
    com.sun:auto-snapshot property to true on all datasets which you wish to auto-snapshot.

    You can override a child dataset to use, or not use auto-snapshotting by setting its flag
    with the given interval: zfs set com.sun:auto-snapshot:weekly=false DATASET

    Type: boolean

    Default: false

    Declared by:

    [21013]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[21014]services.zfs.autoSnapshot.daily

    Number of daily auto-snapshots that you wish to keep.

    Type: signed integer

    Default: 7

    Declared by:

    [21015]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[21016]services.zfs.autoSnapshot.flags

    Flags to pass to the zfs-auto-snapshot command.

    Run zfs-auto-snapshot (without any arguments) to see available flags.

    If it's not too inconvenient for snapshots to have timestamps in UTC, it is suggested that
    you append --utc to the list of default options (see example).

    Otherwise, snapshot names can cause name conflicts or apparent time reversals due to daylight
    savings, timezone or other date/time changes.

    Type: string

    Default: "-k -p"

    Example: "-k -p --utc"

    Declared by:

    [21017]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[21018]services.zfs.autoSnapshot.frequent

    Number of frequent (15-minute) auto-snapshots that you wish to keep.

    Type: signed integer

    Default: 4

    Declared by:

    [21019]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[21020]services.zfs.autoSnapshot.hourly

    Number of hourly auto-snapshots that you wish to keep.

    Type: signed integer

    Default: 24

    Declared by:

    [21021]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[21022]services.zfs.autoSnapshot.monthly

    Number of monthly auto-snapshots that you wish to keep.

    Type: signed integer

    Default: 12

    Declared by:

    [21023]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[21024]services.zfs.autoSnapshot.weekly

    Number of weekly auto-snapshots that you wish to keep.

    Type: signed integer

    Default: 4

    Declared by:

    [21025]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[21026]services.zfs.trim.enable

    Whether to enable periodic TRIM on all ZFS pools.

    Type: boolean

    Default: true

    Example: false

    Declared by:

    [21027]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[21028]services.zfs.trim.interval

    How often we run trim. For most desktop and server systems a sufficient trimming frequency is
    once a week.

    The format is described in systemd.time(7).

    Type: string

    Default: "weekly"

    Example: "daily"

    Declared by:

    [21029]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[21030]services.zfs.zed.enableMail

    Whether to enable ZED's ability to send emails.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [21031]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[21032]services.zfs.zed.settings

    ZFS Event Daemon /etc/zfs/zed.d/zed.rc content

    See zed(8) for details on ZED and the scripts in /etc/zfs/zed.d to find the possible
    variables

    Type: attribute set of string or signed integer or boolean or list of stringss

    Example:

    {
      ZED_DEBUG_LOG = "/tmp/zed.debug.log";

      ZED_EMAIL_ADDR = [ "root" ];
      ZED_EMAIL_PROG = "mail";
      ZED_EMAIL_OPTS = "-s '@SUBJECT@' @ADDRESS@";

      ZED_NOTIFY_INTERVAL_SECS = 3600;
      ZED_NOTIFY_VERBOSE = false;

      ZED_USE_ENCLOSURE_LEDS = true;
      ZED_SCRUB_AFTER_RESILVER = false;
    }

    Declared by:

    [21033]<nixpkgs/nixos/modules/tasks/filesystems/zfs.nix>

[21034]services.zigbee2mqtt.enable

    Whether to enable enable zigbee2mqtt service.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [21035]<nixpkgs/nixos/modules/services/misc/zigbee2mqtt.nix>

[21036]services.zigbee2mqtt.package

    Zigbee2mqtt package to use

    Type: package

    Default: pkgs.zigbee2mqtt { dataDir = services.zigbee2mqtt.dataDir }

    Declared by:

    [21037]<nixpkgs/nixos/modules/services/misc/zigbee2mqtt.nix>

[21038]services.zigbee2mqtt.dataDir

    Zigbee2mqtt data directory

    Type: path

    Default: "/var/lib/zigbee2mqtt"

    Declared by:

    [21039]<nixpkgs/nixos/modules/services/misc/zigbee2mqtt.nix>

[21040]services.zigbee2mqtt.settings

    Your configuration.yaml as a Nix attribute set. Check the [21041]documentation for possible
    options.

    Type: YAML value

    Default: { }

    Example:

    {
      homeassistant = config.services.home-assistant.enable;
      permit_join = true;
      serial = {
        port = "/dev/ttyACM1";
      };
    }

    Declared by:

    [21042]<nixpkgs/nixos/modules/services/misc/zigbee2mqtt.nix>

[21043]services.znapzend.enable

    Whether to enable ZnapZend ZFS backup daemon.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [21044]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21045]services.znapzend.autoCreation

    Automatically create the destination dataset if it does not exists.

    Type: boolean

    Default: false

    Declared by:

    [21046]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21047]services.znapzend.features.compressed

    Whether to enable compressed feature which adds the options -Lce to the zfs send command.
    When this is enabled, make sure that both the sending and receiving pool have the same
    relevant features enabled. Using -c will skip unneccessary decompress-compress stages, -L is
    for large block support and -e is for embedded data support. see znapzend(1) and zfs(8) for
    more info. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [21048]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21049]services.znapzend.features.lowmemRecurse

    Whether to enable use lowmemRecurse on systems where you have too many datasets, so a
    recursive listing of attributes to find backup plans exhausts the memory available to 
    znapzend: instead, go the slower way to first list all impacted dataset names, and then query
    their configs one by one. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [21050]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21051]services.znapzend.features.oracleMode

    Whether to enable Destroy snapshots one by one instead of using one long argument list. If
    source and destination are out of sync for a long time, you may have so many snapshots to
    destroy that the argument gets is too long and the command fails. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [21052]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21053]services.znapzend.features.recvu

    Whether to enable recvu feature which uses -u on the receiving end to keep the destination
    filesystem unmounted. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [21054]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21055]services.znapzend.features.sendRaw

    Whether to enable sendRaw feature which adds the options -w to the zfs send command. For
    encrypted source datasets this instructs zfs not to decrypt before sending which results in a
    remote backup that can't be read without the encryption key/passphrase, useful when the
    remote isn't fully trusted or not physically secure. This option must be used consistently,
    raw incrementals cannot be based on non-raw snapshots and vice versa. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [21056]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21057]services.znapzend.features.skipIntermediates

    Whether to enable Enable the skipIntermediates feature to send a single increment between
    latest common snapshot and the newly made one. It may skip several source snaps if the
    destination was offline for some time, and it should skip snapshots not managed by znapzend.
    Normally for online destinations, the new snapshot is sent as soon as it is created on the
    source, so there are no automatic increments to skip. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [21058]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21059]services.znapzend.features.zfsGetType

    Whether to enable use zfsGetType if your zfs get supports a -t argument for filtering by
    dataset type at all AND lists properties for snapshots by default when recursing, so that
    there is too much data to process while searching for backup plans. If these two conditions
    apply to your system, the time needed for a --recursive search for backup plans can literally
    differ by hundreds of times (depending on the amount of snapshots in that dataset tree... and
    a decent backup plan will ensure you have a lot of those), so you would benefit from
    requesting this feature. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [21060]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21061]services.znapzend.logLevel

    The log level when logging to file. Any of debug, info, warning, err, alert. Default in
    daemonized form is debug.

    Type: one of "debug", "info", "warning", "err", "alert"

    Default: "debug"

    Example: "warning"

    Declared by:

    [21062]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21063]services.znapzend.logTo

    Where to log to (syslog::<facility> or <filepath>).

    Type: string

    Default: "syslog::daemon"

    Example: "/var/log/znapzend.log"

    Declared by:

    [21064]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21065]services.znapzend.noDestroy

    Does all changes to the filesystem except destroy.

    Type: boolean

    Default: false

    Declared by:

    [21066]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21067]services.znapzend.pure

    Do not persist any stateful znapzend setups. If this option is enabled, your previously set
    znapzend setups will be cleared and only the ones defined with this module will be applied.

    Type: boolean

    Default: false

    Declared by:

    [21068]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21069]services.znapzend.zetup

    Znapzend configuration.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "tank/home" = {
        # Make snapshots of tank/home every hour, keep those for 1 day,
        # keep every days snapshot for 1 month, etc.
        plan = "1d=>1h,1m=>1d,1y=>1m";
        recursive = true;
        # Send all those snapshots to john@example.com:rtank/john as well
        destinations.remote = {
          host = "john@example.com";
          dataset = "rtank/john";
        };
      };
    };

    Declared by:

    [21070]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21071]services.znapzend.zetup.<name>.enable

    Whether to enable this source.

    Type: boolean

    Default: true

    Declared by:

    [21072]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21073]services.znapzend.zetup.<name>.dataset

    The dataset to use for this source.

    Type: string

    Example: "tank/home"

    Declared by:

    [21074]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21075]services.znapzend.zetup.<name>.destinations

    Additional destinations.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      local = {
        dataset = "btank/backup";
        presend = "zpool import -N btank";
        postsend = "zpool export btank";
      };
      remote = {
        host = "john@example.com";
        dataset = "tank/john";
      };
    };

    Declared by:

    [21076]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21077]services.znapzend.zetup.<name>.destinations.<name>.dataset

    Dataset name to send snapshots to.

    Type: string

    Example: "tank/main"

    Declared by:

    [21078]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21079]services.znapzend.zetup.<name>.destinations.<name>.host

    Host to use for the destination dataset. Can be prefixed with user@ to specify the ssh user.

    Type: null or string

    Default: null

    Example: "john@example.com"

    Declared by:

    [21080]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21081]services.znapzend.zetup.<name>.destinations.<name>.label

    Label for this destination. Defaults to the attribute name.

    Type: string

    Declared by:

    [21082]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21083]services.znapzend.zetup.<name>.destinations.<name>.plan

    The znapzend backup plan to use for the source.

    The plan specifies how often to backup and for how long to keep the backups. It consists of a
    series of retention periodes to interval associations:

    retA=>intA,retB=>intB,...

    Both intervals and retention periods are expressed in standard units of time or multiples of
    them. You can use both the full name or a shortcut according to the following listing:

    second|sec|s, minute|min, hour|h, day|d, week|w, month|mon|m, year|y

    See znapzendzetup(1) for more info.

    Type: string

    Example: "1h=>10min,1d=>1h,1w=>1d,1m=>1w,1y=>1m"

    Declared by:

    [21084]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21085]services.znapzend.zetup.<name>.destinations.<name>.postsend

    Command to run after sending the snapshot to the destination. Intended to run a remote script
    via ssh on the destination, e.g. to bring up a backup disk or server or to put a zpool online
    /offline. See also presend.

    Type: null or string

    Default: null

    Example: "ssh root@bserv zpool export tank"

    Declared by:

    [21086]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21087]services.znapzend.zetup.<name>.destinations.<name>.presend

    Command to run before sending the snapshot to the destination. Intended to run a remote
    script via ssh on the destination, e.g. to bring up a backup disk or server or to put a zpool
    online/offline. See also postsend.

    Type: null or string

    Default: null

    Example: "ssh root@bserv zpool import -Nf tank"

    Declared by:

    [21088]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21089]services.znapzend.zetup.<name>.mbuffer.enable

    Whether to use mbuffer.

    Type: boolean

    Default: false

    Declared by:

    [21090]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21091]services.znapzend.zetup.<name>.mbuffer.port

    Port to use for mbuffer.

    If this is null, it will run mbuffer through ssh.

    If this is not null, it will run mbuffer directly through TCP, which is not encrypted but
    faster. In that case the given port needs to be open on the destination host.

    Type: null or 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: null

    Declared by:

    [21092]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21093]services.znapzend.zetup.<name>.mbuffer.size

    The size for mbuffer. Supports the units b, k, M, G.

    Type: string of the form number{b|k|M|G}

    Default: "1G"

    Example: "128M"

    Declared by:

    [21094]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21095]services.znapzend.zetup.<name>.plan

    The znapzend backup plan to use for the source.

    The plan specifies how often to backup and for how long to keep the backups. It consists of a
    series of retention periodes to interval associations:

    retA=>intA,retB=>intB,...

    Both intervals and retention periods are expressed in standard units of time or multiples of
    them. You can use both the full name or a shortcut according to the following listing:

    second|sec|s, minute|min, hour|h, day|d, week|w, month|mon|m, year|y

    See znapzendzetup(1) for more info.

    Type: string

    Example: "1h=>10min,1d=>1h,1w=>1d,1m=>1w,1y=>1m"

    Declared by:

    [21096]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21097]services.znapzend.zetup.<name>.postsnap

    Command to run after snapshots are taken on the source dataset, e.g. for database unlocking.
    See also presnap.

    Type: null or string

    Default: null

    Example:

    ${pkgs.coreutils}/bin/kill `${pkgs.coreutils}/bin/cat /tmp/mariadblock.pid`;${pkgs.coreutils}/bin/rm /tmp/mariadblock.pid

    Declared by:

    [21098]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21099]services.znapzend.zetup.<name>.presnap

    Command to run before snapshots are taken on the source dataset, e.g. for database locking/
    flushing. See also postsnap.

    Type: null or string

    Default: null

    Example:

    ${pkgs.mariadb}/bin/mysql -e "set autocommit=0;flush tables with read lock;\\! ${pkgs.coreutils}/bin/sleep 600" &  ${pkgs.coreutils}/bin/echo $! > /tmp/mariadblock.pid ; sleep 10

    Declared by:

    [21100]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21101]services.znapzend.zetup.<name>.recursive

    Whether to do recursive snapshots.

    Type: boolean

    Default: false

    Declared by:

    [21102]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21103]services.znapzend.zetup.<name>.sendDelay

    Specify delay (in seconds) before sending snaps to the destination. May be useful if you want
    to control sending time.

    Type: signed integer

    Default: 0

    Example: 60

    Declared by:

    [21104]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21105]services.znapzend.zetup.<name>.timestampFormat

    The timestamp format to use for constructing snapshot names. The syntax is strftime-like. The
    string must consist of the mandatory %Y %m %d %H %M %S. Optionally - _ . : characters as well
    as any alphanumeric character are allowed. If suffixed by a Z, times will be in UTC.

    Type: string containing all of the characters %Y, %m, %d, %H, %M, %S

    Default: "%Y-%m-%d-%H%M%S"

    Example: "znapzend-%m.%d.%Y-%H%M%SZ"

    Declared by:

    [21106]<nixpkgs/nixos/modules/services/backup/znapzend.nix>

[21107]services.znc.enable

    Whether to enable ZNC.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [21108]<nixpkgs/nixos/modules/services/networking/znc/default.nix>

[21109]services.znc.confOptions.extraZncConf

    Extra config to `znc.conf` file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21110]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21111]services.znc.confOptions.modules

    A list of modules to include in the `znc.conf` file.

    Type: list of strings

    Default: [ "webadmin" "adminlog" ]

    Example: [ "partyline" "webadmin" "adminlog" "log" ]

    Declared by:

    [21112]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21113]services.znc.confOptions.networks

    IRC networks to connect the user to.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      "freenode" = {
        server = "chat.freenode.net";
        port = 6697;
        useSSL = true;
        modules = [ "simple_away" ];
      };
    };

    Declared by:

    [21114]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21115]services.znc.confOptions.networks.<name>.channels

    IRC channels to join.

    Type: list of strings

    Default: [ ]

    Example: [ "nixos" ]

    Declared by:

    [21116]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21117]services.znc.confOptions.networks.<name>.extraConf

    Extra config for the network. Consider using services.znc.config instead.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    Encoding = ^UTF-8
    FloodBurst = 4
    FloodRate = 1.00
    IRCConnectEnabled = true
    Ident = johntron
    JoinDelay = 0
    Nick = johntron
    ''

    Declared by:

    [21118]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21119]services.znc.confOptions.networks.<name>.hasBitlbeeControlChannel

    Whether to add the special Bitlbee operations channel.

    Type: boolean

    Default: false

    Declared by:

    [21120]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21121]services.znc.confOptions.networks.<name>.modules

    ZNC network modules to load.

    Type: list of strings

    Default: [ "simple_away" ]

    Example:

    [ "simple_away" "sasl" ]

    Declared by:

    [21122]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21123]services.znc.confOptions.networks.<name>.password

    IRC server password, such as for a Slack gateway.

    Type: string

    Default: ""

    Declared by:

    [21124]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21125]services.znc.confOptions.networks.<name>.port

    IRC server port.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 6697

    Declared by:

    [21126]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21127]services.znc.confOptions.networks.<name>.server

    IRC server address.

    Type: string

    Example: "chat.freenode.net"

    Declared by:

    [21128]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21129]services.znc.confOptions.networks.<name>.useSSL

    Whether to use SSL to connect to the IRC server.

    Type: boolean

    Default: true

    Declared by:

    [21130]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21131]services.znc.confOptions.nick

    The IRC nick.

    Type: string

    Default: "znc-user"

    Example: "john"

    Declared by:

    [21132]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21133]services.znc.confOptions.passBlock

    Generate with `nix-shell -p znc --command "znc --makepass"`. This is the password used to log
    in to the ZNC web admin interface. You can also set this through services.znc.config.User.
    <username>.Pass.Method and co.

    Type: string

    Example:

    &lt;Pass password&gt;
       Method = sha256
       Hash = e2ce303c7ea75c571d80d8540a8699b46535be6a085be3414947d638e48d9e93
       Salt = l5Xryew4g*!oa(ECfX2o
    &lt;/Pass&gt;

    Declared by:

    [21134]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21135]services.znc.confOptions.port

    Specifies the port on which to listen.

    Type: signed integer

    Default: 5000

    Declared by:

    [21136]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21137]services.znc.confOptions.uriPrefix

    An optional URI prefix for the ZNC web interface. Can be used to make ZNC available behind a
    reverse proxy.

    Type: null or string

    Default: null

    Example: "/znc/"

    Declared by:

    [21138]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21139]services.znc.confOptions.useSSL

    Indicates whether the ZNC server should use SSL when listening on the specified port. A
    self-signed certificate will be generated.

    Type: boolean

    Default: true

    Declared by:

    [21140]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21141]services.znc.confOptions.userModules

    A list of user modules to include in the `znc.conf` file.

    Type: list of strings

    Default: [ "chansaver" "controlpanel" ]

    Example: [ "chansaver" "controlpanel" "fish" "push" ]

    Declared by:

    [21142]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21143]services.znc.confOptions.userName

    The user name used to log in to the ZNC web admin interface.

    Type: string

    Default: "znc"

    Example: "johntron"

    Declared by:

    [21144]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21145]services.znc.config

    Configuration for ZNC, see [21146]https://wiki.znc.in/Configuration for details. The Nix
    value declared here will be translated directly to the xml-like format ZNC expects. This is
    much more flexible than the legacy options under services.znc.confOptions.*, but also can't
    do any type checking.

    You can use nix-instantiate --eval --strict '<nixpkgs/nixos>' -A config.services.znc.config
    to view the current value. By default it contains a listener for port 5000 with SSL enabled.

    Nix attributes called extraConfig will be inserted verbatim into the resulting config file.

    If services.znc.useLegacyConfig is turned on, the option values in services.znc.confOptions.*
    will be gracefully be applied to this option.

    If you intend to update the configuration through this option, be sure to enable
    services.znc.mutable, otherwise none of the changes here will be applied after the initial
    deploy.

    Type: attribute set of znc values (null, atoms (str, int, bool), list of atoms, or attrsets
    of znc values)s

    Default: { }

    Example:

    {
      LoadModule = [ "webadmin" "adminlog" ];
      User.paul = {
        Admin = true;
        Nick = "paul";
        AltNick = "paul1";
        LoadModule = [ "chansaver" "controlpanel" ];
        Network.freenode = {
          Server = "chat.freenode.net +6697";
          LoadModule = [ "simple_away" ];
          Chan = {
            "#nixos" = { Detached = false; };
            "##linux" = { Disabled = true; };
          };
        };
        Pass.password = {
          Method = "sha256";
          Hash = "e2ce303c7ea75c571d80d8540a8699b46535be6a085be3414947d638e48d9e93";
          Salt = "l5Xryew4g*!oa(ECfX2o";
        };
      };
    }

    Declared by:

    [21147]<nixpkgs/nixos/modules/services/networking/znc/default.nix>

[21148]services.znc.configFile

    Configuration file for ZNC. It is recommended to use the config option instead.

    Setting this option will override any auto-generated config file through the confOptions or
    config options.

    Type: path

    Example: "~/.znc/configs/znc.conf"

    Declared by:

    [21149]<nixpkgs/nixos/modules/services/networking/znc/default.nix>

[21150]services.znc.dataDir

    The state directory for ZNC. The config and the modules will be linked to from this directory
    as well.

    Type: path

    Default: "/var/lib/znc"

    Example: "/home/john/.znc"

    Declared by:

    [21151]<nixpkgs/nixos/modules/services/networking/znc/default.nix>

[21152]services.znc.extraFlags

    Extra arguments to use for executing znc.

    Type: list of strings

    Default: [ ]

    Example: [ "--debug" ]

    Declared by:

    [21153]<nixpkgs/nixos/modules/services/networking/znc/default.nix>

[21154]services.znc.group

    Group to own the ZNC process.

    Type: string

    Default: "znc"

    Example: "users"

    Declared by:

    [21155]<nixpkgs/nixos/modules/services/networking/znc/default.nix>

[21156]services.znc.modulePackages

    A list of global znc module packages to add to znc.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.zncModules.fish pkgs.zncModules.push ]

    Declared by:

    [21157]<nixpkgs/nixos/modules/services/networking/znc/default.nix>

[21158]services.znc.mutable

    Indicates whether to allow the contents of the dataDir directory to be changed by the user at
    run-time.

    If enabled, modifications to the ZNC configuration after its initial creation are not
    overwritten by a NixOS rebuild. If disabled, the ZNC configuration is rebuilt on every NixOS
    rebuild.

    If the user wants to manage the ZNC service using the web admin interface, this option should
    be enabled.

    Type: boolean

    Default: true

    Declared by:

    [21159]<nixpkgs/nixos/modules/services/networking/znc/default.nix>

[21160]services.znc.openFirewall

    Whether to open ports in the firewall for ZNC. Does work with ports for listeners specified
    in services.znc.config.Listener.

    Type: boolean

    Default: false

    Declared by:

    [21161]<nixpkgs/nixos/modules/services/networking/znc/default.nix>

[21162]services.znc.useLegacyConfig

    Whether to propagate the legacy options under services.znc.confOptions.* to the znc config.
    If this is turned on, the znc config will contain a user with the default name "znc", global
    modules "webadmin" and "adminlog" will be enabled by default, and more, all controlled
    through the services.znc.confOptions.* options. You can use nix-instantiate --eval --strict '
    <nixpkgs/nixos>' -A config.services.znc.config to view the current value of the config.

    In any case, if you need more flexibility, services.znc.config can be used to override/add to
    all of the legacy options.

    Type: boolean

    Default: true

    Declared by:

    [21163]<nixpkgs/nixos/modules/services/networking/znc/options.nix>

[21164]services.znc.user

    The name of an existing user account to use to own the ZNC server process. If not specified,
    a default user will be created.

    Type: string

    Default: "znc"

    Example: "john"

    Declared by:

    [21165]<nixpkgs/nixos/modules/services/networking/znc/default.nix>

[21166]services.zoneminder.enable

    Whether to enable ZoneMinder

    If you intend to run the database locally, you should set
    `config.services.zoneminder.database.createLocally` to true. Otherwise, when set to `false`
    (the default), you will have to create the database and database user as well as populate the
    database yourself. Additionally, you will need to run `zmupdate.pl` yourself when upgrading
    to a newer version. .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [21167]<nixpkgs/nixos/modules/services/misc/zoneminder.nix>

[21168]services.zoneminder.cameras

    Set this to the number of cameras you expect to support.

    Type: signed integer

    Default: 1

    Declared by:

    [21169]<nixpkgs/nixos/modules/services/misc/zoneminder.nix>

[21170]services.zoneminder.database.createLocally

    Create the database and database user locally.

    Type: boolean

    Default: false

    Declared by:

    [21171]<nixpkgs/nixos/modules/services/misc/zoneminder.nix>

[21172]services.zoneminder.database.host

    Hostname hosting the database.

    Type: string

    Default: "localhost"

    Declared by:

    [21173]<nixpkgs/nixos/modules/services/misc/zoneminder.nix>

[21174]services.zoneminder.database.name

    Name of database.

    Type: string

    Default: "zm"

    Declared by:

    [21175]<nixpkgs/nixos/modules/services/misc/zoneminder.nix>

[21176]services.zoneminder.database.password

    Username for accessing the database. Not used if createLocally is set.

    Type: string

    Default: "zmpass"

    Declared by:

    [21177]<nixpkgs/nixos/modules/services/misc/zoneminder.nix>

[21178]services.zoneminder.database.username

    Username for accessing the database.

    Type: string

    Default: "zmuser"

    Declared by:

    [21179]<nixpkgs/nixos/modules/services/misc/zoneminder.nix>

[21180]services.zoneminder.extraConfig

    Additional configuration added verbatim to the configuration file.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21181]<nixpkgs/nixos/modules/services/misc/zoneminder.nix>

[21182]services.zoneminder.hostname

    The hostname on which to listen.

    Type: string

    Default: "localhost"

    Declared by:

    [21183]<nixpkgs/nixos/modules/services/misc/zoneminder.nix>

[21184]services.zoneminder.openFirewall

    Open the firewall port(s).

    Type: boolean

    Default: false

    Declared by:

    [21185]<nixpkgs/nixos/modules/services/misc/zoneminder.nix>

[21186]services.zoneminder.port

    The port on which to listen.

    Type: signed integer

    Default: 8095

    Declared by:

    [21187]<nixpkgs/nixos/modules/services/misc/zoneminder.nix>

[21188]services.zoneminder.storageDir

    ZoneMinder can generate quite a lot of data, so in case you don't want to use the default /
    var/lib/zoneminder, you can override the path here.

    Type: null or string

    Default: null

    Example: "/storage/tank"

    Declared by:

    [21189]<nixpkgs/nixos/modules/services/misc/zoneminder.nix>

[21190]services.zoneminder.webserver

    The webserver to configure for the PHP frontend.

    Set it to `none` if you want to configure it yourself. PRs are welcome for support for other
    web servers.

    Type: one of "nginx", "none"

    Default: "nginx"

    Declared by:

    [21191]<nixpkgs/nixos/modules/services/misc/zoneminder.nix>

[21192]services.zookeeper.enable

    Whether to enable Zookeeper.

    Type: boolean

    Default: false

    Declared by:

    [21193]<nixpkgs/nixos/modules/services/misc/zookeeper.nix>

[21194]services.zookeeper.package

    The zookeeper package to use

    Type: package

    Default: "pkgs.zookeeper"

    Declared by:

    [21195]<nixpkgs/nixos/modules/services/misc/zookeeper.nix>

[21196]services.zookeeper.dataDir

    Data directory for Zookeeper

    Type: path

    Default: "/var/lib/zookeeper"

    Declared by:

    [21197]<nixpkgs/nixos/modules/services/misc/zookeeper.nix>

[21198]services.zookeeper.extraCmdLineOptions

    Extra command line options for the Zookeeper launcher.

    Type: list of strings

    Default: [ "-Dcom.sun.management.jmxremote" "-Dcom.sun.management.jmxremote.local.only=true"
    ]

    Example: [ "-Djava.net.preferIPv4Stack=true" "-Dcom.sun.management.jmxremote"
    "-Dcom.sun.management.jmxremote.local.only=true" ]

    Declared by:

    [21199]<nixpkgs/nixos/modules/services/misc/zookeeper.nix>

[21200]services.zookeeper.extraConf

    Extra configuration for Zookeeper.

    Type: strings concatenated with "\n"

    Default:

    ''
    initLimit=5
    syncLimit=2
    tickTime=2000
    ''

    Declared by:

    [21201]<nixpkgs/nixos/modules/services/misc/zookeeper.nix>

[21202]services.zookeeper.id

    Zookeeper ID.

    Type: signed integer

    Default: 0

    Declared by:

    [21203]<nixpkgs/nixos/modules/services/misc/zookeeper.nix>

[21204]services.zookeeper.logging

    Zookeeper logging configuration.

    Type: strings concatenated with "\n"

    Default:

    ''
    zookeeper.root.logger=INFO, CONSOLE
    log4j.rootLogger=INFO, CONSOLE
    log4j.logger.org.apache.zookeeper.audit.Log4jAuditLogger=INFO, CONSOLE
    log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
    log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
    log4j.appender.CONSOLE.layout.ConversionPattern=[myid:%X{myid}] - %-5p [%t:%C{1}@%L] - %m%n
    ''

    Declared by:

    [21205]<nixpkgs/nixos/modules/services/misc/zookeeper.nix>

[21206]services.zookeeper.port

    Zookeeper Client port.

    Type: signed integer

    Default: 2181

    Declared by:

    [21207]<nixpkgs/nixos/modules/services/misc/zookeeper.nix>

[21208]services.zookeeper.preferIPv4

    Add the -Djava.net.preferIPv4Stack=true flag to the Zookeeper server.

    Type: boolean

    Default: true

    Declared by:

    [21209]<nixpkgs/nixos/modules/services/misc/zookeeper.nix>

[21210]services.zookeeper.purgeInterval

    The time interval in hours for which the purge task has to be triggered. Set to a positive
    integer (1 and above) to enable the auto purging.

    Type: signed integer

    Default: 1

    Declared by:

    [21211]<nixpkgs/nixos/modules/services/misc/zookeeper.nix>

[21212]services.zookeeper.servers

    All Zookeeper Servers.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    server.0=host0:2888:3888
    server.1=host1:2888:3888
    server.2=host2:2888:3888
    ''

    Declared by:

    [21213]<nixpkgs/nixos/modules/services/misc/zookeeper.nix>

[21214]services.zope2.instances

    zope2 instances to be created automaticaly by the system.

    Type: attribute set of submodules

    Default: { }

    Example:

    {
      plone01 = {
        http_address = "127.0.0.1:8080";
        extra =
          ''
          <zodb_db main>
            mount-point /
            cache-size 30000
            <blobstorage>
                blob-dir /var/lib/zope2/plone01/blobstorage
                <filestorage>
                path /var/lib/zope2/plone01/filestorage/Data.fs
                </filestorage>
            </blobstorage>
          </zodb_db>
          '';
      };
    }

    Declared by:

    [21215]<nixpkgs/nixos/modules/services/web-servers/zope2.nix>

[21216]services.zope2.instances.<name>.packages

    The list of packages you want to make available to the zope2 instance.

    Type: list of packages

    Declared by:

    [21217]<nixpkgs/nixos/modules/services/web-servers/zope2.nix>

[21218]services.zope2.instances.<name>.clientHome

    Home directory of zope2 instance.

    Type: path

    Default: "/var/lib/zope2/‹name›"

    Declared by:

    [21219]<nixpkgs/nixos/modules/services/web-servers/zope2.nix>

[21220]services.zope2.instances.<name>.extra

    Extra zope.conf

    Type: strings concatenated with "\n"

    Default:

    ''
    <zodb_db main>
      mount-point /
      cache-size 30000
      <blobstorage>
          blob-dir /var/lib/zope2/‹name›/blobstorage
          <filestorage>
          path /var/lib/zope2/‹name›/filestorage/Data.fs
          </filestorage>
      </blobstorage>
    </zodb_db>
    ''

    Declared by:

    [21221]<nixpkgs/nixos/modules/services/web-servers/zope2.nix>

[21222]services.zope2.instances.<name>.http_address

    Give a port and address for the HTTP server.

    Type: string

    Default: "localhost:8080"

    Declared by:

    [21223]<nixpkgs/nixos/modules/services/web-servers/zope2.nix>

[21224]services.zope2.instances.<name>.name

    The name of the zope2 instance. If undefined, the name of the attribute set will be used.

    Type: string

    Default: "‹name›"

    Declared by:

    [21225]<nixpkgs/nixos/modules/services/web-servers/zope2.nix>

[21226]services.zope2.instances.<name>.threads

    Specify the number of threads that Zope's ZServer web server will use to service requests.

    Type: signed integer

    Default: 2

    Declared by:

    [21227]<nixpkgs/nixos/modules/services/web-servers/zope2.nix>

[21228]services.zope2.instances.<name>.user

    The name of the effective user for the Zope process.

    Type: string

    Default: "zope2"

    Declared by:

    [21229]<nixpkgs/nixos/modules/services/web-servers/zope2.nix>

[21230]services.zrepl.enable

    Whether to enable zrepl.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [21231]<nixpkgs/nixos/modules/services/backup/zrepl.nix>

[21232]services.zrepl.settings

    Configuration for zrepl. See [21233]https://zrepl.github.io/configuration.html for more
    information.

    Type: YAML value

    Default: { }

    Declared by:

    [21234]<nixpkgs/nixos/modules/services/backup/zrepl.nix>

[21235]sound.enable

    Whether to enable ALSA sound.

    Type: boolean

    Default: false

    Declared by:

    [21236]<nixpkgs/nixos/modules/services/audio/alsa.nix>

[21237]sound.enableOSSEmulation

    Whether to enable ALSA OSS emulation (with certain cards sound mixing may not work!).

    Type: boolean

    Default: false

    Declared by:

    [21238]<nixpkgs/nixos/modules/services/audio/alsa.nix>

[21239]sound.extraConfig

    Set addition configuration for system-wide alsa.

    Type: strings concatenated with "\n"

    Default: ""

    Example:

    ''
    defaults.pcm.!card 3
    ''

    Declared by:

    [21240]<nixpkgs/nixos/modules/services/audio/alsa.nix>

[21241]sound.mediaKeys.enable

    Whether to enable volume and capture control with keyboard media keys.

    You want to leave this disabled if you run a desktop environment like KDE, Gnome, Xfce, etc,
    as those handle such things themselves. You might want to enable this if you run a
    minimalistic desktop environment or work from bare linux ttys/framebuffers.

    Enabling this will turn on services.actkbd.

    Type: boolean

    Default: false

    Declared by:

    [21242]<nixpkgs/nixos/modules/services/audio/alsa.nix>

[21243]sound.mediaKeys.volumeStep

    The value by which to increment/decrement volume on media keys.

    See amixer(1) for allowed values.

    Type: string

    Default: "1"

    Example: "1%"

    Declared by:

    [21244]<nixpkgs/nixos/modules/services/audio/alsa.nix>

[21245]specialisation

    Additional configurations to build. If inheritParentConfig is true, the system will be based
    on the overall system configuration.

    To switch to a specialised configuration (e.g. fewJobsManyCores) at runtime, run:

    # sudo /run/current-system/specialisation/fewJobsManyCores/bin/switch-to-configuration test

    Type: attribute set of submodules

    Default: { }

    Example:

    { fewJobsManyCores.configuration = { nix.buildCores = 0; nix.maxJobs = 1; }; }

    Declared by:

    [21246]<nixpkgs/nixos/modules/system/activation/top-level.nix>

[21247]specialisation.<name>.configuration

    Arbitrary NixOS configuration options.

    Type: unspecified

    Default: { }

    Declared by:

    [21248]<nixpkgs/nixos/modules/system/activation/top-level.nix>

[21249]specialisation.<name>.inheritParentConfig

    Include the entire system's configuration. Set to false to make a completely differently
    configured system.

    Type: boolean

    Default: true

    Declared by:

    [21250]<nixpkgs/nixos/modules/system/activation/top-level.nix>

[21251]swapDevices

    The swap devices and swap files. These must have been initialised using mkswap. Each element
    should be an attribute set specifying either the path of the swap device or file (device) or
    the label of the swap device (label, see mkswap -L). Using a label is recommended.

    Type: list of submodules

    Default: [ ]

    Example: [ { device = "/dev/hda7"; } { device = "/var/swapfile"; } { label = "bigswap"; } ]

    Declared by:

    [21252]<nixpkgs/nixos/modules/tasks/encrypted-devices.nix>
    [21253]<nixpkgs/nixos/modules/config/swap.nix>

[21254]swapDevices.*.device

    Path of the device or swap file.

    Type: string

    Example: "/dev/sda3"

    Declared by:

    [21255]<nixpkgs/nixos/modules/config/swap.nix>

[21256]swapDevices.*.encrypted.enable

    The block device is backed by an encrypted one, adds this device as a initrd luks entry.

    Type: boolean

    Default: false

    Declared by:

    [21257]<nixpkgs/nixos/modules/tasks/encrypted-devices.nix>

[21258]swapDevices.*.encrypted.blkDev

    Location of the backing encrypted device.

    Type: null or string

    Default: null

    Example: "/dev/sda1"

    Declared by:

    [21259]<nixpkgs/nixos/modules/tasks/encrypted-devices.nix>

[21260]swapDevices.*.encrypted.keyFile

    Path to a keyfile used to unlock the backing encrypted device. At the time this keyfile is
    accessed, the neededForBoot filesystems (see fileSystems.<name?>.neededForBoot) will have
    been mounted under /mnt-root, so the keyfile path should usually start with "/mnt-root/".

    Type: null or string

    Default: null

    Example: "/mnt-root/root/.swapkey"

    Declared by:

    [21261]<nixpkgs/nixos/modules/tasks/encrypted-devices.nix>

[21262]swapDevices.*.encrypted.label

    Label of the unlocked encrypted device. Set fileSystems.<name?>.device to /dev/mapper/<label>
    to mount the unlocked device.

    Type: null or string

    Default: null

    Example: "rootfs"

    Declared by:

    [21263]<nixpkgs/nixos/modules/tasks/encrypted-devices.nix>

[21264]swapDevices.*.label

    Label of the device. Can be used instead of device.

    Type: string

    Example: "swap"

    Declared by:

    [21265]<nixpkgs/nixos/modules/config/swap.nix>

[21266]swapDevices.*.priority

    Specify the priority of the swap device. Priority is a value between 0 and 32767. Higher
    numbers indicate higher priority. null lets the kernel choose a priority, which will show up
    as a negative value.

    Type: null or signed integer

    Default: null

    Example: 2048

    Declared by:

    [21267]<nixpkgs/nixos/modules/config/swap.nix>

[21268]swapDevices.*.randomEncryption

    Encrypt swap device with a random key. This way you won't have a persistent swap device.

    HINT: run "cryptsetup benchmark" to test cipher performance on your machine.

    WARNING: Don't try to hibernate when you have at least one swap partition with this option
    enabled! We have no way to set the partition into which hibernation image is saved, so if
    your image ends up on an encrypted one you would lose it!

    WARNING #2: Do not use /dev/disk/by-uuid/… or /dev/disk/by-label/… as your swap device when
    using randomEncryption as the UUIDs and labels will get erased on every boot when the
    partition is encrypted. Best to use /dev/disk/by-partuuid/…

    Type: submodule or boolean convertible to it

    Default: false

    Example: { cipher = "serpent-xts-plain64"; enable = true; source = "/dev/random"; }

    Declared by:

    [21269]<nixpkgs/nixos/modules/config/swap.nix>

[21270]swapDevices.*.randomEncryption.enable

    Encrypt swap device with a random key. This way you won't have a persistent swap device.

    WARNING: Don't try to hibernate when you have at least one swap partition with this option
    enabled! We have no way to set the partition into which hibernation image is saved, so if
    your image ends up on an encrypted one you would lose it!

    WARNING #2: Do not use /dev/disk/by-uuid/… or /dev/disk/by-label/… as your swap device when
    using randomEncryption as the UUIDs and labels will get erased on every boot when the
    partition is encrypted. Best to use /dev/disk/by-partuuid/…

    Type: boolean

    Default: false

    Declared by:

    [21271]<nixpkgs/nixos/modules/config/swap.nix>

[21272]swapDevices.*.randomEncryption.cipher

    Use specified cipher for randomEncryption.

    Hint: Run "cryptsetup benchmark" to see which one is fastest on your machine.

    Type: string

    Default: "aes-xts-plain64"

    Example: "serpent-xts-plain64"

    Declared by:

    [21273]<nixpkgs/nixos/modules/config/swap.nix>

[21274]swapDevices.*.randomEncryption.source

    Define the source of randomness to obtain a random key for encryption.

    Type: string

    Default: "/dev/urandom"

    Example: "/dev/random"

    Declared by:

    [21275]<nixpkgs/nixos/modules/config/swap.nix>

[21276]swapDevices.*.size

    If this option is set, ‘device’ is interpreted as the path of a swapfile that will be created
    automatically with the indicated size (in megabytes).

    Type: null or signed integer

    Default: null

    Example: 2048

    Declared by:

    [21277]<nixpkgs/nixos/modules/config/swap.nix>

[21278]system.activationScripts

    A set of shell script fragments that are executed when a NixOS system configuration is
    activated. Examples are updating /etc, creating accounts, and so on. Since these are executed
    every time you boot the system or run nixos-rebuild, it's important that they are idempotent
    and fast.

    Type: attribute set of string or submodules

    Default: { }

    Example:

    { stdio.text =
      ''
        # Needed by some programs.
        ln -sfn /proc/self/fd /dev/fd
        ln -sfn /proc/self/fd/0 /dev/stdin
        ln -sfn /proc/self/fd/1 /dev/stdout
        ln -sfn /proc/self/fd/2 /dev/stderr
      '';
    }

    Declared by:

    [21279]<nixpkgs/nixos/modules/system/activation/activation-script.nix>

[21280]system.autoUpgrade.enable

    Whether to periodically upgrade NixOS to the latest version. If enabled, a systemd timer will
    run nixos-rebuild switch --upgrade once a day.

    Type: boolean

    Default: false

    Declared by:

    [21281]<nixpkgs/nixos/modules/tasks/auto-upgrade.nix>

[21282]system.autoUpgrade.allowReboot

    Reboot the system into the new generation instead of a switch if the new generation uses a
    different kernel, kernel modules or initrd than the booted system.

    Type: boolean

    Default: false

    Declared by:

    [21283]<nixpkgs/nixos/modules/tasks/auto-upgrade.nix>

[21284]system.autoUpgrade.channel

    The URI of the NixOS channel to use for automatic upgrades. By default, this is the channel
    set using nix-channel (run nix-channel --list to see the current value).

    Type: null or string

    Default: null

    Example: "https://nixos.org/channels/nixos-14.12-small"

    Declared by:

    [21285]<nixpkgs/nixos/modules/tasks/auto-upgrade.nix>

[21286]system.autoUpgrade.dates

    Specification (in the format described by systemd.time(7)) of the time at which the update
    will occur.

    Type: string

    Default: "04:40"

    Declared by:

    [21287]<nixpkgs/nixos/modules/tasks/auto-upgrade.nix>

[21288]system.autoUpgrade.flags

    Any additional flags passed to nixos-rebuild.

    If you are using flakes and use a local repo you can add [ "--update-input" "nixpkgs"
    "--commit-lock-file" ] to update nixpkgs.

    Type: list of strings

    Default: [ ]

    Example: [ "-I" "stuff=/home/alice/nixos-stuff" "--option" "extra-binary-caches" "http://
    my-cache.example.org/" ]

    Declared by:

    [21289]<nixpkgs/nixos/modules/tasks/auto-upgrade.nix>

[21290]system.autoUpgrade.flake

    The Flake URI of the NixOS configuration to build. Disables the option
    system.autoUpgrade.channel.

    Type: null or string

    Default: null

    Example: "github:kloenk/nix"

    Declared by:

    [21291]<nixpkgs/nixos/modules/tasks/auto-upgrade.nix>

[21292]system.autoUpgrade.randomizedDelaySec

    Add a randomized delay before each automatic upgrade. The delay will be chozen between zero
    and this value. This value must be a time span in the format specified by systemd.time(7)

    Type: string

    Default: "0"

    Example: "45min"

    Declared by:

    [21293]<nixpkgs/nixos/modules/tasks/auto-upgrade.nix>

[21294]system.configurationRevision

    The Git revision of the top-level flake from which this configuration was built.

    Type: null or string

    Default: null

    Declared by:

    [21295]<nixpkgs/nixos/modules/misc/version.nix>

[21296]system.copySystemConfiguration

    If enabled, copies the NixOS configuration file (usually /etc/nixos/configuration.nix) and
    links it from the resulting system (getting to /run/current-system/configuration.nix). Note
    that only this single file is copied, even if it imports others.

    Type: boolean

    Default: false

    Declared by:

    [21297]<nixpkgs/nixos/modules/system/activation/top-level.nix>

[21298]system.extraDependencies

    A list of packages that should be included in the system closure but not otherwise made
    available to users. This is primarily used by the installation tests.

    Type: list of packages

    Default: [ ]

    Declared by:

    [21299]<nixpkgs/nixos/modules/system/activation/top-level.nix>

[21300]system.name

    The name of the system used in the system.build.toplevel derivation.

    That derivation has the following name: "nixos-system-${config.system.name}-$
    {config.system.nixos.label}"

    Type: string

    Default: '''networking.hostName' if non empty else "unnamed"''

    Declared by:

    [21301]<nixpkgs/nixos/modules/system/activation/top-level.nix>

[21302]system.nixos.codeName

    The NixOS release code name (e.g. Emu).

    Type: string (read only)

    Default: "Okapi"

    Declared by:

    [21303]<nixpkgs/nixos/modules/misc/version.nix>

[21304]system.nixos.label

    NixOS version name to be used in the names of generated outputs and boot labels.

    If you ever wanted to influence the labels in your GRUB menu, this is the option for you.

    The default is system.nixos.tags separated by "-" + "-" + NIXOS_LABEL_VERSION environment
    variable (defaults to the value of system.nixos.version).

    Can be overriden by setting NIXOS_LABEL.

    Useful for not loosing track of configurations built from different nixos branches/revisions,
    e.g.:

    #!/bin/sh
    today=`date +%Y%m%d`
    branch=`(cd nixpkgs ; git branch 2>/dev/null | sed -n '/^\* / { s|^\* ||; p; }')`
    revision=`(cd nixpkgs ; git rev-parse HEAD)`
    export NIXOS_LABEL_VERSION="$today.$branch-${revision:0:7}"
    nixos-rebuild switch

    Type: string

    Declared by:

    [21305]<nixpkgs/nixos/modules/misc/label.nix>

[21306]system.nixos.release

    The NixOS release (e.g. 16.03).

    Type: string (read only)

    Default: "21.05"

    Declared by:

    [21307]<nixpkgs/nixos/modules/misc/version.nix>

[21308]system.nixos.tags

    Strings to prefix to the default system.nixos.label.

    Useful for not loosing track of configurations built with different options, e.g.:

    {
      system.nixos.tags = [ "with-xen" ];
      virtualisation.xen.enable = true;
    }

    Type: list of strings

    Default: [ ]

    Example: [ "with-xen" ]

    Declared by:

    [21309]<nixpkgs/nixos/modules/misc/label.nix>

[21310]system.nssDatabases.group

    List of group entries to configure in /etc/nsswitch.conf.

    Note that "files" is always prepended while "systemd" is appended if nscd is enabled.

    This option only takes effect if nscd is enabled.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21311]<nixpkgs/nixos/modules/config/nsswitch.nix>

[21312]system.nssDatabases.hosts

    List of hosts entries to configure in /etc/nsswitch.conf.

    Note that "files" is always prepended, and "dns" and "myhostname" are always appended.

    This option only takes effect if nscd is enabled.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21313]<nixpkgs/nixos/modules/config/nsswitch.nix>

[21314]system.nssDatabases.passwd

    List of passwd entries to configure in /etc/nsswitch.conf.

    Note that "files" is always prepended while "systemd" is appended if nscd is enabled.

    This option only takes effect if nscd is enabled.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21315]<nixpkgs/nixos/modules/config/nsswitch.nix>

[21316]system.nssDatabases.services

    List of services entries to configure in /etc/nsswitch.conf.

    Note that "files" is always prepended.

    This option only takes effect if nscd is enabled.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21317]<nixpkgs/nixos/modules/config/nsswitch.nix>

[21318]system.nssDatabases.shadow

    List of shadow entries to configure in /etc/nsswitch.conf.

    Note that "files" is always prepended.

    This option only takes effect if nscd is enabled.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21319]<nixpkgs/nixos/modules/config/nsswitch.nix>

[21320]system.replaceRuntimeDependencies

    List of packages to override without doing a full rebuild. The original derivation and
    replacement derivation must have the same name length, and ideally should have
    close-to-identical directory layout.

    Type: list of submodules

    Default: [ ]

    Example:

    [ ({ original = pkgs.openssl; replacement = pkgs.callPackage /path/to/openssl { }; }) ]

    Declared by:

    [21321]<nixpkgs/nixos/modules/system/activation/top-level.nix>

[21322]system.replaceRuntimeDependencies.*.original

    The original package to override.

    Type: package

    Declared by:

    [21323]<nixpkgs/nixos/modules/system/activation/top-level.nix>

[21324]system.replaceRuntimeDependencies.*.replacement

    The replacement package.

    Type: package

    Declared by:

    [21325]<nixpkgs/nixos/modules/system/activation/top-level.nix>

[21326]system.stateVersion

    Every once in a while, a new NixOS release may change configuration defaults in a way
    incompatible with stateful data. For instance, if the default version of PostgreSQL changes,
    the new version will probably be unable to read your existing databases. To prevent such
    breakage, you should set the value of this option to the NixOS release with which you want to
    be compatible. The effect is that NixOS will use defaults corresponding to the specified
    release (such as using an older version of PostgreSQL). It‘s perfectly fine and recommended
    to leave this value at the release version of the first install of this system. Changing this
    option will not upgrade your system. In fact it is meant to stay constant exactly when you
    upgrade your system. You should only bump this option, if you are sure that you can or have
    migrated all state on your system which is affected by this option.

    Type: string

    Default: "21.05"

    Declared by:

    [21327]<nixpkgs/nixos/modules/misc/version.nix>

[21328]system.userActivationScripts

    A set of shell script fragments that are executed by a systemd user service when a NixOS
    system configuration is activated. Examples are rebuilding the .desktop file cache for
    showing applications in the menu. Since these are executed every time you run nixos-rebuild,
    it's important that they are idempotent and fast.

    Type: attribute set of string or submodules

    Default: { }

    Example:

    { plasmaSetup = {
        text = ''
          ${pkgs.libsForQt5.kservice}/bin/kbuildsycoca5"
        '';
        deps = [];
      };
    }

    Declared by:

    [21329]<nixpkgs/nixos/modules/system/activation/activation-script.nix>

[21330]systemd.enableCgroupAccounting

    Whether to enable cgroup accounting.

    Type: boolean

    Default: true

    Declared by:

    [21331]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21332]systemd.enableEmergencyMode

    Whether to enable emergency mode, which is an sulogin shell started on the console if
    mounting a filesystem fails. Since some machines (like EC2 instances) have no console of any
    kind, emergency mode doesn't make sense, and it's better to continue with the boot insofar as
    possible.

    Type: boolean

    Default: true

    Declared by:

    [21333]<nixpkgs/nixos/modules/system/boot/emergency-mode.nix>

[21334]systemd.enableUnifiedCgroupHierarchy

    Whether to enable the unified cgroup hierarchy (cgroupsv2).

    Type: boolean

    Default: true

    Declared by:

    [21335]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21336]systemd.package

    The systemd package.

    Type: package

    Default: "pkgs.systemd"

    Declared by:

    [21337]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21338]systemd.packages

    Packages providing systemd units and hooks.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.systemd-cryptsetup-generator ]

    Declared by:

    [21339]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21340]systemd.additionalUpstreamSystemUnits

    Additional units shipped with systemd that shall be enabled.

    Type: list of strings

    Default: [ ]

    Example: [ "debug-shell.service" "systemd-quotacheck.service" ]

    Declared by:

    [21341]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21342]systemd.automounts

    Definition of systemd automount units. This is a list instead of an attrSet, because systemd
    mandates the names to be derived from the 'where' attribute.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [21343]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21344]systemd.automounts.*.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [21345]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21346]systemd.automounts.*.after

    If the specified units are started at the same time as this unit, delay this unit until they
    have started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21347]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21348]systemd.automounts.*.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21349]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21350]systemd.automounts.*.automountConfig

    Each attribute in this set specifies an option in the [Automount] section of the unit. See 
    systemd.automount(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { DirectoryMode = "0775"; }

    Declared by:

    [21351]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21352]systemd.automounts.*.before

    If the specified units are started at the same time as this unit, delay them until this unit
    has started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21353]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21354]systemd.automounts.*.bindsTo

    Like ‘requires’, but in addition, if the specified units unexpectedly disappear, this unit
    will be stopped as well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21355]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21356]systemd.automounts.*.conflicts

    If the specified units are started, then this unit is stopped and vice versa.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21357]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21358]systemd.automounts.*.description

    Description of this unit used in systemd messages and progress indicators.

    Type: string

    Default: ""

    Declared by:

    [21359]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21360]systemd.automounts.*.documentation

    A list of URIs referencing documentation for this unit or its configuration.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21361]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21362]systemd.automounts.*.onFailure

    A list of one or more units that are activated when this unit enters the "failed" state.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21363]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21364]systemd.automounts.*.partOf

    If the specified units are stopped or restarted, then this unit is stopped or restarted as
    well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21365]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21366]systemd.automounts.*.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21367]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21368]systemd.automounts.*.requires

    Start the specified units when this unit is started, and stop this unit when the specified
    units are stopped or fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21369]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21370]systemd.automounts.*.requisite

    Similar to requires. However if the units listed are not started, they will not be started
    and the transaction will fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21371]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21372]systemd.automounts.*.restartTriggers

    An arbitrary list of items such as derivations. If any item in the list changes between
    reconfigurations, the service will be restarted.

    Type: list of unspecifieds

    Default: [ ]

    Declared by:

    [21373]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21374]systemd.automounts.*.startLimitBurst

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21375]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21376]systemd.automounts.*.startLimitIntervalSec

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21377]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21378]systemd.automounts.*.unitConfig

    Each attribute in this set specifies an option in the [Unit] section of the unit. See 
    systemd.unit(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RequiresMountsFor = "/data"; }

    Declared by:

    [21379]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21380]systemd.automounts.*.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21381]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21382]systemd.automounts.*.wants

    Start the specified units when this unit is started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21383]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21384]systemd.automounts.*.where

    Absolute path of a directory of the mount point. Will be created if it doesn't exist.
    (Mandatory)

    Type: string

    Example: "/mnt"

    Declared by:

    [21385]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21386]systemd.coredump.enable

    Whether core dumps should be processed by systemd-coredump. If disabled, core dumps appear in
    the current directory of the crashing process.

    Type: boolean

    Default: true

    Declared by:

    [21387]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21388]systemd.coredump.extraConfig

    Extra config options for systemd-coredump. See coredump.conf(5) man page for available
    options.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "Storage=journal"

    Declared by:

    [21389]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21390]systemd.ctrlAltDelUnit

    Target that should be started when Ctrl-Alt-Delete is pressed.

    Type: string

    Default: "reboot.target"

    Example: "poweroff.target"

    Declared by:

    [21391]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21392]systemd.defaultUnit

    Default unit started when the system boots.

    Type: string

    Default: "multi-user.target"

    Declared by:

    [21393]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21394]systemd.extraConfig

    Extra config options for systemd. See man systemd-system.conf for available options.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "DefaultLimitCORE=infinity"

    Declared by:

    [21395]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21396]systemd.generators

    Definition of systemd generators. For each NAME = VALUE pair of the attrSet, a link is
    generated from /etc/systemd/system-generators/NAME to VALUE.

    Type: attribute set of paths

    Default: { }

    Example: { systemd-gpt-auto-generator = "/dev/null"; }

    Declared by:

    [21397]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21398]systemd.globalEnvironment

    Environment variables passed to all systemd units.

    Type: attribute set of null or string or path or packages

    Default: { }

    Example: { TZ = "CET"; }

    Declared by:

    [21399]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21400]systemd.mounts

    Definition of systemd mount units. This is a list instead of an attrSet, because systemd
    mandates the names to be derived from the 'where' attribute.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [21401]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21402]systemd.mounts.*.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [21403]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21404]systemd.mounts.*.after

    If the specified units are started at the same time as this unit, delay this unit until they
    have started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21405]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21406]systemd.mounts.*.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21407]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21408]systemd.mounts.*.before

    If the specified units are started at the same time as this unit, delay them until this unit
    has started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21409]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21410]systemd.mounts.*.bindsTo

    Like ‘requires’, but in addition, if the specified units unexpectedly disappear, this unit
    will be stopped as well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21411]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21412]systemd.mounts.*.conflicts

    If the specified units are started, then this unit is stopped and vice versa.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21413]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21414]systemd.mounts.*.description

    Description of this unit used in systemd messages and progress indicators.

    Type: string

    Default: ""

    Declared by:

    [21415]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21416]systemd.mounts.*.documentation

    A list of URIs referencing documentation for this unit or its configuration.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21417]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21418]systemd.mounts.*.mountConfig

    Each attribute in this set specifies an option in the [Mount] section of the unit. See 
    systemd.mount(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { DirectoryMode = "0775"; }

    Declared by:

    [21419]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21420]systemd.mounts.*.onFailure

    A list of one or more units that are activated when this unit enters the "failed" state.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21421]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21422]systemd.mounts.*.options

    Options used to mount the file system.

    Type: strings concatenated with ","

    Default: ""

    Example: "noatime"

    Declared by:

    [21423]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21424]systemd.mounts.*.partOf

    If the specified units are stopped or restarted, then this unit is stopped or restarted as
    well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21425]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21426]systemd.mounts.*.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21427]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21428]systemd.mounts.*.requires

    Start the specified units when this unit is started, and stop this unit when the specified
    units are stopped or fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21429]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21430]systemd.mounts.*.requisite

    Similar to requires. However if the units listed are not started, they will not be started
    and the transaction will fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21431]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21432]systemd.mounts.*.restartTriggers

    An arbitrary list of items such as derivations. If any item in the list changes between
    reconfigurations, the service will be restarted.

    Type: list of unspecifieds

    Default: [ ]

    Declared by:

    [21433]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21434]systemd.mounts.*.startLimitBurst

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21435]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21436]systemd.mounts.*.startLimitIntervalSec

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21437]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21438]systemd.mounts.*.type

    File system type.

    Type: string

    Default: ""

    Example: "ext4"

    Declared by:

    [21439]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21440]systemd.mounts.*.unitConfig

    Each attribute in this set specifies an option in the [Unit] section of the unit. See 
    systemd.unit(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RequiresMountsFor = "/data"; }

    Declared by:

    [21441]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21442]systemd.mounts.*.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21443]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21444]systemd.mounts.*.wants

    Start the specified units when this unit is started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21445]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21446]systemd.mounts.*.what

    Absolute path of device node, file or other resource. (Mandatory)

    Type: string

    Example: "/dev/sda1"

    Declared by:

    [21447]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21448]systemd.mounts.*.where

    Absolute path of a directory of the mount point. Will be created if it doesn't exist.
    (Mandatory)

    Type: string

    Example: "/mnt"

    Declared by:

    [21449]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21450]systemd.network.enable

    Whether to enable networkd or not.

    Type: boolean

    Default: false

    Declared by:

    [21451]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21452]systemd.network.links

    Definition of systemd network links.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [21453]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21454]systemd.network.links.<name>.enable

    Whether to enable this .link unit. It's handled by udev no matter if systemd-networkd is
    enabled or not

    Type: boolean

    Default: true

    Declared by:

    [21455]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21456]systemd.network.links.<name>.extraConfig

    Extra configuration append to unit

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21457]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21458]systemd.network.links.<name>.linkConfig

    Each attribute in this set specifies an option in the [Link] section of the unit. See 
    systemd.link(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { MACAddress = "00:ff:ee:aa:cc:dd"; }

    Declared by:

    [21459]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21460]systemd.network.links.<name>.matchConfig

    Each attribute in this set specifies an option in the [Match] section of the unit. See 
    systemd.link(5) systemd.netdev(5) systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Name = "eth0"; }

    Declared by:

    [21461]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21462]systemd.network.netdevs

    Definition of systemd network devices.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [21463]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21464]systemd.network.netdevs.<name>.enable

    Whether to manage network configuration using systemd-network.

    Type: boolean

    Default: true

    Declared by:

    [21465]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21466]systemd.network.netdevs.<name>.bondConfig

    Each attribute in this set specifies an option in the [Bond] section of the unit. See 
    systemd.netdev(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Mode = "802.3ad"; }

    Declared by:

    [21467]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21468]systemd.network.netdevs.<name>.extraConfig

    Extra configuration append to unit

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21469]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21470]systemd.network.netdevs.<name>.macvlanConfig

    Each attribute in this set specifies an option in the [MACVLAN] section of the unit. See 
    systemd.netdev(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Mode = "private"; }

    Declared by:

    [21471]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21472]systemd.network.netdevs.<name>.matchConfig

    Each attribute in this set specifies an option in the [Match] section of the unit. See 
    systemd.link(5) systemd.netdev(5) systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Name = "eth0"; }

    Declared by:

    [21473]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21474]systemd.network.netdevs.<name>.netdevConfig

    Each attribute in this set specifies an option in the [Netdev] section of the unit. See 
    systemd.netdev(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Kind = "bridge"; Name = "mybridge"; }

    Declared by:

    [21475]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21476]systemd.network.netdevs.<name>.peerConfig

    Each attribute in this set specifies an option in the [Peer] section of the unit. See 
    systemd.netdev(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Name = "veth2"; }

    Declared by:

    [21477]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21478]systemd.network.netdevs.<name>.tapConfig

    Each attribute in this set specifies an option in the [Tap] section of the unit. See 
    systemd.netdev(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { User = "openvpn"; }

    Declared by:

    [21479]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21480]systemd.network.netdevs.<name>.tunConfig

    Each attribute in this set specifies an option in the [Tun] section of the unit. See 
    systemd.netdev(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { User = "openvpn"; }

    Declared by:

    [21481]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21482]systemd.network.netdevs.<name>.tunnelConfig

    Each attribute in this set specifies an option in the [Tunnel] section of the unit. See 
    systemd.netdev(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Remote = "192.168.1.1"; }

    Declared by:

    [21483]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21484]systemd.network.netdevs.<name>.vlanConfig

    Each attribute in this set specifies an option in the [VLAN] section of the unit. See 
    systemd.netdev(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Id = 4; }

    Declared by:

    [21485]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21486]systemd.network.netdevs.<name>.vrfConfig

    Each attribute in this set specifies an option in the [VRF] section of the unit. See 
    systemd.netdev(5) for details. A detailed explanation about how VRFs work can be found in the
    [21487]kernel docs.

    Type: attribute set of systemd options

    Default: { }

    Example: { Table = 2342; }

    Declared by:

    [21488]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21489]systemd.network.netdevs.<name>.vxlanConfig

    Each attribute in this set specifies an option in the [VXLAN] section of the unit. See 
    systemd.netdev(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Id = "4"; }

    Declared by:

    [21490]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21491]systemd.network.netdevs.<name>.wireguardConfig

    Each attribute in this set specifies an option in the [WireGuard] section of the unit. See 
    systemd.netdev(5) for details. Use PrivateKeyFile instead of PrivateKey: the nix store is
    world-readable.

    Type: attribute set of systemd options

    Default: { }

    Example: { FwMark = 42; ListenPort = 51820; PrivateKeyFile = "/etc/wireguard/secret.key"; }

    Declared by:

    [21492]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21493]systemd.network.netdevs.<name>.wireguardPeers

    Each item in this array specifies an option in the [WireGuardPeer] section of the unit. See 
    systemd.netdev(5) for details. Use PresharedKeyFile instead of PresharedKey: the nix store is
    world-readable.

    Type: list of submodules

    Default: [ ]

    Example: [ { wireguardPeerConfig = { AllowedIPs = [ "10.0.0.1/32" ] ; Endpoint =
    "192.168.1.1:51820"; PersistentKeepalive = 15; PresharedKeyFile = "/etc/wireguard/psk.key";
    PublicKey = "27s0OvaBBdHoJYkH9osZpjpgSOVNw+RaKfboT/Sfq0g="; } ; } ]

    Declared by:

    [21494]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21495]systemd.network.netdevs.<name>.wireguardPeers.*.wireguardPeerConfig

    Each attribute in this set specifies an option in the [WireGuardPeer] section of the unit.
    See systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { }

    Declared by:

    [21496]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21497]systemd.network.netdevs.<name>.xfrmConfig

    Each attribute in this set specifies an option in the [Xfrm] section of the unit. See 
    systemd.netdev(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { InterfaceId = 1; }

    Declared by:

    [21498]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21499]systemd.network.networks

    Definition of systemd networks.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [21500]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21501]systemd.network.networks.<name>.enable

    Whether to manage network configuration using systemd-network.

    Type: boolean

    Default: true

    Declared by:

    [21502]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21503]systemd.network.networks.<name>.DHCP

    Whether to enable DHCP on the interfaces matched.

    Type: null or string

    Default: null

    Declared by:

    [21504]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21505]systemd.network.networks.<name>.address

    A list of addresses to be added to the network section of the unit. See systemd.network(5)
    for details.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21506]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21507]systemd.network.networks.<name>.addresses

    A list of address sections to be added to the unit. See systemd.network(5) for details.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [21508]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21509]systemd.network.networks.<name>.addresses.*.addressConfig

    Each attribute in this set specifies an option in the [Address] section of the unit. See 
    systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Address = "192.168.0.100/24"; }

    Declared by:

    [21510]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21511]systemd.network.networks.<name>.bond

    A list of bond interfaces to be added to the network section of the unit. See systemd.network
    (5) for details.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21512]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21513]systemd.network.networks.<name>.bridge

    A list of bridge interfaces to be added to the network section of the unit. See 
    systemd.network(5) for details.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21514]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21515]systemd.network.networks.<name>.dhcpServerConfig

    Each attribute in this set specifies an option in the [DHCPServer] section of the unit. See 
    systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { EmitDNS = false; PoolOffset = 50; }

    Declared by:

    [21516]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21517]systemd.network.networks.<name>.dhcpV4Config

    Each attribute in this set specifies an option in the [DHCPv4] section of the unit. See 
    systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { UseDNS = true; UseRoutes = true; }

    Declared by:

    [21518]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21519]systemd.network.networks.<name>.dhcpV6Config

    Each attribute in this set specifies an option in the [DHCPv6] section of the unit. See 
    systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { UseDNS = true; UseRoutes = true; }

    Declared by:

    [21520]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21521]systemd.network.networks.<name>.dhcpV6PrefixDelegationConfig

    Each attribute in this set specifies an option in the [DHCPv6PrefixDelegation] section of the
    unit. See systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Announce = true; SubnetId = "auto"; }

    Declared by:

    [21522]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21523]systemd.network.networks.<name>.dns

    A list of dns servers to be added to the network section of the unit. See systemd.network(5)
    for details.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21524]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21525]systemd.network.networks.<name>.domains

    A list of domains to pass to the network config.

    Type: null or list of strings

    Default: null

    Declared by:

    [21526]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21527]systemd.network.networks.<name>.extraConfig

    Extra configuration append to unit

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21528]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21529]systemd.network.networks.<name>.gateway

    A list of gateways to be added to the network section of the unit. See systemd.network(5) for
    details.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21530]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21531]systemd.network.networks.<name>.ipv6AcceptRAConfig

    Each attribute in this set specifies an option in the [IPv6AcceptRA] section of the unit. See
    systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { DHCPv6Client = "always"; UseDNS = true; }

    Declared by:

    [21532]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21533]systemd.network.networks.<name>.ipv6Prefixes

    A list of ipv6Prefix sections to be added to the unit. See systemd.network(5) for details.

    Type: list of submodules

    Default: [ ]

    Example: { AddressAutoconfiguration = true; OnLink = true; }

    Declared by:

    [21534]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21535]systemd.network.networks.<name>.ipv6Prefixes.*.ipv6PrefixConfig

    Each attribute in this set specifies an option in the [IPv6Prefix] section of the unit. See 
    systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Prefix = "fd00::/64"; }

    Declared by:

    [21536]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21537]systemd.network.networks.<name>.ipv6SendRAConfig

    Each attribute in this set specifies an option in the [IPv6SendRA] section of the unit. See 
    systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { EmitDNS = true; Managed = true; OtherInformation = true; }

    Declared by:

    [21538]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21539]systemd.network.networks.<name>.linkConfig

    Each attribute in this set specifies an option in the [Link] section of the unit. See 
    systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Unmanaged = true; }

    Declared by:

    [21540]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21541]systemd.network.networks.<name>.macvlan

    A list of macvlan interfaces to be added to the network section of the unit. See 
    systemd.network(5) for details.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21542]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21543]systemd.network.networks.<name>.matchConfig

    Each attribute in this set specifies an option in the [Match] section of the unit. See 
    systemd.link(5) systemd.netdev(5) systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Name = "eth0"; }

    Declared by:

    [21544]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21545]systemd.network.networks.<name>.name

    The name of the network interface to match against.

    Type: null or string

    Default: null

    Declared by:

    [21546]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21547]systemd.network.networks.<name>.networkConfig

    Each attribute in this set specifies an option in the [Network] section of the unit. See 
    systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Description = "My Network"; }

    Declared by:

    [21548]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21549]systemd.network.networks.<name>.ntp

    A list of ntp servers to be added to the network section of the unit. See systemd.network(5)
    for details.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21550]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21551]systemd.network.networks.<name>.routes

    A list of route sections to be added to the unit. See systemd.network(5) for details.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [21552]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21553]systemd.network.networks.<name>.routes.*.routeConfig

    Each attribute in this set specifies an option in the [Route] section of the unit. See 
    systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Gateway = "192.168.0.1"; }

    Declared by:

    [21554]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21555]systemd.network.networks.<name>.routingPolicyRules

    A list of routing policy rules sections to be added to the unit. See systemd.network(5) for
    details.

    Type: list of submodules

    Default: [ ]

    Declared by:

    [21556]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21557]systemd.network.networks.<name>.routingPolicyRules.*.routingPolicyRuleConfig

    Each attribute in this set specifies an option in the [RoutingPolicyRule] section of the
    unit. See systemd.network(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { routingPolicyRuleConfig = { Family = "both"; IncomingInterface = "eth1"; Table =
    10; } ; }

    Declared by:

    [21558]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21559]systemd.network.networks.<name>.tunnel

    A list of tunnel interfaces to be added to the network section of the unit. See 
    systemd.network(5) for details.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21560]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21561]systemd.network.networks.<name>.vlan

    A list of vlan interfaces to be added to the network section of the unit. See systemd.network
    (5) for details.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21562]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21563]systemd.network.networks.<name>.vrf

    A list of vrf interfaces to be added to the network section of the unit. See systemd.network
    (5) for details.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21564]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21565]systemd.network.networks.<name>.vxlan

    A list of vxlan interfaces to be added to the network section of the unit. See 
    systemd.network(5) for details.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21566]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21567]systemd.network.networks.<name>.xfrm

    A list of xfrm interfaces to be added to the network section of the unit. See systemd.network
    (5) for details.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21568]<nixpkgs/nixos/modules/system/boot/networkd.nix>

[21569]systemd.nspawn

    Definition of systemd-nspawn configurations.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [21570]<nixpkgs/nixos/modules/system/boot/systemd-nspawn.nix>

[21571]systemd.nspawn.<name>.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [21572]<nixpkgs/nixos/modules/system/boot/systemd-nspawn.nix>

[21573]systemd.nspawn.<name>.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21574]<nixpkgs/nixos/modules/system/boot/systemd-nspawn.nix>

[21575]systemd.nspawn.<name>.execConfig

    Each attribute in this set specifies an option in the [Exec] section of this unit. See 
    systemd.nspawn(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Parameters = "/bin/sh"; }

    Declared by:

    [21576]<nixpkgs/nixos/modules/system/boot/systemd-nspawn.nix>

[21577]systemd.nspawn.<name>.filesConfig

    Each attribute in this set specifies an option in the [Files] section of this unit. See 
    systemd.nspawn(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Bind = [ "/home/alice" ] ; }

    Declared by:

    [21578]<nixpkgs/nixos/modules/system/boot/systemd-nspawn.nix>

[21579]systemd.nspawn.<name>.networkConfig

    Each attribute in this set specifies an option in the [Network] section of this unit. See 
    systemd.nspawn(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { Private = false; }

    Declared by:

    [21580]<nixpkgs/nixos/modules/system/boot/systemd-nspawn.nix>

[21581]systemd.nspawn.<name>.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21582]<nixpkgs/nixos/modules/system/boot/systemd-nspawn.nix>

[21583]systemd.nspawn.<name>.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21584]<nixpkgs/nixos/modules/system/boot/systemd-nspawn.nix>

[21585]systemd.paths

    Definition of systemd path units.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [21586]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21587]systemd.paths.<name>.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [21588]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21589]systemd.paths.<name>.after

    If the specified units are started at the same time as this unit, delay this unit until they
    have started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21590]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21591]systemd.paths.<name>.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21592]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21593]systemd.paths.<name>.before

    If the specified units are started at the same time as this unit, delay them until this unit
    has started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21594]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21595]systemd.paths.<name>.bindsTo

    Like ‘requires’, but in addition, if the specified units unexpectedly disappear, this unit
    will be stopped as well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21596]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21597]systemd.paths.<name>.conflicts

    If the specified units are started, then this unit is stopped and vice versa.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21598]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21599]systemd.paths.<name>.description

    Description of this unit used in systemd messages and progress indicators.

    Type: string

    Default: ""

    Declared by:

    [21600]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21601]systemd.paths.<name>.documentation

    A list of URIs referencing documentation for this unit or its configuration.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21602]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21603]systemd.paths.<name>.onFailure

    A list of one or more units that are activated when this unit enters the "failed" state.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21604]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21605]systemd.paths.<name>.partOf

    If the specified units are stopped or restarted, then this unit is stopped or restarted as
    well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21606]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21607]systemd.paths.<name>.pathConfig

    Each attribute in this set specifies an option in the [Path] section of the unit. See 
    systemd.path(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { PathChanged = "/some/path"; Unit = "changedpath.service"; }

    Declared by:

    [21608]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21609]systemd.paths.<name>.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21610]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21611]systemd.paths.<name>.requires

    Start the specified units when this unit is started, and stop this unit when the specified
    units are stopped or fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21612]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21613]systemd.paths.<name>.requisite

    Similar to requires. However if the units listed are not started, they will not be started
    and the transaction will fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21614]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21615]systemd.paths.<name>.restartTriggers

    An arbitrary list of items such as derivations. If any item in the list changes between
    reconfigurations, the service will be restarted.

    Type: list of unspecifieds

    Default: [ ]

    Declared by:

    [21616]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21617]systemd.paths.<name>.startLimitBurst

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21618]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21619]systemd.paths.<name>.startLimitIntervalSec

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21620]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21621]systemd.paths.<name>.unitConfig

    Each attribute in this set specifies an option in the [Unit] section of the unit. See 
    systemd.unit(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RequiresMountsFor = "/data"; }

    Declared by:

    [21622]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21623]systemd.paths.<name>.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21624]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21625]systemd.paths.<name>.wants

    Start the specified units when this unit is started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21626]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21627]systemd.services

    Definition of systemd service units.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [21628]<nixpkgs/nixos/modules/testing/service-runner.nix>
    [21629]<nixpkgs/nixos/modules/system/boot/systemd.nix>
    [21630]<nixpkgs/nixos/modules/security/systemd-confinement.nix>

[21631]systemd.services.<name>.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [21632]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21633]systemd.services.<name>.after

    If the specified units are started at the same time as this unit, delay this unit until they
    have started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21634]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21635]systemd.services.<name>.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21636]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21637]systemd.services.<name>.before

    If the specified units are started at the same time as this unit, delay them until this unit
    has started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21638]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21639]systemd.services.<name>.bindsTo

    Like ‘requires’, but in addition, if the specified units unexpectedly disappear, this unit
    will be stopped as well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21640]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21641]systemd.services.<name>.confinement.enable

    If set, all the required runtime store paths for this service are bind-mounted into a
    tmpfs-based chroot(2).

    Type: boolean

    Default: false

    Declared by:

    [21642]<nixpkgs/nixos/modules/security/systemd-confinement.nix>

[21643]systemd.services.<name>.confinement.packages

    Additional packages or strings with context to add to the closure of the chroot. By default,
    this includes all the packages from the serviceConfig.ExecReload,
    serviceConfig.ExecStartPost, serviceConfig.ExecStartPre, serviceConfig.ExecStop,
    serviceConfig.ExecStopPost and serviceConfig.ExecStart options. If you want to have all the
    dependencies of this systemd unit, you can use confinement.fullUnit.

    Note: The store paths listed in path are not included in the closure as well as paths from
    other options except those listed above.

    Type: list of string or packages

    Default: [ ]

    Declared by:

    [21644]<nixpkgs/nixos/modules/security/systemd-confinement.nix>

[21645]systemd.services.<name>.confinement.binSh

    The program to make available as /bin/sh inside the chroot. If this is set to null, no /bin/
    sh is provided at all.

    This is useful for some applications, which for example use the system(3) library function to
    execute commands.

    Type: null or path

    Default: "config.environment.binsh"

    Example:

    ${pkgs.dash}/bin/dash

    Declared by:

    [21646]<nixpkgs/nixos/modules/security/systemd-confinement.nix>

[21647]systemd.services.<name>.confinement.fullUnit

    Whether to include the full closure of the systemd unit file into the chroot, instead of just
    the dependencies for the executables.

    Warning: While it may be tempting to just enable this option to make things work quickly,
    please be aware that this might add paths to the closure of the chroot that you didn't
    anticipate. It's better to use confinement.packages to explicitly add additional store paths
    to the chroot.

    Type: boolean

    Default: false

    Declared by:

    [21648]<nixpkgs/nixos/modules/security/systemd-confinement.nix>

[21649]systemd.services.<name>.confinement.mode

    The value full-apivfs (the default) sets up private /dev, /proc, /sys and /tmp file systems
    in a separate user name space.

    If this is set to chroot-only, only the file system name space is set up along with the call
    to chroot(2).

    Note: This doesn't cover network namespaces and is solely for file system level isolation.

    Type: one of "full-apivfs", "chroot-only"

    Default: "full-apivfs"

    Declared by:

    [21650]<nixpkgs/nixos/modules/security/systemd-confinement.nix>

[21651]systemd.services.<name>.conflicts

    If the specified units are started, then this unit is stopped and vice versa.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21652]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21653]systemd.services.<name>.description

    Description of this unit used in systemd messages and progress indicators.

    Type: string

    Default: ""

    Declared by:

    [21654]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21655]systemd.services.<name>.documentation

    A list of URIs referencing documentation for this unit or its configuration.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21656]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21657]systemd.services.<name>.environment

    Environment variables passed to the service's processes.

    Type: attribute set of null or string or path or packages

    Default: { }

    Example: { LANG = "nl_NL.UTF-8"; PATH = "/foo/bar/bin"; }

    Declared by:

    [21658]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21659]systemd.services.<name>.onFailure

    A list of one or more units that are activated when this unit enters the "failed" state.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21660]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21661]systemd.services.<name>.partOf

    If the specified units are stopped or restarted, then this unit is stopped or restarted as
    well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21662]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21663]systemd.services.<name>.path

    Packages added to the service's PATH environment variable. Both the bin and sbin
    subdirectories of each package are added.

    Type: list of package or strings

    Default: [ ]

    Declared by:

    [21664]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21665]systemd.services.<name>.postStart

    Shell commands executed after the service's main process is started.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21666]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21667]systemd.services.<name>.postStop

    Shell commands executed after the service's main process has exited.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21668]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21669]systemd.services.<name>.preStart

    Shell commands executed before the service's main process is started.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21670]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21671]systemd.services.<name>.preStop

    Shell commands executed to stop the service.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21672]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21673]systemd.services.<name>.reload

    Shell commands executed when the service's main process is reloaded.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21674]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21675]systemd.services.<name>.reloadIfChanged

    Whether the service should be reloaded during a NixOS configuration switch if its definition
    has changed. If enabled, the value of restartIfChanged is ignored.

    Type: boolean

    Default: false

    Declared by:

    [21676]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21677]systemd.services.<name>.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21678]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21679]systemd.services.<name>.requires

    Start the specified units when this unit is started, and stop this unit when the specified
    units are stopped or fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21680]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21681]systemd.services.<name>.requisite

    Similar to requires. However if the units listed are not started, they will not be started
    and the transaction will fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21682]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21683]systemd.services.<name>.restartIfChanged

    Whether the service should be restarted during a NixOS configuration switch if its definition
    has changed.

    Type: boolean

    Default: true

    Declared by:

    [21684]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21685]systemd.services.<name>.restartTriggers

    An arbitrary list of items such as derivations. If any item in the list changes between
    reconfigurations, the service will be restarted.

    Type: list of unspecifieds

    Default: [ ]

    Declared by:

    [21686]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21687]systemd.services.<name>.script

    Shell commands executed as the service's main process.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21688]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21689]systemd.services.<name>.scriptArgs

    Arguments passed to the main process script.

    Type: string

    Default: ""

    Declared by:

    [21690]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21691]systemd.services.<name>.serviceConfig

    Each attribute in this set specifies an option in the [Service] section of the unit. See 
    systemd.service(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RestartSec = 5; }

    Declared by:

    [21692]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21693]systemd.services.<name>.startAt

    Automatically start this unit at the given date/time, which must be in the format described
    in systemd.time(7). This is equivalent to adding a corresponding timer unit with OnCalendar
    set to the value given here.

    Type: string or list of strings

    Default: [ ]

    Example: "Sun 14:00:00"

    Declared by:

    [21694]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21695]systemd.services.<name>.startLimitBurst

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21696]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21697]systemd.services.<name>.startLimitIntervalSec

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21698]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21699]systemd.services.<name>.stopIfChanged

    If set, a changed unit is restarted by calling systemctl stop in the old configuration, then 
    systemctl start in the new one. Otherwise, it is restarted in a single step using systemctl
    restart in the new configuration. The latter is less correct because it runs the ExecStop
    commands from the new configuration.

    Type: boolean

    Default: true

    Declared by:

    [21700]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21701]systemd.services.<name>.unitConfig

    Each attribute in this set specifies an option in the [Unit] section of the unit. See 
    systemd.unit(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RequiresMountsFor = "/data"; }

    Declared by:

    [21702]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21703]systemd.services.<name>.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21704]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21705]systemd.services.<name>.wants

    Start the specified units when this unit is started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21706]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21707]systemd.shutdown

    Definition of systemd shutdown executables. For each NAME = VALUE pair of the attrSet, a link
    is generated from /etc/systemd/system-shutdown/NAME to VALUE.

    Type: attribute set of paths

    Default: { }

    Declared by:

    [21708]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21709]systemd.sleep.extraConfig

    Extra config options for systemd sleep state logic. See sleep.conf.d(5) man page for
    available options.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "HibernateDelaySec=1h"

    Declared by:

    [21710]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21711]systemd.slices

    Definition of slice configurations.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [21712]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21713]systemd.slices.<name>.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [21714]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21715]systemd.slices.<name>.after

    If the specified units are started at the same time as this unit, delay this unit until they
    have started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21716]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21717]systemd.slices.<name>.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21718]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21719]systemd.slices.<name>.before

    If the specified units are started at the same time as this unit, delay them until this unit
    has started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21720]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21721]systemd.slices.<name>.bindsTo

    Like ‘requires’, but in addition, if the specified units unexpectedly disappear, this unit
    will be stopped as well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21722]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21723]systemd.slices.<name>.conflicts

    If the specified units are started, then this unit is stopped and vice versa.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21724]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21725]systemd.slices.<name>.description

    Description of this unit used in systemd messages and progress indicators.

    Type: string

    Default: ""

    Declared by:

    [21726]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21727]systemd.slices.<name>.documentation

    A list of URIs referencing documentation for this unit or its configuration.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21728]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21729]systemd.slices.<name>.onFailure

    A list of one or more units that are activated when this unit enters the "failed" state.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21730]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21731]systemd.slices.<name>.partOf

    If the specified units are stopped or restarted, then this unit is stopped or restarted as
    well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21732]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21733]systemd.slices.<name>.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21734]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21735]systemd.slices.<name>.requires

    Start the specified units when this unit is started, and stop this unit when the specified
    units are stopped or fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21736]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21737]systemd.slices.<name>.requisite

    Similar to requires. However if the units listed are not started, they will not be started
    and the transaction will fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21738]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21739]systemd.slices.<name>.restartTriggers

    An arbitrary list of items such as derivations. If any item in the list changes between
    reconfigurations, the service will be restarted.

    Type: list of unspecifieds

    Default: [ ]

    Declared by:

    [21740]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21741]systemd.slices.<name>.sliceConfig

    Each attribute in this set specifies an option in the [Slice] section of the unit. See 
    systemd.slice(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { MemoryMax = "2G"; }

    Declared by:

    [21742]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21743]systemd.slices.<name>.startLimitBurst

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21744]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21745]systemd.slices.<name>.startLimitIntervalSec

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21746]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21747]systemd.slices.<name>.unitConfig

    Each attribute in this set specifies an option in the [Unit] section of the unit. See 
    systemd.unit(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RequiresMountsFor = "/data"; }

    Declared by:

    [21748]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21749]systemd.slices.<name>.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21750]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21751]systemd.slices.<name>.wants

    Start the specified units when this unit is started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21752]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21753]systemd.sockets

    Definition of systemd socket units.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [21754]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21755]systemd.sockets.<name>.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [21756]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21757]systemd.sockets.<name>.after

    If the specified units are started at the same time as this unit, delay this unit until they
    have started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21758]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21759]systemd.sockets.<name>.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21760]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21761]systemd.sockets.<name>.before

    If the specified units are started at the same time as this unit, delay them until this unit
    has started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21762]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21763]systemd.sockets.<name>.bindsTo

    Like ‘requires’, but in addition, if the specified units unexpectedly disappear, this unit
    will be stopped as well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21764]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21765]systemd.sockets.<name>.conflicts

    If the specified units are started, then this unit is stopped and vice versa.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21766]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21767]systemd.sockets.<name>.description

    Description of this unit used in systemd messages and progress indicators.

    Type: string

    Default: ""

    Declared by:

    [21768]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21769]systemd.sockets.<name>.documentation

    A list of URIs referencing documentation for this unit or its configuration.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21770]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21771]systemd.sockets.<name>.listenDatagrams

    For each item in this list, a ListenDatagram option in the [Socket] section will be created.

    Type: list of strings

    Default: [ ]

    Example: [ "0.0.0.0:993" "/run/my-socket" ]

    Declared by:

    [21772]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21773]systemd.sockets.<name>.listenStreams

    For each item in this list, a ListenStream option in the [Socket] section will be created.

    Type: list of strings

    Default: [ ]

    Example: [ "0.0.0.0:993" "/run/my-socket" ]

    Declared by:

    [21774]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21775]systemd.sockets.<name>.onFailure

    A list of one or more units that are activated when this unit enters the "failed" state.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21776]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21777]systemd.sockets.<name>.partOf

    If the specified units are stopped or restarted, then this unit is stopped or restarted as
    well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21778]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21779]systemd.sockets.<name>.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21780]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21781]systemd.sockets.<name>.requires

    Start the specified units when this unit is started, and stop this unit when the specified
    units are stopped or fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21782]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21783]systemd.sockets.<name>.requisite

    Similar to requires. However if the units listed are not started, they will not be started
    and the transaction will fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21784]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21785]systemd.sockets.<name>.restartTriggers

    An arbitrary list of items such as derivations. If any item in the list changes between
    reconfigurations, the service will be restarted.

    Type: list of unspecifieds

    Default: [ ]

    Declared by:

    [21786]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21787]systemd.sockets.<name>.socketConfig

    Each attribute in this set specifies an option in the [Socket] section of the unit. See 
    systemd.socket(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { ListenStream = "/run/my-socket"; }

    Declared by:

    [21788]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21789]systemd.sockets.<name>.startLimitBurst

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21790]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21791]systemd.sockets.<name>.startLimitIntervalSec

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21792]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21793]systemd.sockets.<name>.unitConfig

    Each attribute in this set specifies an option in the [Unit] section of the unit. See 
    systemd.unit(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RequiresMountsFor = "/data"; }

    Declared by:

    [21794]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21795]systemd.sockets.<name>.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21796]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21797]systemd.sockets.<name>.wants

    Start the specified units when this unit is started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21798]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21799]systemd.suppressedSystemUnits

    A list of units to suppress when generating system systemd configuration directory. This has
    priority over upstream units, systemd.units, and systemd.additionalUpstreamSystemUnits. The
    main purpose of this is to suppress a upstream systemd unit with any modifications made to it
    by other NixOS modules.

    Type: list of strings

    Default: [ ]

    Example: [ "systemd-backlight@.service" ]

    Declared by:

    [21800]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21801]systemd.targets

    Definition of systemd target units.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [21802]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21803]systemd.targets.<name>.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [21804]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21805]systemd.targets.<name>.after

    If the specified units are started at the same time as this unit, delay this unit until they
    have started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21806]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21807]systemd.targets.<name>.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21808]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21809]systemd.targets.<name>.before

    If the specified units are started at the same time as this unit, delay them until this unit
    has started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21810]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21811]systemd.targets.<name>.bindsTo

    Like ‘requires’, but in addition, if the specified units unexpectedly disappear, this unit
    will be stopped as well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21812]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21813]systemd.targets.<name>.conflicts

    If the specified units are started, then this unit is stopped and vice versa.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21814]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21815]systemd.targets.<name>.description

    Description of this unit used in systemd messages and progress indicators.

    Type: string

    Default: ""

    Declared by:

    [21816]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21817]systemd.targets.<name>.documentation

    A list of URIs referencing documentation for this unit or its configuration.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21818]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21819]systemd.targets.<name>.onFailure

    A list of one or more units that are activated when this unit enters the "failed" state.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21820]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21821]systemd.targets.<name>.partOf

    If the specified units are stopped or restarted, then this unit is stopped or restarted as
    well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21822]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21823]systemd.targets.<name>.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21824]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21825]systemd.targets.<name>.requires

    Start the specified units when this unit is started, and stop this unit when the specified
    units are stopped or fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21826]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21827]systemd.targets.<name>.requisite

    Similar to requires. However if the units listed are not started, they will not be started
    and the transaction will fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21828]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21829]systemd.targets.<name>.restartTriggers

    An arbitrary list of items such as derivations. If any item in the list changes between
    reconfigurations, the service will be restarted.

    Type: list of unspecifieds

    Default: [ ]

    Declared by:

    [21830]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21831]systemd.targets.<name>.startLimitBurst

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21832]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21833]systemd.targets.<name>.startLimitIntervalSec

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21834]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21835]systemd.targets.<name>.unitConfig

    Each attribute in this set specifies an option in the [Unit] section of the unit. See 
    systemd.unit(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RequiresMountsFor = "/data"; }

    Declared by:

    [21836]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21837]systemd.targets.<name>.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21838]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21839]systemd.targets.<name>.wants

    Start the specified units when this unit is started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21840]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21841]systemd.timers

    Definition of systemd timer units.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [21842]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21843]systemd.timers.<name>.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [21844]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21845]systemd.timers.<name>.after

    If the specified units are started at the same time as this unit, delay this unit until they
    have started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21846]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21847]systemd.timers.<name>.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21848]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21849]systemd.timers.<name>.before

    If the specified units are started at the same time as this unit, delay them until this unit
    has started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21850]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21851]systemd.timers.<name>.bindsTo

    Like ‘requires’, but in addition, if the specified units unexpectedly disappear, this unit
    will be stopped as well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21852]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21853]systemd.timers.<name>.conflicts

    If the specified units are started, then this unit is stopped and vice versa.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21854]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21855]systemd.timers.<name>.description

    Description of this unit used in systemd messages and progress indicators.

    Type: string

    Default: ""

    Declared by:

    [21856]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21857]systemd.timers.<name>.documentation

    A list of URIs referencing documentation for this unit or its configuration.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21858]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21859]systemd.timers.<name>.onFailure

    A list of one or more units that are activated when this unit enters the "failed" state.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21860]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21861]systemd.timers.<name>.partOf

    If the specified units are stopped or restarted, then this unit is stopped or restarted as
    well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21862]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21863]systemd.timers.<name>.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21864]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21865]systemd.timers.<name>.requires

    Start the specified units when this unit is started, and stop this unit when the specified
    units are stopped or fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21866]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21867]systemd.timers.<name>.requisite

    Similar to requires. However if the units listed are not started, they will not be started
    and the transaction will fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21868]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21869]systemd.timers.<name>.restartTriggers

    An arbitrary list of items such as derivations. If any item in the list changes between
    reconfigurations, the service will be restarted.

    Type: list of unspecifieds

    Default: [ ]

    Declared by:

    [21870]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21871]systemd.timers.<name>.startLimitBurst

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21872]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21873]systemd.timers.<name>.startLimitIntervalSec

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21874]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21875]systemd.timers.<name>.timerConfig

    Each attribute in this set specifies an option in the [Timer] section of the unit. See 
    systemd.timer(5) and systemd.time(7) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { OnCalendar = "Sun 14:00:00"; Unit = "foo.service"; }

    Declared by:

    [21876]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21877]systemd.timers.<name>.unitConfig

    Each attribute in this set specifies an option in the [Unit] section of the unit. See 
    systemd.unit(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RequiresMountsFor = "/data"; }

    Declared by:

    [21878]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21879]systemd.timers.<name>.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21880]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21881]systemd.timers.<name>.wants

    Start the specified units when this unit is started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21882]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21883]systemd.tmpfiles.packages

    List of packages containing systemd-tmpfiles rules.

    All files ending in .conf found in pkg/lib/tmpfiles.d will be included. If this folder does
    not exist or does not contain any files an error will be returned instead.

    If a lib output is available, rules are searched there and only there. If there is no lib
    output it will fall back to out and if that does not exist either, the default output will be
    used.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.lvm2 ]

    Declared by:

    [21884]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21885]systemd.tmpfiles.rules

    Rules for creating and cleaning up temporary files automatically. See tmpfiles.d(5) for the
    exact format.

    Type: list of strings

    Default: [ ]

    Example: [ "d /tmp 1777 root root 10d" ]

    Declared by:

    [21886]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21887]systemd.units

    Definition of systemd units.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [21888]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21889]systemd.units.<name>.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [21890]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21891]systemd.units.<name>.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21892]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21893]systemd.units.<name>.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21894]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21895]systemd.units.<name>.text

    Text of this systemd unit.

    Type: null or string

    Default: null

    Declared by:

    [21896]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21897]systemd.units.<name>.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21898]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21899]systemd.user.extraConfig

    Extra config options for systemd user instances. See man systemd-user.conf for available
    options.

    Type: strings concatenated with "\n"

    Default: ""

    Example: "DefaultCPUAccounting=yes"

    Declared by:

    [21900]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21901]systemd.user.paths

    Definition of systemd per-user path units.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [21902]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21903]systemd.user.paths.<name>.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [21904]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21905]systemd.user.paths.<name>.after

    If the specified units are started at the same time as this unit, delay this unit until they
    have started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21906]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21907]systemd.user.paths.<name>.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21908]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21909]systemd.user.paths.<name>.before

    If the specified units are started at the same time as this unit, delay them until this unit
    has started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21910]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21911]systemd.user.paths.<name>.bindsTo

    Like ‘requires’, but in addition, if the specified units unexpectedly disappear, this unit
    will be stopped as well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21912]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21913]systemd.user.paths.<name>.conflicts

    If the specified units are started, then this unit is stopped and vice versa.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21914]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21915]systemd.user.paths.<name>.description

    Description of this unit used in systemd messages and progress indicators.

    Type: string

    Default: ""

    Declared by:

    [21916]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21917]systemd.user.paths.<name>.documentation

    A list of URIs referencing documentation for this unit or its configuration.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21918]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21919]systemd.user.paths.<name>.onFailure

    A list of one or more units that are activated when this unit enters the "failed" state.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21920]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21921]systemd.user.paths.<name>.partOf

    If the specified units are stopped or restarted, then this unit is stopped or restarted as
    well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21922]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21923]systemd.user.paths.<name>.pathConfig

    Each attribute in this set specifies an option in the [Path] section of the unit. See 
    systemd.path(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { PathChanged = "/some/path"; Unit = "changedpath.service"; }

    Declared by:

    [21924]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21925]systemd.user.paths.<name>.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21926]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21927]systemd.user.paths.<name>.requires

    Start the specified units when this unit is started, and stop this unit when the specified
    units are stopped or fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21928]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21929]systemd.user.paths.<name>.requisite

    Similar to requires. However if the units listed are not started, they will not be started
    and the transaction will fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21930]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21931]systemd.user.paths.<name>.restartTriggers

    An arbitrary list of items such as derivations. If any item in the list changes between
    reconfigurations, the service will be restarted.

    Type: list of unspecifieds

    Default: [ ]

    Declared by:

    [21932]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21933]systemd.user.paths.<name>.startLimitBurst

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21934]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21935]systemd.user.paths.<name>.startLimitIntervalSec

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [21936]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21937]systemd.user.paths.<name>.unitConfig

    Each attribute in this set specifies an option in the [Unit] section of the unit. See 
    systemd.unit(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RequiresMountsFor = "/data"; }

    Declared by:

    [21938]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21939]systemd.user.paths.<name>.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21940]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21941]systemd.user.paths.<name>.wants

    Start the specified units when this unit is started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21942]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21943]systemd.user.services

    Definition of systemd per-user service units.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [21944]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21945]systemd.user.services.<name>.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [21946]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21947]systemd.user.services.<name>.after

    If the specified units are started at the same time as this unit, delay this unit until they
    have started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21948]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21949]systemd.user.services.<name>.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21950]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21951]systemd.user.services.<name>.before

    If the specified units are started at the same time as this unit, delay them until this unit
    has started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21952]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21953]systemd.user.services.<name>.bindsTo

    Like ‘requires’, but in addition, if the specified units unexpectedly disappear, this unit
    will be stopped as well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21954]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21955]systemd.user.services.<name>.conflicts

    If the specified units are started, then this unit is stopped and vice versa.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21956]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21957]systemd.user.services.<name>.description

    Description of this unit used in systemd messages and progress indicators.

    Type: string

    Default: ""

    Declared by:

    [21958]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21959]systemd.user.services.<name>.documentation

    A list of URIs referencing documentation for this unit or its configuration.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21960]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21961]systemd.user.services.<name>.environment

    Environment variables passed to the service's processes.

    Type: attribute set of null or string or path or packages

    Default: { }

    Example: { LANG = "nl_NL.UTF-8"; PATH = "/foo/bar/bin"; }

    Declared by:

    [21962]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21963]systemd.user.services.<name>.onFailure

    A list of one or more units that are activated when this unit enters the "failed" state.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21964]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21965]systemd.user.services.<name>.partOf

    If the specified units are stopped or restarted, then this unit is stopped or restarted as
    well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21966]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21967]systemd.user.services.<name>.path

    Packages added to the service's PATH environment variable. Both the bin and sbin
    subdirectories of each package are added.

    Type: list of package or strings

    Default: [ ]

    Declared by:

    [21968]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21969]systemd.user.services.<name>.postStart

    Shell commands executed after the service's main process is started.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21970]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21971]systemd.user.services.<name>.postStop

    Shell commands executed after the service's main process has exited.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21972]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21973]systemd.user.services.<name>.preStart

    Shell commands executed before the service's main process is started.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21974]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21975]systemd.user.services.<name>.preStop

    Shell commands executed to stop the service.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21976]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21977]systemd.user.services.<name>.reload

    Shell commands executed when the service's main process is reloaded.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21978]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21979]systemd.user.services.<name>.reloadIfChanged

    Whether the service should be reloaded during a NixOS configuration switch if its definition
    has changed. If enabled, the value of restartIfChanged is ignored.

    Type: boolean

    Default: false

    Declared by:

    [21980]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21981]systemd.user.services.<name>.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21982]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21983]systemd.user.services.<name>.requires

    Start the specified units when this unit is started, and stop this unit when the specified
    units are stopped or fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21984]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21985]systemd.user.services.<name>.requisite

    Similar to requires. However if the units listed are not started, they will not be started
    and the transaction will fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [21986]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21987]systemd.user.services.<name>.restartIfChanged

    Whether the service should be restarted during a NixOS configuration switch if its definition
    has changed.

    Type: boolean

    Default: true

    Declared by:

    [21988]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21989]systemd.user.services.<name>.restartTriggers

    An arbitrary list of items such as derivations. If any item in the list changes between
    reconfigurations, the service will be restarted.

    Type: list of unspecifieds

    Default: [ ]

    Declared by:

    [21990]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21991]systemd.user.services.<name>.script

    Shell commands executed as the service's main process.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [21992]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21993]systemd.user.services.<name>.scriptArgs

    Arguments passed to the main process script.

    Type: string

    Default: ""

    Declared by:

    [21994]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21995]systemd.user.services.<name>.serviceConfig

    Each attribute in this set specifies an option in the [Service] section of the unit. See 
    systemd.service(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RestartSec = 5; }

    Declared by:

    [21996]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21997]systemd.user.services.<name>.startAt

    Automatically start this unit at the given date/time, which must be in the format described
    in systemd.time(7). This is equivalent to adding a corresponding timer unit with OnCalendar
    set to the value given here.

    Type: string or list of strings

    Default: [ ]

    Example: "Sun 14:00:00"

    Declared by:

    [21998]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[21999]systemd.user.services.<name>.startLimitBurst

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [22000]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22001]systemd.user.services.<name>.startLimitIntervalSec

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [22002]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22003]systemd.user.services.<name>.stopIfChanged

    If set, a changed unit is restarted by calling systemctl stop in the old configuration, then 
    systemctl start in the new one. Otherwise, it is restarted in a single step using systemctl
    restart in the new configuration. The latter is less correct because it runs the ExecStop
    commands from the new configuration.

    Type: boolean

    Default: true

    Declared by:

    [22004]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22005]systemd.user.services.<name>.unitConfig

    Each attribute in this set specifies an option in the [Unit] section of the unit. See 
    systemd.unit(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RequiresMountsFor = "/data"; }

    Declared by:

    [22006]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22007]systemd.user.services.<name>.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22008]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22009]systemd.user.services.<name>.wants

    Start the specified units when this unit is started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22010]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22011]systemd.user.slices

    Definition of systemd per-user slice units.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [22012]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22013]systemd.user.slices.<name>.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [22014]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22015]systemd.user.slices.<name>.after

    If the specified units are started at the same time as this unit, delay this unit until they
    have started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22016]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22017]systemd.user.slices.<name>.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22018]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22019]systemd.user.slices.<name>.before

    If the specified units are started at the same time as this unit, delay them until this unit
    has started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22020]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22021]systemd.user.slices.<name>.bindsTo

    Like ‘requires’, but in addition, if the specified units unexpectedly disappear, this unit
    will be stopped as well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22022]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22023]systemd.user.slices.<name>.conflicts

    If the specified units are started, then this unit is stopped and vice versa.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22024]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22025]systemd.user.slices.<name>.description

    Description of this unit used in systemd messages and progress indicators.

    Type: string

    Default: ""

    Declared by:

    [22026]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22027]systemd.user.slices.<name>.documentation

    A list of URIs referencing documentation for this unit or its configuration.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22028]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22029]systemd.user.slices.<name>.onFailure

    A list of one or more units that are activated when this unit enters the "failed" state.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22030]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22031]systemd.user.slices.<name>.partOf

    If the specified units are stopped or restarted, then this unit is stopped or restarted as
    well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22032]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22033]systemd.user.slices.<name>.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22034]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22035]systemd.user.slices.<name>.requires

    Start the specified units when this unit is started, and stop this unit when the specified
    units are stopped or fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22036]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22037]systemd.user.slices.<name>.requisite

    Similar to requires. However if the units listed are not started, they will not be started
    and the transaction will fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22038]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22039]systemd.user.slices.<name>.restartTriggers

    An arbitrary list of items such as derivations. If any item in the list changes between
    reconfigurations, the service will be restarted.

    Type: list of unspecifieds

    Default: [ ]

    Declared by:

    [22040]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22041]systemd.user.slices.<name>.sliceConfig

    Each attribute in this set specifies an option in the [Slice] section of the unit. See 
    systemd.slice(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { MemoryMax = "2G"; }

    Declared by:

    [22042]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22043]systemd.user.slices.<name>.startLimitBurst

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [22044]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22045]systemd.user.slices.<name>.startLimitIntervalSec

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [22046]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22047]systemd.user.slices.<name>.unitConfig

    Each attribute in this set specifies an option in the [Unit] section of the unit. See 
    systemd.unit(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RequiresMountsFor = "/data"; }

    Declared by:

    [22048]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22049]systemd.user.slices.<name>.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22050]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22051]systemd.user.slices.<name>.wants

    Start the specified units when this unit is started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22052]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22053]systemd.user.sockets

    Definition of systemd per-user socket units.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [22054]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22055]systemd.user.sockets.<name>.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [22056]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22057]systemd.user.sockets.<name>.after

    If the specified units are started at the same time as this unit, delay this unit until they
    have started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22058]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22059]systemd.user.sockets.<name>.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22060]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22061]systemd.user.sockets.<name>.before

    If the specified units are started at the same time as this unit, delay them until this unit
    has started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22062]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22063]systemd.user.sockets.<name>.bindsTo

    Like ‘requires’, but in addition, if the specified units unexpectedly disappear, this unit
    will be stopped as well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22064]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22065]systemd.user.sockets.<name>.conflicts

    If the specified units are started, then this unit is stopped and vice versa.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22066]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22067]systemd.user.sockets.<name>.description

    Description of this unit used in systemd messages and progress indicators.

    Type: string

    Default: ""

    Declared by:

    [22068]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22069]systemd.user.sockets.<name>.documentation

    A list of URIs referencing documentation for this unit or its configuration.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22070]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22071]systemd.user.sockets.<name>.listenDatagrams

    For each item in this list, a ListenDatagram option in the [Socket] section will be created.

    Type: list of strings

    Default: [ ]

    Example: [ "0.0.0.0:993" "/run/my-socket" ]

    Declared by:

    [22072]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22073]systemd.user.sockets.<name>.listenStreams

    For each item in this list, a ListenStream option in the [Socket] section will be created.

    Type: list of strings

    Default: [ ]

    Example: [ "0.0.0.0:993" "/run/my-socket" ]

    Declared by:

    [22074]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22075]systemd.user.sockets.<name>.onFailure

    A list of one or more units that are activated when this unit enters the "failed" state.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22076]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22077]systemd.user.sockets.<name>.partOf

    If the specified units are stopped or restarted, then this unit is stopped or restarted as
    well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22078]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22079]systemd.user.sockets.<name>.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22080]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22081]systemd.user.sockets.<name>.requires

    Start the specified units when this unit is started, and stop this unit when the specified
    units are stopped or fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22082]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22083]systemd.user.sockets.<name>.requisite

    Similar to requires. However if the units listed are not started, they will not be started
    and the transaction will fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22084]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22085]systemd.user.sockets.<name>.restartTriggers

    An arbitrary list of items such as derivations. If any item in the list changes between
    reconfigurations, the service will be restarted.

    Type: list of unspecifieds

    Default: [ ]

    Declared by:

    [22086]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22087]systemd.user.sockets.<name>.socketConfig

    Each attribute in this set specifies an option in the [Socket] section of the unit. See 
    systemd.socket(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { ListenStream = "/run/my-socket"; }

    Declared by:

    [22088]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22089]systemd.user.sockets.<name>.startLimitBurst

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [22090]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22091]systemd.user.sockets.<name>.startLimitIntervalSec

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [22092]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22093]systemd.user.sockets.<name>.unitConfig

    Each attribute in this set specifies an option in the [Unit] section of the unit. See 
    systemd.unit(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RequiresMountsFor = "/data"; }

    Declared by:

    [22094]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22095]systemd.user.sockets.<name>.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22096]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22097]systemd.user.sockets.<name>.wants

    Start the specified units when this unit is started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22098]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22099]systemd.user.targets

    Definition of systemd per-user target units.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [22100]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22101]systemd.user.targets.<name>.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [22102]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22103]systemd.user.targets.<name>.after

    If the specified units are started at the same time as this unit, delay this unit until they
    have started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22104]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22105]systemd.user.targets.<name>.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22106]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22107]systemd.user.targets.<name>.before

    If the specified units are started at the same time as this unit, delay them until this unit
    has started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22108]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22109]systemd.user.targets.<name>.bindsTo

    Like ‘requires’, but in addition, if the specified units unexpectedly disappear, this unit
    will be stopped as well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22110]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22111]systemd.user.targets.<name>.conflicts

    If the specified units are started, then this unit is stopped and vice versa.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22112]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22113]systemd.user.targets.<name>.description

    Description of this unit used in systemd messages and progress indicators.

    Type: string

    Default: ""

    Declared by:

    [22114]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22115]systemd.user.targets.<name>.documentation

    A list of URIs referencing documentation for this unit or its configuration.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22116]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22117]systemd.user.targets.<name>.onFailure

    A list of one or more units that are activated when this unit enters the "failed" state.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22118]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22119]systemd.user.targets.<name>.partOf

    If the specified units are stopped or restarted, then this unit is stopped or restarted as
    well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22120]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22121]systemd.user.targets.<name>.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22122]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22123]systemd.user.targets.<name>.requires

    Start the specified units when this unit is started, and stop this unit when the specified
    units are stopped or fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22124]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22125]systemd.user.targets.<name>.requisite

    Similar to requires. However if the units listed are not started, they will not be started
    and the transaction will fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22126]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22127]systemd.user.targets.<name>.restartTriggers

    An arbitrary list of items such as derivations. If any item in the list changes between
    reconfigurations, the service will be restarted.

    Type: list of unspecifieds

    Default: [ ]

    Declared by:

    [22128]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22129]systemd.user.targets.<name>.startLimitBurst

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [22130]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22131]systemd.user.targets.<name>.startLimitIntervalSec

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [22132]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22133]systemd.user.targets.<name>.unitConfig

    Each attribute in this set specifies an option in the [Unit] section of the unit. See 
    systemd.unit(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RequiresMountsFor = "/data"; }

    Declared by:

    [22134]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22135]systemd.user.targets.<name>.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22136]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22137]systemd.user.targets.<name>.wants

    Start the specified units when this unit is started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22138]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22139]systemd.user.timers

    Definition of systemd per-user timer units.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [22140]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22141]systemd.user.timers.<name>.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [22142]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22143]systemd.user.timers.<name>.after

    If the specified units are started at the same time as this unit, delay this unit until they
    have started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22144]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22145]systemd.user.timers.<name>.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22146]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22147]systemd.user.timers.<name>.before

    If the specified units are started at the same time as this unit, delay them until this unit
    has started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22148]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22149]systemd.user.timers.<name>.bindsTo

    Like ‘requires’, but in addition, if the specified units unexpectedly disappear, this unit
    will be stopped as well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22150]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22151]systemd.user.timers.<name>.conflicts

    If the specified units are started, then this unit is stopped and vice versa.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22152]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22153]systemd.user.timers.<name>.description

    Description of this unit used in systemd messages and progress indicators.

    Type: string

    Default: ""

    Declared by:

    [22154]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22155]systemd.user.timers.<name>.documentation

    A list of URIs referencing documentation for this unit or its configuration.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22156]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22157]systemd.user.timers.<name>.onFailure

    A list of one or more units that are activated when this unit enters the "failed" state.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22158]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22159]systemd.user.timers.<name>.partOf

    If the specified units are stopped or restarted, then this unit is stopped or restarted as
    well.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22160]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22161]systemd.user.timers.<name>.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22162]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22163]systemd.user.timers.<name>.requires

    Start the specified units when this unit is started, and stop this unit when the specified
    units are stopped or fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22164]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22165]systemd.user.timers.<name>.requisite

    Similar to requires. However if the units listed are not started, they will not be started
    and the transaction will fail.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22166]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22167]systemd.user.timers.<name>.restartTriggers

    An arbitrary list of items such as derivations. If any item in the list changes between
    reconfigurations, the service will be restarted.

    Type: list of unspecifieds

    Default: [ ]

    Declared by:

    [22168]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22169]systemd.user.timers.<name>.startLimitBurst

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [22170]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22171]systemd.user.timers.<name>.startLimitIntervalSec

    Configure unit start rate limiting. Units which are started more than startLimitBurst times
    within an interval time interval are not permitted to start any more.

    Type: signed integer

    Declared by:

    [22172]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22173]systemd.user.timers.<name>.timerConfig

    Each attribute in this set specifies an option in the [Timer] section of the unit. See 
    systemd.timer(5) and systemd.time(7) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { OnCalendar = "Sun 14:00:00"; Unit = "foo.service"; }

    Declared by:

    [22174]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22175]systemd.user.timers.<name>.unitConfig

    Each attribute in this set specifies an option in the [Unit] section of the unit. See 
    systemd.unit(5) for details.

    Type: attribute set of systemd options

    Default: { }

    Example: { RequiresMountsFor = "/data"; }

    Declared by:

    [22176]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22177]systemd.user.timers.<name>.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22178]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22179]systemd.user.timers.<name>.wants

    Start the specified units when this unit is started.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22180]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22181]systemd.user.units

    Definition of systemd per-user units.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [22182]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22183]systemd.user.units.<name>.enable

    If set to false, this unit will be a symlink to /dev/null. This is primarily useful to
    prevent specific template instances (e.g. serial-getty@ttyS0) from being started. Note that
    enable=true does not make a unit start by default at boot; if you want that, see wantedBy.

    Type: boolean

    Default: true

    Declared by:

    [22184]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22185]systemd.user.units.<name>.aliases

    Aliases of that unit.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22186]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22187]systemd.user.units.<name>.requiredBy

    Units that require (i.e. depend on and need to go down with) this unit. The discussion under
    wantedBy applies here as well: inverse .requires symlinks are established.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22188]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22189]systemd.user.units.<name>.text

    Text of this systemd unit.

    Type: null or string

    Default: null

    Declared by:

    [22190]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22191]systemd.user.units.<name>.wantedBy

    Units that want (i.e. depend on) this unit. The standard way to make a unit start by default
    at boot is to set this option to [ "multi-user.target" ]. That's despite the fact that the
    systemd.unit(5) manpage says this option goes in the [Install] section that controls the
    behaviour of systemctl enable. Since such a process is stateful and thus contrary to the
    design of NixOS, setting this option instead causes the equivalent inverse .wants symlink to
    be present, establishing the same desired relationship in a stateless way.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22192]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22193]systemd.watchdog.device

    The path to a hardware watchdog device which will be managed by systemd. If not specified,
    systemd will default to /dev/watchdog.

    Type: null or path

    Default: null

    Example: "/dev/watchdog"

    Declared by:

    [22194]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22195]systemd.watchdog.kexecTime

    The amount of time which can elapse when kexec is being executed before a watchdog hardware
    device will automatically reboot the system. This option should only be enabled if reloadTime
    is also enabled. Valid time units include "ms", "s", "min", "h", "d", and "w".

    Type: null or string

    Default: null

    Example: "10m"

    Declared by:

    [22196]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22197]systemd.watchdog.rebootTime

    The amount of time which can elapse after a reboot has been triggered before a watchdog
    hardware device will automatically reboot the system. Valid time units include "ms", "s",
    "min", "h", "d", and "w".

    Type: null or string

    Default: null

    Example: "10m"

    Declared by:

    [22198]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22199]systemd.watchdog.runtimeTime

    The amount of time which can elapse before a watchdog hardware device will automatically
    reboot the system. Valid time units include "ms", "s", "min", "h", "d", and "w".

    Type: null or string

    Default: null

    Example: "30s"

    Declared by:

    [22200]<nixpkgs/nixos/modules/system/boot/systemd.nix>

[22201]time.hardwareClockInLocalTime

    If set, keep the hardware clock in local time instead of UTC.

    Type: boolean

    Default: false

    Declared by:

    [22202]<nixpkgs/nixos/modules/config/locale.nix>

[22203]time.timeZone

    The time zone used when displaying times and dates. See [22204]https://en.wikipedia.org/wiki/
    List_of_tz_database_time_zones for a comprehensive list of possible values for this setting.

    If null, the timezone will default to UTC and can be set imperatively using timedatectl.

    Type: null or string without spaces

    Default: null

    Example: "America/New_York"

    Declared by:

    [22205]<nixpkgs/nixos/modules/config/locale.nix>

[22206]users.defaultUserShell

    This option defines the default shell assigned to user accounts. This can be either a full
    system path or a shell package.

    This must not be a store path, since the path is used outside the store (in particular in /
    etc/passwd).

    Type: path or package

    Example:

    pkgs.zsh

    Declared by:

    [22207]<nixpkgs/nixos/modules/programs/shadow.nix>

[22208]users.enforceIdUniqueness

    Whether to require that no two users/groups share the same uid/gid.

    Type: boolean

    Default: true

    Declared by:

    [22209]<nixpkgs/nixos/modules/config/users-groups.nix>

[22210]users.extraGroups

    Alias of users.groups.

    Type: attribute set of submodules

    Declared by:

    [22211]<nixpkgs/nixos/modules/config/users-groups.nix>

[22212]users.extraGroups.<name>.gid

    The group GID. If the GID is null, a free GID is picked on activation.

    Type: null or signed integer

    Default: null

    Declared by:

    [22213]<nixpkgs/nixos/modules/config/users-groups.nix>

[22214]users.extraGroups.<name>.members

    The user names of the group members, added to the /etc/group file.

    Type: list of string, not containing newlines or colonss

    Default: [ ]

    Declared by:

    [22215]<nixpkgs/nixos/modules/config/users-groups.nix>

[22216]users.extraGroups.<name>.name

    The name of the group. If undefined, the name of the attribute set will be used.

    Type: string, not containing newlines or colons

    Declared by:

    [22217]<nixpkgs/nixos/modules/config/users-groups.nix>

[22218]users.extraUsers

    Alias of users.users.

    Type: attribute set of submodules

    Declared by:

    [22219]<nixpkgs/nixos/modules/config/users-groups.nix>

[22220]users.extraUsers.<name>.packages

    The set of packages that should be made available to the user. This is in contrast to
    environment.systemPackages, which adds packages to all users.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.firefox pkgs.thunderbird ]

    Declared by:

    [22221]<nixpkgs/nixos/modules/config/users-groups.nix>

[22222]users.extraUsers.<name>.createHome

    Whether to create the home directory and ensure ownership as well as permissions to match the
    user.

    Type: boolean

    Default: false

    Declared by:

    [22223]<nixpkgs/nixos/modules/config/users-groups.nix>

[22224]users.extraUsers.<name>.cryptHomeLuks

    Path to encrypted luks device that contains the user's home directory.

    Type: null or string

    Default: null

    Declared by:

    [22225]<nixpkgs/nixos/modules/config/users-groups.nix>

[22226]users.extraUsers.<name>.description

    A short description of the user account, typically the user's full name. This is actually the
    “GECOS” or “comment” field in /etc/passwd.

    Type: string, not containing newlines or colons

    Default: ""

    Example: "Alice Q. User"

    Declared by:

    [22227]<nixpkgs/nixos/modules/config/users-groups.nix>

[22228]users.extraUsers.<name>.extraGroups

    The user's auxiliary groups.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22229]<nixpkgs/nixos/modules/config/users-groups.nix>

[22230]users.extraUsers.<name>.group

    The user's primary group.

    Type: string

    Default: "nogroup"

    Declared by:

    [22231]<nixpkgs/nixos/modules/config/users-groups.nix>

[22232]users.extraUsers.<name>.hashedPassword

    Specifies the hashed password for the user. The options hashedPassword, password and
    passwordFile controls what password is set for the user. hashedPassword overrides both
    password and passwordFile. password overrides passwordFile. If none of these three options
    are set, no password is assigned to the user, and the user will not be able to do password
    logins. If the option users.mutableUsers is true, the password defined in one of the three
    options will only be set when the user is created for the first time. After that, you are
    free to change the password with the ordinary user management commands. If users.mutableUsers
    is false, you cannot change user passwords, they will always be set according to the password
    options.

    To generate a hashed password run mkpasswd -m sha-512.

    If set to an empty string (""), this user will be able to log in without being asked for a
    password (but not via remote services such as SSH, or indirectly via su or sudo). This should
    only be used for e.g. bootable live systems. Note: this is different from setting an empty
    password, which ca be achieved using users.users.<name?>.password.

    If set to null (default) this user will not be able to log in using a password (i.e. via 
    login command).

    Type: null or string, not containing newlines or colons

    Default: null

    Declared by:

    [22233]<nixpkgs/nixos/modules/config/users-groups.nix>

[22234]users.extraUsers.<name>.home

    The user's home directory.

    Type: path, not containing newlines or colons

    Default: "/var/empty"

    Declared by:

    [22235]<nixpkgs/nixos/modules/config/users-groups.nix>

[22236]users.extraUsers.<name>.initialHashedPassword

    Specifies the initial hashed password for the user, i.e. the hashed password assigned if the
    user does not already exist. If users.mutableUsers is true, the password can be changed
    subsequently using the passwd command. Otherwise, it's equivalent to setting the
    hashedPassword option.

    To generate a hashed password run mkpasswd -m sha-512.

    If set to an empty string (""), this user will be able to log in without being asked for a
    password (but not via remote services such as SSH, or indirectly via su or sudo). This should
    only be used for e.g. bootable live systems. Note: this is different from setting an empty
    password, which ca be achieved using users.users.<name?>.password.

    If set to null (default) this user will not be able to log in using a password (i.e. via 
    login command).

    Type: null or string, not containing newlines or colons

    Default: null

    Declared by:

    [22237]<nixpkgs/nixos/modules/config/users-groups.nix>

[22238]users.extraUsers.<name>.initialPassword

    Specifies the initial password for the user, i.e. the password assigned if the user does not
    already exist. If users.mutableUsers is true, the password can be changed subsequently using
    the passwd command. Otherwise, it's equivalent to setting the password option. The same
    caveat applies: the password specified here is world-readable in the Nix store, so it should
    only be used for guest accounts or passwords that will be changed promptly.

    Type: null or string

    Default: null

    Declared by:

    [22239]<nixpkgs/nixos/modules/config/users-groups.nix>

[22240]users.extraUsers.<name>.isNormalUser

    Indicates whether this is an account for a “real” user. This automatically sets group to
    users, createHome to true, home to /home/username, useDefaultShell to true, and isSystemUser
    to false. Exactly one of isNormalUser and isSystemUser must be true.

    Type: boolean

    Default: false

    Declared by:

    [22241]<nixpkgs/nixos/modules/config/users-groups.nix>

[22242]users.extraUsers.<name>.isSystemUser

    Indicates if the user is a system user or not. This option only has an effect if uid is null,
    in which case it determines whether the user's UID is allocated in the range for system users
    (below 500) or in the range for normal users (starting at 1000). Exactly one of isNormalUser
    and isSystemUser must be true.

    Type: boolean

    Default: false

    Declared by:

    [22243]<nixpkgs/nixos/modules/config/users-groups.nix>

[22244]users.extraUsers.<name>.name

    The name of the user account. If undefined, the name of the attribute set will be used.

    Type: string, not containing newlines or colons

    Declared by:

    [22245]<nixpkgs/nixos/modules/config/users-groups.nix>

[22246]users.extraUsers.<name>.openssh.authorizedKeys.keyFiles

    A list of files each containing one OpenSSH public key that should be added to the user's
    authorized keys. The contents of the files are read at build time and added to a file that
    the SSH daemon reads in addition to the the user's authorized_keys file. You can combine the
    keyFiles and keys options.

    Type: list of paths

    Default: [ ]

    Declared by:

    [22247]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[22248]users.extraUsers.<name>.openssh.authorizedKeys.keys

    A list of verbatim OpenSSH public keys that should be added to the user's authorized keys.
    The keys are added to a file that the SSH daemon reads in addition to the the user's
    authorized_keys file. You can combine the keys and keyFiles options. Warning: If you are
    using NixOps then don't use this option since it will replace the key required for deployment
    via ssh.

    Type: list of strings

    Default: [ ]

    Example: [ "ssh-rsa AAAAB3NzaC1yc2etc/etc/etcjwrsh8e596z6J0l7 example@host" "ssh-ed25519
    AAAAC3NzaCetcetera/etceteraJZMfk3QPfQ foo@bar" ]

    Declared by:

    [22249]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[22250]users.extraUsers.<name>.pamMount

    Attributes for user's entry in pam_mount.conf.xml. Useful attributes might include path,
    options, fstype, and server. See [22251]http://pam-mount.sourceforge.net/
    pam_mount.conf.5.html for more information.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [22252]<nixpkgs/nixos/modules/config/users-groups.nix>

[22253]users.extraUsers.<name>.password

    Specifies the (clear text) password for the user. Warning: do not set confidential
    information here because it is world-readable in the Nix store. This option should only be
    used for public accounts. The options hashedPassword, password and passwordFile controls what
    password is set for the user. hashedPassword overrides both password and passwordFile.
    password overrides passwordFile. If none of these three options are set, no password is
    assigned to the user, and the user will not be able to do password logins. If the option
    users.mutableUsers is true, the password defined in one of the three options will only be set
    when the user is created for the first time. After that, you are free to change the password
    with the ordinary user management commands. If users.mutableUsers is false, you cannot change
    user passwords, they will always be set according to the password options.

    Type: null or string

    Default: null

    Declared by:

    [22254]<nixpkgs/nixos/modules/config/users-groups.nix>

[22255]users.extraUsers.<name>.passwordFile

    The full path to a file that contains the user's password. The password file is read on each
    system activation. The file should contain exactly one line, which should be the password in
    an encrypted form that is suitable for the chpasswd -e command. The options hashedPassword,
    password and passwordFile controls what password is set for the user. hashedPassword
    overrides both password and passwordFile. password overrides passwordFile. If none of these
    three options are set, no password is assigned to the user, and the user will not be able to
    do password logins. If the option users.mutableUsers is true, the password defined in one of
    the three options will only be set when the user is created for the first time. After that,
    you are free to change the password with the ordinary user management commands. If
    users.mutableUsers is false, you cannot change user passwords, they will always be set
    according to the password options.

    Type: null or string

    Default: null

    Declared by:

    [22256]<nixpkgs/nixos/modules/config/users-groups.nix>

[22257]users.extraUsers.<name>.shell

    The path to the user's shell. Can use shell derivations, like pkgs.bashInteractive. Don’t
    forget to enable your shell in programs if necessary, like programs.zsh.enable = true;.

    Type: null or package or path, not containing newlines or colons

    Default: "pkgs.shadow"

    Example:

    pkgs.bashInteractive

    Declared by:

    [22258]<nixpkgs/nixos/modules/config/users-groups.nix>

[22259]users.extraUsers.<name>.subGidRanges

    Subordinate group ids that user is allowed to use. They are set into /etc/subgid and are used
    by newgidmap for user namespaces.

    Type: list of submodules

    Default: [ ]

    Example: [ { count = 1; startGid = 100; } { count = 999; startGid = 1001; } ]

    Declared by:

    [22260]<nixpkgs/nixos/modules/config/users-groups.nix>

[22261]users.extraUsers.<name>.subGidRanges.*.count

    Count of subordinate group ids

    Type: signed integer

    Default: 1

    Declared by:

    [22262]<nixpkgs/nixos/modules/config/users-groups.nix>

[22263]users.extraUsers.<name>.subGidRanges.*.startGid

    Start of the range of subordinate group ids that user is allowed to use.

    Type: signed integer

    Declared by:

    [22264]<nixpkgs/nixos/modules/config/users-groups.nix>

[22265]users.extraUsers.<name>.subUidRanges

    Subordinate user ids that user is allowed to use. They are set into /etc/subuid and are used
    by newuidmap for user namespaces.

    Type: list of submodules

    Default: [ ]

    Example: [ { count = 1; startUid = 1000; } { count = 65534; startUid = 100001; } ]

    Declared by:

    [22266]<nixpkgs/nixos/modules/config/users-groups.nix>

[22267]users.extraUsers.<name>.subUidRanges.*.count

    Count of subordinate user ids

    Type: signed integer

    Default: 1

    Declared by:

    [22268]<nixpkgs/nixos/modules/config/users-groups.nix>

[22269]users.extraUsers.<name>.subUidRanges.*.startUid

    Start of the range of subordinate user ids that user is allowed to use.

    Type: signed integer

    Declared by:

    [22270]<nixpkgs/nixos/modules/config/users-groups.nix>

[22271]users.extraUsers.<name>.uid

    The account UID. If the UID is null, a free UID is picked on activation.

    Type: null or signed integer

    Default: null

    Declared by:

    [22272]<nixpkgs/nixos/modules/config/users-groups.nix>

[22273]users.extraUsers.<name>.useDefaultShell

    If true, the user's shell will be set to users.defaultUserShell.

    Type: boolean

    Default: false

    Declared by:

    [22274]<nixpkgs/nixos/modules/config/users-groups.nix>

[22275]users.groups

    Additional groups to be created automatically by the system.

    Type: attribute set of submodules

    Default: { }

    Example: { hackers = { } ; students = { gid = 1001; } ; }

    Declared by:

    [22276]<nixpkgs/nixos/modules/config/users-groups.nix>

[22277]users.groups.<name>.gid

    The group GID. If the GID is null, a free GID is picked on activation.

    Type: null or signed integer

    Default: null

    Declared by:

    [22278]<nixpkgs/nixos/modules/config/users-groups.nix>

[22279]users.groups.<name>.members

    The user names of the group members, added to the /etc/group file.

    Type: list of string, not containing newlines or colonss

    Default: [ ]

    Declared by:

    [22280]<nixpkgs/nixos/modules/config/users-groups.nix>

[22281]users.groups.<name>.name

    The name of the group. If undefined, the name of the attribute set will be used.

    Type: string, not containing newlines or colons

    Declared by:

    [22282]<nixpkgs/nixos/modules/config/users-groups.nix>

[22283]users.ldap.enable

    Whether to enable authentication against an LDAP server.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [22284]<nixpkgs/nixos/modules/config/ldap.nix>

[22285]users.ldap.base

    The distinguished name of the search base.

    Type: string

    Example: "dc=example,dc=org"

    Declared by:

    [22286]<nixpkgs/nixos/modules/config/ldap.nix>

[22287]users.ldap.bind.distinguishedName

    The distinguished name to bind to the LDAP server with. If this is not specified, an
    anonymous bind will be done.

    Type: string

    Default: ""

    Example: "cn=admin,dc=example,dc=com"

    Declared by:

    [22288]<nixpkgs/nixos/modules/config/ldap.nix>

[22289]users.ldap.bind.passwordFile

    The path to a file containing the credentials to use when binding to the LDAP server (if not
    binding anonymously).

    Type: string

    Default: "/etc/ldap/bind.password"

    Declared by:

    [22290]<nixpkgs/nixos/modules/config/ldap.nix>

[22291]users.ldap.bind.policy

    Specifies the policy to use for reconnecting to an unavailable LDAP server. The default is
    hard_open, which reconnects if opening the connection to the directory server failed. By
    contrast, hard_init reconnects if initializing the connection failed. Initializing may not
    actually contact the directory server, and it is possible that a malformed configuration file
    will trigger reconnection. If soft is specified, then nss_ldap will return immediately on
    server failure. All hard reconnect policies block with exponential backoff before retrying.

    Type: one of "hard_open", "hard_init", "soft"

    Default: "hard_open"

    Declared by:

    [22292]<nixpkgs/nixos/modules/config/ldap.nix>

[22293]users.ldap.bind.timeLimit

    Specifies the time limit (in seconds) to use when connecting to the directory server. This is
    distinct from the time limit specified in users.ldap.timeLimit and affects the initial server
    connection only.

    Type: signed integer

    Default: 30

    Declared by:

    [22294]<nixpkgs/nixos/modules/config/ldap.nix>

[22295]users.ldap.daemon.enable

    Whether to let the nslcd daemon (nss-pam-ldapd) handle the LDAP lookups for NSS and PAM. This
    can improve performance, and if you need to bind to the LDAP server with a password, it
    increases security, since only the nslcd user needs to have access to the bindpw file, not
    everyone that uses NSS and/or PAM. If this option is enabled, a local nscd user is created
    automatically, and the nslcd service is started automatically when the network get up.

    Type: boolean

    Default: false

    Declared by:

    [22296]<nixpkgs/nixos/modules/config/ldap.nix>

[22297]users.ldap.daemon.extraConfig

    Extra configuration options that will be added verbatim at the end of the nslcd configuration
    file (nslcd.conf(5)).

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [22298]<nixpkgs/nixos/modules/config/ldap.nix>

[22299]users.ldap.daemon.rootpwmoddn

    The distinguished name to use to bind to the LDAP server when the root user tries to modify a
    user's password.

    Type: string

    Default: ""

    Example: "cn=admin,dc=example,dc=com"

    Declared by:

    [22300]<nixpkgs/nixos/modules/config/ldap.nix>

[22301]users.ldap.daemon.rootpwmodpwFile

    The path to a file containing the credentials with which to bind to the LDAP server if the
    root user tries to change a user's password.

    Type: string

    Default: ""

    Example: "/run/keys/nslcd.rootpwmodpw"

    Declared by:

    [22302]<nixpkgs/nixos/modules/config/ldap.nix>

[22303]users.ldap.extraConfig

    Extra configuration options that will be added verbatim at the end of the ldap configuration
    file (ldap.conf(5)). If users.ldap.daemon is enabled, this configuration will not be used. In
    that case, use users.ldap.daemon.extraConfig instead.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [22304]<nixpkgs/nixos/modules/config/ldap.nix>

[22305]users.ldap.loginPam

    Whether to include authentication against LDAP in login PAM.

    Type: boolean

    Default: true

    Declared by:

    [22306]<nixpkgs/nixos/modules/config/ldap.nix>

[22307]users.ldap.nsswitch

    Whether to include lookup against LDAP in NSS.

    Type: boolean

    Default: true

    Declared by:

    [22308]<nixpkgs/nixos/modules/config/ldap.nix>

[22309]users.ldap.server

    The URL of the LDAP server.

    Type: string

    Example: "ldap://ldap.example.org/"

    Declared by:

    [22310]<nixpkgs/nixos/modules/config/ldap.nix>

[22311]users.ldap.timeLimit

    Specifies the time limit (in seconds) to use when performing searches. A value of zero (0),
    which is the default, is to wait indefinitely for searches to be completed.

    Type: signed integer

    Default: 0

    Declared by:

    [22312]<nixpkgs/nixos/modules/config/ldap.nix>

[22313]users.ldap.useTLS

    If enabled, use TLS (encryption) over an LDAP (port 389) connection. The alternative is to
    specify an LDAPS server (port 636) in users.ldap.server or to forego security.

    Type: boolean

    Default: false

    Declared by:

    [22314]<nixpkgs/nixos/modules/config/ldap.nix>

[22315]users.motd

    Message of the day shown to users when they log in.

    Type: null or strings concatenated with "\n"

    Default: null

    Example: "Today is Sweetmorn, the 4th day of The Aftermath in the YOLD 3178."

    Declared by:

    [22316]<nixpkgs/nixos/modules/security/pam.nix>

[22317]users.mutableUsers

    If set to true, you are free to add new users and groups to the system with the ordinary
    useradd and groupadd commands. On system activation, the existing contents of the /etc/passwd
    and /etc/group files will be merged with the contents generated from the users.users and
    users.groups options. The initial password for a user will be set according to users.users,
    but existing passwords will not be changed.

    Warning: If set to false, the contents of the user and group files will simply be replaced on
    system activation. This also holds for the user passwords; all changed passwords will be
    reset according to the users.users configuration on activation.

    Type: boolean

    Default: true

    Declared by:

    [22318]<nixpkgs/nixos/modules/config/users-groups.nix>

[22319]users.users

    Additional user accounts to be created automatically by the system. This can also be used to
    set options for root.

    Type: attribute set of submodules

    Default: { }

    Example: { alice = { createHome = true; description = "Alice Q. User"; extraGroups = [
    "wheel" ] ; group = "users"; home = "/home/alice"; shell = "/bin/sh"; uid = 1234; } ; }

    Declared by:

    [22320]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>
    [22321]<nixpkgs/nixos/modules/config/users-groups.nix>

[22322]users.users.<name>.packages

    The set of packages that should be made available to the user. This is in contrast to
    environment.systemPackages, which adds packages to all users.

    Type: list of packages

    Default: [ ]

    Example:

    [ pkgs.firefox pkgs.thunderbird ]

    Declared by:

    [22323]<nixpkgs/nixos/modules/config/users-groups.nix>

[22324]users.users.<name>.createHome

    Whether to create the home directory and ensure ownership as well as permissions to match the
    user.

    Type: boolean

    Default: false

    Declared by:

    [22325]<nixpkgs/nixos/modules/config/users-groups.nix>

[22326]users.users.<name>.cryptHomeLuks

    Path to encrypted luks device that contains the user's home directory.

    Type: null or string

    Default: null

    Declared by:

    [22327]<nixpkgs/nixos/modules/config/users-groups.nix>

[22328]users.users.<name>.description

    A short description of the user account, typically the user's full name. This is actually the
    “GECOS” or “comment” field in /etc/passwd.

    Type: string, not containing newlines or colons

    Default: ""

    Example: "Alice Q. User"

    Declared by:

    [22329]<nixpkgs/nixos/modules/config/users-groups.nix>

[22330]users.users.<name>.extraGroups

    The user's auxiliary groups.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22331]<nixpkgs/nixos/modules/config/users-groups.nix>

[22332]users.users.<name>.group

    The user's primary group.

    Type: string

    Default: "nogroup"

    Declared by:

    [22333]<nixpkgs/nixos/modules/config/users-groups.nix>

[22334]users.users.<name>.hashedPassword

    Specifies the hashed password for the user. The options hashedPassword, password and
    passwordFile controls what password is set for the user. hashedPassword overrides both
    password and passwordFile. password overrides passwordFile. If none of these three options
    are set, no password is assigned to the user, and the user will not be able to do password
    logins. If the option users.mutableUsers is true, the password defined in one of the three
    options will only be set when the user is created for the first time. After that, you are
    free to change the password with the ordinary user management commands. If users.mutableUsers
    is false, you cannot change user passwords, they will always be set according to the password
    options.

    To generate a hashed password run mkpasswd -m sha-512.

    If set to an empty string (""), this user will be able to log in without being asked for a
    password (but not via remote services such as SSH, or indirectly via su or sudo). This should
    only be used for e.g. bootable live systems. Note: this is different from setting an empty
    password, which ca be achieved using users.users.<name?>.password.

    If set to null (default) this user will not be able to log in using a password (i.e. via 
    login command).

    Type: null or string, not containing newlines or colons

    Default: null

    Declared by:

    [22335]<nixpkgs/nixos/modules/config/users-groups.nix>

[22336]users.users.<name>.home

    The user's home directory.

    Type: path, not containing newlines or colons

    Default: "/var/empty"

    Declared by:

    [22337]<nixpkgs/nixos/modules/config/users-groups.nix>

[22338]users.users.<name>.initialHashedPassword

    Specifies the initial hashed password for the user, i.e. the hashed password assigned if the
    user does not already exist. If users.mutableUsers is true, the password can be changed
    subsequently using the passwd command. Otherwise, it's equivalent to setting the
    hashedPassword option.

    To generate a hashed password run mkpasswd -m sha-512.

    If set to an empty string (""), this user will be able to log in without being asked for a
    password (but not via remote services such as SSH, or indirectly via su or sudo). This should
    only be used for e.g. bootable live systems. Note: this is different from setting an empty
    password, which ca be achieved using users.users.<name?>.password.

    If set to null (default) this user will not be able to log in using a password (i.e. via 
    login command).

    Type: null or string, not containing newlines or colons

    Default: null

    Declared by:

    [22339]<nixpkgs/nixos/modules/config/users-groups.nix>

[22340]users.users.<name>.initialPassword

    Specifies the initial password for the user, i.e. the password assigned if the user does not
    already exist. If users.mutableUsers is true, the password can be changed subsequently using
    the passwd command. Otherwise, it's equivalent to setting the password option. The same
    caveat applies: the password specified here is world-readable in the Nix store, so it should
    only be used for guest accounts or passwords that will be changed promptly.

    Type: null or string

    Default: null

    Declared by:

    [22341]<nixpkgs/nixos/modules/config/users-groups.nix>

[22342]users.users.<name>.isNormalUser

    Indicates whether this is an account for a “real” user. This automatically sets group to
    users, createHome to true, home to /home/username, useDefaultShell to true, and isSystemUser
    to false. Exactly one of isNormalUser and isSystemUser must be true.

    Type: boolean

    Default: false

    Declared by:

    [22343]<nixpkgs/nixos/modules/config/users-groups.nix>

[22344]users.users.<name>.isSystemUser

    Indicates if the user is a system user or not. This option only has an effect if uid is null,
    in which case it determines whether the user's UID is allocated in the range for system users
    (below 500) or in the range for normal users (starting at 1000). Exactly one of isNormalUser
    and isSystemUser must be true.

    Type: boolean

    Default: false

    Declared by:

    [22345]<nixpkgs/nixos/modules/config/users-groups.nix>

[22346]users.users.<name>.name

    The name of the user account. If undefined, the name of the attribute set will be used.

    Type: string, not containing newlines or colons

    Declared by:

    [22347]<nixpkgs/nixos/modules/config/users-groups.nix>

[22348]users.users.<name>.openssh.authorizedKeys.keyFiles

    A list of files each containing one OpenSSH public key that should be added to the user's
    authorized keys. The contents of the files are read at build time and added to a file that
    the SSH daemon reads in addition to the the user's authorized_keys file. You can combine the
    keyFiles and keys options.

    Type: list of paths

    Default: [ ]

    Declared by:

    [22349]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[22350]users.users.<name>.openssh.authorizedKeys.keys

    A list of verbatim OpenSSH public keys that should be added to the user's authorized keys.
    The keys are added to a file that the SSH daemon reads in addition to the the user's
    authorized_keys file. You can combine the keys and keyFiles options. Warning: If you are
    using NixOps then don't use this option since it will replace the key required for deployment
    via ssh.

    Type: list of strings

    Default: [ ]

    Example: [ "ssh-rsa AAAAB3NzaC1yc2etc/etc/etcjwrsh8e596z6J0l7 example@host" "ssh-ed25519
    AAAAC3NzaCetcetera/etceteraJZMfk3QPfQ foo@bar" ]

    Declared by:

    [22351]<nixpkgs/nixos/modules/services/networking/ssh/sshd.nix>

[22352]users.users.<name>.pamMount

    Attributes for user's entry in pam_mount.conf.xml. Useful attributes might include path,
    options, fstype, and server. See [22353]http://pam-mount.sourceforge.net/
    pam_mount.conf.5.html for more information.

    Type: attribute set of strings

    Default: { }

    Declared by:

    [22354]<nixpkgs/nixos/modules/config/users-groups.nix>

[22355]users.users.<name>.password

    Specifies the (clear text) password for the user. Warning: do not set confidential
    information here because it is world-readable in the Nix store. This option should only be
    used for public accounts. The options hashedPassword, password and passwordFile controls what
    password is set for the user. hashedPassword overrides both password and passwordFile.
    password overrides passwordFile. If none of these three options are set, no password is
    assigned to the user, and the user will not be able to do password logins. If the option
    users.mutableUsers is true, the password defined in one of the three options will only be set
    when the user is created for the first time. After that, you are free to change the password
    with the ordinary user management commands. If users.mutableUsers is false, you cannot change
    user passwords, they will always be set according to the password options.

    Type: null or string

    Default: null

    Declared by:

    [22356]<nixpkgs/nixos/modules/config/users-groups.nix>

[22357]users.users.<name>.passwordFile

    The full path to a file that contains the user's password. The password file is read on each
    system activation. The file should contain exactly one line, which should be the password in
    an encrypted form that is suitable for the chpasswd -e command. The options hashedPassword,
    password and passwordFile controls what password is set for the user. hashedPassword
    overrides both password and passwordFile. password overrides passwordFile. If none of these
    three options are set, no password is assigned to the user, and the user will not be able to
    do password logins. If the option users.mutableUsers is true, the password defined in one of
    the three options will only be set when the user is created for the first time. After that,
    you are free to change the password with the ordinary user management commands. If
    users.mutableUsers is false, you cannot change user passwords, they will always be set
    according to the password options.

    Type: null or string

    Default: null

    Declared by:

    [22358]<nixpkgs/nixos/modules/config/users-groups.nix>

[22359]users.users.<name>.shell

    The path to the user's shell. Can use shell derivations, like pkgs.bashInteractive. Don’t
    forget to enable your shell in programs if necessary, like programs.zsh.enable = true;.

    Type: null or package or path, not containing newlines or colons

    Default: "pkgs.shadow"

    Example:

    pkgs.bashInteractive

    Declared by:

    [22360]<nixpkgs/nixos/modules/config/users-groups.nix>

[22361]users.users.<name>.subGidRanges

    Subordinate group ids that user is allowed to use. They are set into /etc/subgid and are used
    by newgidmap for user namespaces.

    Type: list of submodules

    Default: [ ]

    Example: [ { count = 1; startGid = 100; } { count = 999; startGid = 1001; } ]

    Declared by:

    [22362]<nixpkgs/nixos/modules/config/users-groups.nix>

[22363]users.users.<name>.subGidRanges.*.count

    Count of subordinate group ids

    Type: signed integer

    Default: 1

    Declared by:

    [22364]<nixpkgs/nixos/modules/config/users-groups.nix>

[22365]users.users.<name>.subGidRanges.*.startGid

    Start of the range of subordinate group ids that user is allowed to use.

    Type: signed integer

    Declared by:

    [22366]<nixpkgs/nixos/modules/config/users-groups.nix>

[22367]users.users.<name>.subUidRanges

    Subordinate user ids that user is allowed to use. They are set into /etc/subuid and are used
    by newuidmap for user namespaces.

    Type: list of submodules

    Default: [ ]

    Example: [ { count = 1; startUid = 1000; } { count = 65534; startUid = 100001; } ]

    Declared by:

    [22368]<nixpkgs/nixos/modules/config/users-groups.nix>

[22369]users.users.<name>.subUidRanges.*.count

    Count of subordinate user ids

    Type: signed integer

    Default: 1

    Declared by:

    [22370]<nixpkgs/nixos/modules/config/users-groups.nix>

[22371]users.users.<name>.subUidRanges.*.startUid

    Start of the range of subordinate user ids that user is allowed to use.

    Type: signed integer

    Declared by:

    [22372]<nixpkgs/nixos/modules/config/users-groups.nix>

[22373]users.users.<name>.uid

    The account UID. If the UID is null, a free UID is picked on activation.

    Type: null or signed integer

    Default: null

    Declared by:

    [22374]<nixpkgs/nixos/modules/config/users-groups.nix>

[22375]users.users.<name>.useDefaultShell

    If true, the user's shell will be set to users.defaultUserShell.

    Type: boolean

    Default: false

    Declared by:

    [22376]<nixpkgs/nixos/modules/config/users-groups.nix>

[22377]virtualisation.anbox.enable

    Whether to enable Anbox.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [22378]<nixpkgs/nixos/modules/virtualisation/anbox.nix>

[22379]virtualisation.anbox.extraInit

    Extra shell commands to be run inside the container image during init.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [22380]<nixpkgs/nixos/modules/virtualisation/anbox.nix>

[22381]virtualisation.anbox.image

    Base android image for Anbox.

    Type: package

    Default: (build of android_amd64.img)

    Example:

    pkgs.anbox.image

    Declared by:

    [22382]<nixpkgs/nixos/modules/virtualisation/anbox.nix>

[22383]virtualisation.anbox.ipv4.container.address

    IPv4 Container address.

    Type: string

    Default: "192.168.250.2"

    Declared by:

    [22384]<nixpkgs/nixos/modules/virtualisation/anbox.nix>

[22385]virtualisation.anbox.ipv4.container.prefixLength

    Subnet mask of the Container address, specified as the number of bits in the prefix (24).

    Type: signed integer

    Default: 24

    Declared by:

    [22386]<nixpkgs/nixos/modules/virtualisation/anbox.nix>

[22387]virtualisation.anbox.ipv4.dns

    Container DNS server.

    Type: string

    Default: "1.1.1.1"

    Declared by:

    [22388]<nixpkgs/nixos/modules/virtualisation/anbox.nix>

[22389]virtualisation.anbox.ipv4.gateway.address

    IPv4 Host address.

    Type: string

    Default: "192.168.250.1"

    Declared by:

    [22390]<nixpkgs/nixos/modules/virtualisation/anbox.nix>

[22391]virtualisation.anbox.ipv4.gateway.prefixLength

    Subnet mask of the Host address, specified as the number of bits in the prefix (24).

    Type: signed integer

    Default: 24

    Declared by:

    [22392]<nixpkgs/nixos/modules/virtualisation/anbox.nix>

[22393]virtualisation.containerd.enable

    Whether to enable containerd container runtime.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [22394]<nixpkgs/nixos/modules/virtualisation/containerd.nix>

[22395]virtualisation.containerd.args

    extra args to append to the containerd cmdline

    Type: attribute set of strings

    Default: { }

    Declared by:

    [22396]<nixpkgs/nixos/modules/virtualisation/containerd.nix>

[22397]virtualisation.containerd.configFile

    path to containerd config file

    Type: null or path

    Default: null

    Declared by:

    [22398]<nixpkgs/nixos/modules/virtualisation/containerd.nix>

[22399]virtualisation.containers.enable

    This option enables the common /etc/containers configuration module.

    Type: boolean

    Default: false

    Declared by:

    [22400]<nixpkgs/nixos/modules/virtualisation/containers.nix>

[22401]virtualisation.containers.containersConf.cniPlugins

    CNI plugins to install on the system.

    Type: list of packages

    Default:

    ''
    [
      pkgs.cni-plugins
    ]
    ''

    Example:

    [
      pkgs.cniPlugins.dnsname
    ]

    Declared by:

    [22402]<nixpkgs/nixos/modules/virtualisation/containers.nix>

[22403]virtualisation.containers.containersConf.settings

    containers.conf configuration

    Type: TOML value

    Default: { }

    Declared by:

    [22404]<nixpkgs/nixos/modules/virtualisation/containers.nix>

[22405]virtualisation.containers.ociSeccompBpfHook.enable

    Enable the OCI seccomp BPF hook

    Type: boolean

    Default: false

    Declared by:

    [22406]<nixpkgs/nixos/modules/virtualisation/containers.nix>

[22407]virtualisation.containers.policy

    Signature verification policy file. If this option is empty the default policy file from
    skopeo will be used.

    Type: attribute set

    Default: { }

    Example:

    {
      default = [ { type = "insecureAcceptAnything"; } ];
      transports = {
        docker-daemon = {
          "" = [ { type = "insecureAcceptAnything"; } ];
        };
      };
    }

    Declared by:

    [22408]<nixpkgs/nixos/modules/virtualisation/containers.nix>

[22409]virtualisation.containers.registries.block

    List of blocked repositories.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22410]<nixpkgs/nixos/modules/virtualisation/containers.nix>

[22411]virtualisation.containers.registries.insecure

    List of insecure repositories.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22412]<nixpkgs/nixos/modules/virtualisation/containers.nix>

[22413]virtualisation.containers.registries.search

    List of repositories to search.

    Type: list of strings

    Default: [ "docker.io" "quay.io" ]

    Declared by:

    [22414]<nixpkgs/nixos/modules/virtualisation/containers.nix>

[22415]virtualisation.cri-o.enable

    Whether to enable Container Runtime Interface for OCI (CRI-O).

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [22416]<nixpkgs/nixos/modules/virtualisation/cri-o.nix>

[22417]virtualisation.cri-o.extraPackages

    Extra packages to be installed in the CRI-O wrapper.

    Type: list of packages

    Default: [ ]

    Example:

    [
      pkgs.gvisor
    ]

    Declared by:

    [22418]<nixpkgs/nixos/modules/virtualisation/cri-o.nix>

[22419]virtualisation.cri-o.logLevel

    Log level to be used

    Type: one of "trace", "debug", "info", "warn", "error", "fatal"

    Default: "info"

    Declared by:

    [22420]<nixpkgs/nixos/modules/virtualisation/cri-o.nix>

[22421]virtualisation.cri-o.pauseCommand

    Override the default pause command

    Type: null or string

    Default: null

    Example: [ "/pause" ]

    Declared by:

    [22422]<nixpkgs/nixos/modules/virtualisation/cri-o.nix>

[22423]virtualisation.cri-o.pauseImage

    Override the default pause image for pod sandboxes

    Type: null or string

    Default: null

    Example: [ "k8s.gcr.io/pause:3.2" ]

    Declared by:

    [22424]<nixpkgs/nixos/modules/virtualisation/cri-o.nix>

[22425]virtualisation.cri-o.runtime

    Override the default runtime

    Type: null or string

    Default: null

    Example: [ "crun" ]

    Declared by:

    [22426]<nixpkgs/nixos/modules/virtualisation/cri-o.nix>

[22427]virtualisation.cri-o.storageDriver

    Storage driver to be used

    Type: one of "btrfs", "overlay", "vfs"

    Default: "overlay"

    Declared by:

    [22428]<nixpkgs/nixos/modules/virtualisation/cri-o.nix>

[22429]virtualisation.docker.enable

    This option enables docker, a daemon that manages linux containers. Users in the "docker"
    group can interact with the daemon (e.g. to start or stop containers) using the docker
    command line tool.

    Type: boolean

    Default: false

    Declared by:

    [22430]<nixpkgs/nixos/modules/virtualisation/docker.nix>

[22431]virtualisation.docker.enableNvidia

    Enable nvidia-docker wrapper, supporting NVIDIA GPUs inside docker containers.

    Type: boolean

    Default: false

    Declared by:

    [22432]<nixpkgs/nixos/modules/virtualisation/docker.nix>

[22433]virtualisation.docker.enableOnBoot

    When enabled dockerd is started on boot. This is required for containers which are created
    with the --restart=always flag to work. If this option is disabled, docker might be started
    on demand by socket activation.

    Type: boolean

    Default: true

    Declared by:

    [22434]<nixpkgs/nixos/modules/virtualisation/docker.nix>

[22435]virtualisation.docker.package

    Docker package to be used in the module.

    Type: package

    Default: (build of docker-20.10.2)

    Example: (build of )

    Declared by:

    [22436]<nixpkgs/nixos/modules/virtualisation/docker.nix>

[22437]virtualisation.docker.autoPrune.enable

    Whether to periodically prune Docker resources. If enabled, a systemd timer will run docker
    system prune -f as specified by the dates option.

    Type: boolean

    Default: false

    Declared by:

    [22438]<nixpkgs/nixos/modules/virtualisation/docker.nix>

[22439]virtualisation.docker.autoPrune.dates

    Specification (in the format described by systemd.time(7)) of the time at which the prune
    will occur.

    Type: string

    Default: "weekly"

    Declared by:

    [22440]<nixpkgs/nixos/modules/virtualisation/docker.nix>

[22441]virtualisation.docker.autoPrune.flags

    Any additional flags passed to docker system prune.

    Type: list of strings

    Default: [ ]

    Example: [ "--all" ]

    Declared by:

    [22442]<nixpkgs/nixos/modules/virtualisation/docker.nix>

[22443]virtualisation.docker.extraOptions

    The extra command-line options to pass to docker daemon.

    Type: strings concatenated with " "

    Default: ""

    Declared by:

    [22444]<nixpkgs/nixos/modules/virtualisation/docker.nix>

[22445]virtualisation.docker.listenOptions

    A list of unix and tcp docker should listen to. The format follows ListenStream as described
    in systemd.socket(5).

    Type: list of strings

    Default: [ "/run/docker.sock" ]

    Declared by:

    [22446]<nixpkgs/nixos/modules/virtualisation/docker.nix>

[22447]virtualisation.docker.liveRestore

    Allow dockerd to be restarted without affecting running container. This option is
    incompatible with docker swarm.

    Type: boolean

    Default: true

    Declared by:

    [22448]<nixpkgs/nixos/modules/virtualisation/docker.nix>

[22449]virtualisation.docker.logDriver

    This option determines which Docker log driver to use.

    Type: one of "none", "json-file", "syslog", "journald", "gelf", "fluentd", "awslogs",
    "splunk", "etwlogs", "gcplogs"

    Default: "journald"

    Declared by:

    [22450]<nixpkgs/nixos/modules/virtualisation/docker.nix>

[22451]virtualisation.docker.storageDriver

    This option determines which Docker storage driver to use. By default it let's docker
    automatically choose preferred storage driver.

    Type: null or one of "aufs", "btrfs", "devicemapper", "overlay", "overlay2", "zfs"

    Default: null

    Declared by:

    [22452]<nixpkgs/nixos/modules/virtualisation/docker.nix>

[22453]virtualisation.hypervGuest.enable

    Whether to enable Hyper-V Guest Support.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [22454]<nixpkgs/nixos/modules/virtualisation/hyperv-guest.nix>

[22455]virtualisation.hypervGuest.videoMode

    Resolution at which to initialize the video adapter.

    Supports screen resolution up to Full HD 1920x1080 with 32 bit color on Windows Server 2012,
    and 1600x1200 with 16 bit color on Windows Server 2008 R2 or earlier.

    Type: string

    Default: "1152x864"

    Example: "1024x768"

    Declared by:

    [22456]<nixpkgs/nixos/modules/virtualisation/hyperv-guest.nix>

[22457]virtualisation.kvmgt.enable

    Whether to enable KVMGT (iGVT-g) VGPU support. Allows Qemu/KVM guests to share host's Intel
    integrated graphics card. Currently only one graphical device can be shared. To allow users
    to access the device without root add them to the kvm group: users.extraUsers.
    <yourusername>.extraGroups = [ "kvm" ]; .

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [22458]<nixpkgs/nixos/modules/virtualisation/kvmgt.nix>

[22459]virtualisation.kvmgt.device

    PCI ID of graphics card. You can figure it with ls /sys/class/mdev_bus.

    Type: string

    Default: "0000:00:02.0"

    Declared by:

    [22460]<nixpkgs/nixos/modules/virtualisation/kvmgt.nix>

[22461]virtualisation.kvmgt.vgpus

    Virtual GPUs to be used in Qemu. You can find devices via ls /sys/bus/pci/devices/*/
    mdev_supported_types and find info about device via cat /sys/bus/pci/devices/*/
    mdev_supported_types/i915-GVTg_V5_4/description

    Type: attribute set of submodules

    Default: { }

    Example: { i915-GVTg_V5_8 = { uuid = [ "a297db4a-f4c2-11e6-90f6-d3b88d6c9525" ] ; } ; }

    Declared by:

    [22462]<nixpkgs/nixos/modules/virtualisation/kvmgt.nix>

[22463]virtualisation.kvmgt.vgpus.<name>.uuid

    UUID(s) of VGPU device. You can generate one with libossp_uuid.

    Type: list of strings

    Declared by:

    [22464]<nixpkgs/nixos/modules/virtualisation/kvmgt.nix>

[22465]virtualisation.libvirtd.enable

    This option enables libvirtd, a daemon that manages virtual machines. Users in the "libvirtd"
    group can interact with the daemon (e.g. to start or stop VMs) using the virsh command line
    tool, among others.

    Type: boolean

    Default: false

    Declared by:

    [22466]<nixpkgs/nixos/modules/virtualisation/libvirtd.nix>

[22467]virtualisation.libvirtd.package

    libvirt package to use.

    Type: package

    Default: "pkgs.libvirt"

    Declared by:

    [22468]<nixpkgs/nixos/modules/virtualisation/libvirtd.nix>

[22469]virtualisation.libvirtd.allowedBridges

    List of bridge devices that can be used by qemu:///session

    Type: list of strings

    Default: [ "virbr0" ]

    Declared by:

    [22470]<nixpkgs/nixos/modules/virtualisation/libvirtd.nix>

[22471]virtualisation.libvirtd.extraConfig

    Extra contents appended to the libvirtd configuration file, libvirtd.conf.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [22472]<nixpkgs/nixos/modules/virtualisation/libvirtd.nix>

[22473]virtualisation.libvirtd.extraOptions

    Extra command line arguments passed to libvirtd on startup.

    Type: list of strings

    Default: [ ]

    Example: [ "--verbose" ]

    Declared by:

    [22474]<nixpkgs/nixos/modules/virtualisation/libvirtd.nix>

[22475]virtualisation.libvirtd.onBoot

    Specifies the action to be done to / on the guests when the host boots. The "start" option
    starts all guests that were running prior to shutdown regardless of their autostart settings.
    The "ignore" option will not start the formerly running guest on boot. However, any guest
    marked as autostart will still be automatically started by libvirtd.

    Type: one of "start", "ignore"

    Default: "start"

    Declared by:

    [22476]<nixpkgs/nixos/modules/virtualisation/libvirtd.nix>

[22477]virtualisation.libvirtd.onShutdown

    When shutting down / restarting the host what method should be used to gracefully halt the
    guests. Setting to "shutdown" will cause an ACPI shutdown of each guest. "suspend" will
    attempt to save the state of the guests ready to restore on boot.

    Type: one of "shutdown", "suspend"

    Default: "suspend"

    Declared by:

    [22478]<nixpkgs/nixos/modules/virtualisation/libvirtd.nix>

[22479]virtualisation.libvirtd.qemuOvmf

    Allows libvirtd to take advantage of OVMF when creating new QEMU VMs with UEFI boot.

    Type: boolean

    Default: true

    Declared by:

    [22480]<nixpkgs/nixos/modules/virtualisation/libvirtd.nix>

[22481]virtualisation.libvirtd.qemuPackage

    Qemu package to use with libvirt. `pkgs.qemu` can emulate alien architectures (e.g. aarch64
    on x86) `pkgs.qemu_kvm` saves disk space allowing to emulate only host architectures.

    Type: package

    Default: (build of )

    Declared by:

    [22482]<nixpkgs/nixos/modules/virtualisation/libvirtd.nix>

[22483]virtualisation.libvirtd.qemuRunAsRoot

    If true, libvirtd runs qemu as root. If false, libvirtd runs qemu as unprivileged user
    qemu-libvirtd. Changing this option to false may cause file permission issues for existing
    guests. To fix these, manually change ownership of affected files in /var/lib/libvirt/qemu to
    qemu-libvirtd.

    Type: boolean

    Default: true

    Declared by:

    [22484]<nixpkgs/nixos/modules/virtualisation/libvirtd.nix>

[22485]virtualisation.libvirtd.qemuVerbatimConfig

    Contents written to the qemu configuration file, qemu.conf. Make sure to include a proper
    namespace configuration when supplying custom configuration.

    Type: strings concatenated with "\n"

    Default:

    ''
    namespaces = []
    ''

    Declared by:

    [22486]<nixpkgs/nixos/modules/virtualisation/libvirtd.nix>

[22487]virtualisation.lxc.enable

    This enables Linux Containers (LXC), which provides tools for creating and managing system or
    application containers on Linux.

    Type: boolean

    Default: false

    Declared by:

    [22488]<nixpkgs/nixos/modules/virtualisation/lxc.nix>

[22489]virtualisation.lxc.defaultConfig

    Default config (default.conf) for new containers, i.e. for network config. See 
    lxc.container.conf (5).

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [22490]<nixpkgs/nixos/modules/virtualisation/lxc.nix>

[22491]virtualisation.lxc.lxcfs.enable

    This enables LXCFS, a FUSE filesystem for LXC. To use lxcfs in include the following
    configuration in your container configuration: virtualisation.lxc.defaultConfig =
    "lxc.include = ${pkgs.lxcfs}/share/lxc/config/common.conf.d/00-lxcfs.conf";

    Type: boolean

    Default: false

    Declared by:

    [22492]<nixpkgs/nixos/modules/virtualisation/lxcfs.nix>

[22493]virtualisation.lxc.systemConfig

    This is the system-wide LXC config. See lxc.system.conf(5).

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [22494]<nixpkgs/nixos/modules/virtualisation/lxc.nix>

[22495]virtualisation.lxc.usernetConfig

    This is the config file for managing unprivileged user network administration access in LXC.
    See lxc-usernet(5).

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [22496]<nixpkgs/nixos/modules/virtualisation/lxc.nix>

[22497]virtualisation.lxd.enable

    This option enables lxd, a daemon that manages containers. Users in the "lxd" group can
    interact with the daemon (e.g. to start or stop containers) using the lxc command line tool,
    among others.

    Most of the time, you'll also want to start lxcfs, so that containers can "see" the limits:
    virtualisation.lxc.lxcfs.enable = true;

    Type: boolean

    Default: false

    Declared by:

    [22498]<nixpkgs/nixos/modules/virtualisation/lxd.nix>

[22499]virtualisation.lxd.package

    The LXD package to use.

    Type: package

    Default: "pkgs.lxd"

    Declared by:

    [22500]<nixpkgs/nixos/modules/virtualisation/lxd.nix>

[22501]virtualisation.lxd.lxcPackage

    The LXC package to use with LXD (required for AppArmor profiles).

    Type: package

    Default: "pkgs.lxc"

    Declared by:

    [22502]<nixpkgs/nixos/modules/virtualisation/lxd.nix>

[22503]virtualisation.lxd.recommendedSysctlSettings

    Enables various settings to avoid common pitfalls when running containers requiring many file
    operations. Fixes errors like "Too many open files" or "neighbour: ndisc_cache: neighbor
    table overflow!". See https://lxd.readthedocs.io/en/latest/production-setup/ for details.

    Type: boolean

    Default: false

    Declared by:

    [22504]<nixpkgs/nixos/modules/virtualisation/lxd.nix>

[22505]virtualisation.lxd.startTimeout

    Time to wait (in seconds) for LXD to become ready to process requests. If LXD does not reply
    within the configured time, lxd.service will be considered failed and systemd will attempt to
    restart it.

    Type: signed integer

    Default: 600

    Declared by:

    [22506]<nixpkgs/nixos/modules/virtualisation/lxd.nix>

[22507]virtualisation.lxd.zfsSupport

    Enables lxd to use zfs as a storage for containers.

    This option is enabled by default if a zfs pool is configured with nixos.

    Type: boolean

    Default: "config.boot.zfs.enabled"

    Declared by:

    [22508]<nixpkgs/nixos/modules/virtualisation/lxd.nix>

[22509]virtualisation.oci-containers.backend

    The underlying Docker implementation to use.

    Type: one of "podman", "docker"

    Default: "docker"

    Declared by:

    [22510]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22511]virtualisation.oci-containers.containers

    OCI (Docker) containers to run as systemd services.

    Type: attribute set of submodules

    Default: { }

    Declared by:

    [22512]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22513]virtualisation.oci-containers.containers.<name>.autoStart

    When enabled, the container is automatically started on boot. If this option is set to false,
    the container has to be started on-demand via its service.

    Type: boolean

    Default: true

    Declared by:

    [22514]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22515]virtualisation.oci-containers.containers.<name>.cmd

    Commandline arguments to pass to the image's entrypoint.

    Type: list of strings

    Default: [ ]

    Example:

    ["--port=9000"]

    Declared by:

    [22516]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22517]virtualisation.oci-containers.containers.<name>.dependsOn

    Define which other containers this one depends on. They will be added to both After and
    Requires for the unit.

    Use the same name as the attribute under virtualisation.oci-containers.containers.

    Type: list of strings

    Default: [ ]

    Example:

    virtualisation.oci-containers.containers = {
      node1 = {};
      node2 = {
        dependsOn = [ "node1" ];
      }
    }

    Declared by:

    [22518]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22519]virtualisation.oci-containers.containers.<name>.entrypoint

    Override the default entrypoint of the image.

    Type: null or string

    Default: null

    Example: "/bin/my-app"

    Declared by:

    [22520]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22521]virtualisation.oci-containers.containers.<name>.environment

    Environment variables to set for this container.

    Type: attribute set of strings

    Default: { }

    Example:

    {
      DATABASE_HOST = "db.example.com";
      DATABASE_PORT = "3306";
    }

    Declared by:

    [22522]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22523]virtualisation.oci-containers.containers.<name>.environmentFiles

    Environment files for this container.

    Type: list of paths

    Default: [ ]

    Example:

    [
      /path/to/.env
      /path/to/.env.secret
    ]

    Declared by:

    [22524]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22525]virtualisation.oci-containers.containers.<name>.extraOptions

    Extra options for docker run.

    Type: list of strings

    Default: [ ]

    Example:

    ["--network=host"]

    Declared by:

    [22526]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22527]virtualisation.oci-containers.containers.<name>.image

    OCI image to run.

    Type: string

    Example: "library/hello-world"

    Declared by:

    [22528]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22529]virtualisation.oci-containers.containers.<name>.imageFile

    Path to an image file to load instead of pulling from a registry. If defined, do not pull
    from registry.

    You still need to set the image attribute, as it will be used as the image name for docker to
    start a container.

    Type: null or package

    Default: null

    Example:

    pkgs.dockerTools.buildDockerImage {...};

    Declared by:

    [22530]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22531]virtualisation.oci-containers.containers.<name>.log-driver

    Logging driver for the container. The default of "journald" means that the container's logs
    will be handled as part of the systemd unit.

    For more details and a full list of logging drivers, refer to respective backends
    documentation.

    For Docker: [22532]Docker engine documentation

    For Podman: Refer to the docker-run(1) man page.

    Type: string

    Default: "journald"

    Declared by:

    [22533]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22534]virtualisation.oci-containers.containers.<name>.ports

    Network ports to publish from the container to the outer host.

    Valid formats:

      □ <ip>:<hostPort>:<containerPort>

      □ <ip>::<containerPort>

      □ <hostPort>:<containerPort>

      □ <containerPort>

    Both hostPort and containerPort can be specified as a range of ports. When specifying ranges
    for both, the number of container ports in the range must match the number of host ports in
    the range. Example: 1234-1236:1234-1236/tcp

    When specifying a range for hostPort only, the containerPort must not be a range. In this
    case, the container port is published somewhere within the specified hostPort range. Example:
    1234-1236:1234/tcp

    Refer to the [22535] Docker engine documentation for full details.

    Type: list of strings

    Default: [ ]

    Example:

    [
      "8080:9000"
    ]

    Declared by:

    [22536]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22537]virtualisation.oci-containers.containers.<name>.user

    Override the username or UID (and optionally groupname or GID) used in the container.

    Type: null or string

    Default: null

    Example: "nobody:nogroup"

    Declared by:

    [22538]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22539]virtualisation.oci-containers.containers.<name>.volumes

    List of volumes to attach to this container.

    Note that this is a list of "src:dst" strings to allow for src to refer to /nix/store paths,
    which would be difficult with an attribute set. There are also a variety of mount options
    available as a third field; please refer to the [22540] docker engine documentation for
    details.

    Type: list of strings

    Default: [ ]

    Example:

    [
      "volume_name:/path/inside/container"
      "/path/on/host:/path/inside/container"
    ]

    Declared by:

    [22541]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22542]virtualisation.oci-containers.containers.<name>.workdir

    Override the default working directory for the container.

    Type: null or string

    Default: null

    Example: "/var/lib/hello_world"

    Declared by:

    [22543]<nixpkgs/nixos/modules/virtualisation/oci-containers.nix>

[22544]virtualisation.podman.enable

    This option enables Podman, a daemonless container engine for developing, managing, and
    running OCI Containers on your Linux System.

    It is a drop-in replacement for the docker command.

    Type: boolean

    Default: false

    Declared by:

    [22545]<nixpkgs/nixos/modules/virtualisation/podman.nix>

[22546]virtualisation.podman.enableNvidia

    Enable use of NVidia GPUs from within podman containers.

    Type: boolean

    Default: false

    Declared by:

    [22547]<nixpkgs/nixos/modules/virtualisation/podman.nix>

[22548]virtualisation.podman.defaultNetwork.dnsname.enable

    Enable DNS resolution in the default podman network.

    Type: boolean

    Default: false

    Declared by:

    [22549]<nixpkgs/nixos/modules/virtualisation/podman-dnsname.nix>

[22550]virtualisation.podman.defaultNetwork.extraPlugins

    Extra CNI plugin configurations to add to podman's default network.

    Type: list of JSON values

    Default: [ ]

    Declared by:

    [22551]<nixpkgs/nixos/modules/virtualisation/podman.nix>

[22552]virtualisation.podman.dockerCompat

    Create an alias mapping docker to podman.

    Type: boolean

    Default: false

    Declared by:

    [22553]<nixpkgs/nixos/modules/virtualisation/podman.nix>

[22554]virtualisation.podman.dockerSocket.enable

    Make the Podman socket available in place of the Docker socket, so Docker tools can find the
    Podman socket.

    Podman implements the Docker API.

    Users must be in the podman group in order to connect. As with Docker, members of this group
    can gain root access.

    Type: boolean

    Default: false

    Declared by:

    [22555]<nixpkgs/nixos/modules/virtualisation/podman.nix>

[22556]virtualisation.podman.extraPackages

    Extra packages to be installed in the Podman wrapper.

    Type: list of packages

    Default: [ ]

    Example:

    [
      pkgs.gvisor
    ]

    Declared by:

    [22557]<nixpkgs/nixos/modules/virtualisation/podman.nix>

[22558]virtualisation.podman.networkSocket.enable

    Make the Podman and Docker compatibility API available over the network with TLS client
    certificate authentication.

    This allows Docker clients to connect with the equivalents of the Docker CLI -H and --tls*
    family of options.

    For certificate setup, see https://docs.docker.com/engine/security/protect-access/

    This option is independent of [22559]virtualisation.podman.dockerSocket.enable.

    Type: boolean

    Default: false

    Declared by:

    [22560]<nixpkgs/nixos/modules/virtualisation/podman-network-socket.nix>

[22561]virtualisation.podman.networkSocket.listenAddress

    Interface address for receiving TLS connections.

    Type: string

    Default: "0.0.0.0"

    Declared by:

    [22562]<nixpkgs/nixos/modules/virtualisation/podman-network-socket.nix>

[22563]virtualisation.podman.networkSocket.openFirewall

    Whether to open the port in the firewall.

    Type: boolean

    Default: false

    Declared by:

    [22564]<nixpkgs/nixos/modules/virtualisation/podman-network-socket.nix>

[22565]virtualisation.podman.networkSocket.port

    TCP port number for receiving TLS connections.

    Type: 16 bit unsigned integer; between 0 and 65535 (both inclusive)

    Default: 2376

    Declared by:

    [22566]<nixpkgs/nixos/modules/virtualisation/podman-network-socket.nix>

[22567]virtualisation.podman.networkSocket.server

    Choice of TLS proxy server.

    Type: one of "ghostunnel"

    Example: "ghostunnel"

    Declared by:

    [22568]<nixpkgs/nixos/modules/virtualisation/podman-network-socket.nix>
    [22569]<nixpkgs/nixos/modules/virtualisation/podman-network-socket-ghostunnel.nix>

[22570]virtualisation.podman.networkSocket.tls.cacert

    Path to CA certificate to use for client authentication.

    Type: path

    Declared by:

    [22571]<nixpkgs/nixos/modules/virtualisation/podman-network-socket.nix>

[22572]virtualisation.podman.networkSocket.tls.cert

    Path to certificate describing the server.

    Type: path

    Declared by:

    [22573]<nixpkgs/nixos/modules/virtualisation/podman-network-socket.nix>

[22574]virtualisation.podman.networkSocket.tls.key

    Path to the private key corresponding to the server certificate.

    Use a string for this setting. Otherwise it will be copied to the Nix store first, where it
    is readable by any system process.

    Type: path

    Declared by:

    [22575]<nixpkgs/nixos/modules/virtualisation/podman-network-socket.nix>

[22576]virtualisation.spiceUSBRedirection.enable

    Install the SPICE USB redirection helper with setuid privileges. This allows unprivileged
    users to pass USB devices connected to this machine to libvirt VMs, both local and remote.
    Note that this allows users arbitrary access to USB devices.

    Type: boolean

    Default: false

    Declared by:

    [22577]<nixpkgs/nixos/modules/virtualisation/spice-usb-redirection.nix>

[22578]virtualisation.virtualbox.guest.enable

    Whether to enable the VirtualBox service and other guest additions.

    Type: boolean

    Default: false

    Declared by:

    [22579]<nixpkgs/nixos/modules/virtualisation/virtualbox-guest.nix>

[22580]virtualisation.virtualbox.guest.x11

    Whether to enable x11 graphics

    Type: boolean

    Default: true

    Declared by:

    [22581]<nixpkgs/nixos/modules/virtualisation/virtualbox-guest.nix>

[22582]virtualisation.virtualbox.host.enable

    Whether to enable VirtualBox.

    Note: In order to pass USB devices from the host to the guests, the user needs to be in the
    vboxusers group.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [22583]<nixpkgs/nixos/modules/virtualisation/virtualbox-host.nix>

[22584]virtualisation.virtualbox.host.enableExtensionPack

    Whether to install the Oracle Extension Pack for VirtualBox.

    Important

    You must set nixpkgs.config.allowUnfree = true in order to use this. This requires you accept
    the VirtualBox PUEL.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [22585]<nixpkgs/nixos/modules/virtualisation/virtualbox-host.nix>

[22586]virtualisation.virtualbox.host.enableHardening

    Enable hardened VirtualBox, which ensures that only the binaries in the system path get
    access to the devices exposed by the kernel modules instead of all users in the vboxusers
    group.

    Important

    Disabling this can put your system's security at risk, as local users in the vboxusers group
    can tamper with the VirtualBox device files.

    Type: boolean

    Default: true

    Declared by:

    [22587]<nixpkgs/nixos/modules/virtualisation/virtualbox-host.nix>

[22588]virtualisation.virtualbox.host.package

    Which VirtualBox package to use.

    Type: package

    Default: "pkgs.virtualbox"

    Declared by:

    [22589]<nixpkgs/nixos/modules/virtualisation/virtualbox-host.nix>

[22590]virtualisation.virtualbox.host.addNetworkInterface

    Automatically set up a vboxnet0 host-only network interface.

    Type: boolean

    Default: true

    Declared by:

    [22591]<nixpkgs/nixos/modules/virtualisation/virtualbox-host.nix>

[22592]virtualisation.virtualbox.host.headless

    Use VirtualBox installation without GUI and Qt dependency. Useful to enable on servers and
    when virtual machines are controlled only via SSH.

    Type: boolean

    Default: false

    Declared by:

    [22593]<nixpkgs/nixos/modules/virtualisation/virtualbox-host.nix>

[22594]virtualisation.vmware.guest.enable

    Whether to enable VMWare Guest Support.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [22595]<nixpkgs/nixos/modules/virtualisation/vmware-guest.nix>

[22596]virtualisation.vmware.guest.headless

    Whether to disable X11-related features.

    Type: boolean

    Default: false

    Declared by:

    [22597]<nixpkgs/nixos/modules/virtualisation/vmware-guest.nix>

[22598]virtualisation.vswitch.enable

    Whether to enable Open vSwitch. A configuration daemon (ovs-server) will be started.

    Type: boolean

    Default: false

    Declared by:

    [22599]<nixpkgs/nixos/modules/virtualisation/openvswitch.nix>

[22600]virtualisation.vswitch.package

    Open vSwitch package to use.

    Type: package

    Default: "pkgs.openvswitch"

    Declared by:

    [22601]<nixpkgs/nixos/modules/virtualisation/openvswitch.nix>

[22602]virtualisation.vswitch.ipsec

    Whether to start racoon service for openvswitch. Supported only if openvswitch version is
    less than 2.6.0. Use virtualisation.vswitch.package = pkgs.openvswitch-lts for a version that
    supports ipsec over GRE.

    Type: boolean

    Default: false

    Declared by:

    [22603]<nixpkgs/nixos/modules/virtualisation/openvswitch.nix>

[22604]virtualisation.vswitch.resetOnStart

    Whether to reset the Open vSwitch configuration database to a default configuration on every
    start of the systemd ovsdb.service.

    Type: boolean

    Default: false

    Declared by:

    [22605]<nixpkgs/nixos/modules/virtualisation/openvswitch.nix>

[22606]virtualisation.xen.enable

    Setting this option enables the Xen hypervisor, a virtualisation technology that allows
    multiple virtual machines, known as domains, to run concurrently on the physical machine.
    NixOS runs as the privileged Domain 0. This option requires a reboot to take effect.

    Type: boolean

    Default: false

    Declared by:

    [22607]<nixpkgs/nixos/modules/virtualisation/xen-dom0.nix>

[22608]virtualisation.xen.package

    The package used for Xen binary.

    Type: package

    Default: "pkgs.xen"

    Example:

    pkgs.xen-light

    Related packages:

      □ pkgs.xen (xen-4.10.4): Xen hypervisor and related components (vanilla).

        Vanilla version of Xen. Uses forks of Qemu and Seabios bundled
        with Xen. This gives vanilla experince, but wastes space and
        build time: typical NixOS setup that runs lots of VMs will
        build three different versions of Qemu when using this (two
        forks and upstream).

        Includes:
        * firmware/etherboot/ipxe.git: Xen's fork of iPXE.
        * firmware/seabios-dir-remote: Xen's fork of Seabios.
        * qemu-xen: Xen's fork of upstream Qemu.
        * qemu-xen-traditional: Xen's fork of upstream Qemu that uses old device model.
        * xen-libhvm-dir-remote: Helper library for reading ACPI and SMBIOS firmware values
        from the host system for use with the HVM guest firmware
        pass-through feature in Xen.

      □ pkgs.xen-light (xen-4.10.4): Xen hypervisor and related components (light).

        Slimmed-down version of Xen without `qemu-traditional` (you
        don't need it if you don't know what it is). Use with
        `qemu_xen-light` from nixpkgs.

        Includes:
        * firmware/etherboot/ipxe.git: Xen's fork of iPXE.
        * xen-libhvm-dir-remote: Helper library for reading ACPI and SMBIOS firmware values
        from the host system for use with the HVM guest firmware
        pass-through feature in Xen.

    Declared by:

    [22609]<nixpkgs/nixos/modules/virtualisation/xen-dom0.nix>

[22610]virtualisation.xen.package-qemu

    The package with qemu binaries for dom0 qemu and xendomains.

    Type: package

    Default: "pkgs.xen"

    Example:

    pkgs.qemu_xen-light

    Related packages:

      □ pkgs.xen (xen-4.10.4): Xen hypervisor and related components (vanilla).

        Vanilla version of Xen. Uses forks of Qemu and Seabios bundled
        with Xen. This gives vanilla experince, but wastes space and
        build time: typical NixOS setup that runs lots of VMs will
        build three different versions of Qemu when using this (two
        forks and upstream).

        Includes:
        * firmware/etherboot/ipxe.git: Xen's fork of iPXE.
        * firmware/seabios-dir-remote: Xen's fork of Seabios.
        * qemu-xen: Xen's fork of upstream Qemu.
        * qemu-xen-traditional: Xen's fork of upstream Qemu that uses old device model.
        * xen-libhvm-dir-remote: Helper library for reading ACPI and SMBIOS firmware values
        from the host system for use with the HVM guest firmware
        pass-through feature in Xen.

      □ pkgs.qemu_xen-light (qemu-xen-host-cpu-only-6.0.0): A generic and open source machine
        emulator and virtualizer.

        For use with pkgs.xen-light.

    Declared by:

    [22611]<nixpkgs/nixos/modules/virtualisation/xen-dom0.nix>

[22612]virtualisation.xen.bootParams

    Parameters passed to the Xen hypervisor at boot time.

    Type: list of strings

    Default: [ ]

    Declared by:

    [22613]<nixpkgs/nixos/modules/virtualisation/xen-dom0.nix>

[22614]virtualisation.xen.bridge.address

    IPv4 address of the bridge.

    Type: string

    Default: "172.16.0.1"

    Declared by:

    [22615]<nixpkgs/nixos/modules/virtualisation/xen-dom0.nix>

[22616]virtualisation.xen.bridge.forwardDns

    If set to true, the DNS queries from the hosts connected to the bridge will be forwarded to
    the DNS servers specified in /etc/resolv.conf .

    Type: boolean

    Default: false

    Declared by:

    [22617]<nixpkgs/nixos/modules/virtualisation/xen-dom0.nix>

[22618]virtualisation.xen.bridge.name

    Name of bridge the Xen domUs connect to.

    Type: string

    Default: "xenbr0"

    Declared by:

    [22619]<nixpkgs/nixos/modules/virtualisation/xen-dom0.nix>

[22620]virtualisation.xen.bridge.prefixLength

    Subnet mask of the bridge interface, specified as the number of bits in the prefix (24). A
    DHCP server will provide IP addresses for the whole, remaining subnet.

    Type: signed integer

    Default: 16

    Declared by:

    [22621]<nixpkgs/nixos/modules/virtualisation/xen-dom0.nix>

[22622]virtualisation.xen.domain0MemorySize

    Amount of memory (in MiB) allocated to Domain 0 on boot. If set to 0, all memory is assigned
    to Domain 0.

    Type: signed integer

    Default: 0

    Example: 512

    Declared by:

    [22623]<nixpkgs/nixos/modules/virtualisation/xen-dom0.nix>

[22624]virtualisation.xen.domains.extraConfig

    Options defined here will override the defaults for xendomains. The default options can be
    seen in the file included from /etc/default/xendomains.

    Type: strings concatenated with "\n"

    Default: ""

    Declared by:

    [22625]<nixpkgs/nixos/modules/virtualisation/xen-dom0.nix>

[22626]virtualisation.xen.stored

    Xen Store daemon to use. Defaults to oxenstored of the xen package.

    Type: path

    Declared by:

    [22627]<nixpkgs/nixos/modules/virtualisation/xen-dom0.nix>

[22628]virtualisation.xen.trace

    Whether to enable Xen tracing.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [22629]<nixpkgs/nixos/modules/virtualisation/xen-dom0.nix>

[22630]xdg.autostart.enable

    Whether to install files to support the [22631]XDG Autostart specification.

    Type: boolean

    Default: true

    Declared by:

    [22632]<nixpkgs/nixos/modules/config/xdg/autostart.nix>

[22633]xdg.icons.enable

    Whether to install files to support the [22634]XDG Icon Theme specification.

    Type: boolean

    Default: true

    Declared by:

    [22635]<nixpkgs/nixos/modules/config/xdg/icons.nix>

[22636]xdg.menus.enable

    Whether to install files to support the [22637]XDG Desktop Menu specification.

    Type: boolean

    Default: true

    Declared by:

    [22638]<nixpkgs/nixos/modules/config/xdg/menus.nix>

[22639]xdg.mime.enable

    Whether to install files to support the [22640]XDG Shared MIME-info specification and the 
    [22641]XDG MIME Applications specification.

    Type: boolean

    Default: true

    Declared by:

    [22642]<nixpkgs/nixos/modules/config/xdg/mime.nix>

[22643]xdg.portal.enable

    Whether to enable [22644]xdg desktop integration.

    Type: boolean

    Default: false

    Example: true

    Declared by:

    [22645]<nixpkgs/nixos/modules/config/xdg/portal.nix>

[22646]xdg.portal.extraPortals

    List of additional portals to add to path. Portals allow interaction with system, like
    choosing files or taking screenshots. At minimum, a desktop portal implementation should be
    listed. GNOME and KDE already adds xdg-desktop-portal-gtk; and xdg-desktop-portal-kde
    respectively. On other desktop environments you probably want to add them yourself.

    Type: list of packages

    Default: [ ]

    Declared by:

    [22647]<nixpkgs/nixos/modules/config/xdg/portal.nix>

[22648]xdg.portal.gtkUsePortal

    Sets environment variable GTK_USE_PORTAL to 1. This is needed for packages ran outside
    Flatpak to respect and use XDG Desktop Portals. For example, you'd need to set this for
    non-flatpak Firefox to use native filechoosers. Defaults to false to respect its opt-in
    nature.

    Type: boolean

    Default: false

    Declared by:

    [22649]<nixpkgs/nixos/modules/config/xdg/portal.nix>

[22650]xdg.sounds.enable

    Whether to install files to support the [22651]XDG Sound Theme specification.

    Type: boolean

    Default: true

    Declared by:

    [22652]<nixpkgs/nixos/modules/config/xdg/sounds.nix>

[22653]zramSwap.enable

    Enable in-memory compressed devices and swap space provided by the zram kernel module. See 
    [22654] https://www.kernel.org/doc/Documentation/blockdev/zram.txt .

    Type: boolean

    Default: false

    Declared by:

    [22655]<nixpkgs/nixos/modules/config/zram.nix>

[22656]zramSwap.algorithm

    Compression algorithm. lzo has good compression, but is slow. lz4 has bad compression, but is
    fast. zstd is both good compression and fast, but requires newer kernel. You can check what
    other algorithms are supported by your zram device with

    cat /sys/class/block/zram*/comp_algorithm

    Type: one of "lzo", "lz4", "zstd" or string

    Default: "zstd"

    Example: "lz4"

    Declared by:

    [22657]<nixpkgs/nixos/modules/config/zram.nix>

[22658]zramSwap.memoryMax

    Maximum total amount of memory (in bytes) that can be used by the zram swap devices.

    Type: null or signed integer

    Default: null

    Declared by:

    [22659]<nixpkgs/nixos/modules/config/zram.nix>

[22660]zramSwap.memoryPercent

    Maximum amount of memory that can be used by the zram swap devices (as a percentage of your
    total memory). Defaults to 1/2 of your total RAM. Run zramctl to check how good memory is
    compressed.

    Type: signed integer

    Default: 50

    Declared by:

    [22661]<nixpkgs/nixos/modules/config/zram.nix>

[22662]zramSwap.numDevices

    Number of zram devices to create. See also zramSwap.swapDevices

    Type: signed integer

    Default: 1

    Declared by:

    [22663]<nixpkgs/nixos/modules/config/zram.nix>

[22664]zramSwap.priority

    Priority of the zram swap devices. It should be a number higher than the priority of your
    disk-based swap devices (so that the system will fill the zram swap devices before falling
    back to disk swap).

    Type: signed integer

    Default: 5

    Declared by:

    [22665]<nixpkgs/nixos/modules/config/zram.nix>

[22666]zramSwap.swapDevices

    Number of zram devices to be used as swap. Must be <= zramSwap.numDevices. Default is same as
    zramSwap.numDevices, recommended is 1.

    Type: null or signed integer

    Default: null

    Example: 1

    Declared by:

    [22667]<nixpkgs/nixos/modules/config/zram.nix>

  • [22668] ← NixOS Manual
  • [22669] ↑ NixOS Manual
  • [22670]Appendix B. Release Notes →

The project

  • [22671]Channel Status
  • [22672]Packages search
  • [22673]Options search
  • [22674]Security

Get in Touch

  • [22675]Forum
  • [22676]Matrix Chat
  • [22677]Commercial support

Contribute

  • [22678]Contributing Guide
  • [22679]Donate

Stay up to date

  • [22680]Blog
  • [22681]Newsletter

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

NixOS

Copyright © 2021 NixOS contributors [22682] CC-BY-SA-4.0

Connect with us

  • [22683]Twitter
  • [22684]Youtube
  • [22685]GitHub

